/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	module.exports = __webpack_require__(2);


/***/ },
/* 1 */
/***/ function(module, exports) {

	(function(self) {
	  'use strict';
	
	  if (self.fetch) {
	    return
	  }
	
	  var support = {
	    searchParams: 'URLSearchParams' in self,
	    iterable: 'Symbol' in self && 'iterator' in Symbol,
	    blob: 'FileReader' in self && 'Blob' in self && (function() {
	      try {
	        new Blob()
	        return true
	      } catch(e) {
	        return false
	      }
	    })(),
	    formData: 'FormData' in self,
	    arrayBuffer: 'ArrayBuffer' in self
	  }
	
	  if (support.arrayBuffer) {
	    var viewClasses = [
	      '[object Int8Array]',
	      '[object Uint8Array]',
	      '[object Uint8ClampedArray]',
	      '[object Int16Array]',
	      '[object Uint16Array]',
	      '[object Int32Array]',
	      '[object Uint32Array]',
	      '[object Float32Array]',
	      '[object Float64Array]'
	    ]
	
	    var isDataView = function(obj) {
	      return obj && DataView.prototype.isPrototypeOf(obj)
	    }
	
	    var isArrayBufferView = ArrayBuffer.isView || function(obj) {
	      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
	    }
	  }
	
	  function normalizeName(name) {
	    if (typeof name !== 'string') {
	      name = String(name)
	    }
	    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
	      throw new TypeError('Invalid character in header field name')
	    }
	    return name.toLowerCase()
	  }
	
	  function normalizeValue(value) {
	    if (typeof value !== 'string') {
	      value = String(value)
	    }
	    return value
	  }
	
	  // Build a destructive iterator for the value list
	  function iteratorFor(items) {
	    var iterator = {
	      next: function() {
	        var value = items.shift()
	        return {done: value === undefined, value: value}
	      }
	    }
	
	    if (support.iterable) {
	      iterator[Symbol.iterator] = function() {
	        return iterator
	      }
	    }
	
	    return iterator
	  }
	
	  function Headers(headers) {
	    this.map = {}
	
	    if (headers instanceof Headers) {
	      headers.forEach(function(value, name) {
	        this.append(name, value)
	      }, this)
	
	    } else if (headers) {
	      Object.getOwnPropertyNames(headers).forEach(function(name) {
	        this.append(name, headers[name])
	      }, this)
	    }
	  }
	
	  Headers.prototype.append = function(name, value) {
	    name = normalizeName(name)
	    value = normalizeValue(value)
	    var oldValue = this.map[name]
	    this.map[name] = oldValue ? oldValue+','+value : value
	  }
	
	  Headers.prototype['delete'] = function(name) {
	    delete this.map[normalizeName(name)]
	  }
	
	  Headers.prototype.get = function(name) {
	    name = normalizeName(name)
	    return this.has(name) ? this.map[name] : null
	  }
	
	  Headers.prototype.has = function(name) {
	    return this.map.hasOwnProperty(normalizeName(name))
	  }
	
	  Headers.prototype.set = function(name, value) {
	    this.map[normalizeName(name)] = normalizeValue(value)
	  }
	
	  Headers.prototype.forEach = function(callback, thisArg) {
	    for (var name in this.map) {
	      if (this.map.hasOwnProperty(name)) {
	        callback.call(thisArg, this.map[name], name, this)
	      }
	    }
	  }
	
	  Headers.prototype.keys = function() {
	    var items = []
	    this.forEach(function(value, name) { items.push(name) })
	    return iteratorFor(items)
	  }
	
	  Headers.prototype.values = function() {
	    var items = []
	    this.forEach(function(value) { items.push(value) })
	    return iteratorFor(items)
	  }
	
	  Headers.prototype.entries = function() {
	    var items = []
	    this.forEach(function(value, name) { items.push([name, value]) })
	    return iteratorFor(items)
	  }
	
	  if (support.iterable) {
	    Headers.prototype[Symbol.iterator] = Headers.prototype.entries
	  }
	
	  function consumed(body) {
	    if (body.bodyUsed) {
	      return Promise.reject(new TypeError('Already read'))
	    }
	    body.bodyUsed = true
	  }
	
	  function fileReaderReady(reader) {
	    return new Promise(function(resolve, reject) {
	      reader.onload = function() {
	        resolve(reader.result)
	      }
	      reader.onerror = function() {
	        reject(reader.error)
	      }
	    })
	  }
	
	  function readBlobAsArrayBuffer(blob) {
	    var reader = new FileReader()
	    var promise = fileReaderReady(reader)
	    reader.readAsArrayBuffer(blob)
	    return promise
	  }
	
	  function readBlobAsText(blob) {
	    var reader = new FileReader()
	    var promise = fileReaderReady(reader)
	    reader.readAsText(blob)
	    return promise
	  }
	
	  function readArrayBufferAsText(buf) {
	    var view = new Uint8Array(buf)
	    var chars = new Array(view.length)
	
	    for (var i = 0; i < view.length; i++) {
	      chars[i] = String.fromCharCode(view[i])
	    }
	    return chars.join('')
	  }
	
	  function bufferClone(buf) {
	    if (buf.slice) {
	      return buf.slice(0)
	    } else {
	      var view = new Uint8Array(buf.byteLength)
	      view.set(new Uint8Array(buf))
	      return view.buffer
	    }
	  }
	
	  function Body() {
	    this.bodyUsed = false
	
	    this._initBody = function(body) {
	      this._bodyInit = body
	      if (!body) {
	        this._bodyText = ''
	      } else if (typeof body === 'string') {
	        this._bodyText = body
	      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
	        this._bodyBlob = body
	      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
	        this._bodyFormData = body
	      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
	        this._bodyText = body.toString()
	      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
	        this._bodyArrayBuffer = bufferClone(body.buffer)
	        // IE 10-11 can't handle a DataView body.
	        this._bodyInit = new Blob([this._bodyArrayBuffer])
	      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
	        this._bodyArrayBuffer = bufferClone(body)
	      } else {
	        throw new Error('unsupported BodyInit type')
	      }
	
	      if (!this.headers.get('content-type')) {
	        if (typeof body === 'string') {
	          this.headers.set('content-type', 'text/plain;charset=UTF-8')
	        } else if (this._bodyBlob && this._bodyBlob.type) {
	          this.headers.set('content-type', this._bodyBlob.type)
	        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
	          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
	        }
	      }
	    }
	
	    if (support.blob) {
	      this.blob = function() {
	        var rejected = consumed(this)
	        if (rejected) {
	          return rejected
	        }
	
	        if (this._bodyBlob) {
	          return Promise.resolve(this._bodyBlob)
	        } else if (this._bodyArrayBuffer) {
	          return Promise.resolve(new Blob([this._bodyArrayBuffer]))
	        } else if (this._bodyFormData) {
	          throw new Error('could not read FormData body as blob')
	        } else {
	          return Promise.resolve(new Blob([this._bodyText]))
	        }
	      }
	
	      this.arrayBuffer = function() {
	        if (this._bodyArrayBuffer) {
	          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)
	        } else {
	          return this.blob().then(readBlobAsArrayBuffer)
	        }
	      }
	    }
	
	    this.text = function() {
	      var rejected = consumed(this)
	      if (rejected) {
	        return rejected
	      }
	
	      if (this._bodyBlob) {
	        return readBlobAsText(this._bodyBlob)
	      } else if (this._bodyArrayBuffer) {
	        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
	      } else if (this._bodyFormData) {
	        throw new Error('could not read FormData body as text')
	      } else {
	        return Promise.resolve(this._bodyText)
	      }
	    }
	
	    if (support.formData) {
	      this.formData = function() {
	        return this.text().then(decode)
	      }
	    }
	
	    this.json = function() {
	      return this.text().then(JSON.parse)
	    }
	
	    return this
	  }
	
	  // HTTP methods whose capitalization should be normalized
	  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']
	
	  function normalizeMethod(method) {
	    var upcased = method.toUpperCase()
	    return (methods.indexOf(upcased) > -1) ? upcased : method
	  }
	
	  function Request(input, options) {
	    options = options || {}
	    var body = options.body
	
	    if (typeof input === 'string') {
	      this.url = input
	    } else {
	      if (input.bodyUsed) {
	        throw new TypeError('Already read')
	      }
	      this.url = input.url
	      this.credentials = input.credentials
	      if (!options.headers) {
	        this.headers = new Headers(input.headers)
	      }
	      this.method = input.method
	      this.mode = input.mode
	      if (!body && input._bodyInit != null) {
	        body = input._bodyInit
	        input.bodyUsed = true
	      }
	    }
	
	    this.credentials = options.credentials || this.credentials || 'omit'
	    if (options.headers || !this.headers) {
	      this.headers = new Headers(options.headers)
	    }
	    this.method = normalizeMethod(options.method || this.method || 'GET')
	    this.mode = options.mode || this.mode || null
	    this.referrer = null
	
	    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
	      throw new TypeError('Body not allowed for GET or HEAD requests')
	    }
	    this._initBody(body)
	  }
	
	  Request.prototype.clone = function() {
	    return new Request(this, { body: this._bodyInit })
	  }
	
	  function decode(body) {
	    var form = new FormData()
	    body.trim().split('&').forEach(function(bytes) {
	      if (bytes) {
	        var split = bytes.split('=')
	        var name = split.shift().replace(/\+/g, ' ')
	        var value = split.join('=').replace(/\+/g, ' ')
	        form.append(decodeURIComponent(name), decodeURIComponent(value))
	      }
	    })
	    return form
	  }
	
	  function parseHeaders(rawHeaders) {
	    var headers = new Headers()
	    rawHeaders.split('\r\n').forEach(function(line) {
	      var parts = line.split(':')
	      var key = parts.shift().trim()
	      if (key) {
	        var value = parts.join(':').trim()
	        headers.append(key, value)
	      }
	    })
	    return headers
	  }
	
	  Body.call(Request.prototype)
	
	  function Response(bodyInit, options) {
	    if (!options) {
	      options = {}
	    }
	
	    this.type = 'default'
	    this.status = 'status' in options ? options.status : 200
	    this.ok = this.status >= 200 && this.status < 300
	    this.statusText = 'statusText' in options ? options.statusText : 'OK'
	    this.headers = new Headers(options.headers)
	    this.url = options.url || ''
	    this._initBody(bodyInit)
	  }
	
	  Body.call(Response.prototype)
	
	  Response.prototype.clone = function() {
	    return new Response(this._bodyInit, {
	      status: this.status,
	      statusText: this.statusText,
	      headers: new Headers(this.headers),
	      url: this.url
	    })
	  }
	
	  Response.error = function() {
	    var response = new Response(null, {status: 0, statusText: ''})
	    response.type = 'error'
	    return response
	  }
	
	  var redirectStatuses = [301, 302, 303, 307, 308]
	
	  Response.redirect = function(url, status) {
	    if (redirectStatuses.indexOf(status) === -1) {
	      throw new RangeError('Invalid status code')
	    }
	
	    return new Response(null, {status: status, headers: {location: url}})
	  }
	
	  self.Headers = Headers
	  self.Request = Request
	  self.Response = Response
	
	  self.fetch = function(input, init) {
	    return new Promise(function(resolve, reject) {
	      var request = new Request(input, init)
	      var xhr = new XMLHttpRequest()
	
	      xhr.onload = function() {
	        var options = {
	          status: xhr.status,
	          statusText: xhr.statusText,
	          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
	        }
	        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')
	        var body = 'response' in xhr ? xhr.response : xhr.responseText
	        resolve(new Response(body, options))
	      }
	
	      xhr.onerror = function() {
	        reject(new TypeError('Network request failed'))
	      }
	
	      xhr.ontimeout = function() {
	        reject(new TypeError('Network request failed'))
	      }
	
	      xhr.open(request.method, request.url, true)
	
	      if (request.credentials === 'include') {
	        xhr.withCredentials = true
	      }
	
	      if ('responseType' in xhr && support.blob) {
	        xhr.responseType = 'blob'
	      }
	
	      request.headers.forEach(function(value, name) {
	        xhr.setRequestHeader(name, value)
	      })
	
	      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
	    })
	  }
	  self.fetch.polyfill = true
	})(typeof self !== 'undefined' ? self : this);


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	__webpack_require__(3);

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _react = __webpack_require__(4);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(35);
	
	var _react3 = __webpack_require__(181);
	
	var _react4 = _interopRequireDefault(_react3);
	
	var _deck = __webpack_require__(425);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Needed for onTouchTap
	// import injectTapEventPlugin from 'react-tap-event-plugin';
	// injectTapEventPlugin();
	
	var flights = new _deck.ArcLayer({
	  id: 'flights',
	  data: [] // Some flight points
	});
	
	(0, _reactDom.render)(_react2.default.createElement(_react4.default, { width: 1920, height: 1080, layers: [flights] }), document.getElementById('app'));

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(5);


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(7);
	
	var ReactChildren = __webpack_require__(8);
	var ReactComponent = __webpack_require__(21);
	var ReactPureComponent = __webpack_require__(24);
	var ReactClass = __webpack_require__(25);
	var ReactDOMFactories = __webpack_require__(27);
	var ReactElement = __webpack_require__(12);
	var ReactPropTypes = __webpack_require__(32);
	var ReactVersion = __webpack_require__(33);
	
	var onlyChild = __webpack_require__(34);
	var warning = __webpack_require__(14);
	
	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(28);
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}
	
	var __spread = _assign;
	
	if (process.env.NODE_ENV !== 'production') {
	  var warned = false;
	  __spread = function () {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}
	
	var React = {
	
	  // Modern
	
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },
	
	  Component: ReactComponent,
	  PureComponent: ReactPureComponent,
	
	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,
	
	  // Classic
	
	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },
	
	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,
	
	  version: ReactVersion,
	
	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};
	
	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 6 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	
	
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	
	
	
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 7 */
/***/ function(module, exports) {

	'use strict';
	/* eslint-disable no-unused-vars */
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (e) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (Object.getOwnPropertySymbols) {
				symbols = Object.getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(9);
	var ReactElement = __webpack_require__(12);
	
	var emptyFunction = __webpack_require__(15);
	var traverseAllChildren = __webpack_require__(18);
	
	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;
	
	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func,
	      context = bookKeeping.context;
	
	  func.call(context, child, bookKeeping.count++);
	}
	
	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
	
	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result,
	      keyPrefix = bookKeeping.keyPrefix,
	      func = bookKeeping.func,
	      context = bookKeeping.context;
	
	
	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}
	
	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}
	
	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}
	
	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}
	
	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}
	
	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}
	
	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};
	
	module.exports = ReactChildren;

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(10);
	
	var invariant = __webpack_require__(11);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};
	
	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 10 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';
	
	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */
	
	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;
	
	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
	
	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }
	
	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
	
	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame
	
	  throw error;
	}
	
	module.exports = reactProdInvariant;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var validateFormat = function validateFormat(format) {};
	
	if (process.env.NODE_ENV !== 'production') {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}
	
	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}
	
	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(7);
	
	var ReactCurrentOwner = __webpack_require__(13);
	
	var warning = __webpack_require__(14);
	var canDefineProperty = __webpack_require__(16);
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	var REACT_ELEMENT_TYPE = __webpack_require__(17);
	
	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};
	
	var specialPropKeyWarningShown, specialPropRefWarningShown;
	
	function hasValidRef(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}
	
	function hasValidKey(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}
	
	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}
	
	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}
	
	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,
	
	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,
	
	    // Record the component responsible for creating this element.
	    _owner: owner
	  };
	
	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	
	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }
	
	  return element;
	};
	
	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;
	
	  // Reserved names are extracted
	  var props = {};
	
	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;
	
	  if (config != null) {
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (Object.freeze) {
	        Object.freeze(childArray);
	      }
	    }
	    props.children = childArray;
	  }
	
	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};
	
	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};
	
	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
	
	  return newElement;
	};
	
	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;
	
	  // Original props are copied
	  var props = _assign({}, element.props);
	
	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;
	
	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;
	
	  if (config != null) {
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};
	
	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};
	
	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 13 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {
	
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	
	};
	
	module.exports = ReactCurrentOwner;

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(15);
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };
	
	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }
	
	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }
	
	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }
	
	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}
	
	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 15 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    // $FlowFixMe https://github.com/facebook/flow/issues/285
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}
	
	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 17 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	module.exports = REACT_ELEMENT_TYPE;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(10);
	
	var ReactCurrentOwner = __webpack_require__(13);
	var REACT_ELEMENT_TYPE = __webpack_require__(17);
	
	var getIteratorFn = __webpack_require__(19);
	var invariant = __webpack_require__(11);
	var KeyEscapeUtils = __webpack_require__(20);
	var warning = __webpack_require__(14);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var didWarnAboutMaps = false;
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 19 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/* global Symbol */
	
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ },
/* 20 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */
	
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });
	
	  return '$' + escapedString;
	}
	
	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}
	
	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};
	
	module.exports = KeyEscapeUtils;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(10);
	
	var ReactNoopUpdateQueue = __webpack_require__(22);
	
	var canDefineProperty = __webpack_require__(16);
	var emptyObject = __webpack_require__(23);
	var invariant = __webpack_require__(11);
	var warning = __webpack_require__(14);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	ReactComponent.prototype.isReactComponent = {};
	
	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};
	
	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};
	
	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}
	
	module.exports = ReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var warning = __webpack_require__(14);
	
	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};
	
	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyObject = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(7);
	
	var ReactComponent = __webpack_require__(21);
	var ReactNoopUpdateQueue = __webpack_require__(22);
	
	var emptyObject = __webpack_require__(23);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;
	
	module.exports = ReactPureComponent;

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(10),
	    _assign = __webpack_require__(7);
	
	var ReactComponent = __webpack_require__(21);
	var ReactElement = __webpack_require__(12);
	var ReactPropTypeLocationNames = __webpack_require__(26);
	var ReactNoopUpdateQueue = __webpack_require__(22);
	
	var emptyObject = __webpack_require__(23);
	var invariant = __webpack_require__(11);
	var warning = __webpack_require__(14);
	
	var MIXINS_KEY = 'mixins';
	
	// Helper function to allow the creation of anonymous functions which do not
	// have .name set to the name of the variable being assigned to.
	function identity(fn) {
	  return fn;
	}
	
	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	
	
	var injectedMixins = [];
	
	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {
	
	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: 'DEFINE_MANY',
	
	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: 'DEFINE_MANY',
	
	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: 'DEFINE_MANY',
	
	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: 'DEFINE_MANY',
	
	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: 'DEFINE_MANY',
	
	  // ==== Definition methods ====
	
	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: 'DEFINE_MANY_MERGED',
	
	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: 'DEFINE_MANY_MERGED',
	
	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: 'DEFINE_MANY_MERGED',
	
	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: 'DEFINE_ONCE',
	
	  // ==== Delegate methods ====
	
	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: 'DEFINE_MANY',
	
	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: 'DEFINE_MANY',
	
	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: 'DEFINE_MANY',
	
	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: 'DEFINE_ONCE',
	
	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: 'DEFINE_MANY',
	
	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: 'DEFINE_MANY',
	
	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: 'DEFINE_MANY',
	
	  // ==== Advanced methods ====
	
	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: 'OVERRIDE_BASE'
	
	};
	
	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, 'childContext');
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, 'context');
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, 'prop');
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };
	
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}
	
	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
	
	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === 'OVERRIDE_BASE') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }
	
	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}
	
	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    if (process.env.NODE_ENV !== 'production') {
	      var typeofSpec = typeof spec;
	      var isMixinValid = typeofSpec === 'object' && spec !== null;
	
	      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
	    }
	
	    return;
	  }
	
	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;
	
	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;
	
	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }
	
	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }
	
	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }
	
	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);
	
	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
	
	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];
	
	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;
	
	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === 'DEFINE_MANY_MERGED') {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === 'DEFINE_MANY') {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}
	
	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }
	
	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;
	
	    var isInherited = name in Constructor;
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}
	
	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;
	
	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}
	
	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}
	
	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}
	
	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}
	
	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}
	
	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {
	
	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};
	
	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	
	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {
	
	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    // To keep our warnings more understandable, we'll use a little hack here to
	    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
	    // unnecessarily identify a class without displayName as 'Constructor'.
	    var Constructor = identity(function (props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }
	
	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;
	
	      this.state = null;
	
	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;
	
	      this.state = initialState;
	    });
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];
	
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
	    mixSpecIntoComponent(Constructor, spec);
	
	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }
	
	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    return Constructor;
	  },
	
	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	
	};
	
	module.exports = ReactClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(12);
	
	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @private
	 */
	var createDOMFactory = ReactElement.createFactory;
	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(28);
	  createDOMFactory = ReactElementValidator.createFactory;
	}
	
	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = {
	  a: createDOMFactory('a'),
	  abbr: createDOMFactory('abbr'),
	  address: createDOMFactory('address'),
	  area: createDOMFactory('area'),
	  article: createDOMFactory('article'),
	  aside: createDOMFactory('aside'),
	  audio: createDOMFactory('audio'),
	  b: createDOMFactory('b'),
	  base: createDOMFactory('base'),
	  bdi: createDOMFactory('bdi'),
	  bdo: createDOMFactory('bdo'),
	  big: createDOMFactory('big'),
	  blockquote: createDOMFactory('blockquote'),
	  body: createDOMFactory('body'),
	  br: createDOMFactory('br'),
	  button: createDOMFactory('button'),
	  canvas: createDOMFactory('canvas'),
	  caption: createDOMFactory('caption'),
	  cite: createDOMFactory('cite'),
	  code: createDOMFactory('code'),
	  col: createDOMFactory('col'),
	  colgroup: createDOMFactory('colgroup'),
	  data: createDOMFactory('data'),
	  datalist: createDOMFactory('datalist'),
	  dd: createDOMFactory('dd'),
	  del: createDOMFactory('del'),
	  details: createDOMFactory('details'),
	  dfn: createDOMFactory('dfn'),
	  dialog: createDOMFactory('dialog'),
	  div: createDOMFactory('div'),
	  dl: createDOMFactory('dl'),
	  dt: createDOMFactory('dt'),
	  em: createDOMFactory('em'),
	  embed: createDOMFactory('embed'),
	  fieldset: createDOMFactory('fieldset'),
	  figcaption: createDOMFactory('figcaption'),
	  figure: createDOMFactory('figure'),
	  footer: createDOMFactory('footer'),
	  form: createDOMFactory('form'),
	  h1: createDOMFactory('h1'),
	  h2: createDOMFactory('h2'),
	  h3: createDOMFactory('h3'),
	  h4: createDOMFactory('h4'),
	  h5: createDOMFactory('h5'),
	  h6: createDOMFactory('h6'),
	  head: createDOMFactory('head'),
	  header: createDOMFactory('header'),
	  hgroup: createDOMFactory('hgroup'),
	  hr: createDOMFactory('hr'),
	  html: createDOMFactory('html'),
	  i: createDOMFactory('i'),
	  iframe: createDOMFactory('iframe'),
	  img: createDOMFactory('img'),
	  input: createDOMFactory('input'),
	  ins: createDOMFactory('ins'),
	  kbd: createDOMFactory('kbd'),
	  keygen: createDOMFactory('keygen'),
	  label: createDOMFactory('label'),
	  legend: createDOMFactory('legend'),
	  li: createDOMFactory('li'),
	  link: createDOMFactory('link'),
	  main: createDOMFactory('main'),
	  map: createDOMFactory('map'),
	  mark: createDOMFactory('mark'),
	  menu: createDOMFactory('menu'),
	  menuitem: createDOMFactory('menuitem'),
	  meta: createDOMFactory('meta'),
	  meter: createDOMFactory('meter'),
	  nav: createDOMFactory('nav'),
	  noscript: createDOMFactory('noscript'),
	  object: createDOMFactory('object'),
	  ol: createDOMFactory('ol'),
	  optgroup: createDOMFactory('optgroup'),
	  option: createDOMFactory('option'),
	  output: createDOMFactory('output'),
	  p: createDOMFactory('p'),
	  param: createDOMFactory('param'),
	  picture: createDOMFactory('picture'),
	  pre: createDOMFactory('pre'),
	  progress: createDOMFactory('progress'),
	  q: createDOMFactory('q'),
	  rp: createDOMFactory('rp'),
	  rt: createDOMFactory('rt'),
	  ruby: createDOMFactory('ruby'),
	  s: createDOMFactory('s'),
	  samp: createDOMFactory('samp'),
	  script: createDOMFactory('script'),
	  section: createDOMFactory('section'),
	  select: createDOMFactory('select'),
	  small: createDOMFactory('small'),
	  source: createDOMFactory('source'),
	  span: createDOMFactory('span'),
	  strong: createDOMFactory('strong'),
	  style: createDOMFactory('style'),
	  sub: createDOMFactory('sub'),
	  summary: createDOMFactory('summary'),
	  sup: createDOMFactory('sup'),
	  table: createDOMFactory('table'),
	  tbody: createDOMFactory('tbody'),
	  td: createDOMFactory('td'),
	  textarea: createDOMFactory('textarea'),
	  tfoot: createDOMFactory('tfoot'),
	  th: createDOMFactory('th'),
	  thead: createDOMFactory('thead'),
	  time: createDOMFactory('time'),
	  title: createDOMFactory('title'),
	  tr: createDOMFactory('tr'),
	  track: createDOMFactory('track'),
	  u: createDOMFactory('u'),
	  ul: createDOMFactory('ul'),
	  'var': createDOMFactory('var'),
	  video: createDOMFactory('video'),
	  wbr: createDOMFactory('wbr'),
	
	  // SVG
	  circle: createDOMFactory('circle'),
	  clipPath: createDOMFactory('clipPath'),
	  defs: createDOMFactory('defs'),
	  ellipse: createDOMFactory('ellipse'),
	  g: createDOMFactory('g'),
	  image: createDOMFactory('image'),
	  line: createDOMFactory('line'),
	  linearGradient: createDOMFactory('linearGradient'),
	  mask: createDOMFactory('mask'),
	  path: createDOMFactory('path'),
	  pattern: createDOMFactory('pattern'),
	  polygon: createDOMFactory('polygon'),
	  polyline: createDOMFactory('polyline'),
	  radialGradient: createDOMFactory('radialGradient'),
	  rect: createDOMFactory('rect'),
	  stop: createDOMFactory('stop'),
	  svg: createDOMFactory('svg'),
	  text: createDOMFactory('text'),
	  tspan: createDOMFactory('tspan')
	};
	
	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(13);
	var ReactComponentTreeHook = __webpack_require__(29);
	var ReactElement = __webpack_require__(12);
	
	var checkReactTypeSpec = __webpack_require__(30);
	
	var canDefineProperty = __webpack_require__(16);
	var getIteratorFn = __webpack_require__(19);
	var warning = __webpack_require__(14);
	
	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};
	
	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();
	
	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}
	
	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;
	
	  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});
	
	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (memoizer[currentComponentErrorInfo]) {
	    return;
	  }
	  memoizer[currentComponentErrorInfo] = true;
	
	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }
	
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
	}
	
	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}
	
	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}
	
	var ReactElementValidator = {
	
	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    if (!validType) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;
	    }
	
	    var element = ReactElement.createElement.apply(this, arguments);
	
	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }
	
	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }
	
	    validatePropTypes(element);
	
	    return element;
	  },
	
	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }
	
	    return validatedFactory;
	  },
	
	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }
	
	};
	
	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(10);
	
	var ReactCurrentOwner = __webpack_require__(13);
	
	var invariant = __webpack_require__(11);
	var warning = __webpack_require__(14);
	
	function isNative(fn) {
	  // Based on isNative() from Lodash
	  var funcToString = Function.prototype.toString;
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	  var reIsNative = RegExp('^' + funcToString
	  // Take an example native function source for comparison
	  .call(hasOwnProperty)
	  // Strip regex characters so we can use it for regex
	  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  // Remove hasOwnProperty from the template to make it generic
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	  try {
	    var source = funcToString.call(fn);
	    return reIsNative.test(source);
	  } catch (err) {
	    return false;
	  }
	}
	
	var canUseCollections =
	// Array.from
	typeof Array.from === 'function' &&
	// Map
	typeof Map === 'function' && isNative(Map) &&
	// Map.prototype.keys
	Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
	// Set
	typeof Set === 'function' && isNative(Set) &&
	// Set.prototype.keys
	Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);
	
	var setItem;
	var getItem;
	var removeItem;
	var getItemIDs;
	var addRoot;
	var removeRoot;
	var getRootIDs;
	
	if (canUseCollections) {
	  var itemMap = new Map();
	  var rootIDSet = new Set();
	
	  setItem = function (id, item) {
	    itemMap.set(id, item);
	  };
	  getItem = function (id) {
	    return itemMap.get(id);
	  };
	  removeItem = function (id) {
	    itemMap['delete'](id);
	  };
	  getItemIDs = function () {
	    return Array.from(itemMap.keys());
	  };
	
	  addRoot = function (id) {
	    rootIDSet.add(id);
	  };
	  removeRoot = function (id) {
	    rootIDSet['delete'](id);
	  };
	  getRootIDs = function () {
	    return Array.from(rootIDSet.keys());
	  };
	} else {
	  var itemByKey = {};
	  var rootByKey = {};
	
	  // Use non-numeric keys to prevent V8 performance issues:
	  // https://github.com/facebook/react/pull/7232
	  var getKeyFromID = function (id) {
	    return '.' + id;
	  };
	  var getIDFromKey = function (key) {
	    return parseInt(key.substr(1), 10);
	  };
	
	  setItem = function (id, item) {
	    var key = getKeyFromID(id);
	    itemByKey[key] = item;
	  };
	  getItem = function (id) {
	    var key = getKeyFromID(id);
	    return itemByKey[key];
	  };
	  removeItem = function (id) {
	    var key = getKeyFromID(id);
	    delete itemByKey[key];
	  };
	  getItemIDs = function () {
	    return Object.keys(itemByKey).map(getIDFromKey);
	  };
	
	  addRoot = function (id) {
	    var key = getKeyFromID(id);
	    rootByKey[key] = true;
	  };
	  removeRoot = function (id) {
	    var key = getKeyFromID(id);
	    delete rootByKey[key];
	  };
	  getRootIDs = function () {
	    return Object.keys(rootByKey).map(getIDFromKey);
	  };
	}
	
	var unmountedIDs = [];
	
	function purgeDeep(id) {
	  var item = getItem(id);
	  if (item) {
	    var childIDs = item.childIDs;
	
	    removeItem(id);
	    childIDs.forEach(purgeDeep);
	  }
	}
	
	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}
	
	function getDisplayName(element) {
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}
	
	function describeID(id) {
	  var name = ReactComponentTreeHook.getDisplayName(id);
	  var element = ReactComponentTreeHook.getElement(id);
	  var ownerID = ReactComponentTreeHook.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
	  }
	  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}
	
	var ReactComponentTreeHook = {
	  onSetChildren: function (id, nextChildIDs) {
	    var item = getItem(id);
	    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.childIDs = nextChildIDs;
	
	    for (var i = 0; i < nextChildIDs.length; i++) {
	      var nextChildID = nextChildIDs[i];
	      var nextChild = getItem(nextChildID);
	      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
	      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
	      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	      if (nextChild.parentID == null) {
	        nextChild.parentID = id;
	        // TODO: This shouldn't be necessary but mounting a new root during in
	        // componentWillMount currently causes not-yet-mounted components to
	        // be purged from our tree data so their parent id is missing.
	      }
	      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
	    }
	  },
	  onBeforeMountComponent: function (id, element, parentID) {
	    var item = {
	      element: element,
	      parentID: parentID,
	      text: null,
	      childIDs: [],
	      isMounted: false,
	      updateCount: 0
	    };
	    setItem(id, item);
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.element = element;
	  },
	  onMountComponent: function (id) {
	    var item = getItem(id);
	    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.isMounted = true;
	    var isRoot = item.parentID === 0;
	    if (isRoot) {
	      addRoot(id);
	    }
	  },
	  onUpdateComponent: function (id) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.updateCount++;
	  },
	  onUnmountComponent: function (id) {
	    var item = getItem(id);
	    if (item) {
	      // We need to check if it exists.
	      // `item` might not exist if it is inside an error boundary, and a sibling
	      // error boundary child threw while mounting. Then this instance never
	      // got a chance to mount, but it still gets an unmounting event during
	      // the error boundary cleanup.
	      item.isMounted = false;
	      var isRoot = item.parentID === 0;
	      if (isRoot) {
	        removeRoot(id);
	      }
	    }
	    unmountedIDs.push(id);
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeHook._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }
	
	    for (var i = 0; i < unmountedIDs.length; i++) {
	      var id = unmountedIDs[i];
	      purgeDeep(id);
	    }
	    unmountedIDs.length = 0;
	  },
	  isMounted: function (id) {
	    var item = getItem(id);
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var name = getDisplayName(topElement);
	      var owner = topElement._owner;
	      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
	    }
	
	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;
	
	    info += ReactComponentTreeHook.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeHook.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = getItem(id);
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element) {
	      return null;
	    }
	    return getDisplayName(element);
	  },
	  getElement: function (id) {
	    var item = getItem(id);
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element || !element._owner) {
	      return null;
	    }
	    return element._owner._debugID;
	  },
	  getParentID: function (id) {
	    var item = getItem(id);
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = getItem(id);
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (typeof element === 'string') {
	      return element;
	    } else if (typeof element === 'number') {
	      return '' + element;
	    } else {
	      return null;
	    }
	  },
	  getUpdateCount: function (id) {
	    var item = getItem(id);
	    return item ? item.updateCount : 0;
	  },
	
	
	  getRootIDs: getRootIDs,
	  getRegisteredIDs: getItemIDs
	};
	
	module.exports = ReactComponentTreeHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(10);
	
	var ReactPropTypeLocationNames = __webpack_require__(26);
	var ReactPropTypesSecret = __webpack_require__(31);
	
	var invariant = __webpack_require__(11);
	var warning = __webpack_require__(14);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(29);
	}
	
	var loggedTypeFailures = {};
	
	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var componentStackInfo = '';
	
	        if (process.env.NODE_ENV !== 'production') {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(29);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }
	
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}
	
	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 31 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
	module.exports = ReactPropTypesSecret;

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(12);
	var ReactPropTypeLocationNames = __webpack_require__(26);
	var ReactPropTypesSecret = __webpack_require__(31);
	
	var emptyFunction = __webpack_require__(15);
	var getIteratorFn = __webpack_require__(19);
	var warning = __webpack_require__(14);
	
	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */
	
	var ANONYMOUS = '<<anonymous>>';
	
	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),
	
	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/
	
	/**
	 * We use an Error-like object for backward compatibility as people may call
	 * PropTypes directly and inspect their output. However we don't use real
	 * Errors anymore. We don't inspect their stack anyway, and creating them
	 * is prohibitively expensive if they are created too often, such as what
	 * happens in oneOfType() for any type before the one that matched.
	 */
	function PropTypeError(message) {
	  this.message = message;
	  this.stack = '';
	}
	// Make `instanceof Error` still work for returned errors.
	PropTypeError.prototype = Error.prototype;
	
	function createChainableTypeChecker(validate) {
	  if (process.env.NODE_ENV !== 'production') {
	    var manualPropTypeCallCache = {};
	  }
	  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (process.env.NODE_ENV !== 'production') {
	      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
	        var cacheKey = componentName + ':' + propName;
	        if (!manualPropTypeCallCache[cacheKey]) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in production with the next major version. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName) : void 0;
	          manualPropTypeCallCache[cacheKey] = true;
	        }
	      }
	    }
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        if (props[propName] === null) {
	          return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	        }
	        return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }
	
	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);
	
	  return chainedCheckType;
	}
	
	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName, secret) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);
	
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}
	
	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!ReactElement.isValidElement(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	    return emptyFunction.thatReturnsNull;
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }
	
	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }
	
	      return true;
	    default:
	      return false;
	  }
	}
	
	function isSymbol(propType, propValue) {
	  // Native Symbol.
	  if (propType === 'symbol') {
	    return true;
	  }
	
	  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }
	
	  // Fallback for non-spec compliant Symbols which are polyfilled.
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }
	
	  return false;
	}
	
	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}
	
	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}
	
	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}
	
	module.exports = ReactPropTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 33 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	module.exports = '15.4.1';

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	'use strict';
	
	var _prodInvariant = __webpack_require__(10);
	
	var ReactElement = __webpack_require__(12);
	
	var invariant = __webpack_require__(11);
	
	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
	  return children;
	}
	
	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(36);


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactDefaultInjection = __webpack_require__(41);
	var ReactMount = __webpack_require__(169);
	var ReactReconciler = __webpack_require__(62);
	var ReactUpdates = __webpack_require__(59);
	var ReactVersion = __webpack_require__(174);
	
	var findDOMNode = __webpack_require__(175);
	var getHostComponentFromComposite = __webpack_require__(176);
	var renderSubtreeIntoContainer = __webpack_require__(177);
	var warning = __webpack_require__(14);
	
	ReactDefaultInjection.inject();
	
	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,
	
	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};
	
	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(51);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	
	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }
	
	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;
	
	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
	
	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;
	
	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];
	
	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactInstrumentation = __webpack_require__(65);
	  var ReactDOMUnknownPropertyHook = __webpack_require__(178);
	  var ReactDOMNullInputValuePropHook = __webpack_require__(179);
	  var ReactDOMInvalidARIAHook = __webpack_require__(180);
	
	  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
	}
	
	module.exports = ReactDOM;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var DOMProperty = __webpack_require__(39);
	var ReactDOMComponentFlags = __webpack_require__(40);
	
	var invariant = __webpack_require__(11);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;
	
	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);
	
	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}
	
	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}
	
	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}
	
	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID === 0) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}
	
	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }
	
	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }
	
	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }
	
	  return closest;
	}
	
	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}
	
	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  if (inst._hostNode) {
	    return inst._hostNode;
	  }
	
	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }
	
	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }
	
	  return inst._hostNode;
	}
	
	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};
	
	module.exports = ReactDOMComponentTree;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 38 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';
	
	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */
	
	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;
	
	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
	
	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }
	
	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
	
	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame
	
	  throw error;
	}
	
	module.exports = reactProdInvariant;

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var invariant = __webpack_require__(11);
	
	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}
	
	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
	
	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }
	
	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;
	
	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];
	
	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,
	
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;
	
	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }
	
	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }
	
	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }
	
	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }
	
	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }
	
	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	
	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */
	
	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',
	
	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
	
	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},
	
	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   *
	   * autofocus is predefined, because adding it to the property whitelist
	   * causes unintended side effects.
	   *
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? { autofocus: 'autoFocus' } : null,
	
	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],
	
	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },
	
	  injection: DOMPropertyInjection
	};
	
	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 40 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};
	
	module.exports = ReactDOMComponentFlags;

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ARIADOMPropertyConfig = __webpack_require__(42);
	var BeforeInputEventPlugin = __webpack_require__(43);
	var ChangeEventPlugin = __webpack_require__(58);
	var DefaultEventPluginOrder = __webpack_require__(75);
	var EnterLeaveEventPlugin = __webpack_require__(76);
	var HTMLDOMPropertyConfig = __webpack_require__(81);
	var ReactComponentBrowserEnvironment = __webpack_require__(82);
	var ReactDOMComponent = __webpack_require__(95);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactDOMEmptyComponent = __webpack_require__(140);
	var ReactDOMTreeTraversal = __webpack_require__(141);
	var ReactDOMTextComponent = __webpack_require__(142);
	var ReactDefaultBatchingStrategy = __webpack_require__(143);
	var ReactEventListener = __webpack_require__(144);
	var ReactInjection = __webpack_require__(147);
	var ReactReconcileTransaction = __webpack_require__(148);
	var SVGDOMPropertyConfig = __webpack_require__(156);
	var SelectEventPlugin = __webpack_require__(157);
	var SimpleEventPlugin = __webpack_require__(158);
	
	var alreadyInjected = false;
	
	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;
	
	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
	
	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);
	
	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });
	
	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);
	
	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);
	
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });
	
	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	
	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}
	
	module.exports = {
	  inject: inject
	};

/***/ },
/* 42 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ARIADOMPropertyConfig = {
	  Properties: {
	    // Global States and Properties
	    'aria-current': 0, // state
	    'aria-details': 0,
	    'aria-disabled': 0, // state
	    'aria-hidden': 0, // state
	    'aria-invalid': 0, // state
	    'aria-keyshortcuts': 0,
	    'aria-label': 0,
	    'aria-roledescription': 0,
	    // Widget Attributes
	    'aria-autocomplete': 0,
	    'aria-checked': 0,
	    'aria-expanded': 0,
	    'aria-haspopup': 0,
	    'aria-level': 0,
	    'aria-modal': 0,
	    'aria-multiline': 0,
	    'aria-multiselectable': 0,
	    'aria-orientation': 0,
	    'aria-placeholder': 0,
	    'aria-pressed': 0,
	    'aria-readonly': 0,
	    'aria-required': 0,
	    'aria-selected': 0,
	    'aria-sort': 0,
	    'aria-valuemax': 0,
	    'aria-valuemin': 0,
	    'aria-valuenow': 0,
	    'aria-valuetext': 0,
	    // Live Region Attributes
	    'aria-atomic': 0,
	    'aria-busy': 0,
	    'aria-live': 0,
	    'aria-relevant': 0,
	    // Drag-and-Drop Attributes
	    'aria-dropeffect': 0,
	    'aria-grabbed': 0,
	    // Relationship Attributes
	    'aria-activedescendant': 0,
	    'aria-colcount': 0,
	    'aria-colindex': 0,
	    'aria-colspan': 0,
	    'aria-controls': 0,
	    'aria-describedby': 0,
	    'aria-errormessage': 0,
	    'aria-flowto': 0,
	    'aria-labelledby': 0,
	    'aria-owns': 0,
	    'aria-posinset': 0,
	    'aria-rowcount': 0,
	    'aria-rowindex': 0,
	    'aria-rowspan': 0,
	    'aria-setsize': 0
	  },
	  DOMAttributeNames: {},
	  DOMPropertyNames: {}
	};
	
	module.exports = ARIADOMPropertyConfig;

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(44);
	var ExecutionEnvironment = __webpack_require__(51);
	var FallbackCompositionState = __webpack_require__(52);
	var SyntheticCompositionEvent = __webpack_require__(55);
	var SyntheticInputEvent = __webpack_require__(57);
	
	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;
	
	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
	
	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}
	
	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
	
	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
	
	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}
	
	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: 'onBeforeInput',
	      captured: 'onBeforeInputCapture'
	    },
	    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionEnd',
	      captured: 'onCompositionEndCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionStart',
	      captured: 'onCompositionStartCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionUpdate',
	      captured: 'onCompositionUpdateCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  }
	};
	
	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;
	
	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}
	
	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case 'topCompositionStart':
	      return eventTypes.compositionStart;
	    case 'topCompositionEnd':
	      return eventTypes.compositionEnd;
	    case 'topCompositionUpdate':
	      return eventTypes.compositionUpdate;
	  }
	}
	
	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
	}
	
	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topKeyUp':
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case 'topKeyDown':
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case 'topKeyPress':
	    case 'topMouseDown':
	    case 'topBlur':
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}
	
	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}
	
	// Track the current IME composition fallback object, if any.
	var currentComposition = null;
	
	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;
	
	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }
	
	  if (!eventType) {
	    return null;
	  }
	
	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }
	
	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
	
	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }
	
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topCompositionEnd':
	      return getDataFromCustomEvent(nativeEvent);
	    case 'topKeyPress':
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }
	
	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;
	
	    case 'topTextInput':
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;
	
	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }
	
	      return chars;
	
	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}
	
	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  // If composition event is available, we extract a string only at
	  // compositionevent, otherwise extract it at fallback events.
	  if (currentComposition) {
	    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }
	
	  switch (topLevelType) {
	    case 'topPaste':
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case 'topKeyPress':
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case 'topCompositionEnd':
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}
	
	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;
	
	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }
	
	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }
	
	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
	
	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};
	
	module.exports = BeforeInputEventPlugin;

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(45);
	var EventPluginUtils = __webpack_require__(47);
	
	var accumulateInto = __webpack_require__(49);
	var forEachAccumulated = __webpack_require__(50);
	var warning = __webpack_require__(14);
	
	var getListener = EventPluginHub.getListener;
	
	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}
	
	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, phase, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}
	
	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}
	
	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}
	
	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}
	
	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}
	
	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}
	
	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}
	
	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};
	
	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var EventPluginRegistry = __webpack_require__(46);
	var EventPluginUtils = __webpack_require__(47);
	var ReactErrorUtils = __webpack_require__(48);
	
	var accumulateInto = __webpack_require__(49);
	var forEachAccumulated = __webpack_require__(50);
	var invariant = __webpack_require__(11);
	
	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};
	
	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;
	
	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);
	
	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};
	
	var getDictionaryKey = function (inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	};
	
	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}
	
	function shouldPreventMouseEvent(name, type, props) {
	  switch (name) {
	    case 'onClick':
	    case 'onClickCapture':
	    case 'onDoubleClick':
	    case 'onDoubleClickCapture':
	    case 'onMouseDown':
	    case 'onMouseDownCapture':
	    case 'onMouseMove':
	    case 'onMouseMoveCapture':
	    case 'onMouseUp':
	    case 'onMouseUpCapture':
	      return !!(props.disabled && isInteractive(type));
	    default:
	      return false;
	  }
	}
	
	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	
	  },
	
	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;
	
	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;
	
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },
	
	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
	    // live here; needs to be moved to a better place soon
	    var bankForRegistrationName = listenerBank[registrationName];
	    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
	      return null;
	    }
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },
	
	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }
	
	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },
	
	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }
	
	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }
	
	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }
	
	      delete listenerBank[registrationName][key];
	    }
	  },
	
	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },
	
	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },
	
	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },
	
	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },
	
	  __getListenerBank: function () {
	    return listenerBank;
	  }
	
	};
	
	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var invariant = __webpack_require__(11);
	
	/**
	 * Injectable ordering of event plugins.
	 */
	var eventPluginOrder = null;
	
	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};
	
	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!eventPluginOrder) {
	    // Wait until an `eventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var pluginModule = namesToPlugins[pluginName];
	    var pluginIndex = eventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !pluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
	    var publishedEvents = pluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}
	
	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
	    return true;
	  }
	  return false;
	}
	
	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, pluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
	
	  if (process.env.NODE_ENV !== 'production') {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
	
	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}
	
	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],
	
	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},
	
	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},
	
	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},
	
	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
	  // Trust the developer to only use possibleRegistrationNames in __DEV__
	
	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (injectedEventPluginOrder) {
	    !!eventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
	    recomputePluginOrdering();
	  },
	
	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var pluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = pluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },
	
	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    if (dispatchConfig.phasedRegistrationNames !== undefined) {
	      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
	      // that it is not undefined.
	      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	
	      for (var phase in phasedRegistrationNames) {
	        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
	          continue;
	        }
	        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
	        if (pluginModule) {
	          return pluginModule;
	        }
	      }
	    }
	    return null;
	  },
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    eventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;
	
	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }
	
	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var ReactErrorUtils = __webpack_require__(48);
	
	var invariant = __webpack_require__(11);
	var warning = __webpack_require__(14);
	
	/**
	 * Injected dependencies:
	 */
	
	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};
	
	function isEndish(topLevelType) {
	  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
	}
	
	function isMoveish(topLevelType) {
	  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
	}
	function isStartish(topLevelType) {
	  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
	}
	
	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;
	
	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
	
	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}
	
	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}
	
	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}
	
	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}
	
	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}
	
	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,
	
	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	
	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },
	
	  injection: injection
	};
	
	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var caughtError = null;
	
	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a) {
	  try {
	    func(a);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	  }
	}
	
	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,
	
	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,
	
	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};
	
	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
	      var boundFunc = func.bind(null, a);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      // $FlowFixMe https://github.com/facebook/flow/issues/2336
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}
	
	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var invariant = __webpack_require__(11);
	
	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	
	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;
	
	  if (current == null) {
	    return next;
	  }
	
	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }
	
	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }
	
	  return [current, next];
	}
	
	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 50 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	
	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}
	
	module.exports = forEachAccumulated;

/***/ },
/* 51 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
	};
	
	module.exports = ExecutionEnvironment;

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(7);
	
	var PooledClass = __webpack_require__(53);
	
	var getTextContentAccessor = __webpack_require__(54);
	
	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}
	
	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },
	
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },
	
	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }
	
	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;
	
	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }
	
	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }
	
	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});
	
	PooledClass.addPoolingTo(FallbackCompositionState);
	
	module.exports = FallbackCompositionState;

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var invariant = __webpack_require__(11);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};
	
	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(51);
	
	var contentKey = null;
	
	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}
	
	module.exports = getTextContentAccessor;

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(56);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
	
	module.exports = SyntheticCompositionEvent;

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(7);
	
	var PooledClass = __webpack_require__(53);
	
	var emptyFunction = __webpack_require__(15);
	var warning = __webpack_require__(14);
	
	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';
	
	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};
	
	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (process.env.NODE_ENV !== 'production') {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }
	
	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;
	
	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }
	
	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}
	
	_assign(SyntheticEvent.prototype, {
	
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else if (typeof event.returnValue !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },
	
	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }
	
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,
	
	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (process.env.NODE_ENV !== 'production') {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }
	
	});
	
	SyntheticEvent.Interface = EventInterface;
	
	if (process.env.NODE_ENV !== 'production') {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;
	
	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();
	
	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;
	
	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;
	
	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};
	
	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
	
	module.exports = SyntheticEvent;
	
	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };
	
	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }
	
	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }
	
	  function warn(action, result) {
	    var warningCondition = false;
	    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(56);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
	
	module.exports = SyntheticInputEvent;

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(45);
	var EventPropagators = __webpack_require__(44);
	var ExecutionEnvironment = __webpack_require__(51);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(59);
	var SyntheticEvent = __webpack_require__(56);
	
	var getEventTarget = __webpack_require__(72);
	var isEventSupported = __webpack_require__(73);
	var isTextInputElement = __webpack_require__(74);
	
	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: 'onChange',
	      captured: 'onChangeCapture'
	    },
	    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
	  }
	};
	
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;
	
	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}
	
	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
	}
	
	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	
	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}
	
	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}
	
	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}
	
	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}
	
	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topChange') {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForChangeEventIE8();
	  }
	}
	
	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);
	}
	
	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};
	
	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
	
	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}
	
	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	
	  // delete restores the original property definition
	  delete activeElement.value;
	
	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }
	
	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}
	
	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;
	
	  manualDispatchChangeEvent(nativeEvent);
	}
	
	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topInput') {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}
	
	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForValueChange();
	  }
	}
	
	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}
	
	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}
	
	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topClick') {
	    return targetInst;
	  }
	}
	
	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }
	
	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }
	
	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }
	
	};
	
	module.exports = ChangeEventPlugin;

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38),
	    _assign = __webpack_require__(7);
	
	var CallbackQueue = __webpack_require__(60);
	var PooledClass = __webpack_require__(53);
	var ReactFeatureFlags = __webpack_require__(61);
	var ReactReconciler = __webpack_require__(62);
	var Transaction = __webpack_require__(71);
	
	var invariant = __webpack_require__(11);
	
	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;
	
	var batchingStrategy = null;
	
	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}
	
	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};
	
	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};
	
	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}
	
	_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },
	
	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});
	
	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}
	
	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}
	
	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;
	
	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);
	
	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;
	
	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];
	
	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;
	
	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.type.isReactTopLevelWrapper) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }
	
	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
	
	    if (markerName) {
	      console.timeEnd(markerName);
	    }
	
	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}
	
	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	
	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	
	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();
	
	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	
	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }
	
	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}
	
	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}
	
	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },
	
	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};
	
	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,
	
	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};
	
	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var PooledClass = __webpack_require__(53);
	
	var invariant = __webpack_require__(11);
	
	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	
	var CallbackQueue = function () {
	  function CallbackQueue(arg) {
	    _classCallCheck(this, CallbackQueue);
	
	    this._callbacks = null;
	    this._contexts = null;
	    this._arg = arg;
	  }
	
	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._callbacks.push(callback);
	    this._contexts = this._contexts || [];
	    this._contexts.push(context);
	  };
	
	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.notifyAll = function notifyAll() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    var arg = this._arg;
	    if (callbacks && contexts) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i], arg);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  };
	
	  CallbackQueue.prototype.checkpoint = function checkpoint() {
	    return this._callbacks ? this._callbacks.length : 0;
	  };
	
	  CallbackQueue.prototype.rollback = function rollback(len) {
	    if (this._callbacks && this._contexts) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  };
	
	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.reset = function reset() {
	    this._callbacks = null;
	    this._contexts = null;
	  };
	
	  /**
	   * `PooledClass` looks for this.
	   */
	
	
	  CallbackQueue.prototype.destructor = function destructor() {
	    this.reset();
	  };
	
	  return CallbackQueue;
	}();
	
	module.exports = PooledClass.addPoolingTo(CallbackQueue);
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 61 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};
	
	module.exports = ReactFeatureFlags;

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactRef = __webpack_require__(63);
	var ReactInstrumentation = __webpack_require__(65);
	
	var warning = __webpack_require__(14);
	
	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}
	
	var ReactReconciler = {
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
	  ) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },
	
	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;
	
	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	
	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	      }
	    }
	
	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
	
	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }
	
	    internalInstance.receiveComponent(nextElement, transaction, context);
	
	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactOwner = __webpack_require__(64);
	
	var ReactRef = {};
	
	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}
	
	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}
	
	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};
	
	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.
	
	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.
	
	  var prevRef = null;
	  var prevOwner = null;
	  if (prevElement !== null && typeof prevElement === 'object') {
	    prevRef = prevElement.ref;
	    prevOwner = prevElement._owner;
	  }
	
	  var nextRef = null;
	  var nextOwner = null;
	  if (nextElement !== null && typeof nextElement === 'object') {
	    nextRef = nextElement.ref;
	    nextOwner = nextElement._owner;
	  }
	
	  return prevRef !== nextRef ||
	  // If owner changes but we have an unchanged function ref, don't update refs
	  typeof nextRef === 'string' && nextOwner !== prevOwner;
	};
	
	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};
	
	module.exports = ReactRef;

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var invariant = __webpack_require__(11);
	
	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid owner.
	 * @final
	 */
	function isValidOwner(object) {
	  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	}
	
	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },
	
	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	
	};
	
	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	// Trust the developer to only use ReactInstrumentation with a __DEV__ check
	
	var debugTool = null;
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactDebugTool = __webpack_require__(66);
	  debugTool = ReactDebugTool;
	}
	
	module.exports = { debugTool: debugTool };
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactInvalidSetStateWarningHook = __webpack_require__(67);
	var ReactHostOperationHistoryHook = __webpack_require__(68);
	var ReactComponentTreeHook = __webpack_require__(29);
	var ExecutionEnvironment = __webpack_require__(51);
	
	var performanceNow = __webpack_require__(69);
	var warning = __webpack_require__(14);
	
	var hooks = [];
	var didHookThrowForEvent = {};
	
	function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
	  try {
	    fn.call(context, arg1, arg2, arg3, arg4, arg5);
	  } catch (e) {
	    process.env.NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
	    didHookThrowForEvent[event] = true;
	  }
	}
	
	function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
	  for (var i = 0; i < hooks.length; i++) {
	    var hook = hooks[i];
	    var fn = hook[event];
	    if (fn) {
	      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
	    }
	  }
	}
	
	var isProfiling = false;
	var flushHistory = [];
	var lifeCycleTimerStack = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = [];
	var currentFlushStartTime = 0;
	var currentTimerDebugID = null;
	var currentTimerStartTime = 0;
	var currentTimerNestedFlushDuration = 0;
	var currentTimerType = null;
	
	var lifeCycleTimerHasWarned = false;
	
	function clearHistory() {
	  ReactComponentTreeHook.purgeUnmountedComponents();
	  ReactHostOperationHistoryHook.clearHistory();
	}
	
	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeHook.getOwnerID(id);
	    var parentID = ReactComponentTreeHook.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeHook.getDisplayName(id),
	      text: ReactComponentTreeHook.getText(id),
	      updateCount: ReactComponentTreeHook.getUpdateCount(id),
	      childIDs: ReactComponentTreeHook.getChildIDs(id),
	      // Text nodes don't have owners but this is close enough.
	      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}
	
	function resetMeasurements() {
	  var previousStartTime = currentFlushStartTime;
	  var previousMeasurements = currentFlushMeasurements;
	  var previousOperations = ReactHostOperationHistoryHook.getHistory();
	
	  if (currentFlushNesting === 0) {
	    currentFlushStartTime = 0;
	    currentFlushMeasurements = [];
	    clearHistory();
	    return;
	  }
	
	  if (previousMeasurements.length || previousOperations.length) {
	    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
	    flushHistory.push({
	      duration: performanceNow() - previousStartTime,
	      measurements: previousMeasurements || [],
	      operations: previousOperations || [],
	      treeSnapshot: getTreeSnapshot(registeredIDs)
	    });
	  }
	
	  clearHistory();
	  currentFlushStartTime = performanceNow();
	  currentFlushMeasurements = [];
	}
	
	function checkDebugID(debugID) {
	  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	  if (allowRoot && debugID === 0) {
	    return;
	  }
	  if (!debugID) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
	  }
	}
	
	function beginLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  currentTimerStartTime = performanceNow();
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}
	
	function endLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  if (isProfiling) {
	    currentFlushMeasurements.push({
	      timerType: timerType,
	      instanceID: debugID,
	      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
	    });
	  }
	  currentTimerStartTime = 0;
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}
	
	function pauseCurrentLifeCycleTimer() {
	  var currentTimer = {
	    startTime: currentTimerStartTime,
	    nestedFlushStartTime: performanceNow(),
	    debugID: currentTimerDebugID,
	    timerType: currentTimerType
	  };
	  lifeCycleTimerStack.push(currentTimer);
	  currentTimerStartTime = 0;
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}
	
	function resumeCurrentLifeCycleTimer() {
	  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
	      startTime = _lifeCycleTimerStack$.startTime,
	      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
	      debugID = _lifeCycleTimerStack$.debugID,
	      timerType = _lifeCycleTimerStack$.timerType;
	
	  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
	  currentTimerStartTime = startTime;
	  currentTimerNestedFlushDuration += nestedFlushDuration;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}
	
	var lastMarkTimeStamp = 0;
	var canUsePerformanceMeasure =
	// $FlowFixMe https://github.com/facebook/flow/issues/2345
	typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';
	
	function shouldMark(debugID) {
	  if (!isProfiling || !canUsePerformanceMeasure) {
	    return false;
	  }
	  var element = ReactComponentTreeHook.getElement(debugID);
	  if (element == null || typeof element !== 'object') {
	    return false;
	  }
	  var isHostElement = typeof element.type === 'string';
	  if (isHostElement) {
	    return false;
	  }
	  return true;
	}
	
	function markBegin(debugID, markType) {
	  if (!shouldMark(debugID)) {
	    return;
	  }
	
	  var markName = debugID + '::' + markType;
	  lastMarkTimeStamp = performanceNow();
	  performance.mark(markName);
	}
	
	function markEnd(debugID, markType) {
	  if (!shouldMark(debugID)) {
	    return;
	  }
	
	  var markName = debugID + '::' + markType;
	  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';
	
	  // Chrome has an issue of dropping markers recorded too fast:
	  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
	  // To work around this, we will not report very small measurements.
	  // I determined the magic number by tweaking it back and forth.
	  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
	  // When the bug is fixed, we can `measure()` unconditionally if we want to.
	  var timeStamp = performanceNow();
	  if (timeStamp - lastMarkTimeStamp > 0.1) {
	    var measurementName = displayName + ' [' + markType + ']';
	    performance.measure(measurementName, markName);
	  }
	
	  performance.clearMarks(markName);
	  performance.clearMeasures(measurementName);
	}
	
	var ReactDebugTool = {
	  addHook: function (hook) {
	    hooks.push(hook);
	  },
	  removeHook: function (hook) {
	    for (var i = 0; i < hooks.length; i++) {
	      if (hooks[i] === hook) {
	        hooks.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  isProfiling: function () {
	    return isProfiling;
	  },
	  beginProfiling: function () {
	    if (isProfiling) {
	      return;
	    }
	
	    isProfiling = true;
	    flushHistory.length = 0;
	    resetMeasurements();
	    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
	  },
	  endProfiling: function () {
	    if (!isProfiling) {
	      return;
	    }
	
	    isProfiling = false;
	    resetMeasurements();
	    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
	  },
	  getFlushHistory: function () {
	    return flushHistory;
	  },
	  onBeginFlush: function () {
	    currentFlushNesting++;
	    resetMeasurements();
	    pauseCurrentLifeCycleTimer();
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function () {
	    resetMeasurements();
	    currentFlushNesting--;
	    resumeCurrentLifeCycleTimer();
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    markBegin(debugID, timerType);
	    beginLifeCycleTimer(debugID, timerType);
	  },
	  onEndLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    endLifeCycleTimer(debugID, timerType);
	    markEnd(debugID, timerType);
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onBeginProcessingChildContext: function () {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function () {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onHostOperation: function (operation) {
	    checkDebugID(operation.instanceID);
	    emitEvent('onHostOperation', operation);
	  },
	  onSetState: function () {
	    emitEvent('onSetState');
	  },
	  onSetChildren: function (debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    childDebugIDs.forEach(checkDebugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onBeforeMountComponent: function (debugID, element, parentDebugID) {
	    checkDebugID(debugID);
	    checkDebugID(parentDebugID, true);
	    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
	    markBegin(debugID, 'mount');
	  },
	  onMountComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'mount');
	    emitEvent('onMountComponent', debugID);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUpdateComponent', debugID, element);
	    markBegin(debugID, 'update');
	  },
	  onUpdateComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'update');
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onBeforeUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUnmountComponent', debugID);
	    markBegin(debugID, 'unmount');
	  },
	  onUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'unmount');
	    emitEvent('onUnmountComponent', debugID);
	  },
	  onTestEvent: function () {
	    emitEvent('onTestEvent');
	  }
	};
	
	// TODO remove these when RN/www gets updated
	ReactDebugTool.addDevtool = ReactDebugTool.addHook;
	ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;
	
	ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
	ReactDebugTool.addHook(ReactComponentTreeHook);
	var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	if (/[?&]react_perf\b/.test(url)) {
	  ReactDebugTool.beginProfiling();
	}
	
	module.exports = ReactDebugTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var warning = __webpack_require__(14);
	
	if (process.env.NODE_ENV !== 'production') {
	  var processingChildContext = false;
	
	  var warnInvalidSetState = function () {
	    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}
	
	var ReactInvalidSetStateWarningHook = {
	  onBeginProcessingChildContext: function () {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function () {
	    processingChildContext = false;
	  },
	  onSetState: function () {
	    warnInvalidSetState();
	  }
	};
	
	module.exports = ReactInvalidSetStateWarningHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 68 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var history = [];
	
	var ReactHostOperationHistoryHook = {
	  onHostOperation: function (operation) {
	    history.push(operation);
	  },
	  clearHistory: function () {
	    if (ReactHostOperationHistoryHook._preventClearing) {
	      // Should only be used for tests.
	      return;
	    }
	
	    history = [];
	  },
	  getHistory: function () {
	    return history;
	  }
	};
	
	module.exports = ReactHostOperationHistoryHook;

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var performance = __webpack_require__(70);
	
	var performanceNow;
	
	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}
	
	module.exports = performanceNow;

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(51);
	
	var performance;
	
	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}
	
	module.exports = performance || {};

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var invariant = __webpack_require__(11);
	
	var OBSERVED_ERROR = {};
	
	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var TransactionImpl = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },
	
	  _isInTransaction: false,
	
	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,
	
	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },
	
	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },
	
	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },
	
	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};
	
	module.exports = TransactionImpl;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 72 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	
	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }
	
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}
	
	module.exports = getEventTarget;

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(51);
	
	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}
	
	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }
	
	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;
	
	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }
	
	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }
	
	  return isSupported;
	}
	
	module.exports = isEventSupported;

/***/ },
/* 74 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};
	
	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	
	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }
	
	  if (nodeName === 'textarea') {
	    return true;
	  }
	
	  return false;
	}
	
	module.exports = isTextInputElement;

/***/ },
/* 75 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	
	var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];
	
	module.exports = DefaultEventPluginOrder;

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(44);
	var ReactDOMComponentTree = __webpack_require__(37);
	var SyntheticMouseEvent = __webpack_require__(77);
	
	var eventTypes = {
	  mouseEnter: {
	    registrationName: 'onMouseEnter',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  },
	  mouseLeave: {
	    registrationName: 'onMouseLeave',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  }
	};
	
	var EnterLeaveEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }
	
	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }
	
	    var from;
	    var to;
	    if (topLevelType === 'topMouseOut') {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }
	
	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }
	
	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
	
	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;
	
	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;
	
	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);
	
	    return [leave, enter];
	  }
	
	};
	
	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(78);
	var ViewportMetrics = __webpack_require__(79);
	
	var getEventModifierState = __webpack_require__(80);
	
	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
	module.exports = SyntheticMouseEvent;

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(56);
	
	var getEventTarget = __webpack_require__(72);
	
	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }
	
	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }
	
	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
	module.exports = SyntheticUIEvent;

/***/ },
/* 79 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ViewportMetrics = {
	
	  currentScrollLeft: 0,
	
	  currentScrollTop: 0,
	
	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	
	};
	
	module.exports = ViewportMetrics;

/***/ },
/* 80 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */
	
	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};
	
	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}
	
	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}
	
	module.exports = getEventModifierState;

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(39);
	
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    // specifies target context for links with `preload` type
	    as: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    playsInline: HAS_BOOLEAN_VALUE,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,
	
	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,
	
	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};
	
	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(83);
	var ReactDOMIDOperations = __webpack_require__(94);
	
	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
	
	};
	
	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMLazyTree = __webpack_require__(84);
	var Danger = __webpack_require__(90);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactInstrumentation = __webpack_require__(65);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(87);
	var setInnerHTML = __webpack_require__(86);
	var setTextContent = __webpack_require__(88);
	
	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}
	
	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});
	
	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}
	
	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}
	
	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}
	
	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}
	
	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}
	
	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onHostOperation({
	      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
	      type: 'replace text',
	      payload: stringText
	    });
	  }
	}
	
	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (process.env.NODE_ENV !== 'production') {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: prevInstance._debugID,
	        type: 'replace with',
	        payload: markup.toString()
	      });
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: nextInstance._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  };
	}
	
	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	
	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
	
	  replaceDelimitedText: replaceDelimitedText,
	
	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }
	
	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case 'INSERT_MARKUP':
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'insert child',
	              payload: { toIndex: update.toIndex, content: update.content.toString() }
	            });
	          }
	          break;
	        case 'MOVE_EXISTING':
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'move child',
	              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
	            });
	          }
	          break;
	        case 'SET_MARKUP':
	          setInnerHTML(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace children',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'TEXT_CONTENT':
	          setTextContent(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace text',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'REMOVE_NODE':
	          removeChild(parentNode, update.fromNode);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'remove child',
	              payload: { fromIndex: update.fromIndex }
	            });
	          }
	          break;
	      }
	    }
	  }
	
	};
	
	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMNamespaces = __webpack_require__(85);
	var setInnerHTML = __webpack_require__(86);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(87);
	var setTextContent = __webpack_require__(88);
	
	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);
	
	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}
	
	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});
	
	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}
	
	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}
	
	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}
	
	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}
	
	function toString() {
	  return this.node.nodeName;
	}
	
	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}
	
	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;
	
	module.exports = DOMLazyTree;

/***/ },
/* 85 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};
	
	module.exports = DOMNamespaces;

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(51);
	var DOMNamespaces = __webpack_require__(85);
	
	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(87);
	
	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;
	
	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var svgNode = reusableSVGContainer.firstChild;
	    while (svgNode.firstChild) {
	      node.appendChild(svgNode.firstChild);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});
	
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
	
	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }
	
	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;
	
	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}
	
	module.exports = setInnerHTML;

/***/ },
/* 87 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/* globals MSApp */
	
	'use strict';
	
	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */
	
	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};
	
	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(51);
	var escapeTextContentForBrowser = __webpack_require__(89);
	var setInnerHTML = __webpack_require__(86);
	
	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;
	
	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};
	
	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      if (node.nodeType === 3) {
	        node.nodeValue = text;
	        return;
	      }
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}
	
	module.exports = setTextContent;

/***/ },
/* 89 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 */
	
	'use strict';
	
	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */
	
	var matchHtmlRegExp = /["'&<>]/;
	
	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */
	
	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);
	
	  if (!match) {
	    return str;
	  }
	
	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;
	
	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }
	
	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }
	
	    lastIndex = index + 1;
	    html += escape;
	  }
	
	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html
	
	
	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}
	
	module.exports = escapeTextContentForBrowser;

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var DOMLazyTree = __webpack_require__(84);
	var ExecutionEnvironment = __webpack_require__(51);
	
	var createNodesFromMarkup = __webpack_require__(91);
	var emptyFunction = __webpack_require__(15);
	var invariant = __webpack_require__(11);
	
	var Danger = {
	
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;
	
	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }
	
	};
	
	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/*eslint-disable fb-www/unsafe-html*/
	
	var ExecutionEnvironment = __webpack_require__(51);
	
	var createArrayFromMixed = __webpack_require__(92);
	var getMarkupWrap = __webpack_require__(93);
	var invariant = __webpack_require__(11);
	
	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;
	
	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}
	
	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);
	
	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];
	
	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }
	
	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }
	
	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}
	
	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var invariant = __webpack_require__(11);
	
	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;
	
	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;
	
	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;
	
	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;
	
	  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;
	
	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }
	
	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}
	
	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}
	
	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}
	
	module.exports = createArrayFromMixed;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/*eslint-disable fb-www/unsafe-html */
	
	var ExecutionEnvironment = __webpack_require__(51);
	
	var invariant = __webpack_require__(11);
	
	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	
	var shouldWrap = {};
	
	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
	
	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],
	
	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
	  'optgroup': selectWrap,
	  'option': selectWrap,
	
	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,
	
	  'td': trWrap,
	  'th': trWrap
	};
	
	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});
	
	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}
	
	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(83);
	var ReactDOMComponentTree = __webpack_require__(37);
	
	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};
	
	module.exports = ReactDOMIDOperations;

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/* global hasOwnProperty:true */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38),
	    _assign = __webpack_require__(7);
	
	var AutoFocusUtils = __webpack_require__(96);
	var CSSPropertyOperations = __webpack_require__(98);
	var DOMLazyTree = __webpack_require__(84);
	var DOMNamespaces = __webpack_require__(85);
	var DOMProperty = __webpack_require__(39);
	var DOMPropertyOperations = __webpack_require__(106);
	var EventPluginHub = __webpack_require__(45);
	var EventPluginRegistry = __webpack_require__(46);
	var ReactBrowserEventEmitter = __webpack_require__(108);
	var ReactDOMComponentFlags = __webpack_require__(40);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactDOMInput = __webpack_require__(111);
	var ReactDOMOption = __webpack_require__(114);
	var ReactDOMSelect = __webpack_require__(115);
	var ReactDOMTextarea = __webpack_require__(116);
	var ReactInstrumentation = __webpack_require__(65);
	var ReactMultiChild = __webpack_require__(117);
	var ReactServerRenderingTransaction = __webpack_require__(136);
	
	var emptyFunction = __webpack_require__(15);
	var escapeTextContentForBrowser = __webpack_require__(89);
	var invariant = __webpack_require__(11);
	var isEventSupported = __webpack_require__(73);
	var shallowEqual = __webpack_require__(126);
	var validateDOMNesting = __webpack_require__(139);
	var warning = __webpack_require__(14);
	
	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;
	
	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };
	
	var STYLE = 'style';
	var HTML = '__html';
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};
	
	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;
	
	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}
	
	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}
	
	var styleMutationWarning = {};
	
	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }
	
	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }
	
	  var hash = ownerName + '|' + componentName;
	
	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }
	
	  styleMutationWarning[hash] = true;
	
	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}
	
	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}
	
	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}
	
	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}
	
	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}
	
	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}
	
	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}
	
	var setAndValidateContentChildDev = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  setAndValidateContentChildDev = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    // This ID represents the inlined child that has no backing instance:
	    var contentDebugID = -debugID;
	
	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }
	
	    validateDOMNesting(null, String(content), this, this._ancestorInfo);
	    this._contentDebugID = contentDebugID;
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}
	
	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};
	
	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;
	
	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	
	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
	      break;
	  }
	}
	
	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}
	
	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.
	
	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};
	
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};
	
	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.
	
	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);
	
	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name
	
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;
	
	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}
	
	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}
	
	var globalIdCounter = 1;
	
	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = 0;
	  this._domID = 0;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (process.env.NODE_ENV !== 'production') {
	    this._ancestorInfo = null;
	    setAndValidateContentChildDev.call(this, null);
	  }
	}
	
	ReactDOMComponent.displayName = 'ReactDOMComponent';
	
	ReactDOMComponent.Mixin = {
	
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the parent component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var props = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }
	
	    assertValidProps(this, props);
	
	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;
	
	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, null, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }
	
	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }
	
	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }
	
	    return mountImage;
	  },
	
	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;
	
	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }
	
	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }
	
	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },
	
	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';
	
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (process.env.NODE_ENV !== 'production') {
	          setAndValidateContentChildDev.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },
	
	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        if (process.env.NODE_ENV !== 'production') {
	          setAndValidateContentChildDev.call(this, contentToUse);
	        }
	        DOMLazyTree.queueText(lazyTree, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },
	
	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },
	
	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'input':
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }
	
	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);
	
	    switch (this._tag) {
	      case 'input':
	        // Update the wrapper around inputs *after* updating props. This has to
	        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
	        // raise warnings and prevent the new value from being assigned.
	        ReactDOMInput.updateWrapper(this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        break;
	      case 'select':
	        // <select> value update needs to occur after <option> children
	        // reconciliation
	        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	        break;
	    }
	  },
	
	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },
	
	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
	
	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
	
	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;
	
	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }
	
	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (process.env.NODE_ENV !== 'production') {
	          setAndValidateContentChildDev.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        setAndValidateContentChildDev.call(this, null);
	      }
	
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },
	
	  getHostNode: function () {
	    return getNode(this);
	  },
	
	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }
	
	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    this._rootNodeID = 0;
	    this._domID = 0;
	    this._wrapperState = null;
	
	    if (process.env.NODE_ENV !== 'production') {
	      setAndValidateContentChildDev.call(this, null);
	    }
	  },
	
	  getPublicInstance: function () {
	    return getNode(this);
	  }
	
	};
	
	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
	
	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(37);
	
	var focusNode = __webpack_require__(97);
	
	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};
	
	module.exports = AutoFocusUtils;

/***/ },
/* 97 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}
	
	module.exports = focusNode;

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(99);
	var ExecutionEnvironment = __webpack_require__(51);
	var ReactInstrumentation = __webpack_require__(65);
	
	var camelizeStyleName = __webpack_require__(100);
	var dangerousStyleValue = __webpack_require__(102);
	var hyphenateStyleName = __webpack_require__(103);
	var memoizeStringOnly = __webpack_require__(105);
	var warning = __webpack_require__(14);
	
	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});
	
	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;
	
	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };
	
	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }
	
	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };
	
	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };
	
	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }
	
	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}
	
	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },
	
	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: component._debugID,
	        type: 'update styles',
	        payload: styles
	      });
	    }
	
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 99 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	module.exports = CSSProperty;

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var camelize = __webpack_require__(101);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

/***/ },
/* 101 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(99);
	var warning = __webpack_require__(14);
	
	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    if (process.env.NODE_ENV !== 'production') {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	module.exports = dangerousStyleValue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(104);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ },
/* 104 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ },
/* 105 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */
	
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(39);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactInstrumentation = __webpack_require__(65);
	
	var quoteAttributeValueForBrowser = __webpack_require__(107);
	var warning = __webpack_require__(14);
	
	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};
	
	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}
	
	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}
	
	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },
	
	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },
	
	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },
	
	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },
	
	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },
	
	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },
	
	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },
	
	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },
	
	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  },
	
	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  }
	
	};
	
	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var escapeTextContentForBrowser = __webpack_require__(89);
	
	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}
	
	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(7);
	
	var EventPluginRegistry = __webpack_require__(46);
	var ReactEventEmitterMixin = __webpack_require__(109);
	var ViewportMetrics = __webpack_require__(79);
	
	var getVendorPrefixedEventName = __webpack_require__(110);
	var isEventSupported = __webpack_require__(73);
	
	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */
	
	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;
	
	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};
	
	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}
	
	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
	
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,
	
	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },
	
	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },
	
	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },
	
	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
	
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === 'topWheel') {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === 'topScroll') {
	
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === 'topFocus' || dependency === 'topBlur') {
	
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
	          }
	
	          // to make sure blur and focus event listeners are only attached once
	          isListening.topBlur = true;
	          isListening.topFocus = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }
	
	        isListening[dependency] = true;
	      }
	    }
	  },
	
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  /**
	   * Protect against document.createEvent() returning null
	   * Some popup blocker extensions appear to do this:
	   * https://github.com/facebook/react/issues/6887
	   */
	  supportsEventPageXY: function () {
	    if (!document.createEvent) {
	      return false;
	    }
	    var ev = document.createEvent('MouseEvent');
	    return ev != null && 'pageX' in ev;
	  },
	
	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }
	
	});
	
	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(45);
	
	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}
	
	var ReactEventEmitterMixin = {
	
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};
	
	module.exports = ReactEventEmitterMixin;

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(51);
	
	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};
	
	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();
	
	  return prefixes;
	}
	
	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};
	
	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};
	
	/**
	 * Element to check for prefixes on.
	 */
	var style = {};
	
	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;
	
	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }
	
	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}
	
	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }
	
	  var prefixMap = vendorPrefixes[eventName];
	
	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }
	
	  return '';
	}
	
	module.exports = getVendorPrefixedEventName;

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38),
	    _assign = __webpack_require__(7);
	
	var DOMPropertyOperations = __webpack_require__(106);
	var LinkedValueUtils = __webpack_require__(112);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(59);
	
	var invariant = __webpack_require__(11);
	var warning = __webpack_require__(14);
	
	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}
	
	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked != null : props.value != null;
	}
	
	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);
	
	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined,
	      // Make sure we set .min & .max before .value (to ensure proper order
	      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
	      min: undefined,
	      max: undefined
	    }, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	
	      var owner = inst._currentElement._owner;
	
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }
	
	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	
	    if (process.env.NODE_ENV !== 'production') {
	      inst._wrapperState.controlled = isControlled(props);
	    }
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    if (process.env.NODE_ENV !== 'production') {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;
	
	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }
	
	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;
	
	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        node.defaultValue = '' + props.defaultValue;
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	
	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.
	
	    switch (props.type) {
	      case 'submit':
	      case 'reset':
	        break;
	      case 'color':
	      case 'date':
	      case 'datetime':
	      case 'datetime-local':
	      case 'month':
	      case 'time':
	      case 'week':
	        // This fixes the no-show issue on iOS Safari and Android Chrome:
	        // https://github.com/facebook/react/issues/7233
	        node.value = '';
	        node.value = node.defaultValue;
	        break;
	      default:
	        node.value = node.value;
	        break;
	    }
	
	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;
	
	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }
	
	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }
	
	  return returnValue;
	}
	
	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var React = __webpack_require__(5);
	var ReactPropTypesSecret = __webpack_require__(113);
	
	var invariant = __webpack_require__(11);
	var warning = __webpack_require__(14);
	
	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};
	
	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}
	
	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}
	
	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: React.PropTypes.func
	};
	
	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};
	
	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 113 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
	module.exports = ReactPropTypesSecret;

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(7);
	
	var React = __webpack_require__(5);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactDOMSelect = __webpack_require__(115);
	
	var warning = __webpack_require__(14);
	var didWarnInvalidOptionChildren = false;
	
	function flattenChildren(children) {
	  var content = '';
	
	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  React.Children.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });
	
	  return content;
	}
	
	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }
	
	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;
	
	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }
	
	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }
	
	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }
	
	    inst._wrapperState = { selected: selected };
	  },
	
	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },
	
	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);
	
	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }
	
	    var content = flattenChildren(props.children);
	
	    if (content) {
	      hostProps.children = content;
	    }
	
	    return hostProps;
	  }
	
	};
	
	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(7);
	
	var LinkedValueUtils = __webpack_require__(112);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(59);
	
	var warning = __webpack_require__(14);
	
	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;
	
	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;
	
	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	
	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	var valuePropNames = ['value', 'defaultValue'];
	
	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);
	
	  if (props.valueLink !== undefined && !didWarnValueLink) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }
	
	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else if (!props.multiple && isArray) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}
	
	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;
	
	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}
	
	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },
	
	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },
	
	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;
	
	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38),
	    _assign = __webpack_require__(7);
	
	var LinkedValueUtils = __webpack_require__(112);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(59);
	
	var invariant = __webpack_require__(11);
	var warning = __webpack_require__(14);
	
	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;
	
	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, props, {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;
	
	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }
	
	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }
	
	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;
	
	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	
	    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.
	    node.value = node.textContent; // Detach value from defaultValue
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var ReactComponentEnvironment = __webpack_require__(118);
	var ReactInstanceMap = __webpack_require__(119);
	var ReactInstrumentation = __webpack_require__(65);
	
	var ReactCurrentOwner = __webpack_require__(13);
	var ReactReconciler = __webpack_require__(62);
	var ReactChildReconciler = __webpack_require__(120);
	
	var emptyFunction = __webpack_require__(15);
	var flattenChildren = __webpack_require__(135);
	var invariant = __webpack_require__(11);
	
	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'INSERT_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'MOVE_EXISTING',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'REMOVE_NODE',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'SET_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'TEXT_CONTENT',
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}
	
	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}
	
	var setChildrenForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}
	
	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	
	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        var selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },
	
	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      var selfDebugID = 0;
	      if (process.env.NODE_ENV !== 'production') {
	        selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	      return nextChildren;
	    },
	
	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var selfDebugID = 0;
	          if (process.env.NODE_ENV !== 'production') {
	            selfDebugID = getDebugID(this);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	
	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, children);
	      }
	
	      return mountImages;
	    },
	
	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },
	
	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;
	
	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },
	
	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },
	
	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },
	
	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },
	
	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },
	
	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },
	
	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }
	
	  }
	
	};
	
	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var invariant = __webpack_require__(11);
	
	var injected = false;
	
	var ReactComponentEnvironment = {
	
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,
	
	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,
	
	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	
	};
	
	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 119 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */
	
	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	
	var ReactInstanceMap = {
	
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },
	
	  get: function (key) {
	    return key._reactInternalInstance;
	  },
	
	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },
	
	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }
	
	};
	
	module.exports = ReactInstanceMap;

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactReconciler = __webpack_require__(62);
	
	var instantiateReactComponent = __webpack_require__(121);
	var KeyEscapeUtils = __webpack_require__(131);
	var shouldUpdateReactComponent = __webpack_require__(127);
	var traverseAllChildren = __webpack_require__(132);
	var warning = __webpack_require__(14);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(29);
	}
	
	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    if (!ReactComponentTreeHook) {
	      ReactComponentTreeHook = __webpack_require__(29);
	    }
	    if (!keyUnique) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}
	
	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	
	    if (process.env.NODE_ENV !== 'production') {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },
	
	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
	  ) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },
	
	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38),
	    _assign = __webpack_require__(7);
	
	var ReactCompositeComponent = __webpack_require__(122);
	var ReactEmptyComponent = __webpack_require__(128);
	var ReactHostComponent = __webpack_require__(129);
	
	var getNextDebugID = __webpack_require__(130);
	var invariant = __webpack_require__(11);
	var warning = __webpack_require__(14);
	
	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
	  _instantiateReactComponent: instantiateReactComponent
	});
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}
	
	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;
	
	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;
	
	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	
	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }
	
	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;
	
	  if (process.env.NODE_ENV !== 'production') {
	    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
	  }
	
	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }
	
	  return instance;
	}
	
	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38),
	    _assign = __webpack_require__(7);
	
	var React = __webpack_require__(5);
	var ReactComponentEnvironment = __webpack_require__(118);
	var ReactCurrentOwner = __webpack_require__(13);
	var ReactErrorUtils = __webpack_require__(48);
	var ReactInstanceMap = __webpack_require__(119);
	var ReactInstrumentation = __webpack_require__(65);
	var ReactNodeTypes = __webpack_require__(123);
	var ReactReconciler = __webpack_require__(62);
	
	if (process.env.NODE_ENV !== 'production') {
	  var checkReactTypeSpec = __webpack_require__(124);
	}
	
	var emptyObject = __webpack_require__(23);
	var invariant = __webpack_require__(11);
	var shallowEqual = __webpack_require__(126);
	var shouldUpdateReactComponent = __webpack_require__(127);
	var warning = __webpack_require__(14);
	
	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};
	
	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};
	
	function warnIfInvalidElement(Component, element) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}
	
	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}
	
	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}
	
	// Separated into a function to contain deoptimizations caused by try/finally.
	function measureLifeCyclePerf(fn, debugID, timerType) {
	  if (debugID === 0) {
	    // Top-level wrappers (see ReactMount) and empty components (see
	    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
	    // Both are implementation details that should go away in the future.
	    return fn();
	  }
	
	  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
	  try {
	    return fn();
	  } finally {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
	  }
	}
	
	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */
	
	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;
	
	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponent = {
	
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = 0;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;
	
	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;
	
	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	
	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;
	
	    if (process.env.NODE_ENV !== 'production') {
	      this._warnedAboutRefsInRender = false;
	    }
	  },
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var _this = this;
	
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);
	
	    var Component = this._currentElement.type;
	
	    var updateQueue = transaction.getUpdateQueue();
	
	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;
	
	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || React.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }
	
	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';
	
	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }
	
	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;
	
	    this._instance = inst;
	
	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }
	
	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	
	    if (inst.componentDidMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(function () {
	            return inst.componentDidMount();
	          }, _this._debugID, 'componentDidMount');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }
	
	    return markup;
	  },
	
	  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },
	
	  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;
	
	    if (doConstruct) {
	      if (process.env.NODE_ENV !== 'production') {
	        return measureLifeCyclePerf(function () {
	          return new Component(publicProps, publicContext, updateQueue);
	        }, this._debugID, 'ctor');
	      } else {
	        return new Component(publicProps, publicContext, updateQueue);
	      }
	    }
	
	    // This can still be an instance in case of factory components
	    // but we'll count this as time spent rendering as the more common case.
	    if (process.env.NODE_ENV !== 'production') {
	      return measureLifeCyclePerf(function () {
	        return Component(publicProps, publicContext, updateQueue);
	      }, this._debugID, 'render');
	    } else {
	      return Component(publicProps, publicContext, updateQueue);
	    }
	  },
	
	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();
	
	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);
	
	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },
	
	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;
	
	    var debugID = 0;
	    if (process.env.NODE_ENV !== 'production') {
	      debugID = this._debugID;
	    }
	
	    if (inst.componentWillMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillMount();
	        }, debugID, 'componentWillMount');
	      } else {
	        inst.componentWillMount();
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }
	
	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }
	
	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;
	
	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (debugID !== 0) {
	        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	      }
	    }
	
	    return markup;
	  },
	
	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	
	    var inst = this._instance;
	
	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          measureLifeCyclePerf(function () {
	            return inst.componentWillUnmount();
	          }, this._debugID, 'componentWillUnmount');
	        } else {
	          inst.componentWillUnmount();
	        }
	      }
	    }
	
	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }
	
	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;
	
	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = 0;
	    this._topLevelWrapper = null;
	
	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);
	
	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
	      }
	    }
	    return maskedContext;
	  },
	
	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext;
	
	    if (inst.getChildContext) {
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	        try {
	          childContext = inst.getChildContext();
	        } finally {
	          ReactInstrumentation.debugTool.onEndProcessingChildContext();
	        }
	      } else {
	        childContext = inst.getChildContext();
	      }
	    }
	
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkContextTypes(Component.childContextTypes, childContext, 'childContext');
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },
	
	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	    }
	  },
	
	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;
	
	    this._pendingElement = null;
	
	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },
	
	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },
	
	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    var willReceive = false;
	    var nextContext;
	
	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }
	
	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;
	
	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }
	
	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (process.env.NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillReceiveProps(nextProps, nextContext);
	        }, this._debugID, 'componentWillReceiveProps');
	      } else {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }
	
	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;
	
	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (process.env.NODE_ENV !== 'production') {
	          shouldUpdate = measureLifeCyclePerf(function () {
	            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	          }, this._debugID, 'shouldComponentUpdate');
	        } else {
	          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }
	
	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },
	
	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;
	
	    if (!queue) {
	      return inst.state;
	    }
	
	    if (replace && queue.length === 1) {
	      return queue[0];
	    }
	
	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }
	
	    return nextState;
	  },
	
	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var _this2 = this;
	
	    var inst = this._instance;
	
	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }
	
	    if (inst.componentWillUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillUpdate(nextProps, nextState, nextContext);
	        }, this._debugID, 'componentWillUpdate');
	      } else {
	        inst.componentWillUpdate(nextProps, nextState, nextContext);
	      }
	    }
	
	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;
	
	    this._updateRenderedComponent(transaction, unmaskedContext);
	
	    if (hasComponentDidUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },
	
	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	
	    var debugID = 0;
	    if (process.env.NODE_ENV !== 'production') {
	      debugID = this._debugID;
	    }
	
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);
	
	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;
	
	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);
	
	      if (process.env.NODE_ENV !== 'production') {
	        if (debugID !== 0) {
	          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	        }
	      }
	
	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },
	
	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },
	
	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedElement;
	
	    if (process.env.NODE_ENV !== 'production') {
	      renderedElement = measureLifeCyclePerf(function () {
	        return inst.render();
	      }, this._debugID, 'render');
	    } else {
	      renderedElement = inst.render();
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedElement === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedElement = null;
	      }
	    }
	
	    return renderedElement;
	  },
	
	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedElement;
	    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    return renderedElement;
	  },
	
	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },
	
	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },
	
	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },
	
	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },
	
	  // Stub
	  _instantiateReactComponent: null
	
	};
	
	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var React = __webpack_require__(5);
	
	var invariant = __webpack_require__(11);
	
	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,
	
	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (React.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};
	
	module.exports = ReactNodeTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var ReactPropTypeLocationNames = __webpack_require__(125);
	var ReactPropTypesSecret = __webpack_require__(113);
	
	var invariant = __webpack_require__(11);
	var warning = __webpack_require__(14);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(29);
	}
	
	var loggedTypeFailures = {};
	
	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var componentStackInfo = '';
	
	        if (process.env.NODE_ENV !== 'production') {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(29);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }
	
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}
	
	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 126 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */
	
	/*eslint-disable no-self-compare */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    // Added the nonzero y check to make Flow happy, but it is redundant
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ },
/* 127 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }
	
	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}
	
	module.exports = shouldUpdateReactComponent;

/***/ },
/* 128 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyComponentFactory;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};
	
	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38),
	    _assign = __webpack_require__(7);
	
	var invariant = __webpack_require__(11);
	
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around host tags.
	var tagToComponentClass = {};
	var textComponentClass = null;
	
	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    _assign(tagToComponentClass, componentClasses);
	  }
	};
	
	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}
	
	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}
	
	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}
	
	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};
	
	module.exports = ReactHostComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 130 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var nextDebugID = 1;
	
	function getNextDebugID() {
	  return nextDebugID++;
	}
	
	module.exports = getNextDebugID;

/***/ },
/* 131 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */
	
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });
	
	  return '$' + escapedString;
	}
	
	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}
	
	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};
	
	module.exports = KeyEscapeUtils;

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var ReactCurrentOwner = __webpack_require__(13);
	var REACT_ELEMENT_TYPE = __webpack_require__(133);
	
	var getIteratorFn = __webpack_require__(134);
	var invariant = __webpack_require__(11);
	var KeyEscapeUtils = __webpack_require__(131);
	var warning = __webpack_require__(14);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var didWarnAboutMaps = false;
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 133 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	module.exports = REACT_ELEMENT_TYPE;

/***/ },
/* 134 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/* global Symbol */
	
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var KeyEscapeUtils = __webpack_require__(131);
	var traverseAllChildren = __webpack_require__(132);
	var warning = __webpack_require__(14);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(29);
	}
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (process.env.NODE_ENV !== 'production') {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = __webpack_require__(29);
	      }
	      if (!keyUnique) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	
	  if (process.env.NODE_ENV !== 'production') {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}
	
	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(7);
	
	var PooledClass = __webpack_require__(53);
	var Transaction = __webpack_require__(71);
	var ReactInstrumentation = __webpack_require__(65);
	var ReactServerUpdateQueue = __webpack_require__(137);
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];
	
	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	var noopCallbackQueue = {
	  enqueue: function () {}
	};
	
	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},
	
	  checkpoint: function () {},
	
	  rollback: function () {}
	};
	
	_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);
	
	PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
	module.exports = ReactServerRenderingTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ReactUpdateQueue = __webpack_require__(138);
	
	var warning = __webpack_require__(14);
	
	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */
	
	var ReactServerUpdateQueue = function () {
	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);
	
	    this.transaction = transaction;
	  }
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	
	
	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };
	
	  return ReactServerUpdateQueue;
	}();
	
	module.exports = ReactServerUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var ReactCurrentOwner = __webpack_require__(13);
	var ReactInstanceMap = __webpack_require__(119);
	var ReactInstrumentation = __webpack_require__(65);
	var ReactUpdates = __webpack_require__(59);
	
	var invariant = __webpack_require__(11);
	var warning = __webpack_require__(14);
	
	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}
	
	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}
	
	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }
	
	  return internalInstance;
	}
	
	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }
	
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingForceUpdate = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }
	
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);
	
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },
	
	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }
	
	};
	
	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(7);
	
	var emptyFunction = __webpack_require__(15);
	var warning = __webpack_require__(14);
	
	var validateDOMNesting = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
	
	  var emptyAncestorInfo = {
	    current: null,
	
	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,
	
	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };
	
	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };
	
	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }
	
	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }
	
	    ancestorInfo.current = info;
	
	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }
	
	    return ancestorInfo;
	  };
	
	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }
	
	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
	
	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;
	
	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }
	
	    return true;
	  };
	
	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	
	      case 'pre':
	      case 'listing':
	
	      case 'table':
	
	      case 'hr':
	
	      case 'xmp':
	
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;
	
	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
	
	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;
	
	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;
	
	      case 'button':
	        return ancestorInfo.buttonTagInScope;
	
	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;
	
	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }
	
	    return null;
	  };
	
	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }
	
	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };
	
	  var didWarn = {};
	
	  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	
	    if (childText != null) {
	      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
	      childTag = '#text';
	    }
	
	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;
	
	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;
	
	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
	
	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);
	
	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;
	
	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }
	
	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
	
	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;
	
	      var tagDisplayName = childTag;
	      var whitespaceInfo = '';
	      if (childTag === '#text') {
	        if (/\S/.test(childText)) {
	          tagDisplayName = 'Text nodes';
	        } else {
	          tagDisplayName = 'Whitespace text nodes';
	          whitespaceInfo = ' Make sure you don\'t have any extra whitespace between tags on ' + 'each line of your source code.';
	        }
	      } else {
	        tagDisplayName = '<' + childTag + '>';
	      }
	
	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };
	
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
	
	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}
	
	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(7);
	
	var DOMLazyTree = __webpack_require__(84);
	var ReactDOMComponentTree = __webpack_require__(37);
	
	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = 0;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});
	
	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var invariant = __webpack_require__(11);
	
	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }
	
	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }
	
	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }
	
	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}
	
	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	
	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}
	
	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;
	
	  return inst._hostParent;
	}
	
	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], 'captured', arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], 'bubbled', arg);
	  }
	}
	
	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], 'bubbled', argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], 'captured', argTo);
	  }
	}
	
	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38),
	    _assign = __webpack_require__(7);
	
	var DOMChildrenOperations = __webpack_require__(83);
	var DOMLazyTree = __webpack_require__(84);
	var ReactDOMComponentTree = __webpack_require__(37);
	
	var escapeTextContentForBrowser = __webpack_require__(89);
	var invariant = __webpack_require__(11);
	var validateDOMNesting = __webpack_require__(139);
	
	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	
	  // Properties
	  this._domID = 0;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};
	
	_assign(ReactDOMTextComponent.prototype, {
	
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(null, this._stringText, this, parentInfo);
	      }
	    }
	
	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);
	
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }
	
	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },
	
	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	      }
	    }
	  },
	
	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },
	
	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	
	});
	
	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(7);
	
	var ReactUpdates = __webpack_require__(59);
	var Transaction = __webpack_require__(71);
	
	var emptyFunction = __webpack_require__(15);
	
	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};
	
	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};
	
	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}
	
	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});
	
	var transaction = new ReactDefaultBatchingStrategyTransaction();
	
	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,
	
	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      return callback(a, b, c, d, e);
	    } else {
	      return transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};
	
	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(7);
	
	var EventListener = __webpack_require__(145);
	var ExecutionEnvironment = __webpack_require__(51);
	var PooledClass = __webpack_require__(53);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(59);
	
	var getEventTarget = __webpack_require__(72);
	var getUnboundedScrollPosition = __webpack_require__(146);
	
	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}
	
	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
	
	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);
	
	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);
	
	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}
	
	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,
	
	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },
	
	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },
	
	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },
	
	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },
	
	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }
	
	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};
	
	module.exports = ReactEventListener;

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */
	
	var emptyFunction = __webpack_require__(15);
	
	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },
	
	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },
	
	  registerDefault: function registerDefault() {}
	};
	
	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 146 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}
	
	module.exports = getUnboundedScrollPosition;

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(39);
	var EventPluginHub = __webpack_require__(45);
	var EventPluginUtils = __webpack_require__(47);
	var ReactComponentEnvironment = __webpack_require__(118);
	var ReactEmptyComponent = __webpack_require__(128);
	var ReactBrowserEventEmitter = __webpack_require__(108);
	var ReactHostComponent = __webpack_require__(129);
	var ReactUpdates = __webpack_require__(59);
	
	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};
	
	module.exports = ReactInjection;

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(7);
	
	var CallbackQueue = __webpack_require__(60);
	var PooledClass = __webpack_require__(53);
	var ReactBrowserEventEmitter = __webpack_require__(108);
	var ReactInputSelection = __webpack_require__(149);
	var ReactInstrumentation = __webpack_require__(65);
	var Transaction = __webpack_require__(71);
	var ReactUpdateQueue = __webpack_require__(138);
	
	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};
	
	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },
	
	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};
	
	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },
	
	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
	
	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },
	
	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },
	
	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);
	
	PooledClass.addPoolingTo(ReactReconcileTransaction);
	
	module.exports = ReactReconcileTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMSelection = __webpack_require__(150);
	
	var containsNode = __webpack_require__(152);
	var focusNode = __webpack_require__(97);
	var getActiveElement = __webpack_require__(155);
	
	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}
	
	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	
	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },
	
	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },
	
	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },
	
	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;
	
	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }
	
	    return selection || { start: 0, end: 0 };
	  },
	
	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }
	
	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};
	
	module.exports = ReactInputSelection;

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(51);
	
	var getNodeForCharacterOffset = __webpack_require__(151);
	var getTextContentAccessor = __webpack_require__(54);
	
	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}
	
	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;
	
	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);
	
	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;
	
	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}
	
	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();
	
	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }
	
	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;
	
	  var currentRange = selection.getRangeAt(0);
	
	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }
	
	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
	
	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
	
	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;
	
	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	
	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}
	
	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;
	
	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }
	
	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}
	
	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }
	
	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
	
	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }
	
	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);
	
	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();
	
	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}
	
	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
	
	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};
	
	module.exports = ReactDOMSelection;

/***/ },
/* 151 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}
	
	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}
	
	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;
	
	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;
	
	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }
	
	      nodeStart = nodeEnd;
	    }
	
	    node = getLeafNode(getSiblingNode(node));
	  }
	}
	
	module.exports = getNodeForCharacterOffset;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	var isTextNode = __webpack_require__(153);
	
	/*eslint-disable no-bitwise */
	
	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}
	
	module.exports = containsNode;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var isNode = __webpack_require__(154);
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;

/***/ },
/* 154 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}
	
	module.exports = isNode;

/***/ },
/* 155 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/* eslint-disable fb-www/typeof-undefined */
	
	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}
	
	module.exports = getActiveElement;

/***/ },
/* 156 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};
	
	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};
	
	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};
	
	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});
	
	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(44);
	var ExecutionEnvironment = __webpack_require__(51);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactInputSelection = __webpack_require__(149);
	var SyntheticEvent = __webpack_require__(56);
	
	var getActiveElement = __webpack_require__(155);
	var isTextInputElement = __webpack_require__(74);
	var shallowEqual = __webpack_require__(126);
	
	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
	
	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: 'onSelect',
	      captured: 'onSelectCapture'
	    },
	    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
	  }
	};
	
	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;
	
	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	
	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}
	
	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }
	
	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;
	
	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);
	
	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;
	
	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
	    return syntheticEvent;
	  }
	
	  return null;
	}
	
	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }
	
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case 'topFocus':
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case 'topBlur':
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;
	
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case 'topMouseDown':
	        mouseDown = true;
	        break;
	      case 'topContextMenu':
	      case 'topMouseUp':
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case 'topSelectionChange':
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case 'topKeyDown':
	      case 'topKeyUp':
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }
	
	    return null;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === 'onSelect') {
	      hasListener = true;
	    }
	  }
	};
	
	module.exports = SelectEventPlugin;

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var EventListener = __webpack_require__(145);
	var EventPropagators = __webpack_require__(44);
	var ReactDOMComponentTree = __webpack_require__(37);
	var SyntheticAnimationEvent = __webpack_require__(159);
	var SyntheticClipboardEvent = __webpack_require__(160);
	var SyntheticEvent = __webpack_require__(56);
	var SyntheticFocusEvent = __webpack_require__(161);
	var SyntheticKeyboardEvent = __webpack_require__(162);
	var SyntheticMouseEvent = __webpack_require__(77);
	var SyntheticDragEvent = __webpack_require__(165);
	var SyntheticTouchEvent = __webpack_require__(166);
	var SyntheticTransitionEvent = __webpack_require__(167);
	var SyntheticUIEvent = __webpack_require__(78);
	var SyntheticWheelEvent = __webpack_require__(168);
	
	var emptyFunction = __webpack_require__(15);
	var getEventCharCode = __webpack_require__(163);
	var invariant = __webpack_require__(11);
	
	/**
	 * Turns
	 * ['abort', ...]
	 * into
	 * eventTypes = {
	 *   'abort': {
	 *     phasedRegistrationNames: {
	 *       bubbled: 'onAbort',
	 *       captured: 'onAbortCapture',
	 *     },
	 *     dependencies: ['topAbort'],
	 *   },
	 *   ...
	 * };
	 * topLevelEventsToDispatchConfig = {
	 *   'topAbort': { sameConfig }
	 * };
	 */
	var eventTypes = {};
	var topLevelEventsToDispatchConfig = {};
	['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
	  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
	  var onEvent = 'on' + capitalizedEvent;
	  var topEvent = 'top' + capitalizedEvent;
	
	  var type = {
	    phasedRegistrationNames: {
	      bubbled: onEvent,
	      captured: onEvent + 'Capture'
	    },
	    dependencies: [topEvent]
	  };
	  eventTypes[event] = type;
	  topLevelEventsToDispatchConfig[topEvent] = type;
	});
	
	var onClickListeners = {};
	
	function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	}
	
	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}
	
	var SimpleEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case 'topAbort':
	      case 'topCanPlay':
	      case 'topCanPlayThrough':
	      case 'topDurationChange':
	      case 'topEmptied':
	      case 'topEncrypted':
	      case 'topEnded':
	      case 'topError':
	      case 'topInput':
	      case 'topInvalid':
	      case 'topLoad':
	      case 'topLoadedData':
	      case 'topLoadedMetadata':
	      case 'topLoadStart':
	      case 'topPause':
	      case 'topPlay':
	      case 'topPlaying':
	      case 'topProgress':
	      case 'topRateChange':
	      case 'topReset':
	      case 'topSeeked':
	      case 'topSeeking':
	      case 'topStalled':
	      case 'topSubmit':
	      case 'topSuspend':
	      case 'topTimeUpdate':
	      case 'topVolumeChange':
	      case 'topWaiting':
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case 'topKeyPress':
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case 'topKeyDown':
	      case 'topKeyUp':
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case 'topBlur':
	      case 'topFocus':
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case 'topClick':
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case 'topDoubleClick':
	      case 'topMouseDown':
	      case 'topMouseMove':
	      case 'topMouseUp':
	      // TODO: Disabled elements should not respond to mouse events
	      /* falls through */
	      case 'topMouseOut':
	      case 'topMouseOver':
	      case 'topContextMenu':
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case 'topDrag':
	      case 'topDragEnd':
	      case 'topDragEnter':
	      case 'topDragExit':
	      case 'topDragLeave':
	      case 'topDragOver':
	      case 'topDragStart':
	      case 'topDrop':
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case 'topTouchCancel':
	      case 'topTouchEnd':
	      case 'topTouchMove':
	      case 'topTouchStart':
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case 'topAnimationEnd':
	      case 'topAnimationIteration':
	      case 'topAnimationStart':
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case 'topTransitionEnd':
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case 'topScroll':
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case 'topWheel':
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case 'topCopy':
	      case 'topCut':
	      case 'topPaste':
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },
	
	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }
	
	};
	
	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(56);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
	
	module.exports = SyntheticAnimationEvent;

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(56);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
	module.exports = SyntheticClipboardEvent;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(78);
	
	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
	module.exports = SyntheticFocusEvent;

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(78);
	
	var getEventCharCode = __webpack_require__(163);
	var getEventKey = __webpack_require__(164);
	var getEventModifierState = __webpack_require__(80);
	
	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.
	
	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.
	
	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 163 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;
	
	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;
	
	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }
	
	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }
	
	  return 0;
	}
	
	module.exports = getEventCharCode;

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var getEventCharCode = __webpack_require__(163);
	
	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};
	
	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};
	
	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.
	
	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }
	
	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);
	
	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}
	
	module.exports = getEventKey;

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(77);
	
	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
	module.exports = SyntheticDragEvent;

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(78);
	
	var getEventModifierState = __webpack_require__(80);
	
	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
	module.exports = SyntheticTouchEvent;

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(56);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
	
	module.exports = SyntheticTransitionEvent;

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(77);
	
	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,
	
	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
	module.exports = SyntheticWheelEvent;

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var DOMLazyTree = __webpack_require__(84);
	var DOMProperty = __webpack_require__(39);
	var React = __webpack_require__(5);
	var ReactBrowserEventEmitter = __webpack_require__(108);
	var ReactCurrentOwner = __webpack_require__(13);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactDOMContainerInfo = __webpack_require__(170);
	var ReactDOMFeatureFlags = __webpack_require__(171);
	var ReactFeatureFlags = __webpack_require__(61);
	var ReactInstanceMap = __webpack_require__(119);
	var ReactInstrumentation = __webpack_require__(65);
	var ReactMarkupChecksum = __webpack_require__(172);
	var ReactReconciler = __webpack_require__(62);
	var ReactUpdateQueue = __webpack_require__(138);
	var ReactUpdates = __webpack_require__(59);
	
	var emptyObject = __webpack_require__(23);
	var instantiateReactComponent = __webpack_require__(121);
	var invariant = __webpack_require__(11);
	var setInnerHTML = __webpack_require__(86);
	var shouldUpdateReactComponent = __webpack_require__(127);
	var warning = __webpack_require__(14);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;
	
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	var instancesByReactRootID = {};
	
	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}
	
	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}
	
	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}
	
	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props.child;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }
	
	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
	  );
	
	  if (markerName) {
	    console.timeEnd(markerName);
	  }
	
	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}
	
	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }
	
	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}
	
	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}
	
	/**
	 * True if the supplied DOM node is a React DOM element and
	 * it has been rendered by another copy of React.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM has been rendered by another copy of React
	 * @internal
	 */
	function nodeIsRenderedByOtherInstance(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
	}
	
	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}
	
	/**
	 * True if the supplied DOM node is a valid React node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid React DOM node.
	 * @internal
	 */
	function isReactNode(node) {
	  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
	}
	
	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}
	
	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}
	
	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  return this.props.child;
	};
	TopLevelWrapper.isReactTopLevelWrapper = true;
	
	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	
	  TopLevelWrapper: TopLevelWrapper,
	
	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,
	
	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },
	
	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });
	
	    return prevComponent;
	  },
	
	  /**
	   * Render a new component into the DOM. Hooked by hooks!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;
	
	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);
	
	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.
	
	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);
	
	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;
	
	    return componentInstance;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },
	
	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
	
	    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });
	
	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	
	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props.child;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }
	
	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
	
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }
	
	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },
	
	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }
	
	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },
	
	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;
	
	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
	
	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }
	
	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;
	
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }
	
	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;
	
	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: hostNode._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  }
	};
	
	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var validateDOMNesting = __webpack_require__(139);
	
	var DOC_NODE_TYPE = 9;
	
	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (process.env.NODE_ENV !== 'production') {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}
	
	module.exports = ReactDOMContainerInfo;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 171 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMFeatureFlags = {
	  useCreateElement: true,
	  useFiber: false
	};
	
	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var adler32 = __webpack_require__(173);
	
	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;
	
	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);
	
	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },
	
	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};
	
	module.exports = ReactMarkupChecksum;

/***/ },
/* 173 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var MOD = 65521;
	
	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}
	
	module.exports = adler32;

/***/ },
/* 174 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	module.exports = '15.4.1';

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(38);
	
	var ReactCurrentOwner = __webpack_require__(13);
	var ReactDOMComponentTree = __webpack_require__(37);
	var ReactInstanceMap = __webpack_require__(119);
	
	var getHostComponentFromComposite = __webpack_require__(176);
	var invariant = __webpack_require__(11);
	var warning = __webpack_require__(14);
	
	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	
	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }
	
	  if (typeof componentOrElement.render === 'function') {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}
	
	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactNodeTypes = __webpack_require__(123);
	
	function getHostComponentFromComposite(inst) {
	  var type;
	
	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }
	
	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}
	
	module.exports = getHostComponentFromComposite;

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactMount = __webpack_require__(169);
	
	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(39);
	var EventPluginRegistry = __webpack_require__(46);
	var ReactComponentTreeHook = __webpack_require__(29);
	
	var warning = __webpack_require__(14);
	
	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true,
	
	    autoFocus: true,
	    defaultValue: true,
	    valueLink: true,
	    defaultChecked: true,
	    checkedLink: true,
	    innerHTML: true,
	    suppressContentEditableWarning: true,
	    onFocusIn: true,
	    onFocusOut: true
	  };
	  var warnedProperties = {};
	
	  var validateProperty = function (tagName, name, debugID) {
	    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
	      return true;
	    }
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return true;
	    }
	    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
	      return true;
	    }
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();
	
	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
	    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;
	
	    if (standardName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else if (registrationName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else {
	      // We were unable to guess which prop the user intended.
	      // It is likely that the user was just blindly spreading/forwarding props
	      // Components should be careful to only render valid props/attributes.
	      // Warning will be invoked in warnUnknownProperties to allow grouping.
	      return false;
	    }
	  };
	}
	
	var warnUnknownProperties = function (debugID, element) {
	  var unknownProps = [];
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }
	
	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');
	
	  if (unknownProps.length === 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (unknownProps.length > 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	};
	
	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	  warnUnknownProperties(debugID, element);
	}
	
	var ReactDOMUnknownPropertyHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};
	
	module.exports = ReactDOMUnknownPropertyHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactComponentTreeHook = __webpack_require__(29);
	
	var warning = __webpack_require__(14);
	
	var didWarnValueNull = false;
	
	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
	    return;
	  }
	  if (element.props != null && element.props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	
	    didWarnValueNull = true;
	  }
	}
	
	var ReactDOMNullInputValuePropHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};
	
	module.exports = ReactDOMNullInputValuePropHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(39);
	var ReactComponentTreeHook = __webpack_require__(29);
	
	var warning = __webpack_require__(14);
	
	var warnedProperties = {};
	var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	
	function validateProperty(tagName, name, debugID) {
	  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	    return true;
	  }
	
	  if (rARIA.test(name)) {
	    var lowerCasedName = name.toLowerCase();
	    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
	    // If this is an aria-* attribute, but is not listed in the known DOM
	    // DOM properties, then it is an invalid aria-* attribute.
	    if (standardName == null) {
	      warnedProperties[name] = true;
	      return false;
	    }
	    // aria-* attributes should be lowercase; suggest the lowercase version.
	    if (name !== standardName) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      warnedProperties[name] = true;
	      return true;
	    }
	  }
	
	  return true;
	}
	
	function warnInvalidARIAProps(debugID, element) {
	  var invalidProps = [];
	
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      invalidProps.push(key);
	    }
	  }
	
	  var unknownPropString = invalidProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');
	
	  if (invalidProps.length === 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (invalidProps.length > 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	}
	
	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	
	  warnInvalidARIAProps(debugID, element);
	}
	
	var ReactDOMInvalidARIAHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    if (process.env.NODE_ENV !== 'production') {
	      handleElement(debugID, element);
	    }
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    if (process.env.NODE_ENV !== 'production') {
	      handleElement(debugID, element);
	    }
	  }
	};
	
	module.exports = ReactDOMInvalidARIAHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(182);


/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _desc, _value, _class, _class2, _temp; // Copyright (c) 2015 Uber Technologies, Inc.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the "Software"), to deal
	// in the Software without restriction, including without limitation the rights
	// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	// copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	// THE SOFTWARE.
	
	
	var _react = __webpack_require__(4);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _autobindDecorator = __webpack_require__(183);
	
	var _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);
	
	var _webglRenderer = __webpack_require__(184);
	
	var _webglRenderer2 = _interopRequireDefault(_webglRenderer);
	
	var _lib = __webpack_require__(396);
	
	var _experimental = __webpack_require__(412);
	
	var _luma = __webpack_require__(185);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
	  var desc = {};
	  Object['ke' + 'ys'](descriptor).forEach(function (key) {
	    desc[key] = descriptor[key];
	  });
	  desc.enumerable = !!desc.enumerable;
	  desc.configurable = !!desc.configurable;
	
	  if ('value' in desc || desc.initializer) {
	    desc.writable = true;
	  }
	
	  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
	    return decorator(target, property, desc) || desc;
	  }, desc);
	
	  if (context && desc.initializer !== void 0) {
	    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
	    desc.initializer = undefined;
	  }
	
	  if (desc.initializer === void 0) {
	    Object['define' + 'Property'](target, property, desc);
	    desc = null;
	  }
	
	  return desc;
	}
	
	function noop() {}
	
	var DeckGL = (_class = (_temp = _class2 = function (_React$Component) {
	  _inherits(DeckGL, _React$Component);
	
	  function DeckGL(props) {
	    _classCallCheck(this, DeckGL);
	
	    var _this = _possibleConstructorReturn(this, (DeckGL.__proto__ || Object.getPrototypeOf(DeckGL)).call(this, props));
	
	    _this.state = {};
	    _this.needsRedraw = true;
	    _this.layerManager = null;
	    _this.effectManager = null;
	    return _this;
	  }
	
	  _createClass(DeckGL, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      this._updateLayers(nextProps);
	    }
	  }, {
	    key: '_updateLayers',
	    value: function _updateLayers(nextProps) {
	      var width = nextProps.width,
	          height = nextProps.height,
	          latitude = nextProps.latitude,
	          longitude = nextProps.longitude,
	          zoom = nextProps.zoom,
	          pitch = nextProps.pitch,
	          bearing = nextProps.bearing,
	          altitude = nextProps.altitude;
	
	
	      if (this.layerManager) {
	        this.layerManager.setContext({
	          width: width, height: height, latitude: latitude, longitude: longitude, zoom: zoom, pitch: pitch, bearing: bearing, altitude: altitude
	        }).updateLayers({ newLayers: nextProps.layers });
	      }
	    }
	  }, {
	    key: '_onRendererInitialized',
	    value: function _onRendererInitialized(_ref) {
	      var gl = _ref.gl,
	          canvas = _ref.canvas;
	
	      gl.enable(_luma.GL.BLEND);
	      gl.blendFunc(_luma.GL.SRC_ALPHA, _luma.GL.ONE_MINUS_SRC_ALPHA);
	
	      this.props.onWebGLInitialized(gl);
	
	      // Note: avoid React setState due GL animation loop / setState timing issue
	      this.layerManager = new _lib.LayerManager({ gl: gl });
	      this.effectManager = new _experimental.EffectManager({ gl: gl, layerManager: this.layerManager });
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = this.props.effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var effect = _step.value;
	
	          this.effectManager.addEffect(effect);
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	
	      this._updateLayers(this.props);
	
	      this.events = (0, _luma.addEvents)(canvas, {
	        cacheSize: false,
	        cachePosition: false,
	        centerOrigin: false,
	        onClick: this._onClick,
	        onMouseMove: this._onMouseMove
	      });
	    }
	
	    // Route events to layers
	
	  }, {
	    key: '_onClick',
	    value: function _onClick(event) {
	      var x = event.x,
	          y = event.y;
	
	      var selectedInfos = this.layerManager.pickLayer({ x: x, y: y, mode: 'click' });
	      var firstInfo = selectedInfos.length > 0 ? selectedInfos[0] : null;
	      // Event.event holds the original MouseEvent object
	      this.props.onLayerClick(firstInfo, selectedInfos, event.event);
	    }
	
	    // Route events to layers
	
	  }, {
	    key: '_onMouseMove',
	    value: function _onMouseMove(event) {
	      var x = event.x,
	          y = event.y;
	
	      var selectedInfos = this.layerManager.pickLayer({ x: x, y: y, mode: 'hover' });
	      var firstInfo = selectedInfos.length > 0 ? selectedInfos[0] : null;
	      // Event.event holds the original MouseEvent object
	      this.props.onLayerHover(firstInfo, selectedInfos, event.event);
	    }
	  }, {
	    key: '_onRenderFrame',
	    value: function _onRenderFrame(_ref2) {
	      var gl = _ref2.gl;
	
	      if (!this.layerManager.needsRedraw({ clearRedrawFlags: true })) {
	        return;
	      }
	      // clear depth and color buffers
	      gl.clear(_luma.GL.COLOR_BUFFER_BIT | _luma.GL.DEPTH_BUFFER_BIT);
	
	      this.effectManager.preDraw();
	
	      this.layerManager.drawLayers();
	
	      this.effectManager.draw();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          width = _props.width,
	          height = _props.height,
	          gl = _props.gl,
	          debug = _props.debug,
	          otherProps = _objectWithoutProperties(_props, ['width', 'height', 'gl', 'debug']);
	
	      return _react2.default.createElement(_webglRenderer2.default, _extends({}, otherProps, {
	
	        width: width,
	        height: height,
	
	        gl: gl,
	        debug: debug,
	        viewport: { x: 0, y: 0, width: width, height: height },
	
	        onRendererInitialized: this._onRendererInitialized,
	        onNeedRedraw: this._onNeedRedraw,
	        onRenderFrame: this._onRenderFrame,
	        onMouseMove: this._onMouseMove,
	        onClick: this._onClick }));
	    }
	  }]);
	
	  return DeckGL;
	}(_react2.default.Component), _class2.propTypes = {
	  id: _react.PropTypes.string,
	  width: _react.PropTypes.number.isRequired,
	  height: _react.PropTypes.number.isRequired,
	  layers: _react.PropTypes.arrayOf(_react.PropTypes.instanceOf(_lib.Layer)).isRequired,
	  effects: _react.PropTypes.arrayOf(_react.PropTypes.instanceOf(_experimental.Effect)),
	  gl: _react.PropTypes.object,
	  debug: _react.PropTypes.bool,
	  onWebGLInitialized: noop,
	  onLayerClick: noop,
	  onLayerHover: noop
	}, _class2.defaultProps = {
	  id: 'deckgl-overlay',
	  debug: false,
	  gl: null,
	  effects: [],
	  onWebGLInitialized: noop,
	  onLayerClick: noop,
	  onLayerHover: noop
	}, _temp), (_applyDecoratedDescriptor(_class.prototype, '_onRendererInitialized', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, '_onRendererInitialized'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_onClick', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, '_onClick'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_onMouseMove', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, '_onMouseMove'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_onRenderFrame', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, '_onRenderFrame'), _class.prototype)), _class);
	exports.default = DeckGL;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 183 */
/***/ function(module, exports) {

	/**
	 * @copyright 2015, Andrey Popp <8mayday@gmail.com>
	 *
	 * The decorator may be used on classes or methods
	 * ```
	 * @autobind
	 * class FullBound {}
	 *
	 * class PartBound {
	 *   @autobind
	 *   method () {}
	 * }
	 * ```
	 */
	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports['default'] = autobind;
	
	function autobind() {
	  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	    args[_key] = arguments[_key];
	  }
	
	  if (args.length === 1) {
	    return boundClass.apply(undefined, args);
	  } else {
	    return boundMethod.apply(undefined, args);
	  }
	}
	
	/**
	 * Use boundMethod to bind all methods on the target.prototype
	 */
	function boundClass(target) {
	  // (Using reflect to get all keys including symbols)
	  var keys = undefined;
	  // Use Reflect if exists
	  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {
	    keys = Reflect.ownKeys(target.prototype);
	  } else {
	    keys = Object.getOwnPropertyNames(target.prototype);
	    // use symbols if support is provided
	    if (typeof Object.getOwnPropertySymbols === 'function') {
	      keys = keys.concat(Object.getOwnPropertySymbols(target.prototype));
	    }
	  }
	
	  keys.forEach(function (key) {
	    // Ignore special case target method
	    if (key === 'constructor') {
	      return;
	    }
	
	    var descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);
	
	    // Only methods need binding
	    if (typeof descriptor.value === 'function') {
	      Object.defineProperty(target.prototype, key, boundMethod(target, key, descriptor));
	    }
	  });
	  return target;
	}
	
	/**
	 * Return a descriptor removing the value and returning a getter
	 * The getter will return a .bind version of the function
	 * and memoize the result against a symbol on the instance
	 */
	function boundMethod(target, key, descriptor) {
	  var fn = descriptor.value;
	
	  if (typeof fn !== 'function') {
	    throw new Error('@autobind decorator can only be applied to methods not: ' + typeof fn);
	  }
	
	  // In IE11 calling Object.defineProperty has a side-effect of evaluating the
	  // getter for the property which is being replaced. This causes infinite
	  // recursion and an "Out of stack space" error.
	  var definingProperty = false;
	
	  return {
	    configurable: true,
	    get: function get() {
	      if (definingProperty || this === target.prototype || this.hasOwnProperty(key)) {
	        return fn;
	      }
	
	      var boundFn = fn.bind(this);
	      definingProperty = true;
	      Object.defineProperty(this, key, {
	        value: boundFn,
	        configurable: true,
	        writable: true
	      });
	      definingProperty = false;
	      return boundFn;
	    }
	  };
	}
	module.exports = exports['default'];


/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _desc, _value, _class, _class2, _temp; // Copyright (c) 2015 Uber Technologies, Inc.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the "Software"), to deal
	// in the Software without restriction, including without limitation the rights
	// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	// copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	// THE SOFTWARE.
	
	/* global window */
	
	
	var _react = __webpack_require__(4);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _autobindDecorator = __webpack_require__(183);
	
	var _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);
	
	var _luma = __webpack_require__(185);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
	  var desc = {};
	  Object['ke' + 'ys'](descriptor).forEach(function (key) {
	    desc[key] = descriptor[key];
	  });
	  desc.enumerable = !!desc.enumerable;
	  desc.configurable = !!desc.configurable;
	
	  if ('value' in desc || desc.initializer) {
	    desc.writable = true;
	  }
	
	  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
	    return decorator(target, property, desc) || desc;
	  }, desc);
	
	  if (context && desc.initializer !== void 0) {
	    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
	    desc.initializer = undefined;
	  }
	
	  if (desc.initializer === void 0) {
	    Object['define' + 'Property'](target, property, desc);
	    desc = null;
	  }
	
	  return desc;
	}
	
	/* global requestAnimationFrame, cancelAnimationFrame */
	
	var DEFAULT_PIXEL_RATIO = typeof window !== 'undefined' && window.devicePixelRatio || 1;
	
	var WebGLRenderer = (_class = (_temp = _class2 = function (_React$Component) {
	  _inherits(WebGLRenderer, _React$Component);
	
	  /**
	   * @classdesc
	   * Small react component that uses Luma.GL to initialize a WebGL context.
	   *
	   * Returns a canvas, creates a basic WebGL context
	   * sets up a renderloop, and registers some basic event handlers
	   *
	   * @class
	   * @param {Object} props - see propTypes documentation
	   */
	  function WebGLRenderer(props) {
	    _classCallCheck(this, WebGLRenderer);
	
	    var _this = _possibleConstructorReturn(this, (WebGLRenderer.__proto__ || Object.getPrototypeOf(WebGLRenderer)).call(this, props));
	
	    _this.state = {};
	    _this._animationFrame = null;
	    _this.gl = null;
	    return _this;
	  }
	
	  _createClass(WebGLRenderer, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var canvas = this.refs.overlay;
	      this._initWebGL(canvas);
	      this._animationLoop();
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this._cancelAnimationLoop();
	    }
	
	    /**
	     * Initialize LumaGL library and through it WebGL
	     * @param {string} canvas
	     */
	
	  }, {
	    key: '_initWebGL',
	    value: function _initWebGL(canvas) {
	      var _props = this.props,
	          debug = _props.debug,
	          glOptions = _props.glOptions;
	
	      // Create context if not supplied
	
	      var gl = this.props.gl;
	      if (!gl) {
	        try {
	          gl = (0, _luma.createGLContext)(_extends({ canvas: canvas, debug: debug }, glOptions));
	        } catch (error) {
	          this.props.onInitializationFailed(error);
	          return;
	        }
	      }
	
	      this.gl = gl;
	
	      // Call callback last, in case it throws
	      this.props.onRendererInitialized({ canvas: canvas, gl: gl });
	    }
	
	    /**
	     * Main WebGL animation loop
	     */
	
	  }, {
	    key: '_animationLoop',
	    value: function _animationLoop() {
	      this._renderFrame();
	      // Keep registering ourselves for the next animation frame
	      if (typeof window !== 'undefined') {
	        this._animationFrame = requestAnimationFrame(this._animationLoop);
	      }
	    }
	  }, {
	    key: '_cancelAnimationLoop',
	    value: function _cancelAnimationLoop() {
	      if (this._animationFrame) {
	        cancelAnimationFrame(this._animationFrame);
	      }
	    }
	
	    // Updates WebGL viewport to latest props
	    // for clean logging, only calls gl.viewport if props have changed
	
	  }, {
	    key: '_updateGLViewport',
	    value: function _updateGLViewport() {
	      var _props$viewport = this.props.viewport,
	          x = _props$viewport.x,
	          y = _props$viewport.y,
	          w = _props$viewport.width,
	          h = _props$viewport.height;
	      var dpr = this.props.pixelRatio;
	      var gl = this.gl;
	
	
	      x = x * dpr;
	      y = y * dpr;
	      w = w * dpr;
	      h = h * dpr;
	
	      if (x !== this.x || y !== this.y || w !== this.w || h !== this.h) {
	        gl.viewport(x, y, w, h);
	        this.x = x;
	        this.y = y;
	        this.w = w;
	        this.h = h;
	      }
	    }
	  }, {
	    key: '_renderFrame',
	    value: function _renderFrame() {
	      var _props$viewport2 = this.props.viewport,
	          width = _props$viewport2.width,
	          height = _props$viewport2.height;
	      var gl = this.gl;
	
	      // Check for reasons not to draw
	
	      if (!gl || !(width > 0) || !(height > 0)) {
	        return;
	      }
	
	      this._updateGLViewport();
	
	      // Call render callback
	      this.props.onRenderFrame({ gl: gl });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          id = _props2.id,
	          width = _props2.width,
	          height = _props2.height,
	          pixelRatio = _props2.pixelRatio,
	          style = _props2.style;
	
	      return _react2.default.createElement('canvas', {
	        ref: 'overlay',
	        key: 'overlay',
	        id: id,
	        width: width * pixelRatio,
	        height: height * pixelRatio,
	        style: _extends({}, style, { width: width, height: height }) });
	    }
	  }]);
	
	  return WebGLRenderer;
	}(_react2.default.Component), _class2.propTypes = {
	  id: _react.PropTypes.string.isRequired,
	
	  width: _react.PropTypes.number.isRequired,
	  height: _react.PropTypes.number.isRequired,
	  style: _react.PropTypes.object,
	
	  pixelRatio: _react.PropTypes.number,
	  viewport: _react.PropTypes.object.isRequired,
	  blending: _react.PropTypes.object,
	  events: _react.PropTypes.object,
	  gl: _react.PropTypes.object,
	  glOptions: _react.PropTypes.object,
	  debug: _react.PropTypes.bool,
	
	  onRendererInitialized: _react.PropTypes.func.isRequired,
	  onInitializationFailed: _react.PropTypes.func,
	  onError: _react.PropTypes.func,
	
	  onRenderFrame: _react.PropTypes.func,
	  onMouseMove: _react.PropTypes.func,
	  onClick: _react.PropTypes.func
	}, _class2.defaultProps = {
	  style: {},
	  gl: null,
	  glOptions: { preserveDrawingBuffer: true },
	  debug: false,
	  pixelRatio: DEFAULT_PIXEL_RATIO,
	
	  onRendererInitialized: function onRendererInitialized() {},
	  onInitializationFailed: function onInitializationFailed(error) {
	    throw error;
	  },
	  onError: function onError(error) {
	    throw error;
	  },
	  onRenderFrame: function onRenderFrame() {}
	}, _temp), (_applyDecoratedDescriptor(_class.prototype, '_animationLoop', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, '_animationLoop'), _class.prototype)), _class);
	exports.default = WebGLRenderer;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _withoutIo = __webpack_require__(186);
	
	Object.keys(_withoutIo).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _withoutIo[key];
	    }
	  });
	});
	
	var _io = __webpack_require__(277);
	
	Object.keys(_io).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _io[key];
	    }
	  });
	});
	
	var _globals = __webpack_require__(190);
	
	var _globals2 = _interopRequireDefault(_globals);
	
	var io = _interopRequireWildcard(_io);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	Object.assign(_globals2.default, io);
	
	// Assign global luma variable to help debugging
	
	
	// Export all symbols for LumaGL
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJpbyIsIk9iamVjdCIsImFzc2lnbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFHQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBSkE7Ozs7SUFPWUEsRTs7Ozs7O0FBQ1pDLE9BQU9DLE1BQVAsb0JBQW9CRixFQUFwQjs7QUFGQTs7O0FBSkEiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbHVtYSBmcm9tICcuL2dsb2JhbHMnO1xuXG4vLyBFeHBvcnQgYWxsIHN5bWJvbHMgZm9yIEx1bWFHTFxuZXhwb3J0ICogZnJvbSAnLi93aXRob3V0LWlvJztcbmV4cG9ydCAqIGZyb20gJy4vaW8nO1xuXG4vLyBBc3NpZ24gZ2xvYmFsIGx1bWEgdmFyaWFibGUgdG8gaGVscCBkZWJ1Z2dpbmdcbmltcG9ydCAqIGFzIGlvIGZyb20gJy4vaW8nO1xuT2JqZWN0LmFzc2lnbihsdW1hLCBpbyk7XG4iXX0=

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Fx = exports.Shaders = undefined;
	
	var _webgl = __webpack_require__(187);
	
	Object.keys(_webgl).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _webgl[key];
	    }
	  });
	});
	
	var _webgl2 = __webpack_require__(225);
	
	Object.keys(_webgl2).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _webgl2[key];
	    }
	  });
	});
	
	var _math = __webpack_require__(227);
	
	Object.keys(_math).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _math[key];
	    }
	  });
	});
	
	var _scenegraph = __webpack_require__(248);
	
	Object.keys(_scenegraph).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _scenegraph[key];
	    }
	  });
	});
	
	var _core = __webpack_require__(258);
	
	Object.keys(_core).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _core[key];
	    }
	  });
	});
	
	var _geometry = __webpack_require__(264);
	
	Object.keys(_geometry).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _geometry[key];
	    }
	  });
	});
	
	var _models = __webpack_require__(272);
	
	Object.keys(_models).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _models[key];
	    }
	  });
	});
	
	var _shaderlib = __webpack_require__(213);
	
	Object.defineProperty(exports, 'Shaders', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_shaderlib).default;
	  }
	});
	
	var _fx = __webpack_require__(274);
	
	Object.defineProperty(exports, 'Fx', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_fx).default;
	  }
	});
	
	var _deprecated = __webpack_require__(250);
	
	Object.keys(_deprecated).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _deprecated[key];
	    }
	  });
	});
	
	var webgl = _interopRequireWildcard(_webgl);
	
	var webgl2 = _interopRequireWildcard(_webgl2);
	
	var math = _interopRequireWildcard(_math);
	
	var scenegraph = _interopRequireWildcard(_scenegraph);
	
	var core = _interopRequireWildcard(_core);
	
	var geometry = _interopRequireWildcard(_geometry);
	
	var models = _interopRequireWildcard(_models);
	
	var _experimental = __webpack_require__(275);
	
	var experimental = _interopRequireWildcard(_experimental);
	
	var _shaderlib2 = _interopRequireDefault(_shaderlib);
	
	var _fx2 = _interopRequireDefault(_fx);
	
	var deprecated = _interopRequireWildcard(_deprecated);
	
	var _globals = __webpack_require__(190);
	
	var _globals2 = _interopRequireDefault(_globals);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	Object.assign(_globals2.default, webgl, webgl2, math, scenegraph, core, geometry, models, experimental,
	
	// Deprecated
	_shaderlib2.default, deprecated, { Fx: _fx2.default });
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy93aXRob3V0LWlvLmpzIl0sIm5hbWVzIjpbImRlZmF1bHQiLCJ3ZWJnbCIsIndlYmdsMiIsIm1hdGgiLCJzY2VuZWdyYXBoIiwiY29yZSIsImdlb21ldHJ5IiwibW9kZWxzIiwiZXhwZXJpbWVudGFsIiwiZGVwcmVjYXRlZCIsIk9iamVjdCIsImFzc2lnbiIsIkZ4Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7QUFTQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBT0E7Ozs7OzhDQUlRQSxPOzs7O0FBSFI7Ozs7O3VDQUlRQSxPOzs7O0FBSFI7O0FBSUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztJQXJCWUMsSzs7SUFDQUMsTTs7SUFDQUMsSTs7SUFDQUMsVTs7SUFDQUMsSTs7SUFNQUMsUTs7SUFDQUMsTTs7QUFDWjs7SUFBWUMsWTs7Ozs7O0lBS0FDLFU7O0FBTVo7Ozs7Ozs7O0FBQ0FDLE9BQU9DLE1BQVAsb0JBQ0VWLEtBREYsRUFFRUMsTUFGRixFQUdFQyxJQUhGLEVBSUVDLFVBSkYsRUFLRUMsSUFMRixFQU9FQyxRQVBGLEVBUUVDLE1BUkYsRUFTRUMsWUFURjs7QUFXRTtBQVhGLHFCQWFFQyxVQWJGLEVBY0UsRUFBQ0csZ0JBQUQsRUFkRiIsImZpbGUiOiJ3aXRob3V0LWlvLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRXhwb3J0IGNvcmUgbW9kdWxlcyBmb3IgbHVtYS5nbFxuZXhwb3J0ICogZnJvbSAnLi93ZWJnbCc7XG5leHBvcnQgKiBmcm9tICcuL3dlYmdsMic7XG5leHBvcnQgKiBmcm9tICcuL21hdGgnO1xuZXhwb3J0ICogZnJvbSAnLi9zY2VuZWdyYXBoJztcbmV4cG9ydCAqIGZyb20gJy4vY29yZSc7XG5cbmltcG9ydCAqIGFzIHdlYmdsIGZyb20gJy4vd2ViZ2wnO1xuaW1wb3J0ICogYXMgd2ViZ2wyIGZyb20gJy4vd2ViZ2wyJztcbmltcG9ydCAqIGFzIG1hdGggZnJvbSAnLi9tYXRoJztcbmltcG9ydCAqIGFzIHNjZW5lZ3JhcGggZnJvbSAnLi9zY2VuZWdyYXBoJztcbmltcG9ydCAqIGFzIGNvcmUgZnJvbSAnLi9jb3JlJztcblxuLy8gRXhwb3J0IHN1cHBvcnQgbW9kdWxlcyBmb3IgbHVtYS5nbFxuZXhwb3J0ICogZnJvbSAnLi9nZW9tZXRyeSc7XG5leHBvcnQgKiBmcm9tICcuL21vZGVscyc7XG5cbmltcG9ydCAqIGFzIGdlb21ldHJ5IGZyb20gJy4vZ2VvbWV0cnknO1xuaW1wb3J0ICogYXMgbW9kZWxzIGZyb20gJy4vbW9kZWxzJztcbmltcG9ydCAqIGFzIGV4cGVyaW1lbnRhbCBmcm9tICcuL2V4cGVyaW1lbnRhbCc7XG5cbi8vIFRPRE8gLSBkZXByZWNhdGVkXG5pbXBvcnQge2RlZmF1bHQgYXMgU2hhZGVyc30gZnJvbSAnLi9zaGFkZXJsaWInO1xuaW1wb3J0IHtkZWZhdWx0IGFzIEZ4fSBmcm9tICcuL2FkZG9ucy9meCc7XG5pbXBvcnQgKiBhcyBkZXByZWNhdGVkIGZyb20gJy4vZGVwcmVjYXRlZCc7XG5cbmV4cG9ydCB7ZGVmYXVsdCBhcyBTaGFkZXJzfSBmcm9tICcuL3NoYWRlcmxpYic7XG5leHBvcnQge2RlZmF1bHQgYXMgRnh9IGZyb20gJy4vYWRkb25zL2Z4JztcbmV4cG9ydCAqIGZyb20gJy4vZGVwcmVjYXRlZCc7XG5cbmltcG9ydCBsdW1hIGZyb20gJy4vZ2xvYmFscyc7XG5PYmplY3QuYXNzaWduKGx1bWEsXG4gIHdlYmdsLFxuICB3ZWJnbDIsXG4gIG1hdGgsXG4gIHNjZW5lZ3JhcGgsXG4gIGNvcmUsXG5cbiAgZ2VvbWV0cnksXG4gIG1vZGVscyxcbiAgZXhwZXJpbWVudGFsLFxuXG4gIC8vIERlcHJlY2F0ZWRcbiAgU2hhZGVycyxcbiAgZGVwcmVjYXRlZCxcbiAge0Z4fVxuKTtcbiJdfQ==

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.TimerQuery = exports.VertexAttributes = exports.TextureCube = exports.Texture2D = exports.Renderbuffer = exports.Framebuffer = exports.Program = exports.FragmentShader = exports.VertexShader = exports.Shader = exports.Buffer = undefined;
	
	var _webgl = __webpack_require__(188);
	
	Object.keys(_webgl).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _webgl[key];
	    }
	  });
	});
	
	var _buffer = __webpack_require__(200);
	
	Object.defineProperty(exports, 'Buffer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_buffer).default;
	  }
	});
	
	var _shader = __webpack_require__(202);
	
	Object.defineProperty(exports, 'Shader', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_shader).default;
	  }
	});
	Object.defineProperty(exports, 'VertexShader', {
	  enumerable: true,
	  get: function get() {
	    return _shader.VertexShader;
	  }
	});
	Object.defineProperty(exports, 'FragmentShader', {
	  enumerable: true,
	  get: function get() {
	    return _shader.FragmentShader;
	  }
	});
	
	var _program = __webpack_require__(209);
	
	Object.defineProperty(exports, 'Program', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_program).default;
	  }
	});
	
	var _framebuffer = __webpack_require__(216);
	
	Object.defineProperty(exports, 'Framebuffer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_framebuffer).default;
	  }
	});
	
	var _renderbuffer = __webpack_require__(218);
	
	Object.defineProperty(exports, 'Renderbuffer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_renderbuffer).default;
	  }
	});
	
	var _texture2d = __webpack_require__(217);
	
	Object.defineProperty(exports, 'Texture2D', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_texture2d).default;
	  }
	});
	
	var _textureCube = __webpack_require__(219);
	
	Object.defineProperty(exports, 'TextureCube', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_textureCube).default;
	  }
	});
	
	var _timerQuery = __webpack_require__(220);
	
	Object.defineProperty(exports, 'TimerQuery', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_timerQuery).default;
	  }
	});
	
	var _context = __webpack_require__(222);
	
	Object.keys(_context).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _context[key];
	    }
	  });
	});
	
	var _draw = __webpack_require__(224);
	
	Object.keys(_draw).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _draw[key];
	    }
	  });
	});
	
	var _uniforms = __webpack_require__(212);
	
	Object.keys(_uniforms).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _uniforms[key];
	    }
	  });
	});
	
	var _vertexAttributes = __webpack_require__(210);
	
	var VertexAttributes = _interopRequireWildcard(_vertexAttributes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.VertexAttributes = VertexAttributes;
	
	// Extensions
	
	
	// Functions
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy93ZWJnbC9pbmRleC5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0IiwiVmVydGV4U2hhZGVyIiwiRnJhZ21lbnRTaGFkZXIiLCJWZXJ0ZXhBdHRyaWJ1dGVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFLQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7Ozs7MkNBR1FBLE87Ozs7Ozs7OzsyQ0FDQUEsTzs7Ozs7O21CQUFtQkMsWTs7Ozs7O21CQUFjQyxjOzs7Ozs7Ozs7NENBQ2pDRixPOzs7Ozs7Ozs7Z0RBQ0FBLE87Ozs7Ozs7OztpREFDQUEsTzs7Ozs7Ozs7OzhDQUNBQSxPOzs7Ozs7Ozs7Z0RBQ0FBLE87Ozs7Ozs7OzsrQ0FNQUEsTzs7Ozs7O0FBR1I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQVRBOztJQUFZRyxnQjs7Ozs7O1FBQ0pBLGdCLEdBQUFBLGdCOztBQUVSOzs7QUFHQSIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGx1bWEuZ2wgQmFzZSBXZWJHTCB3cmFwcGVyIGxpYnJhcnlcbi8vIFByb3ZpZGVzIHNpbXBsZSBjbGFzcy9mdW5jdGlvbiB3cmFwcGVycyBhcm91bmQgdGhlIGxvdyBsZXZlbCB3ZWJnbCBvYmplY3RzXG4vLyBUaGVzZSBjbGFzc2VzIGFyZSBpbnRlbnRpb25hbGx5IGNsb3NlIHRvIHRoZSBXZWJHTCBBUElcbi8vIGJ1dCBtYWtlIGl0IGVhc2llciB0byB1c2UuXG4vLyBIaWdoZXIgbGV2ZWwgYWJzdHJhY3Rpb25zIGNhbiBiZSBidWlsdCBvbiB0aGVzZSBjbGFzc2VzXG5leHBvcnQgKiBmcm9tICcuL3dlYmdsJztcblxuLy8gV2ViR0wxIG9iamVjdHNcbmV4cG9ydCB7ZGVmYXVsdCBhcyBCdWZmZXJ9IGZyb20gJy4vYnVmZmVyJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBTaGFkZXIsIFZlcnRleFNoYWRlciwgRnJhZ21lbnRTaGFkZXJ9IGZyb20gJy4vc2hhZGVyJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBQcm9ncmFtfSBmcm9tICcuL3Byb2dyYW0nO1xuZXhwb3J0IHtkZWZhdWx0IGFzIEZyYW1lYnVmZmVyfSBmcm9tICcuL2ZyYW1lYnVmZmVyJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBSZW5kZXJidWZmZXJ9IGZyb20gJy4vcmVuZGVyYnVmZmVyJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBUZXh0dXJlMkR9IGZyb20gJy4vdGV4dHVyZS0yZCc7XG5leHBvcnQge2RlZmF1bHQgYXMgVGV4dHVyZUN1YmV9IGZyb20gJy4vdGV4dHVyZS1jdWJlJztcblxuaW1wb3J0ICogYXMgVmVydGV4QXR0cmlidXRlcyBmcm9tICcuL3ZlcnRleC1hdHRyaWJ1dGVzJztcbmV4cG9ydCB7VmVydGV4QXR0cmlidXRlc307XG5cbi8vIEV4dGVuc2lvbnNcbmV4cG9ydCB7ZGVmYXVsdCBhcyBUaW1lclF1ZXJ5fSBmcm9tICcuL3RpbWVyLXF1ZXJ5JztcblxuLy8gRnVuY3Rpb25zXG5leHBvcnQgKiBmcm9tICcuL2NvbnRleHQnO1xuZXhwb3J0ICogZnJvbSAnLi9kcmF3JztcbmV4cG9ydCAqIGZyb20gJy4vdW5pZm9ybXMnO1xuIl19

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _webglTypes = __webpack_require__(189);
	
	Object.keys(_webglTypes).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _webglTypes[key];
	    }
	  });
	});
	
	var _webglArrays = __webpack_require__(193);
	
	Object.keys(_webglArrays).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _webglArrays[key];
	    }
	  });
	});
	
	var _webglConstants = __webpack_require__(194);
	
	Object.keys(_webglConstants).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _webglConstants[key];
	    }
	  });
	});
	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_webglConstants).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy93ZWJnbC93ZWJnbC5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7OztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7OztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7OzttREFFUUEsTyIsImZpbGUiOiJ3ZWJnbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvbnZlbmllbmNlXG5leHBvcnQgKiBmcm9tICcuL3dlYmdsLXR5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vd2ViZ2wtYXJyYXlzJztcbmV4cG9ydCAqIGZyb20gJy4vd2ViZ2wtY29uc3RhbnRzJztcblxuZXhwb3J0IHtkZWZhdWx0IGFzIGRlZmF1bHR9IGZyb20gJy4vd2ViZ2wtY29uc3RhbnRzJztcbiJdfQ==

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.WebGL2RenderingContext = exports.WebGLShaderPrecisionFormat = exports.WebGLActiveInfo = exports.WebGLUniformLocation = exports.WebGLTexture = exports.WebGLRenderbuffer = exports.WebGLFramebuffer = exports.WebGLBuffer = exports.WebGLShader = exports.WebGLProgram = exports.WebGLRenderingContext = exports.Image = exports.webGLTypesAvailable = undefined;
	
	var _globals = __webpack_require__(190);
	
	var _globals2 = _interopRequireDefault(_globals);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } } // WEBGL BUILT-IN TYPES
	// 1) Exports all WebGL constants as {GL}
	// 2) Enables app to "import" WebGL types
	//    - Importing these types makes them known to eslint etc.
	//    - Provides dummy types for WebGL2 when not available to streamline
	//      library code.
	//    - Exports types from headless gl when running under Node.js
	
	var global = _globals2.default.global;
	
	var DummyType = function DummyType() {
	  _classCallCheck(this, DummyType);
	};
	
	var _ref = _globals2.default.globals.headlessTypes || global,
	    _ref$WebGLRenderingCo = _ref.WebGLRenderingContext,
	    WebGLRenderingContext = _ref$WebGLRenderingCo === undefined ? DummyType : _ref$WebGLRenderingCo,
	    _ref$WebGLProgram = _ref.WebGLProgram,
	    WebGLProgram = _ref$WebGLProgram === undefined ? DummyType : _ref$WebGLProgram,
	    _ref$WebGLShader = _ref.WebGLShader,
	    WebGLShader = _ref$WebGLShader === undefined ? DummyType : _ref$WebGLShader,
	    _ref$WebGLBuffer = _ref.WebGLBuffer,
	    WebGLBuffer = _ref$WebGLBuffer === undefined ? DummyType : _ref$WebGLBuffer,
	    _ref$WebGLFramebuffer = _ref.WebGLFramebuffer,
	    WebGLFramebuffer = _ref$WebGLFramebuffer === undefined ? DummyType : _ref$WebGLFramebuffer,
	    _ref$WebGLRenderbuffe = _ref.WebGLRenderbuffer,
	    WebGLRenderbuffer = _ref$WebGLRenderbuffe === undefined ? DummyType : _ref$WebGLRenderbuffe,
	    _ref$WebGLTexture = _ref.WebGLTexture,
	    WebGLTexture = _ref$WebGLTexture === undefined ? DummyType : _ref$WebGLTexture,
	    _ref$WebGLUniformLoca = _ref.WebGLUniformLocation,
	    WebGLUniformLocation = _ref$WebGLUniformLoca === undefined ? DummyType : _ref$WebGLUniformLoca,
	    _ref$WebGLActiveInfo = _ref.WebGLActiveInfo,
	    WebGLActiveInfo = _ref$WebGLActiveInfo === undefined ? DummyType : _ref$WebGLActiveInfo,
	    _ref$WebGLShaderPreci = _ref.WebGLShaderPrecisionFormat,
	    WebGLShaderPrecisionFormat = _ref$WebGLShaderPreci === undefined ? DummyType : _ref$WebGLShaderPreci;
	
	var webGLTypesAvailable = exports.webGLTypesAvailable = WebGLRenderingContext !== DummyType && WebGLProgram !== DummyType && WebGLShader !== DummyType && WebGLBuffer !== DummyType && WebGLFramebuffer !== DummyType && WebGLRenderbuffer !== DummyType && WebGLTexture !== DummyType && WebGLUniformLocation !== DummyType && WebGLActiveInfo !== DummyType && WebGLShaderPrecisionFormat !== DummyType;
	
	// Ensures that WebGL2RenderingContext is defined in non-WebGL2 environments
	// so that apps can test their gl contexts with instanceof
	// E.g. if (gl instanceof WebGL2RenderingContext) { ... }
	function getWebGL2RenderingContext() {
	  var WebGL2RenderingContextNotSupported = function WebGL2RenderingContextNotSupported() {
	    _classCallCheck(this, WebGL2RenderingContextNotSupported);
	  };
	
	  return global.WebGL2RenderingContext || WebGL2RenderingContextNotSupported;
	}
	
	// Ensure that Image is defined under Node.js
	function getImage() {
	  var ImageNotSupported = function ImageNotSupported() {
	    _classCallCheck(this, ImageNotSupported);
	  };
	
	  return global.Image || ImageNotSupported;
	}
	
	var WebGL2RenderingContext = getWebGL2RenderingContext();
	var Image = getImage();
	
	// Export the standard WebGL types
	exports.Image = Image;
	exports.WebGLRenderingContext = WebGLRenderingContext;
	exports.WebGLProgram = WebGLProgram;
	exports.WebGLShader = WebGLShader;
	exports.WebGLBuffer = WebGLBuffer;
	exports.WebGLFramebuffer = WebGLFramebuffer;
	exports.WebGLRenderbuffer = WebGLRenderbuffer;
	exports.WebGLTexture = WebGLTexture;
	exports.WebGLUniformLocation = WebGLUniformLocation;
	exports.WebGLActiveInfo = WebGLActiveInfo;
	exports.WebGLShaderPrecisionFormat = WebGLShaderPrecisionFormat;
	exports.WebGL2RenderingContext = WebGL2RenderingContext;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy93ZWJnbC93ZWJnbC10eXBlcy5qcyJdLCJuYW1lcyI6WyJnbG9iYWwiLCJEdW1teVR5cGUiLCJnbG9iYWxzIiwiaGVhZGxlc3NUeXBlcyIsIldlYkdMUmVuZGVyaW5nQ29udGV4dCIsIldlYkdMUHJvZ3JhbSIsIldlYkdMU2hhZGVyIiwiV2ViR0xCdWZmZXIiLCJXZWJHTEZyYW1lYnVmZmVyIiwiV2ViR0xSZW5kZXJidWZmZXIiLCJXZWJHTFRleHR1cmUiLCJXZWJHTFVuaWZvcm1Mb2NhdGlvbiIsIldlYkdMQWN0aXZlSW5mbyIsIldlYkdMU2hhZGVyUHJlY2lzaW9uRm9ybWF0Iiwid2ViR0xUeXBlc0F2YWlsYWJsZSIsImdldFdlYkdMMlJlbmRlcmluZ0NvbnRleHQiLCJXZWJHTDJSZW5kZXJpbmdDb250ZXh0Tm90U3VwcG9ydGVkIiwiV2ViR0wyUmVuZGVyaW5nQ29udGV4dCIsImdldEltYWdlIiwiSW1hZ2VOb3RTdXBwb3J0ZWQiLCJJbWFnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQVFBOzs7Ozs7MEpBUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBSUEsSUFBTUEsU0FBUyxrQkFBS0EsTUFBcEI7O0lBRU1DLFM7Ozs7V0FhRixrQkFBS0MsT0FBTCxDQUFhQyxhQUFiLElBQThCSCxNO2lDQVZoQ0kscUI7SUFBQUEscUIseUNBQXdCSCxTOzZCQUN4QkksWTtJQUFBQSxZLHFDQUFlSixTOzRCQUNmSyxXO0lBQUFBLFcsb0NBQWNMLFM7NEJBQ2RNLFc7SUFBQUEsVyxvQ0FBY04sUztpQ0FDZE8sZ0I7SUFBQUEsZ0IseUNBQW1CUCxTO2lDQUNuQlEsaUI7SUFBQUEsaUIseUNBQW9CUixTOzZCQUNwQlMsWTtJQUFBQSxZLHFDQUFlVCxTO2lDQUNmVSxvQjtJQUFBQSxvQix5Q0FBdUJWLFM7Z0NBQ3ZCVyxlO0lBQUFBLGUsd0NBQWtCWCxTO2lDQUNsQlksMEI7SUFBQUEsMEIseUNBQTZCWixTOztBQUd4QixJQUFNYSxvREFDWFYsMEJBQTBCSCxTQUExQixJQUNBSSxpQkFBaUJKLFNBRGpCLElBRUFLLGdCQUFnQkwsU0FGaEIsSUFHQU0sZ0JBQWdCTixTQUhoQixJQUlBTyxxQkFBcUJQLFNBSnJCLElBS0FRLHNCQUFzQlIsU0FMdEIsSUFNQVMsaUJBQWlCVCxTQU5qQixJQU9BVSx5QkFBeUJWLFNBUHpCLElBUUFXLG9CQUFvQlgsU0FScEIsSUFTQVksK0JBQStCWixTQVYxQjs7QUFZUDtBQUNBO0FBQ0E7QUFDQSxTQUFTYyx5QkFBVCxHQUFxQztBQUFBLE1BQzdCQyxrQ0FENkI7QUFBQTtBQUFBOztBQUVuQyxTQUFPaEIsT0FBT2lCLHNCQUFQLElBQWlDRCxrQ0FBeEM7QUFDRDs7QUFFRDtBQUNBLFNBQVNFLFFBQVQsR0FBb0I7QUFBQSxNQUNaQyxpQkFEWTtBQUFBO0FBQUE7O0FBRWxCLFNBQU9uQixPQUFPb0IsS0FBUCxJQUFnQkQsaUJBQXZCO0FBQ0Q7O0FBRUQsSUFBTUYseUJBQXlCRiwyQkFBL0I7QUFDQSxJQUFNSyxRQUFRRixVQUFkOztBQUVBO1FBRUVFLEssR0FBQUEsSztRQUVBaEIscUIsR0FBQUEscUI7UUFDQUMsWSxHQUFBQSxZO1FBQ0FDLFcsR0FBQUEsVztRQUNBQyxXLEdBQUFBLFc7UUFDQUMsZ0IsR0FBQUEsZ0I7UUFDQUMsaUIsR0FBQUEsaUI7UUFDQUMsWSxHQUFBQSxZO1FBQ0FDLG9CLEdBQUFBLG9CO1FBQ0FDLGUsR0FBQUEsZTtRQUNBQywwQixHQUFBQSwwQjtRQUVBSSxzQixHQUFBQSxzQiIsImZpbGUiOiJ3ZWJnbC10eXBlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFdFQkdMIEJVSUxULUlOIFRZUEVTXG4vLyAxKSBFeHBvcnRzIGFsbCBXZWJHTCBjb25zdGFudHMgYXMge0dMfVxuLy8gMikgRW5hYmxlcyBhcHAgdG8gXCJpbXBvcnRcIiBXZWJHTCB0eXBlc1xuLy8gICAgLSBJbXBvcnRpbmcgdGhlc2UgdHlwZXMgbWFrZXMgdGhlbSBrbm93biB0byBlc2xpbnQgZXRjLlxuLy8gICAgLSBQcm92aWRlcyBkdW1teSB0eXBlcyBmb3IgV2ViR0wyIHdoZW4gbm90IGF2YWlsYWJsZSB0byBzdHJlYW1saW5lXG4vLyAgICAgIGxpYnJhcnkgY29kZS5cbi8vICAgIC0gRXhwb3J0cyB0eXBlcyBmcm9tIGhlYWRsZXNzIGdsIHdoZW4gcnVubmluZyB1bmRlciBOb2RlLmpzXG5cbmltcG9ydCBsdW1hIGZyb20gJy4uL2dsb2JhbHMnO1xuXG5jb25zdCBnbG9iYWwgPSBsdW1hLmdsb2JhbDtcblxuY2xhc3MgRHVtbXlUeXBlIHt9XG5cbmNvbnN0IHtcbiAgV2ViR0xSZW5kZXJpbmdDb250ZXh0ID0gRHVtbXlUeXBlLFxuICBXZWJHTFByb2dyYW0gPSBEdW1teVR5cGUsXG4gIFdlYkdMU2hhZGVyID0gRHVtbXlUeXBlLFxuICBXZWJHTEJ1ZmZlciA9IER1bW15VHlwZSxcbiAgV2ViR0xGcmFtZWJ1ZmZlciA9IER1bW15VHlwZSxcbiAgV2ViR0xSZW5kZXJidWZmZXIgPSBEdW1teVR5cGUsXG4gIFdlYkdMVGV4dHVyZSA9IER1bW15VHlwZSxcbiAgV2ViR0xVbmlmb3JtTG9jYXRpb24gPSBEdW1teVR5cGUsXG4gIFdlYkdMQWN0aXZlSW5mbyA9IER1bW15VHlwZSxcbiAgV2ViR0xTaGFkZXJQcmVjaXNpb25Gb3JtYXQgPSBEdW1teVR5cGVcbn0gPSBsdW1hLmdsb2JhbHMuaGVhZGxlc3NUeXBlcyB8fCBnbG9iYWw7XG5cbmV4cG9ydCBjb25zdCB3ZWJHTFR5cGVzQXZhaWxhYmxlID1cbiAgV2ViR0xSZW5kZXJpbmdDb250ZXh0ICE9PSBEdW1teVR5cGUgJiZcbiAgV2ViR0xQcm9ncmFtICE9PSBEdW1teVR5cGUgJiZcbiAgV2ViR0xTaGFkZXIgIT09IER1bW15VHlwZSAmJlxuICBXZWJHTEJ1ZmZlciAhPT0gRHVtbXlUeXBlICYmXG4gIFdlYkdMRnJhbWVidWZmZXIgIT09IER1bW15VHlwZSAmJlxuICBXZWJHTFJlbmRlcmJ1ZmZlciAhPT0gRHVtbXlUeXBlICYmXG4gIFdlYkdMVGV4dHVyZSAhPT0gRHVtbXlUeXBlICYmXG4gIFdlYkdMVW5pZm9ybUxvY2F0aW9uICE9PSBEdW1teVR5cGUgJiZcbiAgV2ViR0xBY3RpdmVJbmZvICE9PSBEdW1teVR5cGUgJiZcbiAgV2ViR0xTaGFkZXJQcmVjaXNpb25Gb3JtYXQgIT09IER1bW15VHlwZTtcblxuLy8gRW5zdXJlcyB0aGF0IFdlYkdMMlJlbmRlcmluZ0NvbnRleHQgaXMgZGVmaW5lZCBpbiBub24tV2ViR0wyIGVudmlyb25tZW50c1xuLy8gc28gdGhhdCBhcHBzIGNhbiB0ZXN0IHRoZWlyIGdsIGNvbnRleHRzIHdpdGggaW5zdGFuY2VvZlxuLy8gRS5nLiBpZiAoZ2wgaW5zdGFuY2VvZiBXZWJHTDJSZW5kZXJpbmdDb250ZXh0KSB7IC4uLiB9XG5mdW5jdGlvbiBnZXRXZWJHTDJSZW5kZXJpbmdDb250ZXh0KCkge1xuICBjbGFzcyBXZWJHTDJSZW5kZXJpbmdDb250ZXh0Tm90U3VwcG9ydGVkIHt9XG4gIHJldHVybiBnbG9iYWwuV2ViR0wyUmVuZGVyaW5nQ29udGV4dCB8fCBXZWJHTDJSZW5kZXJpbmdDb250ZXh0Tm90U3VwcG9ydGVkO1xufVxuXG4vLyBFbnN1cmUgdGhhdCBJbWFnZSBpcyBkZWZpbmVkIHVuZGVyIE5vZGUuanNcbmZ1bmN0aW9uIGdldEltYWdlKCkge1xuICBjbGFzcyBJbWFnZU5vdFN1cHBvcnRlZCB7fVxuICByZXR1cm4gZ2xvYmFsLkltYWdlIHx8IEltYWdlTm90U3VwcG9ydGVkO1xufVxuXG5jb25zdCBXZWJHTDJSZW5kZXJpbmdDb250ZXh0ID0gZ2V0V2ViR0wyUmVuZGVyaW5nQ29udGV4dCgpO1xuY29uc3QgSW1hZ2UgPSBnZXRJbWFnZSgpO1xuXG4vLyBFeHBvcnQgdGhlIHN0YW5kYXJkIFdlYkdMIHR5cGVzXG5leHBvcnQge1xuICBJbWFnZSxcblxuICBXZWJHTFJlbmRlcmluZ0NvbnRleHQsXG4gIFdlYkdMUHJvZ3JhbSxcbiAgV2ViR0xTaGFkZXIsXG4gIFdlYkdMQnVmZmVyLFxuICBXZWJHTEZyYW1lYnVmZmVyLFxuICBXZWJHTFJlbmRlcmJ1ZmZlcixcbiAgV2ViR0xUZXh0dXJlLFxuICBXZWJHTFVuaWZvcm1Mb2NhdGlvbixcbiAgV2ViR0xBY3RpdmVJbmZvLFxuICBXZWJHTFNoYWRlclByZWNpc2lvbkZvcm1hdCxcblxuICBXZWJHTDJSZW5kZXJpbmdDb250ZXh0XG59O1xuIl19

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';
	
	var _isBrowser = __webpack_require__(191);
	
	var _isBrowser2 = _interopRequireDefault(_isBrowser);
	
	var _package = __webpack_require__(192);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* global window, global */
	var _global = _isBrowser2.default ? window : global;
	
	// TODO - Move this definition out of utils
	var luma = {
	  VERSION: _package.version,
	
	  // Keep some luma globals in a sub-object
	  // This allows us to dynamically detect if certain modules have been
	  // included (such as IO and headless) and enable related functionality,
	  // without unconditionally requiring and thus bundling big dependencies
	  // into the app.
	  globals: {
	    headlessGL: null,
	    headlessTypes: null,
	    modules: {},
	    nodeIO: {}
	  },
	
	  global: _global
	
	  // Logger will also be attached here.
	};
	
	// Export luma symbols as luma, luma and Luma on global context
	if (_global.luma && _global.luma.VERSION !== luma.VERSION) {
	  var versions = _global.luma.VERSION + ' vs ' + luma.VERSION;
	  throw new Error('luma.gl - multiple versions detected: ' + versions);
	}
	_global.luma = luma;
	
	module.exports = luma;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9nbG9iYWxzLmpzIl0sIm5hbWVzIjpbIl9nbG9iYWwiLCJ3aW5kb3ciLCJnbG9iYWwiLCJsdW1hIiwiVkVSU0lPTiIsImdsb2JhbHMiLCJoZWFkbGVzc0dMIiwiaGVhZGxlc3NUeXBlcyIsIm1vZHVsZXMiLCJub2RlSU8iLCJ2ZXJzaW9ucyIsIkVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7OztBQUNBOzs7O0FBRkE7QUFJQSxJQUFNQSxVQUFVLHNCQUFZQyxNQUFaLEdBQXFCQyxNQUFyQzs7QUFFQTtBQUNBLElBQU1DLE9BQU87QUFDWEMsMkJBRFc7O0FBR1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBQyxXQUFTO0FBQ1BDLGdCQUFZLElBREw7QUFFUEMsbUJBQWUsSUFGUjtBQUdQQyxhQUFTLEVBSEY7QUFJUEMsWUFBUTtBQUpELEdBUkU7O0FBZVhQLFVBQVFGOztBQUVSO0FBakJXLENBQWI7O0FBb0JBO0FBQ0EsSUFBSUEsUUFBUUcsSUFBUixJQUFnQkgsUUFBUUcsSUFBUixDQUFhQyxPQUFiLEtBQXlCRCxLQUFLQyxPQUFsRCxFQUEyRDtBQUN6RCxNQUFNTSxXQUFjVixRQUFRRyxJQUFSLENBQWFDLE9BQTNCLFlBQXlDRCxLQUFLQyxPQUFwRDtBQUNBLFFBQU0sSUFBSU8sS0FBSiw0Q0FBbURELFFBQW5ELENBQU47QUFDRDtBQUNEVixRQUFRRyxJQUFSLEdBQWVBLElBQWY7O0FBRUFTLE9BQU9DLE9BQVAsR0FBaUJWLElBQWpCIiwiZmlsZSI6Imdsb2JhbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgd2luZG93LCBnbG9iYWwgKi9cbmltcG9ydCBpc0Jyb3dzZXIgZnJvbSAnLi91dGlscy9pcy1icm93c2VyJztcbmltcG9ydCB7dmVyc2lvbn0gZnJvbSAnLi4vcGFja2FnZS5qc29uJztcblxuY29uc3QgX2dsb2JhbCA9IGlzQnJvd3NlciA/IHdpbmRvdyA6IGdsb2JhbDtcblxuLy8gVE9ETyAtIE1vdmUgdGhpcyBkZWZpbml0aW9uIG91dCBvZiB1dGlsc1xuY29uc3QgbHVtYSA9IHtcbiAgVkVSU0lPTjogdmVyc2lvbixcblxuICAvLyBLZWVwIHNvbWUgbHVtYSBnbG9iYWxzIGluIGEgc3ViLW9iamVjdFxuICAvLyBUaGlzIGFsbG93cyB1cyB0byBkeW5hbWljYWxseSBkZXRlY3QgaWYgY2VydGFpbiBtb2R1bGVzIGhhdmUgYmVlblxuICAvLyBpbmNsdWRlZCAoc3VjaCBhcyBJTyBhbmQgaGVhZGxlc3MpIGFuZCBlbmFibGUgcmVsYXRlZCBmdW5jdGlvbmFsaXR5LFxuICAvLyB3aXRob3V0IHVuY29uZGl0aW9uYWxseSByZXF1aXJpbmcgYW5kIHRodXMgYnVuZGxpbmcgYmlnIGRlcGVuZGVuY2llc1xuICAvLyBpbnRvIHRoZSBhcHAuXG4gIGdsb2JhbHM6IHtcbiAgICBoZWFkbGVzc0dMOiBudWxsLFxuICAgIGhlYWRsZXNzVHlwZXM6IG51bGwsXG4gICAgbW9kdWxlczoge30sXG4gICAgbm9kZUlPOiB7fVxuICB9LFxuXG4gIGdsb2JhbDogX2dsb2JhbFxuXG4gIC8vIExvZ2dlciB3aWxsIGFsc28gYmUgYXR0YWNoZWQgaGVyZS5cbn07XG5cbi8vIEV4cG9ydCBsdW1hIHN5bWJvbHMgYXMgbHVtYSwgbHVtYSBhbmQgTHVtYSBvbiBnbG9iYWwgY29udGV4dFxuaWYgKF9nbG9iYWwubHVtYSAmJiBfZ2xvYmFsLmx1bWEuVkVSU0lPTiAhPT0gbHVtYS5WRVJTSU9OKSB7XG4gIGNvbnN0IHZlcnNpb25zID0gYCR7X2dsb2JhbC5sdW1hLlZFUlNJT059IHZzICR7bHVtYS5WRVJTSU9OfWA7XG4gIHRocm93IG5ldyBFcnJvcihgbHVtYS5nbCAtIG11bHRpcGxlIHZlcnNpb25zIGRldGVjdGVkOiAke3ZlcnNpb25zfWApO1xufVxuX2dsb2JhbC5sdW1hID0gbHVtYTtcblxubW9kdWxlLmV4cG9ydHMgPSBsdW1hO1xuIl19
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	// This function is needed in initialization stages,
	// make sure it can be imported in isolation
	/* global process */
	
	var isNode = exports.isNode = (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && String(process) === '[object process]' && !process.browser;
	
	var isBrowser = exports.isBrowser = !isNode;
	
	exports.default = isBrowser;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9pcy1icm93c2VyLmpzIl0sIm5hbWVzIjpbImlzTm9kZSIsInByb2Nlc3MiLCJTdHJpbmciLCJicm93c2VyIiwiaXNCcm93c2VyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTs7QUFFTyxJQUFNQSwwQkFDWCxRQUFPQyxPQUFQLHlDQUFPQSxPQUFQLE9BQW1CLFFBQW5CLElBQ0FDLE9BQU9ELE9BQVAsTUFBb0Isa0JBRHBCLElBRUEsQ0FBQ0EsUUFBUUUsT0FISjs7QUFLQSxJQUFNQyxnQ0FBWSxDQUFDSixNQUFuQjs7a0JBRVFJLFMiLCJmaWxlIjoiaXMtYnJvd3Nlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgZnVuY3Rpb24gaXMgbmVlZGVkIGluIGluaXRpYWxpemF0aW9uIHN0YWdlcyxcbi8vIG1ha2Ugc3VyZSBpdCBjYW4gYmUgaW1wb3J0ZWQgaW4gaXNvbGF0aW9uXG4vKiBnbG9iYWwgcHJvY2VzcyAqL1xuXG5leHBvcnQgY29uc3QgaXNOb2RlID1cbiAgdHlwZW9mIHByb2Nlc3MgPT09ICdvYmplY3QnICYmXG4gIFN0cmluZyhwcm9jZXNzKSA9PT0gJ1tvYmplY3QgcHJvY2Vzc10nICYmXG4gICFwcm9jZXNzLmJyb3dzZXI7XG5cbmV4cG9ydCBjb25zdCBpc0Jyb3dzZXIgPSAhaXNOb2RlO1xuXG5leHBvcnQgZGVmYXVsdCBpc0Jyb3dzZXI7XG4iXX0=
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 192 */
/***/ function(module, exports) {

	module.exports = {
		"_args": [
			[
				{
					"raw": "luma.gl@^2.10.4",
					"scope": null,
					"escapedName": "luma.gl",
					"name": "luma.gl",
					"rawSpec": "^2.10.4",
					"spec": ">=2.10.4 <3.0.0",
					"type": "range"
				},
				"/var/www/data-science/dx/deck.gl"
			]
		],
		"_from": "luma.gl@>=2.10.4 <3.0.0",
		"_id": "luma.gl@2.10.4",
		"_inCache": true,
		"_location": "/luma.gl",
		"_nodeVersion": "6.9.1",
		"_npmOperationalInternal": {
			"host": "packages-12-west.internal.npmjs.com",
			"tmp": "tmp/luma.gl-2.10.4.tgz_1481945526442_0.3162013702094555"
		},
		"_npmUser": {
			"name": "ibgreen",
			"email": "ib.green.home@gmail.com"
		},
		"_npmVersion": "3.10.8",
		"_phantomChildren": {},
		"_requested": {
			"raw": "luma.gl@^2.10.4",
			"scope": null,
			"escapedName": "luma.gl",
			"name": "luma.gl",
			"rawSpec": "^2.10.4",
			"spec": ">=2.10.4 <3.0.0",
			"type": "range"
		},
		"_requiredBy": [
			"/"
		],
		"_resolved": "https://registry.npmjs.org/luma.gl/-/luma.gl-2.10.4.tgz",
		"_shasum": "c6952da21a972a65cb9142eea7ada8619bdb3a5d",
		"_shrinkwrap": null,
		"_spec": "luma.gl@^2.10.4",
		"_where": "/var/www/data-science/dx/deck.gl",
		"bugs": {
			"url": "https://github.com/uber/luma.gl/issues"
		},
		"contributors": [
			{
				"name": "Ib Green",
				"email": "ib@uber.com"
			},
			{
				"name": "Nicolas Belmonte",
				"email": "nico@uber.com"
			},
			{
				"name": "Rye Terrell"
			},
			{
				"name": "Shan He",
				"email": "shan@uber.com"
			},
			{
				"name": "Mikola Lysenko"
			},
			{
				"name": "Wesam Manassra",
				"email": "manassra@uber.com"
			}
		],
		"dependencies": {
			"autobind-decorator": "^1.3.3",
			"babel-polyfill": "^6.5.0",
			"canvas-to-blob": "0.0.0",
			"filesaver.js": "^0.2.0",
			"get-pixels": "^3.3.0",
			"gl-constants": "^1.0.0",
			"gl-matrix": "^2.3.2",
			"global": "^4.3.1",
			"ndarray": "^1.0.18",
			"save-pixels": "^2.3.2",
			"through": "^2.3.8",
			"webgl-debug": "^1.0.2"
		},
		"description": "A WebGL JavaScript visualization library.",
		"devDependencies": {
			"babel-cli": "^6.3.15",
			"babel-core": "^6.7.7",
			"babel-eslint": "^6.0.0",
			"babel-plugin-static-fs": "^1.1.0",
			"babel-plugin-transform-builtin-extend": "^1.1.0",
			"babel-plugin-transform-decorators-legacy": "^1.3.4",
			"babel-preset-es2015": "^6.3.13",
			"babel-preset-stage-2": "^6.3.13",
			"babelify": "^7.2.0",
			"bl": "^1.1.2",
			"blue-tape": "^0.2.0",
			"brfs-babel": "^1.0.0",
			"browserify": "^13.0.0",
			"budo": "^8.0.3",
			"cookie-cutter": "^0.1.1",
			"d3-format": "^1.0.0",
			"disc": "^1.3.2",
			"electron-prebuilt": "^0.37.2",
			"eslint": "^2.0",
			"eslint-config-uber-es2015": "^2.0.0",
			"faucet": "0.0.1",
			"gl": "^4.0.2",
			"husky": "^0.10.2",
			"mkdirp": "^0.5.1",
			"source-map-support": "^0.4.2",
			"tap-browser-color": "^0.1.2",
			"tape-catch": "^1.0.4",
			"tape-promise": "^1.1.0",
			"testron": "^1.2.0",
			"uglify-js": "^2.6.1"
		},
		"directories": {},
		"dist": {
			"shasum": "c6952da21a972a65cb9142eea7ada8619bdb3a5d",
			"tarball": "https://registry.npmjs.org/luma.gl/-/luma.gl-2.10.4.tgz"
		},
		"files": [
			"dist",
			"shaderlib",
			"src",
			"headless.js",
			"node-io.js",
			"experimental.js"
		],
		"gitHead": "c99684cde6e809e639cd332ac883f7d080f97b2f",
		"homepage": "https://github.com/uber/luma.gl#readme",
		"keywords": [
			"webgl",
			"w3c",
			"visualization",
			"canvas",
			"animation",
			"3d"
		],
		"license": "MIT",
		"main": "dist/index.js",
		"maintainers": [
			{
				"name": "gnavvy",
				"email": "gnavvy@gmail.com"
			},
			{
				"name": "heshan0131",
				"email": "heshan0131@gmail.com"
			},
			{
				"name": "ibgreen",
				"email": "ib.green.home@gmail.com"
			},
			{
				"name": "pessimistress",
				"email": "cxiaoji@gmail.com"
			}
		],
		"name": "luma.gl",
		"optionalDependencies": {},
		"readme": "ERROR: No README data found!",
		"repository": {
			"type": "git",
			"url": "git+https://github.com/uber/luma.gl.git"
		},
		"scripts": {
			"build": "npm run build-clean && npm run build-compile && npm run build-script",
			"build-clean": "rm -fr dist/*",
			"build-compile": "babel src -d dist --source-maps inline --copy-files",
			"build-script": "browserify src/bundle.js --debug -o dist/lumagl.js -t babelify -t brfs-babel && cat dist/lumagl.js | uglifyjs > dist/lumagl.min.js",
			"build-watch": "babel src -d dist --source-maps inline --copy-files --watch & babel examples -d dist --source-maps inline --copy-files --watch &",
			"docs": "npm run docs-build && open ./_docs/docs/index.html",
			"docs-build": "rm -fr _docs/* && jekyll build --config=docs/_config.yml --layouts docs/_layouts",
			"docs-gh-pages": "git subtree push --prefix _docs origin gh-pages",
			"docs-gh-pages-force": "git push origin `git subtree split --prefix _docs dev`:gh-pages --force",
			"docs-publish": "npm run docs-build && git add _docs -f && git commit -m 'UPDATE DOCS' --no-verify && npm run docs-gh-pages",
			"lint": "eslint src",
			"mypublish": "npm run build && npm run test && npm publish",
			"precommit": "npm test",
			"profile-disc": "browserify src/bundle.js --full-paths -t babelify -t brfs-babel | discify --open",
			"start": "npm run build-watch && budo dist/bundle.js:dist/lumagl.js --live --open --port 3000 --watch-glob '**/*.{html,css,js,glsl}' -- -t brfs-babel",
			"test": "npm run lint && npm run test-headless && npm run test-headless-nowebgl",
			"test-browser": "budo test/browser.js:build/test-bundle.js --dir test --live --open --port 3001 --watch-glob '**/*.{html,css,js,glsl}' -- -t babelify",
			"test-electron": "browserify test/electron.js | testron | faucet",
			"test-headless": "babel-node --include='' test/headless.js | faucet",
			"test-headless-nowebgl": "babel-node --include='' test/headless-nowebgl.js | faucet"
		},
		"version": "2.10.4"
	};

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.glArrayFromType = undefined;
	exports.glTypeFromArray = glTypeFromArray;
	exports.glTypeToArray = glTypeToArray;
	
	var _webglConstants = __webpack_require__(194);
	
	var _webglConstants2 = _interopRequireDefault(_webglConstants);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// TYPED ARRAYS
	
	function glTypeFromArray(arrayOrType) {
	  // If typed array, look up type name
	  var type = ArrayBuffer.isView(arrayOrType) ? arrayOrType.constructor : arrayOrType;
	
	  switch (type) {
	    case Float32Array:
	      return _webglConstants2.default.FLOAT;
	    case Uint16Array:
	      return _webglConstants2.default.UNSIGNED_SHORT;
	    case Uint32Array:
	      return _webglConstants2.default.UNSIGNED_INT;
	    case Uint8Array:
	      return _webglConstants2.default.UNSIGNED_BYTE;
	    case Uint8ClampedArray:
	      return _webglConstants2.default.UNSIGNED_BYTE;
	    case Int8Array:
	      return _webglConstants2.default.BYTE;
	    case Int16Array:
	      return _webglConstants2.default.SHORT;
	    case Int32Array:
	      return _webglConstants2.default.INT;
	    default:
	      throw new Error('Failed to deduce type from array/array type');
	  }
	}
	
	/* eslint-disable complexity */
	function glTypeToArray(glType) {
	  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref$clamped = _ref.clamped,
	      clamped = _ref$clamped === undefined ? true : _ref$clamped;
	
	  // Sorted in some order of likelihood to reduce amount of comparisons
	  switch (glType) {
	    case _webglConstants2.default.FLOAT:
	      return Float32Array;
	    case _webglConstants2.default.UNSIGNED_SHORT:
	    case _webglConstants2.default.UNSIGNED_SHORT_5_6_5:
	    case _webglConstants2.default.UNSIGNED_SHORT_4_4_4_4:
	    case _webglConstants2.default.UNSIGNED_SHORT_5_5_5_1:
	      return Uint16Array;
	    case _webglConstants2.default.UNSIGNED_INT:
	      return Uint32Array;
	    case _webglConstants2.default.UNSIGNED_BYTE:
	      return clamped ? Uint8ClampedArray : Uint8Array;
	    case _webglConstants2.default.BYTE:
	      return Int8Array;
	    case _webglConstants2.default.SHORT:
	      return Int16Array;
	    case _webglConstants2.default.INT:
	      return Int32Array;
	    default:
	      throw new Error('Failed to deduce type from array');
	  }
	}
	/* eslint-enable complexity */
	
	// Deprecated
	exports.glArrayFromType = glTypeToArray;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy93ZWJnbC93ZWJnbC1hcnJheXMuanMiXSwibmFtZXMiOlsiZ2xUeXBlRnJvbUFycmF5IiwiZ2xUeXBlVG9BcnJheSIsImFycmF5T3JUeXBlIiwidHlwZSIsIkFycmF5QnVmZmVyIiwiaXNWaWV3IiwiY29uc3RydWN0b3IiLCJGbG9hdDMyQXJyYXkiLCJGTE9BVCIsIlVpbnQxNkFycmF5IiwiVU5TSUdORURfU0hPUlQiLCJVaW50MzJBcnJheSIsIlVOU0lHTkVEX0lOVCIsIlVpbnQ4QXJyYXkiLCJVTlNJR05FRF9CWVRFIiwiVWludDhDbGFtcGVkQXJyYXkiLCJJbnQ4QXJyYXkiLCJCWVRFIiwiSW50MTZBcnJheSIsIlNIT1JUIiwiSW50MzJBcnJheSIsIklOVCIsIkVycm9yIiwiZ2xUeXBlIiwiY2xhbXBlZCIsIlVOU0lHTkVEX1NIT1JUXzVfNl81IiwiVU5TSUdORURfU0hPUlRfNF80XzRfNCIsIlVOU0lHTkVEX1NIT1JUXzVfNV81XzEiLCJnbEFycmF5RnJvbVR5cGUiXSwibWFwcGluZ3MiOiI7Ozs7OztRQUlnQkEsZSxHQUFBQSxlO1FBcUJBQyxhLEdBQUFBLGE7O0FBekJoQjs7Ozs7O0FBRUE7O0FBRU8sU0FBU0QsZUFBVCxDQUF5QkUsV0FBekIsRUFBc0M7QUFDM0M7QUFDQSxNQUFNQyxPQUFPQyxZQUFZQyxNQUFaLENBQW1CSCxXQUFuQixJQUNYQSxZQUFZSSxXQURELEdBRVhKLFdBRkY7O0FBSUEsVUFBUUMsSUFBUjtBQUNBLFNBQUtJLFlBQUw7QUFBbUIsYUFBTyx5QkFBR0MsS0FBVjtBQUNuQixTQUFLQyxXQUFMO0FBQWtCLGFBQU8seUJBQUdDLGNBQVY7QUFDbEIsU0FBS0MsV0FBTDtBQUFrQixhQUFPLHlCQUFHQyxZQUFWO0FBQ2xCLFNBQUtDLFVBQUw7QUFBaUIsYUFBTyx5QkFBR0MsYUFBVjtBQUNqQixTQUFLQyxpQkFBTDtBQUF3QixhQUFPLHlCQUFHRCxhQUFWO0FBQ3hCLFNBQUtFLFNBQUw7QUFBZ0IsYUFBTyx5QkFBR0MsSUFBVjtBQUNoQixTQUFLQyxVQUFMO0FBQWlCLGFBQU8seUJBQUdDLEtBQVY7QUFDakIsU0FBS0MsVUFBTDtBQUFpQixhQUFPLHlCQUFHQyxHQUFWO0FBQ2pCO0FBQ0UsWUFBTSxJQUFJQyxLQUFKLENBQVUsNkNBQVYsQ0FBTjtBQVZGO0FBWUQ7O0FBRUQ7QUFDTyxTQUFTckIsYUFBVCxDQUF1QnNCLE1BQXZCLEVBQXNEO0FBQUEsaUZBQUosRUFBSTtBQUFBLDBCQUF0QkMsT0FBc0I7QUFBQSxNQUF0QkEsT0FBc0IsZ0NBQVosSUFBWTs7QUFDM0Q7QUFDQSxVQUFRRCxNQUFSO0FBQ0EsU0FBSyx5QkFBR2YsS0FBUjtBQUNFLGFBQU9ELFlBQVA7QUFDRixTQUFLLHlCQUFHRyxjQUFSO0FBQ0EsU0FBSyx5QkFBR2Usb0JBQVI7QUFDQSxTQUFLLHlCQUFHQyxzQkFBUjtBQUNBLFNBQUsseUJBQUdDLHNCQUFSO0FBQ0UsYUFBT2xCLFdBQVA7QUFDRixTQUFLLHlCQUFHRyxZQUFSO0FBQ0UsYUFBT0QsV0FBUDtBQUNGLFNBQUsseUJBQUdHLGFBQVI7QUFDRSxhQUFPVSxVQUFVVCxpQkFBVixHQUE4QkYsVUFBckM7QUFDRixTQUFLLHlCQUFHSSxJQUFSO0FBQ0UsYUFBT0QsU0FBUDtBQUNGLFNBQUsseUJBQUdHLEtBQVI7QUFDRSxhQUFPRCxVQUFQO0FBQ0YsU0FBSyx5QkFBR0csR0FBUjtBQUNFLGFBQU9ELFVBQVA7QUFDRjtBQUNFLFlBQU0sSUFBSUUsS0FBSixDQUFVLGtDQUFWLENBQU47QUFuQkY7QUFxQkQ7QUFDRDs7QUFFQTtRQUN5Qk0sZSxHQUFqQjNCLGEiLCJmaWxlIjoid2ViZ2wtYXJyYXlzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdMIGZyb20gJy4vd2ViZ2wtY29uc3RhbnRzJztcblxuLy8gVFlQRUQgQVJSQVlTXG5cbmV4cG9ydCBmdW5jdGlvbiBnbFR5cGVGcm9tQXJyYXkoYXJyYXlPclR5cGUpIHtcbiAgLy8gSWYgdHlwZWQgYXJyYXksIGxvb2sgdXAgdHlwZSBuYW1lXG4gIGNvbnN0IHR5cGUgPSBBcnJheUJ1ZmZlci5pc1ZpZXcoYXJyYXlPclR5cGUpID9cbiAgICBhcnJheU9yVHlwZS5jb25zdHJ1Y3RvciA6XG4gICAgYXJyYXlPclR5cGU7XG5cbiAgc3dpdGNoICh0eXBlKSB7XG4gIGNhc2UgRmxvYXQzMkFycmF5OiByZXR1cm4gR0wuRkxPQVQ7XG4gIGNhc2UgVWludDE2QXJyYXk6IHJldHVybiBHTC5VTlNJR05FRF9TSE9SVDtcbiAgY2FzZSBVaW50MzJBcnJheTogcmV0dXJuIEdMLlVOU0lHTkVEX0lOVDtcbiAgY2FzZSBVaW50OEFycmF5OiByZXR1cm4gR0wuVU5TSUdORURfQllURTtcbiAgY2FzZSBVaW50OENsYW1wZWRBcnJheTogcmV0dXJuIEdMLlVOU0lHTkVEX0JZVEU7XG4gIGNhc2UgSW50OEFycmF5OiByZXR1cm4gR0wuQllURTtcbiAgY2FzZSBJbnQxNkFycmF5OiByZXR1cm4gR0wuU0hPUlQ7XG4gIGNhc2UgSW50MzJBcnJheTogcmV0dXJuIEdMLklOVDtcbiAgZGVmYXVsdDpcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBkZWR1Y2UgdHlwZSBmcm9tIGFycmF5L2FycmF5IHR5cGUnKTtcbiAgfVxufVxuXG4vKiBlc2xpbnQtZGlzYWJsZSBjb21wbGV4aXR5ICovXG5leHBvcnQgZnVuY3Rpb24gZ2xUeXBlVG9BcnJheShnbFR5cGUsIHtjbGFtcGVkID0gdHJ1ZX0gPSB7fSkge1xuICAvLyBTb3J0ZWQgaW4gc29tZSBvcmRlciBvZiBsaWtlbGlob29kIHRvIHJlZHVjZSBhbW91bnQgb2YgY29tcGFyaXNvbnNcbiAgc3dpdGNoIChnbFR5cGUpIHtcbiAgY2FzZSBHTC5GTE9BVDpcbiAgICByZXR1cm4gRmxvYXQzMkFycmF5O1xuICBjYXNlIEdMLlVOU0lHTkVEX1NIT1JUOlxuICBjYXNlIEdMLlVOU0lHTkVEX1NIT1JUXzVfNl81OlxuICBjYXNlIEdMLlVOU0lHTkVEX1NIT1JUXzRfNF80XzQ6XG4gIGNhc2UgR0wuVU5TSUdORURfU0hPUlRfNV81XzVfMTpcbiAgICByZXR1cm4gVWludDE2QXJyYXk7XG4gIGNhc2UgR0wuVU5TSUdORURfSU5UOlxuICAgIHJldHVybiBVaW50MzJBcnJheTtcbiAgY2FzZSBHTC5VTlNJR05FRF9CWVRFOlxuICAgIHJldHVybiBjbGFtcGVkID8gVWludDhDbGFtcGVkQXJyYXkgOiBVaW50OEFycmF5O1xuICBjYXNlIEdMLkJZVEU6XG4gICAgcmV0dXJuIEludDhBcnJheTtcbiAgY2FzZSBHTC5TSE9SVDpcbiAgICByZXR1cm4gSW50MTZBcnJheTtcbiAgY2FzZSBHTC5JTlQ6XG4gICAgcmV0dXJuIEludDMyQXJyYXk7XG4gIGRlZmF1bHQ6XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZGVkdWNlIHR5cGUgZnJvbSBhcnJheScpO1xuICB9XG59XG4vKiBlc2xpbnQtZW5hYmxlIGNvbXBsZXhpdHkgKi9cblxuLy8gRGVwcmVjYXRlZFxuZXhwb3J0IHtnbFR5cGVUb0FycmF5IGFzIGdsQXJyYXlGcm9tVHlwZX07XG4iXX0=

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.GL = undefined;
	exports.glGet = glGet;
	exports.glKey = glKey;
	
	var _glConstants = __webpack_require__(195);
	
	var _glConstants2 = _interopRequireDefault(_glConstants);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// WEBGL BUILT-IN TYPES
	exports.GL = _glConstants2.default;
	exports.default = _glConstants2.default;
	
	// Resolve a WebGL enumeration name (returns itself if already a number)
	
	function glGet(name) {
	  // assertWebGLContext(gl);
	  var value = name;
	  if (typeof name === 'string') {
	    value = _glConstants2.default[name];
	    (0, _assert2.default)(value !== undefined, 'Accessing GL.' + name);
	  }
	  return value;
	}
	
	function glKey(value) {
	  for (var key in _glConstants2.default) {
	    if (_glConstants2.default[key] === value) {
	      return 'GL.' + key;
	    }
	  }
	  return String(value);
	}
	
	// Extract constants from WebGL prototype
	// function getWebGLConstants() {
	//   const constants = {};
	//   const WebGLContext =
	//     glob.WebGL2RenderingContext || WebGLRenderingContext;
	//   for (const key in WebGLContext.prototype) {
	//     if (typeof WebGLContext[key] !== 'function') {
	//       constants[key] = WebGLContext[key];
	//     }
	//   }
	//   Object.freeze(constants);
	//   return constants;
	// }
	
	// const GL = getWebGLConstants();
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy93ZWJnbC93ZWJnbC1jb25zdGFudHMuanMiXSwibmFtZXMiOlsiZ2xHZXQiLCJnbEtleSIsIkdMIiwibmFtZSIsInZhbHVlIiwidW5kZWZpbmVkIiwia2V5IiwiU3RyaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7UUFRZ0JBLEssR0FBQUEsSztRQVVBQyxLLEdBQUFBLEs7O0FBakJoQjs7OztBQUNBOzs7Ozs7QUFGQTtRQUlRQyxFOzs7QUFHUjs7QUFDTyxTQUFTRixLQUFULENBQWVHLElBQWYsRUFBcUI7QUFDMUI7QUFDQSxNQUFJQyxRQUFRRCxJQUFaO0FBQ0EsTUFBSSxPQUFPQSxJQUFQLEtBQWdCLFFBQXBCLEVBQThCO0FBQzVCQyxZQUFRLHNCQUFHRCxJQUFILENBQVI7QUFDQSwwQkFBT0MsVUFBVUMsU0FBakIsb0JBQTRDRixJQUE1QztBQUNEO0FBQ0QsU0FBT0MsS0FBUDtBQUNEOztBQUVNLFNBQVNILEtBQVQsQ0FBZUcsS0FBZixFQUFzQjtBQUMzQixPQUFLLElBQU1FLEdBQVgsMkJBQXNCO0FBQ3BCLFFBQUksc0JBQUdBLEdBQUgsTUFBWUYsS0FBaEIsRUFBdUI7QUFDckIscUJBQWFFLEdBQWI7QUFDRDtBQUNGO0FBQ0QsU0FBT0MsT0FBT0gsS0FBUCxDQUFQO0FBQ0Q7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoid2ViZ2wtY29uc3RhbnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gV0VCR0wgQlVJTFQtSU4gVFlQRVNcbmltcG9ydCBHTCBmcm9tICdnbC1jb25zdGFudHMnO1xuaW1wb3J0IGFzc2VydCBmcm9tICdhc3NlcnQnO1xuXG5leHBvcnQge0dMfTtcbmV4cG9ydCBkZWZhdWx0IEdMO1xuXG4vLyBSZXNvbHZlIGEgV2ViR0wgZW51bWVyYXRpb24gbmFtZSAocmV0dXJucyBpdHNlbGYgaWYgYWxyZWFkeSBhIG51bWJlcilcbmV4cG9ydCBmdW5jdGlvbiBnbEdldChuYW1lKSB7XG4gIC8vIGFzc2VydFdlYkdMQ29udGV4dChnbCk7XG4gIGxldCB2YWx1ZSA9IG5hbWU7XG4gIGlmICh0eXBlb2YgbmFtZSA9PT0gJ3N0cmluZycpIHtcbiAgICB2YWx1ZSA9IEdMW25hbWVdO1xuICAgIGFzc2VydCh2YWx1ZSAhPT0gdW5kZWZpbmVkLCBgQWNjZXNzaW5nIEdMLiR7bmFtZX1gKTtcbiAgfVxuICByZXR1cm4gdmFsdWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnbEtleSh2YWx1ZSkge1xuICBmb3IgKGNvbnN0IGtleSBpbiBHTCkge1xuICAgIGlmIChHTFtrZXldID09PSB2YWx1ZSkge1xuICAgICAgcmV0dXJuIGBHTC4ke2tleX1gO1xuICAgIH1cbiAgfVxuICByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbn1cblxuLy8gRXh0cmFjdCBjb25zdGFudHMgZnJvbSBXZWJHTCBwcm90b3R5cGVcbi8vIGZ1bmN0aW9uIGdldFdlYkdMQ29uc3RhbnRzKCkge1xuLy8gICBjb25zdCBjb25zdGFudHMgPSB7fTtcbi8vICAgY29uc3QgV2ViR0xDb250ZXh0ID1cbi8vICAgICBnbG9iLldlYkdMMlJlbmRlcmluZ0NvbnRleHQgfHwgV2ViR0xSZW5kZXJpbmdDb250ZXh0O1xuLy8gICBmb3IgKGNvbnN0IGtleSBpbiBXZWJHTENvbnRleHQucHJvdG90eXBlKSB7XG4vLyAgICAgaWYgKHR5cGVvZiBXZWJHTENvbnRleHRba2V5XSAhPT0gJ2Z1bmN0aW9uJykge1xuLy8gICAgICAgY29uc3RhbnRzW2tleV0gPSBXZWJHTENvbnRleHRba2V5XTtcbi8vICAgICB9XG4vLyAgIH1cbi8vICAgT2JqZWN0LmZyZWV6ZShjb25zdGFudHMpO1xuLy8gICByZXR1cm4gY29uc3RhbnRzO1xuLy8gfVxuXG4vLyBjb25zdCBHTCA9IGdldFdlYkdMQ29uc3RhbnRzKCk7XG4iXX0=

/***/ },
/* 195 */
/***/ function(module, exports) {

	module.exports = {
	  ACTIVE_ATTRIBUTES: 35721,
	  ACTIVE_ATTRIBUTE_MAX_LENGTH: 35722,
	  ACTIVE_TEXTURE: 34016,
	  ACTIVE_UNIFORMS: 35718,
	  ACTIVE_UNIFORM_MAX_LENGTH: 35719,
	  ALIASED_LINE_WIDTH_RANGE: 33902,
	  ALIASED_POINT_SIZE_RANGE: 33901,
	  ALPHA: 6406,
	  ALPHA_BITS: 3413,
	  ALWAYS: 519,
	  ARRAY_BUFFER: 34962,
	  ARRAY_BUFFER_BINDING: 34964,
	  ATTACHED_SHADERS: 35717,
	  BACK: 1029,
	  BLEND: 3042,
	  BLEND_COLOR: 32773,
	  BLEND_DST_ALPHA: 32970,
	  BLEND_DST_RGB: 32968,
	  BLEND_EQUATION: 32777,
	  BLEND_EQUATION_ALPHA: 34877,
	  BLEND_EQUATION_RGB: 32777,
	  BLEND_SRC_ALPHA: 32971,
	  BLEND_SRC_RGB: 32969,
	  BLUE_BITS: 3412,
	  BOOL: 35670,
	  BOOL_VEC2: 35671,
	  BOOL_VEC3: 35672,
	  BOOL_VEC4: 35673,
	  BROWSER_DEFAULT_WEBGL: 37444,
	  BUFFER_SIZE: 34660,
	  BUFFER_USAGE: 34661,
	  BYTE: 5120,
	  CCW: 2305,
	  CLAMP_TO_EDGE: 33071,
	  COLOR_ATTACHMENT0: 36064,
	  COLOR_BUFFER_BIT: 16384,
	  COLOR_CLEAR_VALUE: 3106,
	  COLOR_WRITEMASK: 3107,
	  COMPILE_STATUS: 35713,
	  COMPRESSED_TEXTURE_FORMATS: 34467,
	  CONSTANT_ALPHA: 32771,
	  CONSTANT_COLOR: 32769,
	  CONTEXT_LOST_WEBGL: 37442,
	  CULL_FACE: 2884,
	  CULL_FACE_MODE: 2885,
	  CURRENT_PROGRAM: 35725,
	  CURRENT_VERTEX_ATTRIB: 34342,
	  CW: 2304,
	  DECR: 7683,
	  DECR_WRAP: 34056,
	  DELETE_STATUS: 35712,
	  DEPTH_ATTACHMENT: 36096,
	  DEPTH_BITS: 3414,
	  DEPTH_BUFFER_BIT: 256,
	  DEPTH_CLEAR_VALUE: 2931,
	  DEPTH_COMPONENT: 6402,
	  DEPTH_COMPONENT16: 33189,
	  DEPTH_FUNC: 2932,
	  DEPTH_RANGE: 2928,
	  DEPTH_STENCIL: 34041,
	  DEPTH_STENCIL_ATTACHMENT: 33306,
	  DEPTH_TEST: 2929,
	  DEPTH_WRITEMASK: 2930,
	  DITHER: 3024,
	  DONT_CARE: 4352,
	  DST_ALPHA: 772,
	  DST_COLOR: 774,
	  DYNAMIC_DRAW: 35048,
	  ELEMENT_ARRAY_BUFFER: 34963,
	  ELEMENT_ARRAY_BUFFER_BINDING: 34965,
	  EQUAL: 514,
	  FASTEST: 4353,
	  FLOAT: 5126,
	  FLOAT_MAT2: 35674,
	  FLOAT_MAT3: 35675,
	  FLOAT_MAT4: 35676,
	  FLOAT_VEC2: 35664,
	  FLOAT_VEC3: 35665,
	  FLOAT_VEC4: 35666,
	  FRAGMENT_SHADER: 35632,
	  FRAMEBUFFER: 36160,
	  FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 36049,
	  FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 36048,
	  FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 36051,
	  FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 36050,
	  FRAMEBUFFER_BINDING: 36006,
	  FRAMEBUFFER_COMPLETE: 36053,
	  FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 36054,
	  FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 36057,
	  FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 36055,
	  FRAMEBUFFER_UNSUPPORTED: 36061,
	  FRONT: 1028,
	  FRONT_AND_BACK: 1032,
	  FRONT_FACE: 2886,
	  FUNC_ADD: 32774,
	  FUNC_REVERSE_SUBTRACT: 32779,
	  FUNC_SUBTRACT: 32778,
	  GENERATE_MIPMAP_HINT: 33170,
	  GEQUAL: 518,
	  GREATER: 516,
	  GREEN_BITS: 3411,
	  HIGH_FLOAT: 36338,
	  HIGH_INT: 36341,
	  INCR: 7682,
	  INCR_WRAP: 34055,
	  INFO_LOG_LENGTH: 35716,
	  INT: 5124,
	  INT_VEC2: 35667,
	  INT_VEC3: 35668,
	  INT_VEC4: 35669,
	  INVALID_ENUM: 1280,
	  INVALID_FRAMEBUFFER_OPERATION: 1286,
	  INVALID_OPERATION: 1282,
	  INVALID_VALUE: 1281,
	  INVERT: 5386,
	  KEEP: 7680,
	  LEQUAL: 515,
	  LESS: 513,
	  LINEAR: 9729,
	  LINEAR_MIPMAP_LINEAR: 9987,
	  LINEAR_MIPMAP_NEAREST: 9985,
	  LINES: 1,
	  LINE_LOOP: 2,
	  LINE_STRIP: 3,
	  LINE_WIDTH: 2849,
	  LINK_STATUS: 35714,
	  LOW_FLOAT: 36336,
	  LOW_INT: 36339,
	  LUMINANCE: 6409,
	  LUMINANCE_ALPHA: 6410,
	  MAX_COMBINED_TEXTURE_IMAGE_UNITS: 35661,
	  MAX_CUBE_MAP_TEXTURE_SIZE: 34076,
	  MAX_FRAGMENT_UNIFORM_VECTORS: 36349,
	  MAX_RENDERBUFFER_SIZE: 34024,
	  MAX_TEXTURE_IMAGE_UNITS: 34930,
	  MAX_TEXTURE_SIZE: 3379,
	  MAX_VARYING_VECTORS: 36348,
	  MAX_VERTEX_ATTRIBS: 34921,
	  MAX_VERTEX_TEXTURE_IMAGE_UNITS: 35660,
	  MAX_VERTEX_UNIFORM_VECTORS: 36347,
	  MAX_VIEWPORT_DIMS: 3386,
	  MEDIUM_FLOAT: 36337,
	  MEDIUM_INT: 36340,
	  MIRRORED_REPEAT: 33648,
	  NEAREST: 9728,
	  NEAREST_MIPMAP_LINEAR: 9986,
	  NEAREST_MIPMAP_NEAREST: 9984,
	  NEVER: 512,
	  NICEST: 4354,
	  NONE: 0,
	  NOTEQUAL: 517,
	  NO_ERROR: 0,
	  NUM_COMPRESSED_TEXTURE_FORMATS: 34466,
	  ONE: 1,
	  ONE_MINUS_CONSTANT_ALPHA: 32772,
	  ONE_MINUS_CONSTANT_COLOR: 32770,
	  ONE_MINUS_DST_ALPHA: 773,
	  ONE_MINUS_DST_COLOR: 775,
	  ONE_MINUS_SRC_ALPHA: 771,
	  ONE_MINUS_SRC_COLOR: 769,
	  OUT_OF_MEMORY: 1285,
	  PACK_ALIGNMENT: 3333,
	  POINTS: 0,
	  POLYGON_OFFSET_FACTOR: 32824,
	  POLYGON_OFFSET_FILL: 32823,
	  POLYGON_OFFSET_UNITS: 10752,
	  RED_BITS: 3410,
	  RENDERBUFFER: 36161,
	  RENDERBUFFER_ALPHA_SIZE: 36179,
	  RENDERBUFFER_BINDING: 36007,
	  RENDERBUFFER_BLUE_SIZE: 36178,
	  RENDERBUFFER_DEPTH_SIZE: 36180,
	  RENDERBUFFER_GREEN_SIZE: 36177,
	  RENDERBUFFER_HEIGHT: 36163,
	  RENDERBUFFER_INTERNAL_FORMAT: 36164,
	  RENDERBUFFER_RED_SIZE: 36176,
	  RENDERBUFFER_STENCIL_SIZE: 36181,
	  RENDERBUFFER_WIDTH: 36162,
	  RENDERER: 7937,
	  REPEAT: 10497,
	  REPLACE: 7681,
	  RGB: 6407,
	  RGB5_A1: 32855,
	  RGB565: 36194,
	  RGBA: 6408,
	  RGBA4: 32854,
	  SAMPLER_2D: 35678,
	  SAMPLER_CUBE: 35680,
	  SAMPLES: 32937,
	  SAMPLE_ALPHA_TO_COVERAGE: 32926,
	  SAMPLE_BUFFERS: 32936,
	  SAMPLE_COVERAGE: 32928,
	  SAMPLE_COVERAGE_INVERT: 32939,
	  SAMPLE_COVERAGE_VALUE: 32938,
	  SCISSOR_BOX: 3088,
	  SCISSOR_TEST: 3089,
	  SHADER_COMPILER: 36346,
	  SHADER_SOURCE_LENGTH: 35720,
	  SHADER_TYPE: 35663,
	  SHADING_LANGUAGE_VERSION: 35724,
	  SHORT: 5122,
	  SRC_ALPHA: 770,
	  SRC_ALPHA_SATURATE: 776,
	  SRC_COLOR: 768,
	  STATIC_DRAW: 35044,
	  STENCIL_ATTACHMENT: 36128,
	  STENCIL_BACK_FAIL: 34817,
	  STENCIL_BACK_FUNC: 34816,
	  STENCIL_BACK_PASS_DEPTH_FAIL: 34818,
	  STENCIL_BACK_PASS_DEPTH_PASS: 34819,
	  STENCIL_BACK_REF: 36003,
	  STENCIL_BACK_VALUE_MASK: 36004,
	  STENCIL_BACK_WRITEMASK: 36005,
	  STENCIL_BITS: 3415,
	  STENCIL_BUFFER_BIT: 1024,
	  STENCIL_CLEAR_VALUE: 2961,
	  STENCIL_FAIL: 2964,
	  STENCIL_FUNC: 2962,
	  STENCIL_INDEX: 6401,
	  STENCIL_INDEX8: 36168,
	  STENCIL_PASS_DEPTH_FAIL: 2965,
	  STENCIL_PASS_DEPTH_PASS: 2966,
	  STENCIL_REF: 2967,
	  STENCIL_TEST: 2960,
	  STENCIL_VALUE_MASK: 2963,
	  STENCIL_WRITEMASK: 2968,
	  STREAM_DRAW: 35040,
	  SUBPIXEL_BITS: 3408,
	  TEXTURE: 5890,
	  TEXTURE0: 33984,
	  TEXTURE1: 33985,
	  TEXTURE2: 33986,
	  TEXTURE3: 33987,
	  TEXTURE4: 33988,
	  TEXTURE5: 33989,
	  TEXTURE6: 33990,
	  TEXTURE7: 33991,
	  TEXTURE8: 33992,
	  TEXTURE9: 33993,
	  TEXTURE10: 33994,
	  TEXTURE11: 33995,
	  TEXTURE12: 33996,
	  TEXTURE13: 33997,
	  TEXTURE14: 33998,
	  TEXTURE15: 33999,
	  TEXTURE16: 34000,
	  TEXTURE17: 34001,
	  TEXTURE18: 34002,
	  TEXTURE19: 34003,
	  TEXTURE20: 34004,
	  TEXTURE21: 34005,
	  TEXTURE22: 34006,
	  TEXTURE23: 34007,
	  TEXTURE24: 34008,
	  TEXTURE25: 34009,
	  TEXTURE26: 34010,
	  TEXTURE27: 34011,
	  TEXTURE28: 34012,
	  TEXTURE29: 34013,
	  TEXTURE30: 34014,
	  TEXTURE31: 34015,
	  TEXTURE_2D: 3553,
	  TEXTURE_BINDING_2D: 32873,
	  TEXTURE_BINDING_CUBE_MAP: 34068,
	  TEXTURE_CUBE_MAP: 34067,
	  TEXTURE_CUBE_MAP_NEGATIVE_X: 34070,
	  TEXTURE_CUBE_MAP_NEGATIVE_Y: 34072,
	  TEXTURE_CUBE_MAP_NEGATIVE_Z: 34074,
	  TEXTURE_CUBE_MAP_POSITIVE_X: 34069,
	  TEXTURE_CUBE_MAP_POSITIVE_Y: 34071,
	  TEXTURE_CUBE_MAP_POSITIVE_Z: 34073,
	  TEXTURE_MAG_FILTER: 10240,
	  TEXTURE_MIN_FILTER: 10241,
	  TEXTURE_WRAP_S: 10242,
	  TEXTURE_WRAP_T: 10243,
	  TRIANGLES: 4,
	  TRIANGLE_FAN: 6,
	  TRIANGLE_STRIP: 5,
	  UNPACK_ALIGNMENT: 3317,
	  UNPACK_COLORSPACE_CONVERSION_WEBGL: 37443,
	  UNPACK_FLIP_Y_WEBGL: 37440,
	  UNPACK_PREMULTIPLY_ALPHA_WEBGL: 37441,
	  UNSIGNED_BYTE: 5121,
	  UNSIGNED_INT: 5125,
	  UNSIGNED_SHORT: 5123,
	  UNSIGNED_SHORT_4_4_4_4: 32819,
	  UNSIGNED_SHORT_5_5_5_1: 32820,
	  UNSIGNED_SHORT_5_6_5: 33635,
	  VALIDATE_STATUS: 35715,
	  VENDOR: 7936,
	  VERSION: 7938,
	  VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 34975,
	  VERTEX_ATTRIB_ARRAY_ENABLED: 34338,
	  VERTEX_ATTRIB_ARRAY_NORMALIZED: 34922,
	  VERTEX_ATTRIB_ARRAY_POINTER: 34373,
	  VERTEX_ATTRIB_ARRAY_SIZE: 34339,
	  VERTEX_ATTRIB_ARRAY_STRIDE: 34340,
	  VERTEX_ATTRIB_ARRAY_TYPE: 34341,
	  VERTEX_SHADER: 35633,
	  VIEWPORT: 2978,
	  ZERO: 0
	}


/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';
	
	// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
	// original notice:
	
	/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	function compare(a, b) {
	  if (a === b) {
	    return 0;
	  }
	
	  var x = a.length;
	  var y = b.length;
	
	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i];
	      y = b[i];
	      break;
	    }
	  }
	
	  if (x < y) {
	    return -1;
	  }
	  if (y < x) {
	    return 1;
	  }
	  return 0;
	}
	function isBuffer(b) {
	  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {
	    return global.Buffer.isBuffer(b);
	  }
	  return !!(b != null && b._isBuffer);
	}
	
	// based on node assert, original notice:
	
	// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
	//
	// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
	//
	// Originally from narwhal.js (http://narwhaljs.org)
	// Copyright (c) 2009 Thomas Robinson <280north.com>
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the 'Software'), to
	// deal in the Software without restriction, including without limitation the
	// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
	// sell copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
	// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	var util = __webpack_require__(197);
	var hasOwn = Object.prototype.hasOwnProperty;
	var pSlice = Array.prototype.slice;
	var functionsHaveNames = (function () {
	  return function foo() {}.name === 'foo';
	}());
	function pToString (obj) {
	  return Object.prototype.toString.call(obj);
	}
	function isView(arrbuf) {
	  if (isBuffer(arrbuf)) {
	    return false;
	  }
	  if (typeof global.ArrayBuffer !== 'function') {
	    return false;
	  }
	  if (typeof ArrayBuffer.isView === 'function') {
	    return ArrayBuffer.isView(arrbuf);
	  }
	  if (!arrbuf) {
	    return false;
	  }
	  if (arrbuf instanceof DataView) {
	    return true;
	  }
	  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {
	    return true;
	  }
	  return false;
	}
	// 1. The assert module provides functions that throw
	// AssertionError's when particular conditions are not met. The
	// assert module must conform to the following interface.
	
	var assert = module.exports = ok;
	
	// 2. The AssertionError is defined in assert.
	// new assert.AssertionError({ message: message,
	//                             actual: actual,
	//                             expected: expected })
	
	var regex = /\s*function\s+([^\(\s]*)\s*/;
	// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
	function getName(func) {
	  if (!util.isFunction(func)) {
	    return;
	  }
	  if (functionsHaveNames) {
	    return func.name;
	  }
	  var str = func.toString();
	  var match = str.match(regex);
	  return match && match[1];
	}
	assert.AssertionError = function AssertionError(options) {
	  this.name = 'AssertionError';
	  this.actual = options.actual;
	  this.expected = options.expected;
	  this.operator = options.operator;
	  if (options.message) {
	    this.message = options.message;
	    this.generatedMessage = false;
	  } else {
	    this.message = getMessage(this);
	    this.generatedMessage = true;
	  }
	  var stackStartFunction = options.stackStartFunction || fail;
	  if (Error.captureStackTrace) {
	    Error.captureStackTrace(this, stackStartFunction);
	  } else {
	    // non v8 browsers so we can have a stacktrace
	    var err = new Error();
	    if (err.stack) {
	      var out = err.stack;
	
	      // try to strip useless frames
	      var fn_name = getName(stackStartFunction);
	      var idx = out.indexOf('\n' + fn_name);
	      if (idx >= 0) {
	        // once we have located the function frame
	        // we need to strip out everything before it (and its line)
	        var next_line = out.indexOf('\n', idx + 1);
	        out = out.substring(next_line + 1);
	      }
	
	      this.stack = out;
	    }
	  }
	};
	
	// assert.AssertionError instanceof Error
	util.inherits(assert.AssertionError, Error);
	
	function truncate(s, n) {
	  if (typeof s === 'string') {
	    return s.length < n ? s : s.slice(0, n);
	  } else {
	    return s;
	  }
	}
	function inspect(something) {
	  if (functionsHaveNames || !util.isFunction(something)) {
	    return util.inspect(something);
	  }
	  var rawname = getName(something);
	  var name = rawname ? ': ' + rawname : '';
	  return '[Function' +  name + ']';
	}
	function getMessage(self) {
	  return truncate(inspect(self.actual), 128) + ' ' +
	         self.operator + ' ' +
	         truncate(inspect(self.expected), 128);
	}
	
	// At present only the three keys mentioned above are used and
	// understood by the spec. Implementations or sub modules can pass
	// other keys to the AssertionError's constructor - they will be
	// ignored.
	
	// 3. All of the following functions must throw an AssertionError
	// when a corresponding condition is not met, with a message that
	// may be undefined if not provided.  All assertion methods provide
	// both the actual and expected values to the assertion error for
	// display purposes.
	
	function fail(actual, expected, message, operator, stackStartFunction) {
	  throw new assert.AssertionError({
	    message: message,
	    actual: actual,
	    expected: expected,
	    operator: operator,
	    stackStartFunction: stackStartFunction
	  });
	}
	
	// EXTENSION! allows for well behaved errors defined elsewhere.
	assert.fail = fail;
	
	// 4. Pure assertion tests whether a value is truthy, as determined
	// by !!guard.
	// assert.ok(guard, message_opt);
	// This statement is equivalent to assert.equal(true, !!guard,
	// message_opt);. To test strictly for the value true, use
	// assert.strictEqual(true, guard, message_opt);.
	
	function ok(value, message) {
	  if (!value) fail(value, true, message, '==', assert.ok);
	}
	assert.ok = ok;
	
	// 5. The equality assertion tests shallow, coercive equality with
	// ==.
	// assert.equal(actual, expected, message_opt);
	
	assert.equal = function equal(actual, expected, message) {
	  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
	};
	
	// 6. The non-equality assertion tests for whether two objects are not equal
	// with != assert.notEqual(actual, expected, message_opt);
	
	assert.notEqual = function notEqual(actual, expected, message) {
	  if (actual == expected) {
	    fail(actual, expected, message, '!=', assert.notEqual);
	  }
	};
	
	// 7. The equivalence assertion tests a deep equality relation.
	// assert.deepEqual(actual, expected, message_opt);
	
	assert.deepEqual = function deepEqual(actual, expected, message) {
	  if (!_deepEqual(actual, expected, false)) {
	    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
	  }
	};
	
	assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
	  if (!_deepEqual(actual, expected, true)) {
	    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);
	  }
	};
	
	function _deepEqual(actual, expected, strict, memos) {
	  // 7.1. All identical values are equivalent, as determined by ===.
	  if (actual === expected) {
	    return true;
	  } else if (isBuffer(actual) && isBuffer(expected)) {
	    return compare(actual, expected) === 0;
	
	  // 7.2. If the expected value is a Date object, the actual value is
	  // equivalent if it is also a Date object that refers to the same time.
	  } else if (util.isDate(actual) && util.isDate(expected)) {
	    return actual.getTime() === expected.getTime();
	
	  // 7.3 If the expected value is a RegExp object, the actual value is
	  // equivalent if it is also a RegExp object with the same source and
	  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
	  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
	    return actual.source === expected.source &&
	           actual.global === expected.global &&
	           actual.multiline === expected.multiline &&
	           actual.lastIndex === expected.lastIndex &&
	           actual.ignoreCase === expected.ignoreCase;
	
	  // 7.4. Other pairs that do not both pass typeof value == 'object',
	  // equivalence is determined by ==.
	  } else if ((actual === null || typeof actual !== 'object') &&
	             (expected === null || typeof expected !== 'object')) {
	    return strict ? actual === expected : actual == expected;
	
	  // If both values are instances of typed arrays, wrap their underlying
	  // ArrayBuffers in a Buffer each to increase performance
	  // This optimization requires the arrays to have the same type as checked by
	  // Object.prototype.toString (aka pToString). Never perform binary
	  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
	  // bit patterns are not identical.
	  } else if (isView(actual) && isView(expected) &&
	             pToString(actual) === pToString(expected) &&
	             !(actual instanceof Float32Array ||
	               actual instanceof Float64Array)) {
	    return compare(new Uint8Array(actual.buffer),
	                   new Uint8Array(expected.buffer)) === 0;
	
	  // 7.5 For all other Object pairs, including Array objects, equivalence is
	  // determined by having the same number of owned properties (as verified
	  // with Object.prototype.hasOwnProperty.call), the same set of keys
	  // (although not necessarily the same order), equivalent values for every
	  // corresponding key, and an identical 'prototype' property. Note: this
	  // accounts for both named and indexed properties on Arrays.
	  } else if (isBuffer(actual) !== isBuffer(expected)) {
	    return false;
	  } else {
	    memos = memos || {actual: [], expected: []};
	
	    var actualIndex = memos.actual.indexOf(actual);
	    if (actualIndex !== -1) {
	      if (actualIndex === memos.expected.indexOf(expected)) {
	        return true;
	      }
	    }
	
	    memos.actual.push(actual);
	    memos.expected.push(expected);
	
	    return objEquiv(actual, expected, strict, memos);
	  }
	}
	
	function isArguments(object) {
	  return Object.prototype.toString.call(object) == '[object Arguments]';
	}
	
	function objEquiv(a, b, strict, actualVisitedObjects) {
	  if (a === null || a === undefined || b === null || b === undefined)
	    return false;
	  // if one is a primitive, the other must be same
	  if (util.isPrimitive(a) || util.isPrimitive(b))
	    return a === b;
	  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))
	    return false;
	  var aIsArgs = isArguments(a);
	  var bIsArgs = isArguments(b);
	  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))
	    return false;
	  if (aIsArgs) {
	    a = pSlice.call(a);
	    b = pSlice.call(b);
	    return _deepEqual(a, b, strict);
	  }
	  var ka = objectKeys(a);
	  var kb = objectKeys(b);
	  var key, i;
	  // having the same number of owned properties (keys incorporates
	  // hasOwnProperty)
	  if (ka.length !== kb.length)
	    return false;
	  //the same set of keys (although not necessarily the same order),
	  ka.sort();
	  kb.sort();
	  //~~~cheap key test
	  for (i = ka.length - 1; i >= 0; i--) {
	    if (ka[i] !== kb[i])
	      return false;
	  }
	  //equivalent values for every corresponding key, and
	  //~~~possibly expensive deep test
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))
	      return false;
	  }
	  return true;
	}
	
	// 8. The non-equivalence assertion tests for any deep inequality.
	// assert.notDeepEqual(actual, expected, message_opt);
	
	assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
	  if (_deepEqual(actual, expected, false)) {
	    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
	  }
	};
	
	assert.notDeepStrictEqual = notDeepStrictEqual;
	function notDeepStrictEqual(actual, expected, message) {
	  if (_deepEqual(actual, expected, true)) {
	    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);
	  }
	}
	
	
	// 9. The strict equality assertion tests strict equality, as determined by ===.
	// assert.strictEqual(actual, expected, message_opt);
	
	assert.strictEqual = function strictEqual(actual, expected, message) {
	  if (actual !== expected) {
	    fail(actual, expected, message, '===', assert.strictEqual);
	  }
	};
	
	// 10. The strict non-equality assertion tests for strict inequality, as
	// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);
	
	assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
	  if (actual === expected) {
	    fail(actual, expected, message, '!==', assert.notStrictEqual);
	  }
	};
	
	function expectedException(actual, expected) {
	  if (!actual || !expected) {
	    return false;
	  }
	
	  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
	    return expected.test(actual);
	  }
	
	  try {
	    if (actual instanceof expected) {
	      return true;
	    }
	  } catch (e) {
	    // Ignore.  The instanceof check doesn't work for arrow functions.
	  }
	
	  if (Error.isPrototypeOf(expected)) {
	    return false;
	  }
	
	  return expected.call({}, actual) === true;
	}
	
	function _tryBlock(block) {
	  var error;
	  try {
	    block();
	  } catch (e) {
	    error = e;
	  }
	  return error;
	}
	
	function _throws(shouldThrow, block, expected, message) {
	  var actual;
	
	  if (typeof block !== 'function') {
	    throw new TypeError('"block" argument must be a function');
	  }
	
	  if (typeof expected === 'string') {
	    message = expected;
	    expected = null;
	  }
	
	  actual = _tryBlock(block);
	
	  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +
	            (message ? ' ' + message : '.');
	
	  if (shouldThrow && !actual) {
	    fail(actual, expected, 'Missing expected exception' + message);
	  }
	
	  var userProvidedMessage = typeof message === 'string';
	  var isUnwantedException = !shouldThrow && util.isError(actual);
	  var isUnexpectedException = !shouldThrow && actual && !expected;
	
	  if ((isUnwantedException &&
	      userProvidedMessage &&
	      expectedException(actual, expected)) ||
	      isUnexpectedException) {
	    fail(actual, expected, 'Got unwanted exception' + message);
	  }
	
	  if ((shouldThrow && actual && expected &&
	      !expectedException(actual, expected)) || (!shouldThrow && actual)) {
	    throw actual;
	  }
	}
	
	// 11. Expected to throw an error:
	// assert.throws(block, Error_opt, message_opt);
	
	assert.throws = function(block, /*optional*/error, /*optional*/message) {
	  _throws(true, block, error, message);
	};
	
	// EXTENSION! This is annoying to write outside this module.
	assert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {
	  _throws(false, block, error, message);
	};
	
	assert.ifError = function(err) { if (err) throw err; };
	
	var objectKeys = Object.keys || function (obj) {
	  var keys = [];
	  for (var key in obj) {
	    if (hasOwn.call(obj, key)) keys.push(key);
	  }
	  return keys;
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	var formatRegExp = /%[sdj%]/g;
	exports.format = function(f) {
	  if (!isString(f)) {
	    var objects = [];
	    for (var i = 0; i < arguments.length; i++) {
	      objects.push(inspect(arguments[i]));
	    }
	    return objects.join(' ');
	  }
	
	  var i = 1;
	  var args = arguments;
	  var len = args.length;
	  var str = String(f).replace(formatRegExp, function(x) {
	    if (x === '%%') return '%';
	    if (i >= len) return x;
	    switch (x) {
	      case '%s': return String(args[i++]);
	      case '%d': return Number(args[i++]);
	      case '%j':
	        try {
	          return JSON.stringify(args[i++]);
	        } catch (_) {
	          return '[Circular]';
	        }
	      default:
	        return x;
	    }
	  });
	  for (var x = args[i]; i < len; x = args[++i]) {
	    if (isNull(x) || !isObject(x)) {
	      str += ' ' + x;
	    } else {
	      str += ' ' + inspect(x);
	    }
	  }
	  return str;
	};
	
	
	// Mark that a method should not be used.
	// Returns a modified function which warns once by default.
	// If --no-deprecation is set, then it is a no-op.
	exports.deprecate = function(fn, msg) {
	  // Allow for deprecating things in the process of starting up.
	  if (isUndefined(global.process)) {
	    return function() {
	      return exports.deprecate(fn, msg).apply(this, arguments);
	    };
	  }
	
	  if (process.noDeprecation === true) {
	    return fn;
	  }
	
	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (process.throwDeprecation) {
	        throw new Error(msg);
	      } else if (process.traceDeprecation) {
	        console.trace(msg);
	      } else {
	        console.error(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }
	
	  return deprecated;
	};
	
	
	var debugs = {};
	var debugEnviron;
	exports.debuglog = function(set) {
	  if (isUndefined(debugEnviron))
	    debugEnviron = process.env.NODE_DEBUG || '';
	  set = set.toUpperCase();
	  if (!debugs[set]) {
	    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
	      var pid = process.pid;
	      debugs[set] = function() {
	        var msg = exports.format.apply(exports, arguments);
	        console.error('%s %d: %s', set, pid, msg);
	      };
	    } else {
	      debugs[set] = function() {};
	    }
	  }
	  return debugs[set];
	};
	
	
	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */
	/* legacy: obj, showHidden, depth, colors*/
	function inspect(obj, opts) {
	  // default options
	  var ctx = {
	    seen: [],
	    stylize: stylizeNoColor
	  };
	  // legacy...
	  if (arguments.length >= 3) ctx.depth = arguments[2];
	  if (arguments.length >= 4) ctx.colors = arguments[3];
	  if (isBoolean(opts)) {
	    // legacy...
	    ctx.showHidden = opts;
	  } else if (opts) {
	    // got an "options" object
	    exports._extend(ctx, opts);
	  }
	  // set default options
	  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
	  if (isUndefined(ctx.depth)) ctx.depth = 2;
	  if (isUndefined(ctx.colors)) ctx.colors = false;
	  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
	  if (ctx.colors) ctx.stylize = stylizeWithColor;
	  return formatValue(ctx, obj, ctx.depth);
	}
	exports.inspect = inspect;
	
	
	// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
	inspect.colors = {
	  'bold' : [1, 22],
	  'italic' : [3, 23],
	  'underline' : [4, 24],
	  'inverse' : [7, 27],
	  'white' : [37, 39],
	  'grey' : [90, 39],
	  'black' : [30, 39],
	  'blue' : [34, 39],
	  'cyan' : [36, 39],
	  'green' : [32, 39],
	  'magenta' : [35, 39],
	  'red' : [31, 39],
	  'yellow' : [33, 39]
	};
	
	// Don't use 'blue' not visible on cmd.exe
	inspect.styles = {
	  'special': 'cyan',
	  'number': 'yellow',
	  'boolean': 'yellow',
	  'undefined': 'grey',
	  'null': 'bold',
	  'string': 'green',
	  'date': 'magenta',
	  // "name": intentionally not styling
	  'regexp': 'red'
	};
	
	
	function stylizeWithColor(str, styleType) {
	  var style = inspect.styles[styleType];
	
	  if (style) {
	    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
	           '\u001b[' + inspect.colors[style][1] + 'm';
	  } else {
	    return str;
	  }
	}
	
	
	function stylizeNoColor(str, styleType) {
	  return str;
	}
	
	
	function arrayToHash(array) {
	  var hash = {};
	
	  array.forEach(function(val, idx) {
	    hash[val] = true;
	  });
	
	  return hash;
	}
	
	
	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (ctx.customInspect &&
	      value &&
	      isFunction(value.inspect) &&
	      // Filter out the util module, it's inspect function is special
	      value.inspect !== exports.inspect &&
	      // Also filter out any prototype objects using the circular check.
	      !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes, ctx);
	    if (!isString(ret)) {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }
	    return ret;
	  }
	
	  // Primitive types cannot have properties
	  var primitive = formatPrimitive(ctx, value);
	  if (primitive) {
	    return primitive;
	  }
	
	  // Look up the keys of the object.
	  var keys = Object.keys(value);
	  var visibleKeys = arrayToHash(keys);
	
	  if (ctx.showHidden) {
	    keys = Object.getOwnPropertyNames(value);
	  }
	
	  // IE doesn't make error fields non-enumerable
	  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
	  if (isError(value)
	      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
	    return formatError(value);
	  }
	
	  // Some type of object without properties can be shortcutted.
	  if (keys.length === 0) {
	    if (isFunction(value)) {
	      var name = value.name ? ': ' + value.name : '';
	      return ctx.stylize('[Function' + name + ']', 'special');
	    }
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }
	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toString.call(value), 'date');
	    }
	    if (isError(value)) {
	      return formatError(value);
	    }
	  }
	
	  var base = '', array = false, braces = ['{', '}'];
	
	  // Make Array say that they are Array
	  if (isArray(value)) {
	    array = true;
	    braces = ['[', ']'];
	  }
	
	  // Make functions say that they are functions
	  if (isFunction(value)) {
	    var n = value.name ? ': ' + value.name : '';
	    base = ' [Function' + n + ']';
	  }
	
	  // Make RegExps say that they are RegExps
	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  }
	
	  // Make dates with properties first say the date
	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  }
	
	  // Make error with message first say the error
	  if (isError(value)) {
	    base = ' ' + formatError(value);
	  }
	
	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }
	
	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }
	
	  ctx.seen.push(value);
	
	  var output;
	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function(key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }
	
	  ctx.seen.pop();
	
	  return reduceToSingleString(output, base, braces);
	}
	
	
	function formatPrimitive(ctx, value) {
	  if (isUndefined(value))
	    return ctx.stylize('undefined', 'undefined');
	  if (isString(value)) {
	    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
	                                             .replace(/'/g, "\\'")
	                                             .replace(/\\"/g, '"') + '\'';
	    return ctx.stylize(simple, 'string');
	  }
	  if (isNumber(value))
	    return ctx.stylize('' + value, 'number');
	  if (isBoolean(value))
	    return ctx.stylize('' + value, 'boolean');
	  // For some reason typeof null is "object", so special case here.
	  if (isNull(value))
	    return ctx.stylize('null', 'null');
	}
	
	
	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}
	
	
	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];
	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (hasOwnProperty(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          String(i), true));
	    } else {
	      output.push('');
	    }
	  }
	  keys.forEach(function(key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          key, true));
	    }
	  });
	  return output;
	}
	
	
	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str, desc;
	  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
	  if (desc.get) {
	    if (desc.set) {
	      str = ctx.stylize('[Getter/Setter]', 'special');
	    } else {
	      str = ctx.stylize('[Getter]', 'special');
	    }
	  } else {
	    if (desc.set) {
	      str = ctx.stylize('[Setter]', 'special');
	    }
	  }
	  if (!hasOwnProperty(visibleKeys, key)) {
	    name = '[' + key + ']';
	  }
	  if (!str) {
	    if (ctx.seen.indexOf(desc.value) < 0) {
	      if (isNull(recurseTimes)) {
	        str = formatValue(ctx, desc.value, null);
	      } else {
	        str = formatValue(ctx, desc.value, recurseTimes - 1);
	      }
	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function(line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function(line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }
	  if (isUndefined(name)) {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }
	    name = JSON.stringify('' + key);
	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, "\\'")
	                 .replace(/\\"/g, '"')
	                 .replace(/(^"|"$)/g, "'");
	      name = ctx.stylize(name, 'string');
	    }
	  }
	
	  return name + ': ' + str;
	}
	
	
	function reduceToSingleString(output, base, braces) {
	  var numLinesEst = 0;
	  var length = output.reduce(function(prev, cur) {
	    numLinesEst++;
	    if (cur.indexOf('\n') >= 0) numLinesEst++;
	    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
	  }, 0);
	
	  if (length > 60) {
	    return braces[0] +
	           (base === '' ? '' : base + '\n ') +
	           ' ' +
	           output.join(',\n  ') +
	           ' ' +
	           braces[1];
	  }
	
	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	}
	
	
	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar) {
	  return Array.isArray(ar);
	}
	exports.isArray = isArray;
	
	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;
	
	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;
	
	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;
	
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;
	
	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;
	
	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;
	
	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;
	
	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;
	
	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;
	
	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;
	
	function isError(e) {
	  return isObject(e) &&
	      (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;
	
	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;
	
	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;
	
	exports.isBuffer = __webpack_require__(198);
	
	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}
	
	
	function pad(n) {
	  return n < 10 ? '0' + n.toString(10) : n.toString(10);
	}
	
	
	var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
	              'Oct', 'Nov', 'Dec'];
	
	// 26 Feb 16:19:34
	function timestamp() {
	  var d = new Date();
	  var time = [pad(d.getHours()),
	              pad(d.getMinutes()),
	              pad(d.getSeconds())].join(':');
	  return [d.getDate(), months[d.getMonth()], time].join(' ');
	}
	
	
	// log is just a thin wrapper to console.log that prepends a timestamp
	exports.log = function() {
	  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
	};
	
	
	/**
	 * Inherit the prototype methods from one constructor into another.
	 *
	 * The Function.prototype.inherits from lang.js rewritten as a standalone
	 * function (not on Function.prototype). NOTE: If this file is to be loaded
	 * during bootstrapping this function needs to be rewritten using some native
	 * functions as prototype setup using normal JavaScript does not work as
	 * expected during bootstrapping (see mirror.js in r114903).
	 *
	 * @param {function} ctor Constructor function which needs to inherit the
	 *     prototype.
	 * @param {function} superCtor Constructor function to inherit prototype from.
	 */
	exports.inherits = __webpack_require__(199);
	
	exports._extend = function(origin, add) {
	  // Don't do anything if add isn't an object
	  if (!add || !isObject(add)) return origin;
	
	  var keys = Object.keys(add);
	  var i = keys.length;
	  while (i--) {
	    origin[keys[i]] = add[keys[i]];
	  }
	  return origin;
	};
	
	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(6)))

/***/ },
/* 198 */
/***/ function(module, exports) {

	module.exports = function isBuffer(arg) {
	  return arg && typeof arg === 'object'
	    && typeof arg.copy === 'function'
	    && typeof arg.fill === 'function'
	    && typeof arg.readUInt8 === 'function';
	}

/***/ },
/* 199 */
/***/ function(module, exports) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.BufferLayout = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _webgl = __webpack_require__(188);
	
	var _webglChecks = __webpack_require__(201);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var BufferLayout =
	/**
	 * @classdesc
	 * Store characteristics of a data layout
	 * This data can be used when updating vertex attributes with
	 * the associated buffer, freeing the application from keeping
	 * track of this metadata.
	 *
	 * @class
	 * @param {GLuint} size - number of values per element (1-4)
	 * @param {GLuint} type - type of values (e.g. gl.FLOAT)
	 * @param {GLbool} normalized=false - normalize integers to [-1,1] or [0,1]
	 * @param {GLuint} integer=false - WebGL2 only, int-to-float conversion
	 * @param {GLuint} stride=0 - supports strided arrays
	 * @param {GLuint} offset=0 - supports strided arrays
	 */
	exports.BufferLayout = function BufferLayout() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      type = _ref.type,
	      _ref$size = _ref.size,
	      size = _ref$size === undefined ? 1 : _ref$size,
	      _ref$offset = _ref.offset,
	      offset = _ref$offset === undefined ? 0 : _ref$offset,
	      _ref$stride = _ref.stride,
	      stride = _ref$stride === undefined ? 0 : _ref$stride,
	      _ref$normalized = _ref.normalized,
	      normalized = _ref$normalized === undefined ? false : _ref$normalized,
	      _ref$integer = _ref.integer,
	      integer = _ref$integer === undefined ? false : _ref$integer,
	      _ref$instanced = _ref.instanced,
	      instanced = _ref$instanced === undefined ? 0 : _ref$instanced;
	
	  _classCallCheck(this, BufferLayout);
	
	  this.type = type;
	  this.size = size;
	  this.offset = offset;
	  this.stride = stride;
	  this.normalized = normalized;
	  this.integer = integer;
	  this.instanced = instanced;
	};
	
	// Encapsulates a WebGLBuffer object
	
	var Buffer = function () {
	  _createClass(Buffer, null, [{
	    key: 'makeFrom',
	
	
	    /**
	     * Returns a Buffer wrapped WebGLBuffer from a variety of inputs.
	     * Allows other functions to transparently accept raw WebGLBuffers etc
	     * and manipulate them using the methods in the `Buffer` class.
	     * Checks for ".handle" (allows use of stack.gl's gl-buffer)
	     *
	     * @param {WebGLRenderingContext} gl - if a new buffer needs to be initialized
	     * @param {*} object - candidate that will be coerced to a buffer
	     * @returns {Buffer} - Buffer object that wraps the buffer parameter
	     */
	    value: function makeFrom(gl) {
	      var object = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      return object instanceof Buffer ? object :
	      // Use .handle (e.g from stack.gl's gl-buffer), else use buffer directly
	      new Buffer(gl).setData({ handle: object.handle || object });
	    }
	
	    /*
	     * @classdesc
	     * Can be used to store vertex data, pixel data retrieved from images
	     * or the framebuffer, and a variety of other things.
	     *
	     * Mainly used for uploading VertexAttributes to GPU
	     * Setting data on a buffers (arrays) uploads it to the GPU.
	     *
	     * Holds an attribute name as a convenience...
	     * setData - Initializes size of buffer and sets
	     *
	     * @param {WebGLRenderingContext} gl - gl context
	     * @param {string} opt.id - id for debugging
	     */
	
	  }]);
	
	  function Buffer() {
	    var gl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	        id = _ref2.id,
	        handle = _ref2.handle;
	
	    _classCallCheck(this, Buffer);
	
	    (0, _webglChecks.assertWebGLContext)(gl);
	
	    handle = handle || gl.createBuffer();
	    if (!(handle instanceof _webgl.WebGLBuffer)) {
	      throw new Error('Failed to create WebGLBuffer');
	    }
	
	    this.gl = gl;
	    this.handle = handle;
	    this.id = id;
	    this.bytes = undefined;
	    this.data = null;
	    this.target = _webgl.GL.ARRAY_BUFFER;
	    this.layout = null;
	
	    this.userData = {};
	    Object.seal(this);
	  }
	
	  _createClass(Buffer, [{
	    key: 'delete',
	    value: function _delete() {
	      var gl = this.gl;
	
	      if (this.handle) {
	        gl.deleteBuffer(this.handle);
	        this.handle = null;
	      }
	      return this;
	    }
	
	    /**
	     * Creates and initializes the buffer object's data store.
	     *
	     * @param {ArrayBufferView} opt.data - contents
	     * @param {GLsizeiptr} opt.bytes - the size of the buffer object's data store.
	     * @param {GLenum} opt.usage=gl.STATIC_DRAW - Allocation hint for GPU driver
	     *
	     * Characteristics of stored data, hints for vertex attribute
	     *
	     * @param {GLenum} opt.dataType=gl.FLOAT - type of data stored in buffer
	     * @param {GLuint} opt.size=1 - number of values per vertex
	     * @returns {Buffer} Returns itself for chaining.
	     */
	
	  }, {
	    key: 'setData',
	    value: function setData() {
	      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          data = _ref3.data,
	          bytes = _ref3.bytes,
	          _ref3$target = _ref3.target,
	          target = _ref3$target === undefined ? _webgl.GL.ARRAY_BUFFER : _ref3$target,
	          _ref3$usage = _ref3.usage,
	          usage = _ref3$usage === undefined ? _webgl.GL.STATIC_DRAW : _ref3$usage,
	          layout = _ref3.layout,
	          type = _ref3.type,
	          _ref3$size = _ref3.size,
	          size = _ref3$size === undefined ? 1 : _ref3$size,
	          _ref3$offset = _ref3.offset,
	          offset = _ref3$offset === undefined ? 0 : _ref3$offset,
	          _ref3$stride = _ref3.stride,
	          stride = _ref3$stride === undefined ? 0 : _ref3$stride,
	          _ref3$normalized = _ref3.normalized,
	          normalized = _ref3$normalized === undefined ? false : _ref3$normalized,
	          _ref3$integer = _ref3.integer,
	          integer = _ref3$integer === undefined ? false : _ref3$integer,
	          _ref3$instanced = _ref3.instanced,
	          instanced = _ref3$instanced === undefined ? 0 : _ref3$instanced;
	
	      var gl = this.gl;
	
	      (0, _assert2.default)(data || bytes >= 0, 'Buffer.setData needs data or bytes');
	      type = type || (0, _webgl.glTypeFromArray)(data);
	
	      if (data) {
	        (0, _webglChecks.assertArrayTypeMatch)(data, type, 'in Buffer.setData');
	      }
	
	      this.bytes = bytes;
	      this.data = data;
	      this.target = target;
	      this.layout = layout || new BufferLayout({
	        type: type,
	        size: size,
	        offset: offset,
	        stride: stride,
	        normalized: normalized,
	        integer: integer,
	        instanced: instanced
	      });
	
	      // Note: When we are just creating and/or filling the buffer with data,
	      // the target we use doesn't technically matter, so use ARRAY_BUFFER
	      // https://www.opengl.org/wiki/Buffer_Object
	      this.bind({ target: target });
	      gl.bufferData(target, data || bytes, usage);
	      this.unbind({ target: target });
	
	      return this;
	    }
	
	    /**
	     * Updates a subset of a buffer object's data store.
	     * @param {ArrayBufferView} opt.data - contents
	     * @returns {Buffer} Returns itself for chaining.
	     */
	
	  }, {
	    key: 'subData',
	    value: function subData() {
	      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          data = _ref4.data,
	          _ref4$offset = _ref4.offset,
	          offset = _ref4$offset === undefined ? 0 : _ref4$offset;
	
	      var gl = this.gl;
	
	      (0, _assert2.default)(data, 'Buffer.updateData needs data');
	
	      // Note: When we are just creating and/or filling the buffer with data,
	      // the target we use doesn't technically matter, so use ARRAY_BUFFER
	      // https://www.opengl.org/wiki/Buffer_Object
	      this.bind({ target: _webgl.GL.ARRAY_BUFFER });
	      gl.bufferSubData(_webgl.GL.ARRAY_BUFFER, offset, data);
	      this.unbind({ target: _webgl.GL.ARRAY_BUFFER });
	
	      return this;
	    }
	
	    /**
	     * Binds a buffer to a given binding point (target).
	     *
	     * @param {Glenum} target - target for the bind operation.
	     *  Possible values: gl.TRANSFORM_FEEDBACK_BUFFER and gl.UNIFORM_BUFFER
	     * @param {GLuint} index - the index of the target.
	     * @returns {Buffer} - Returns itself for chaining.
	     */
	
	  }, {
	    key: 'bind',
	    value: function bind() {
	      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref5$target = _ref5.target,
	          target = _ref5$target === undefined ? this.target : _ref5$target;
	
	      this.gl.bindBuffer(target, this.handle);
	      return this;
	    }
	  }, {
	    key: 'unbind',
	    value: function unbind() {
	      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref6$target = _ref6.target,
	          target = _ref6$target === undefined ? this.target : _ref6$target;
	
	      // this.gl.bindBuffer(target, null);
	      return this;
	    }
	
	    /**
	     * Note: WEBGL2
	     * Binds a buffer to a given binding point (target) at a given index.
	     *
	     * @param {Glenum} target - target for the bind operation.
	     *  Possible values: gl.TRANSFORM_FEEDBACK_BUFFER and gl.UNIFORM_BUFFER
	     * @param {GLuint} index - the index of the target.
	     * @returns {Buffer} - Returns itself for chaining.
	     */
	
	  }, {
	    key: 'bindBase',
	    value: function bindBase() {
	      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref7$target = _ref7.target,
	          target = _ref7$target === undefined ? this.target : _ref7$target,
	          index = _ref7.index;
	
	      (0, _webglChecks.assertWebGL2Context)(this.gl);
	      this.gl.bindBufferBase(target, index, this.handle);
	      return this;
	    }
	  }, {
	    key: 'unbindBase',
	    value: function unbindBase() {
	      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref8$target = _ref8.target,
	          target = _ref8$target === undefined ? this.target : _ref8$target,
	          index = _ref8.index;
	
	      (0, _webglChecks.assertWebGL2Context)(this.gl);
	      this.gl.bindBufferBase(target, index, null);
	      return this;
	    }
	
	    /**
	     * Note: WEBGL2
	     * binds a range of a given WebGLBuffer to a given binding point (target)
	     * at a given index.
	     *
	     * @param {Glenum} target - target for the bind operation.
	     *  Possible values: gl.TRANSFORM_FEEDBACK_BUFFER and gl.UNIFORM_BUFFER
	     * @param {GLuint} index - the index of the target.
	     * @returns {Buffer} - Returns itself for chaining.
	     */
	
	  }, {
	    key: 'bindRange',
	    value: function bindRange() {
	      var _ref9 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref9$target = _ref9.target,
	          target = _ref9$target === undefined ? this.target : _ref9$target,
	          index = _ref9.index,
	          _ref9$offset = _ref9.offset,
	          offset = _ref9$offset === undefined ? 0 : _ref9$offset,
	          size = _ref9.size;
	
	      (0, _webglChecks.assertWebGL2Context)(this.gl);
	      this.gl.bindBufferRange(target, index, this.handle, offset, size);
	      return this;
	    }
	  }, {
	    key: 'unbindRange',
	    value: function unbindRange() {
	      var _ref10 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref10$target = _ref10.target,
	          target = _ref10$target === undefined ? this.target : _ref10$target,
	          index = _ref10.index;
	
	      (0, _webglChecks.assertWebGL2Context)(this.gl);
	      this.gl.bindBufferBase(target, index, null);
	      return this;
	    }
	  }]);
	
	  return Buffer;
	}();
	
	exports.default = Buffer;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.GL_BUFFER_USAGE = exports.GL_TARGETS = exports.GL_DRAW_MODES = exports.GL_INDEX_TYPES = undefined;
	exports.isWebGLContext = isWebGLContext;
	exports.isWebGL2Context = isWebGL2Context;
	exports.assertWebGLContext = assertWebGLContext;
	exports.assertWebGL2Context = assertWebGL2Context;
	exports.isIndexType = isIndexType;
	exports.assertIndexType = assertIndexType;
	exports.isDrawMode = isDrawMode;
	exports.assertDrawMode = assertDrawMode;
	exports.assertArrayTypeMatch = assertArrayTypeMatch;
	exports.glGetError = glGetError;
	exports.glCheckError = glCheckError;
	
	var _webglTypes = __webpack_require__(189);
	
	var _webglConstants = __webpack_require__(194);
	
	var _webglConstants2 = _interopRequireDefault(_webglConstants);
	
	var _webglArrays = __webpack_require__(193);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Helper definitions for validation of webgl parameters
	/* eslint-disable no-inline-comments, max-len */
	var ERR_CONTEXT = 'Invalid WebGLRenderingContext';
	var ERR_WEBGL2 = 'Requires WebGL2';
	
	function isWebGLContext(gl) {
	  return gl instanceof _webglTypes.WebGLRenderingContext || gl && gl.ARRAY_BUFFER === 0x8892;
	}
	
	function isWebGL2Context(gl) {
	  return gl instanceof _webglTypes.WebGL2RenderingContext || gl && gl.TEXTURE_BINDING_3D === 0x806A;
	}
	
	function assertWebGLContext(gl) {
	  // Need to handle debug context
	  (0, _assert2.default)(isWebGLContext(gl), ERR_CONTEXT);
	}
	
	function assertWebGL2Context(gl) {
	  // Need to handle debug context
	  (0, _assert2.default)(isWebGL2Context(gl), ERR_WEBGL2);
	}
	
	// INDEX TYPES
	
	// For drawElements, size of indices
	var GL_INDEX_TYPES = exports.GL_INDEX_TYPES = [_webglConstants2.default.UNSIGNED_BYTE, _webglConstants2.default.UNSIGNED_SHORT, _webglConstants2.default.UNSIGNED_INT];
	
	function isIndexType(type) {
	  return GL_INDEX_TYPES.indexOf(type) !== -1;
	}
	
	function assertIndexType(glType, source) {
	  (0, _assert2.default)(isIndexType(glType), 'Bad index type ' + (0, _webglConstants.glKey)(glType) + ' ' + source);
	}
	
	// DRAW MODES
	
	var GL_DRAW_MODES = exports.GL_DRAW_MODES = [_webglConstants2.default.POINTS, _webglConstants2.default.LINE_STRIP, _webglConstants2.default.LINE_LOOP, _webglConstants2.default.LINES, _webglConstants2.default.TRIANGLE_STRIP, _webglConstants2.default.TRIANGLE_FAN, _webglConstants2.default.TRIANGLES];
	
	function isDrawMode(glMode) {
	  return GL_DRAW_MODES.indexOf(glMode) !== -1;
	}
	
	function assertDrawMode(glType, source) {
	  (0, _assert2.default)(isDrawMode(glType), 'Bad draw mode ' + (0, _webglConstants.glKey)(glType) + ' ' + source);
	}
	
	// TARGET TYPES
	
	var GL_TARGETS = exports.GL_TARGETS = [_webglConstants2.default.ARRAY_BUFFER, // vertex attributes (e.g. vertex/texture coords or color)
	_webglConstants2.default.ELEMENT_ARRAY_BUFFER, // Buffer used for element indices.
	// For WebGL 2 contexts
	_webglConstants2.default.COPY_READ_BUFFER, // Buffer for copying from one buffer object to another
	_webglConstants2.default.COPY_WRITE_BUFFER, // Buffer for copying from one buffer object to another
	_webglConstants2.default.TRANSFORM_FEEDBACK_BUFFER, // Buffer for transform feedback operations
	_webglConstants2.default.UNIFORM_BUFFER, // Buffer used for storing uniform blocks
	_webglConstants2.default.PIXEL_PACK_BUFFER, // Buffer used for pixel transfer operations
	_webglConstants2.default.PIXEL_UNPACK_BUFFER // Buffer used for pixel transfer operations
	];
	
	// USAGE TYPES
	
	var GL_BUFFER_USAGE = exports.GL_BUFFER_USAGE = [_webglConstants2.default.STATIC_DRAW, // Buffer used often and not change often. Contents are written to the buffer, but not read.
	_webglConstants2.default.DYNAMIC_DRAW, // Buffer used often and change often. Contents are written to the buffer, but not read.
	_webglConstants2.default.STREAM_DRAW, // Buffer not used often. Contents are written to the buffer, but not read.
	// For WebGL 2 contexts
	_webglConstants2.default.STATIC_READ, // Buffer used often and not change often. Contents are read from the buffer, but not written.
	_webglConstants2.default.DYNAMIC_READ, // Buffer used often and change often. Contents are read from the buffer, but not written.
	_webglConstants2.default.STREAM_READ, // Contents of the buffer are likely to not be used often. Contents are read from the buffer, but not written.
	_webglConstants2.default.STATIC_COPY, // Buffer used often and not change often. Contents are neither written or read by the user.
	_webglConstants2.default.DYNAMIC_COPY, // Buffer used often and change often. Contents are neither written or read by the user.
	_webglConstants2.default.STREAM_COPY // Buffer used often and not change often. Contents are neither written or read by the user.
	];
	
	function assertArrayTypeMatch(array, type, source) {
	  (0, _assert2.default)(type === (0, _webglArrays.glTypeFromArray)(array), (array.constructor.name || 'Array') + ' ' + ('does not match element type ' + (0, _webglConstants.glKey)(type) + ' ' + source));
	}
	
	// GL errors
	
	// Returns an Error representing the Latest webGl error or null
	function glGetError(gl) {
	  // Loop to ensure all errors are cleared
	  var errorStack = [];
	  var glError = gl.getError();
	  while (glError !== gl.NO_ERROR) {
	    errorStack.push(glGetErrorMessage(gl, glError));
	    glError = gl.getError();
	  }
	  return errorStack.length ? new Error(errorStack.join('\n')) : null;
	}
	
	function glCheckError(gl) {
	  if (gl.debug) {
	    var error = glGetError(gl);
	    if (error) {
	      throw error;
	    }
	  }
	}
	
	function glGetErrorMessage(gl, glError) {
	  switch (glError) {
	    case _webglConstants2.default.CONTEXT_LOST_WEBGL:
	      //  If the WebGL context is lost, this error is returned on the
	      // first call to getError. Afterwards and until the context has been
	      // restored, it returns gl.NO_ERROR.
	      return 'WebGL context lost';
	    case _webglConstants2.default.INVALID_ENUM:
	      // An unacceptable value has been specified for an enumerated argument.
	      return 'WebGL invalid enumerated argument';
	    case _webglConstants2.default.INVALID_VALUE:
	      // A numeric argument is out of range.
	      return 'WebGL invalid value';
	    case _webglConstants2.default.INVALID_OPERATION:
	      // The specified command is not allowed for the current state.
	      return 'WebGL invalid operation';
	    case _webglConstants2.default.INVALID_FRAMEBUFFER_OPERATION:
	      // The currently bound framebuffer is not framebuffer complete
	      // when trying to render to or to read from it.
	      return 'WebGL invalid framebuffer operation';
	    case _webglConstants2.default.OUT_OF_MEMORY:
	      // Not enough memory is left to execute the command.
	      return 'WebGL out of memory';
	    default:
	      return 'WebGL unknown error ' + glError;
	  }
	}
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.FragmentShader = exports.VertexShader = exports.Shader = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _webgl = __webpack_require__(188);
	
	var _webglChecks = __webpack_require__(201);
	
	var _webglFormatGlslError = __webpack_require__(203);
	
	var _utils = __webpack_require__(204);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ERR_SOURCE = 'Shader: GLSL source code must be a JavaScript string';
	
	// For now this is an internal class
	
	var Shader = exports.Shader = function () {
	
	  /* eslint-disable max-statements */
	  function Shader(gl, source, shaderType) {
	    _classCallCheck(this, Shader);
	
	    (0, _webglChecks.assertWebGLContext)(gl);
	    (0, _assert2.default)(typeof source === 'string', ERR_SOURCE);
	
	    this.id = (0, _webglFormatGlslError.getShaderName)(source) || (0, _utils.uid)(this.getTypeName(shaderType));
	    this.gl = gl;
	    this.shaderType = shaderType;
	    this.source = source;
	    this.handle = gl.createShader(shaderType);
	    if (this.handle === null) {
	      throw new Error('Error creating shader with type ' + shaderType);
	    }
	    this.compile();
	  }
	
	  _createClass(Shader, [{
	    key: 'delete',
	    value: function _delete() {
	      var gl = this.gl;
	
	      if (this.handle) {
	        gl.deleteShader(this.handle);
	        this.handle = null;
	      }
	    }
	  }, {
	    key: 'toString',
	    value: function toString() {
	      return this.getTypeName(this.shaderType) + ':' + this.id;
	    }
	  }, {
	    key: 'getName',
	    value: function getName() {
	      return (0, _webglFormatGlslError.getShaderName)(this.source);
	    }
	  }, {
	    key: 'getTypeName',
	    value: function getTypeName(shaderType) {
	      switch (shaderType) {
	        case _webgl.GL.VERTEX_SHADER:
	          return 'vertex-shader';
	        case _webgl.GL.FRAGMENT_SHADER:
	          return 'fragment-shader';
	        default:
	          return 'shader';
	      }
	    }
	  }, {
	    key: 'compile',
	    value: function compile() {
	      var gl = this.gl;
	
	      gl.shaderSource(this.handle, this.source);
	      gl.compileShader(this.handle);
	      var compiled = gl.getShaderParameter(this.handle, _webgl.GL.COMPILE_STATUS);
	      if (!compiled) {
	        var infoLog = gl.getShaderInfoLog(this.handle);
	        var error = (0, _webglFormatGlslError.formatCompilerError)(infoLog, this.source, this.shaderType);
	
	        if (_utils.log.priority > 0) {
	          this.copyToClipboard(this.source);
	        }
	
	        this.delete();
	
	        throw new Error('Error while compiling the shader ' + error);
	      }
	    }
	    /* eslint-enable max-statements */
	
	    // TODO - move to debug utils?
	
	  }, {
	    key: 'copyToClipboard',
	    value: function copyToClipboard(text) {
	      if (_utils.isBrowser) {
	        /* global document */
	        var input = document.createElement('textarea');
	        document.body.appendChild(input);
	        input.value = text;
	        input.focus();
	        input.select();
	        if (!document.execCommand('copy')) {
	          /* eslint-disable no-console */
	          /* global console */
	          console.log('Failed to copy to clipboard');
	        }
	        input.remove();
	      }
	    }
	  }]);
	
	  return Shader;
	}();
	
	var VertexShader = exports.VertexShader = function (_Shader) {
	  _inherits(VertexShader, _Shader);
	
	  function VertexShader(gl, source) {
	    _classCallCheck(this, VertexShader);
	
	    return _possibleConstructorReturn(this, (VertexShader.__proto__ || Object.getPrototypeOf(VertexShader)).call(this, gl, source, _webgl.GL.VERTEX_SHADER));
	  }
	
	  return VertexShader;
	}(Shader);
	
	var FragmentShader = exports.FragmentShader = function (_Shader2) {
	  _inherits(FragmentShader, _Shader2);
	
	  function FragmentShader(gl, source) {
	    _classCallCheck(this, FragmentShader);
	
	    return _possibleConstructorReturn(this, (FragmentShader.__proto__ || Object.getPrototypeOf(FragmentShader)).call(this, gl, source, _webgl.GL.FRAGMENT_SHADER));
	  }
	
	  return FragmentShader;
	}(Shader);
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy93ZWJnbC9zaGFkZXIuanMiXSwibmFtZXMiOlsiRVJSX1NPVVJDRSIsIlNoYWRlciIsImdsIiwic291cmNlIiwic2hhZGVyVHlwZSIsImlkIiwiZ2V0VHlwZU5hbWUiLCJoYW5kbGUiLCJjcmVhdGVTaGFkZXIiLCJFcnJvciIsImNvbXBpbGUiLCJkZWxldGVTaGFkZXIiLCJWRVJURVhfU0hBREVSIiwiRlJBR01FTlRfU0hBREVSIiwic2hhZGVyU291cmNlIiwiY29tcGlsZVNoYWRlciIsImNvbXBpbGVkIiwiZ2V0U2hhZGVyUGFyYW1ldGVyIiwiQ09NUElMRV9TVEFUVVMiLCJpbmZvTG9nIiwiZ2V0U2hhZGVySW5mb0xvZyIsImVycm9yIiwicHJpb3JpdHkiLCJjb3B5VG9DbGlwYm9hcmQiLCJkZWxldGUiLCJ0ZXh0IiwiaW5wdXQiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJ2YWx1ZSIsImZvY3VzIiwic2VsZWN0IiwiZXhlY0NvbW1hbmQiLCJjb25zb2xlIiwibG9nIiwicmVtb3ZlIiwiVmVydGV4U2hhZGVyIiwiRnJhZ21lbnRTaGFkZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxhQUFhLHNEQUFuQjs7QUFFQTs7SUFDYUMsTSxXQUFBQSxNOztBQUVYO0FBQ0Esa0JBQVlDLEVBQVosRUFBZ0JDLE1BQWhCLEVBQXdCQyxVQUF4QixFQUFvQztBQUFBOztBQUNsQyx5Q0FBbUJGLEVBQW5CO0FBQ0EsMEJBQU8sT0FBT0MsTUFBUCxLQUFrQixRQUF6QixFQUFtQ0gsVUFBbkM7O0FBRUEsU0FBS0ssRUFBTCxHQUFVLHlDQUFjRixNQUFkLEtBQXlCLGdCQUFJLEtBQUtHLFdBQUwsQ0FBaUJGLFVBQWpCLENBQUosQ0FBbkM7QUFDQSxTQUFLRixFQUFMLEdBQVVBLEVBQVY7QUFDQSxTQUFLRSxVQUFMLEdBQWtCQSxVQUFsQjtBQUNBLFNBQUtELE1BQUwsR0FBY0EsTUFBZDtBQUNBLFNBQUtJLE1BQUwsR0FBY0wsR0FBR00sWUFBSCxDQUFnQkosVUFBaEIsQ0FBZDtBQUNBLFFBQUksS0FBS0csTUFBTCxLQUFnQixJQUFwQixFQUEwQjtBQUN4QixZQUFNLElBQUlFLEtBQUosc0NBQTZDTCxVQUE3QyxDQUFOO0FBQ0Q7QUFDRCxTQUFLTSxPQUFMO0FBQ0Q7Ozs7OEJBRVE7QUFBQSxVQUNBUixFQURBLEdBQ00sSUFETixDQUNBQSxFQURBOztBQUVQLFVBQUksS0FBS0ssTUFBVCxFQUFpQjtBQUNmTCxXQUFHUyxZQUFILENBQWdCLEtBQUtKLE1BQXJCO0FBQ0EsYUFBS0EsTUFBTCxHQUFjLElBQWQ7QUFDRDtBQUNGOzs7K0JBRVU7QUFDVCxhQUFVLEtBQUtELFdBQUwsQ0FBaUIsS0FBS0YsVUFBdEIsQ0FBVixTQUErQyxLQUFLQyxFQUFwRDtBQUNEOzs7OEJBRVM7QUFDUixhQUFPLHlDQUFjLEtBQUtGLE1BQW5CLENBQVA7QUFDRDs7O2dDQUVXQyxVLEVBQVk7QUFDdEIsY0FBUUEsVUFBUjtBQUNBLGFBQUssVUFBR1EsYUFBUjtBQUF1QixpQkFBTyxlQUFQO0FBQ3ZCLGFBQUssVUFBR0MsZUFBUjtBQUF5QixpQkFBTyxpQkFBUDtBQUN6QjtBQUFTLGlCQUFPLFFBQVA7QUFIVDtBQUtEOzs7OEJBRVM7QUFBQSxVQUNEWCxFQURDLEdBQ0ssSUFETCxDQUNEQSxFQURDOztBQUVSQSxTQUFHWSxZQUFILENBQWdCLEtBQUtQLE1BQXJCLEVBQTZCLEtBQUtKLE1BQWxDO0FBQ0FELFNBQUdhLGFBQUgsQ0FBaUIsS0FBS1IsTUFBdEI7QUFDQSxVQUFNUyxXQUFXZCxHQUFHZSxrQkFBSCxDQUFzQixLQUFLVixNQUEzQixFQUFtQyxVQUFHVyxjQUF0QyxDQUFqQjtBQUNBLFVBQUksQ0FBQ0YsUUFBTCxFQUFlO0FBQ2IsWUFBTUcsVUFBVWpCLEdBQUdrQixnQkFBSCxDQUFvQixLQUFLYixNQUF6QixDQUFoQjtBQUNBLFlBQU1jLFFBQVEsK0NBQW9CRixPQUFwQixFQUE2QixLQUFLaEIsTUFBbEMsRUFBMEMsS0FBS0MsVUFBL0MsQ0FBZDs7QUFFQSxZQUFJLFdBQUlrQixRQUFKLEdBQWUsQ0FBbkIsRUFBc0I7QUFDcEIsZUFBS0MsZUFBTCxDQUFxQixLQUFLcEIsTUFBMUI7QUFDRDs7QUFFRCxhQUFLcUIsTUFBTDs7QUFFQSxjQUFNLElBQUlmLEtBQUosdUNBQThDWSxLQUE5QyxDQUFOO0FBQ0Q7QUFDRjtBQUNEOztBQUVBOzs7O29DQUNnQkksSSxFQUFNO0FBQ3BCLDRCQUFlO0FBQ2I7QUFDQSxZQUFNQyxRQUFRQyxTQUFTQyxhQUFULENBQXVCLFVBQXZCLENBQWQ7QUFDQUQsaUJBQVNFLElBQVQsQ0FBY0MsV0FBZCxDQUEwQkosS0FBMUI7QUFDQUEsY0FBTUssS0FBTixHQUFjTixJQUFkO0FBQ0FDLGNBQU1NLEtBQU47QUFDQU4sY0FBTU8sTUFBTjtBQUNBLFlBQUksQ0FBQ04sU0FBU08sV0FBVCxDQUFxQixNQUFyQixDQUFMLEVBQW1DO0FBQ2pDO0FBQ0E7QUFDQUMsa0JBQVFDLEdBQVIsQ0FBWSw2QkFBWjtBQUNEO0FBQ0RWLGNBQU1XLE1BQU47QUFDRDtBQUNGOzs7Ozs7SUFHVUMsWSxXQUFBQSxZOzs7QUFDWCx3QkFBWXBDLEVBQVosRUFBZ0JDLE1BQWhCLEVBQXdCO0FBQUE7O0FBQUEsdUhBQ2hCRCxFQURnQixFQUNaQyxNQURZLEVBQ0osVUFBR1MsYUFEQztBQUV2Qjs7O0VBSCtCWCxNOztJQU1yQnNDLGMsV0FBQUEsYzs7O0FBQ1gsMEJBQVlyQyxFQUFaLEVBQWdCQyxNQUFoQixFQUF3QjtBQUFBOztBQUFBLDJIQUNoQkQsRUFEZ0IsRUFDWkMsTUFEWSxFQUNKLFVBQUdVLGVBREM7QUFFdkI7OztFQUhpQ1osTSIsImZpbGUiOiJzaGFkZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0dMfSBmcm9tICcuL3dlYmdsJztcbmltcG9ydCB7YXNzZXJ0V2ViR0xDb250ZXh0fSBmcm9tICcuL3dlYmdsLWNoZWNrcyc7XG5pbXBvcnQge2dldFNoYWRlck5hbWUsIGZvcm1hdENvbXBpbGVyRXJyb3J9IGZyb20gJy4vd2ViZ2wtZm9ybWF0LWdsc2wtZXJyb3InO1xuaW1wb3J0IHtsb2csIHVpZCwgaXNCcm93c2VyfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgYXNzZXJ0IGZyb20gJ2Fzc2VydCc7XG5cbmNvbnN0IEVSUl9TT1VSQ0UgPSAnU2hhZGVyOiBHTFNMIHNvdXJjZSBjb2RlIG11c3QgYmUgYSBKYXZhU2NyaXB0IHN0cmluZyc7XG5cbi8vIEZvciBub3cgdGhpcyBpcyBhbiBpbnRlcm5hbCBjbGFzc1xuZXhwb3J0IGNsYXNzIFNoYWRlciB7XG5cbiAgLyogZXNsaW50LWRpc2FibGUgbWF4LXN0YXRlbWVudHMgKi9cbiAgY29uc3RydWN0b3IoZ2wsIHNvdXJjZSwgc2hhZGVyVHlwZSkge1xuICAgIGFzc2VydFdlYkdMQ29udGV4dChnbCk7XG4gICAgYXNzZXJ0KHR5cGVvZiBzb3VyY2UgPT09ICdzdHJpbmcnLCBFUlJfU09VUkNFKTtcblxuICAgIHRoaXMuaWQgPSBnZXRTaGFkZXJOYW1lKHNvdXJjZSkgfHwgdWlkKHRoaXMuZ2V0VHlwZU5hbWUoc2hhZGVyVHlwZSkpO1xuICAgIHRoaXMuZ2wgPSBnbDtcbiAgICB0aGlzLnNoYWRlclR5cGUgPSBzaGFkZXJUeXBlO1xuICAgIHRoaXMuc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuaGFuZGxlID0gZ2wuY3JlYXRlU2hhZGVyKHNoYWRlclR5cGUpO1xuICAgIGlmICh0aGlzLmhhbmRsZSA9PT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBFcnJvciBjcmVhdGluZyBzaGFkZXIgd2l0aCB0eXBlICR7c2hhZGVyVHlwZX1gKTtcbiAgICB9XG4gICAgdGhpcy5jb21waWxlKCk7XG4gIH1cblxuICBkZWxldGUoKSB7XG4gICAgY29uc3Qge2dsfSA9IHRoaXM7XG4gICAgaWYgKHRoaXMuaGFuZGxlKSB7XG4gICAgICBnbC5kZWxldGVTaGFkZXIodGhpcy5oYW5kbGUpO1xuICAgICAgdGhpcy5oYW5kbGUgPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiBgJHt0aGlzLmdldFR5cGVOYW1lKHRoaXMuc2hhZGVyVHlwZSl9OiR7dGhpcy5pZH1gO1xuICB9XG5cbiAgZ2V0TmFtZSgpIHtcbiAgICByZXR1cm4gZ2V0U2hhZGVyTmFtZSh0aGlzLnNvdXJjZSk7XG4gIH1cblxuICBnZXRUeXBlTmFtZShzaGFkZXJUeXBlKSB7XG4gICAgc3dpdGNoIChzaGFkZXJUeXBlKSB7XG4gICAgY2FzZSBHTC5WRVJURVhfU0hBREVSOiByZXR1cm4gJ3ZlcnRleC1zaGFkZXInO1xuICAgIGNhc2UgR0wuRlJBR01FTlRfU0hBREVSOiByZXR1cm4gJ2ZyYWdtZW50LXNoYWRlcic7XG4gICAgZGVmYXVsdDogcmV0dXJuICdzaGFkZXInO1xuICAgIH1cbiAgfVxuXG4gIGNvbXBpbGUoKSB7XG4gICAgY29uc3Qge2dsfSA9IHRoaXM7XG4gICAgZ2wuc2hhZGVyU291cmNlKHRoaXMuaGFuZGxlLCB0aGlzLnNvdXJjZSk7XG4gICAgZ2wuY29tcGlsZVNoYWRlcih0aGlzLmhhbmRsZSk7XG4gICAgY29uc3QgY29tcGlsZWQgPSBnbC5nZXRTaGFkZXJQYXJhbWV0ZXIodGhpcy5oYW5kbGUsIEdMLkNPTVBJTEVfU1RBVFVTKTtcbiAgICBpZiAoIWNvbXBpbGVkKSB7XG4gICAgICBjb25zdCBpbmZvTG9nID0gZ2wuZ2V0U2hhZGVySW5mb0xvZyh0aGlzLmhhbmRsZSk7XG4gICAgICBjb25zdCBlcnJvciA9IGZvcm1hdENvbXBpbGVyRXJyb3IoaW5mb0xvZywgdGhpcy5zb3VyY2UsIHRoaXMuc2hhZGVyVHlwZSk7XG5cbiAgICAgIGlmIChsb2cucHJpb3JpdHkgPiAwKSB7XG4gICAgICAgIHRoaXMuY29weVRvQ2xpcGJvYXJkKHRoaXMuc291cmNlKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5kZWxldGUoKTtcblxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBFcnJvciB3aGlsZSBjb21waWxpbmcgdGhlIHNoYWRlciAke2Vycm9yfWApO1xuICAgIH1cbiAgfVxuICAvKiBlc2xpbnQtZW5hYmxlIG1heC1zdGF0ZW1lbnRzICovXG5cbiAgLy8gVE9ETyAtIG1vdmUgdG8gZGVidWcgdXRpbHM/XG4gIGNvcHlUb0NsaXBib2FyZCh0ZXh0KSB7XG4gICAgaWYgKGlzQnJvd3Nlcikge1xuICAgICAgLyogZ2xvYmFsIGRvY3VtZW50ICovXG4gICAgICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RleHRhcmVhJyk7XG4gICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGlucHV0KTtcbiAgICAgIGlucHV0LnZhbHVlID0gdGV4dDtcbiAgICAgIGlucHV0LmZvY3VzKCk7XG4gICAgICBpbnB1dC5zZWxlY3QoKTtcbiAgICAgIGlmICghZG9jdW1lbnQuZXhlY0NvbW1hbmQoJ2NvcHknKSkge1xuICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG4gICAgICAgIC8qIGdsb2JhbCBjb25zb2xlICovXG4gICAgICAgIGNvbnNvbGUubG9nKCdGYWlsZWQgdG8gY29weSB0byBjbGlwYm9hcmQnKTtcbiAgICAgIH1cbiAgICAgIGlucHV0LnJlbW92ZSgpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgVmVydGV4U2hhZGVyIGV4dGVuZHMgU2hhZGVyIHtcbiAgY29uc3RydWN0b3IoZ2wsIHNvdXJjZSkge1xuICAgIHN1cGVyKGdsLCBzb3VyY2UsIEdMLlZFUlRFWF9TSEFERVIpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBGcmFnbWVudFNoYWRlciBleHRlbmRzIFNoYWRlciB7XG4gIGNvbnN0cnVjdG9yKGdsLCBzb3VyY2UpIHtcbiAgICBzdXBlcihnbCwgc291cmNlLCBHTC5GUkFHTUVOVF9TSEFERVIpO1xuICB9XG59XG4iXX0=

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getShaderName = getShaderName;
	exports.default = formatGLSLCompilerError;
	
	var _webglConstants = __webpack_require__(194);
	
	var _webglConstants2 = _interopRequireDefault(_webglConstants);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// import shaderName from 'glsl-shader-name';
	// replace with regexp
	function getShaderName(shader) {
	  return 'unnamed';
	}
	
	/**
	 * Formats a GLSL shader compiler error and generates a string
	 * showing the source code around the error.
	 *
	 * From https://github.com/wwwtyro/gl-format-compiler-error (public domain)
	 *
	 * @param {String} errLog - error log from gl.getShaderInfoLog
	 * @param {String} src - original shader source code
	 * @param {Number} shaderType - shader type (GL constant)
	 * @return {String} - Formatted strings has the error marked inline with src.
	 */
	/* eslint-disable no-continue, max-statements */
	function formatGLSLCompilerError(errLog, src, shaderType) {
	  var errorStrings = errLog.split(/\r?\n/);
	  var errors = {};
	
	  // Parse the error - note: browser and driver dependent
	  for (var i = 0; i < errorStrings.length; i++) {
	    var errorString = errorStrings[i];
	    if (errorString.length <= 1) {
	      continue;
	    }
	    var lineNo = parseInt(errorString.split(':')[2], 10);
	    if (isNaN(lineNo)) {
	      return 'Could not parse GLSL compiler error: ' + errLog;
	    }
	    errors[lineNo] = errorString;
	  }
	
	  // Format the error inline with the code
	  var message = '';
	  var lines = addLineNumbers(src).split(/\r?\n/);
	
	  for (var _i = 0; _i < lines.length; _i++) {
	    var line = lines[_i];
	    if (!errors[_i + 3] && !errors[_i + 2] && !errors[_i + 1]) {
	      continue;
	    }
	    message += line + '\n';
	    if (errors[_i + 1]) {
	      var e = errors[_i + 1];
	      e = e.substr(e.split(':', 3).join(':').length + 1).trim();
	      message += '^^^ ' + e + '\n\n';
	    }
	  }
	
	  var name = getShaderName(src) || 'unknown name';
	  var type = getShaderTypeName(shaderType);
	  return 'GLSL error in ' + type + ' shader ' + name + '\n' + message;
	}
	
	/**
	 * Prepends line numbers to each line of a string.
	 * The line numbers will be left-padded with spaces to ensure an
	 * aligned layout when rendered using monospace fonts.
	 *
	 * Adapted from https://github.com/Jam3/add-line-numbers, MIT license
	 *
	 * @param {String} string - multi-line string to add line numbers to
	 * @param {Number} start=1 - number of spaces to add
	 * @param {String} delim =': ' - injected between line number and original line
	 * @return {String} string - The original string with line numbers added
	 */
	function addLineNumbers(string) {
	  var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
	  var delim = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ': ';
	
	  var lines = string.split(/\r?\n/);
	  var maxDigits = String(lines.length + start - 1).length;
	  return lines.map(function (line, i) {
	    var lineNumber = i + start;
	    var digits = String(lineNumber).length;
	    var prefix = padLeft(lineNumber, maxDigits - digits);
	    return prefix + delim + line;
	  }).join('\n');
	}
	
	/**
	 * Pads a string with a number of spaces (space characters) to the left
	 * @param {String} string - string to pad
	 * @param {Number} digits - number of spaces to add
	 * @return {String} string - The padded string
	 */
	function padLeft(string, digits) {
	  var result = '';
	  for (var i = 0; i < digits; ++i) {
	    result += ' ';
	  }
	  return '' + result + string;
	}
	
	function getShaderTypeName(type) {
	  switch (type) {
	    case _webglConstants2.default.FRAGMENT_SHADER:
	      return 'fragment';
	    case _webglConstants2.default.VERTEX_SHADER:
	      return 'vertex';
	    default:
	      return 'unknown type';
	  }
	}
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _isBrowser = __webpack_require__(191);
	
	Object.keys(_isBrowser).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _isBrowser[key];
	    }
	  });
	});
	
	var _browserUtils = __webpack_require__(205);
	
	Object.keys(_browserUtils).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _browserUtils[key];
	    }
	  });
	});
	
	var _promiseUtils = __webpack_require__(206);
	
	Object.keys(_promiseUtils).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _promiseUtils[key];
	    }
	  });
	});
	
	var _utils = __webpack_require__(207);
	
	Object.keys(_utils).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _utils[key];
	    }
	  });
	});
	
	var _log = __webpack_require__(208);
	
	Object.keys(_log).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _log[key];
	    }
	  });
	});
	Object.defineProperty(exports, 'log', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_log).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9pbmRleC5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7OztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7OztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7OztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7OztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozt3Q0FDUUEsTyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vaXMtYnJvd3Nlcic7XG5leHBvcnQgKiBmcm9tICcuL2Jyb3dzZXItdXRpbHMnO1xuZXhwb3J0ICogZnJvbSAnLi9wcm9taXNlLXV0aWxzJztcbmV4cG9ydCAqIGZyb20gJy4vdXRpbHMnO1xuZXhwb3J0ICogZnJvbSAnLi9sb2cnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGxvZ30gZnJvbSAnLi9sb2cnO1xuIl19

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.pageLoadPromise = exports.isPageLoaded = undefined;
	
	var _isBrowser = __webpack_require__(191);
	
	var _isBrowser2 = _interopRequireDefault(_isBrowser);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var isPageLoaded = exports.isPageLoaded = false; /* global window, document */
	var pageLoadPromise = exports.pageLoadPromise = _isBrowser2.default ? new Promise(function (resolve, reject) {
	  window.onload = function () {
	    exports.isPageLoaded = isPageLoaded = true;
	    resolve(document);
	  };
	}) : Promise.resolve({});
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9icm93c2VyLXV0aWxzLmpzIl0sIm5hbWVzIjpbImlzUGFnZUxvYWRlZCIsInBhZ2VMb2FkUHJvbWlzZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0Iiwid2luZG93Iiwib25sb2FkIiwiZG9jdW1lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7Ozs7O0FBRU8sSUFBSUEsc0NBQWUsS0FBbkIsQyxDQUhQO0FBS08sSUFBTUMsNENBQWtCLHNCQUM3QixJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQy9CQyxTQUFPQyxNQUFQLEdBQWdCLFlBQU07QUFDcEIsWUFMS04sWUFLTCxrQkFBZSxJQUFmO0FBQ0FHLFlBQVFJLFFBQVI7QUFDRCxHQUhEO0FBSUQsQ0FMRCxDQUQ2QixHQU83QkwsUUFBUUMsT0FBUixDQUFnQixFQUFoQixDQVBLIiwiZmlsZSI6ImJyb3dzZXItdXRpbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgd2luZG93LCBkb2N1bWVudCAqL1xuaW1wb3J0IGlzQnJvd3NlciBmcm9tICcuL2lzLWJyb3dzZXInO1xuXG5leHBvcnQgbGV0IGlzUGFnZUxvYWRlZCA9IGZhbHNlO1xuXG5leHBvcnQgY29uc3QgcGFnZUxvYWRQcm9taXNlID0gaXNCcm93c2VyID9cbiAgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHdpbmRvdy5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICBpc1BhZ2VMb2FkZWQgPSB0cnVlO1xuICAgICAgcmVzb2x2ZShkb2N1bWVudCk7XG4gICAgfTtcbiAgfSkgOlxuICBQcm9taXNlLnJlc29sdmUoe30pO1xuXG4iXX0=

/***/ },
/* 206 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.promisify = promisify;
	/**
	 * Converts a function that accepts a node style (err, result) callback
	 * as the last argument into a function that takes the same arguments
	 * and returns a promise that resolves or rejects with the values provided
	 * by the original callback
	 * @param {Function} func - function to wrap
	 * @return {Function} promisified function
	 */
	/* eslint-disable no-try-catch */
	function promisify(func) {
	  return function promisifiedFunction() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return new Promise(function (resolve, reject) {
	      function callback(error, data) {
	        try {
	          if (error) {
	            reject(error);
	          } else {
	            resolve(data);
	          }
	        } catch (e) {
	          reject(e);
	        }
	      }
	      func.apply(undefined, args.concat([callback]));
	    });
	  };
	}
	/* eslint-enable no-try-catch */
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9wcm9taXNlLXV0aWxzLmpzIl0sIm5hbWVzIjpbInByb21pc2lmeSIsImZ1bmMiLCJwcm9taXNpZmllZEZ1bmN0aW9uIiwiYXJncyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiY2FsbGJhY2siLCJlcnJvciIsImRhdGEiLCJlIl0sIm1hcHBpbmdzIjoiOzs7OztRQVNnQkEsUyxHQUFBQSxTO0FBVGhCOzs7Ozs7OztBQVFBO0FBQ08sU0FBU0EsU0FBVCxDQUFtQkMsSUFBbkIsRUFBeUI7QUFDOUIsU0FBTyxTQUFTQyxtQkFBVCxHQUFzQztBQUFBLHNDQUFOQyxJQUFNO0FBQU5BLFVBQU07QUFBQTs7QUFDM0MsV0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3RDLGVBQVNDLFFBQVQsQ0FBa0JDLEtBQWxCLEVBQXlCQyxJQUF6QixFQUErQjtBQUM3QixZQUFJO0FBQ0YsY0FBSUQsS0FBSixFQUFXO0FBQ1RGLG1CQUFPRSxLQUFQO0FBQ0QsV0FGRCxNQUVPO0FBQ0xILG9CQUFRSSxJQUFSO0FBQ0Q7QUFDRixTQU5ELENBTUUsT0FBT0MsQ0FBUCxFQUFVO0FBQ1ZKLGlCQUFPSSxDQUFQO0FBQ0Q7QUFDRjtBQUNEVCw0QkFBUUUsSUFBUixTQUFjSSxRQUFkO0FBQ0QsS0FiTSxDQUFQO0FBY0QsR0FmRDtBQWdCRDtBQUNEIiwiZmlsZSI6InByb21pc2UtdXRpbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnZlcnRzIGEgZnVuY3Rpb24gdGhhdCBhY2NlcHRzIGEgbm9kZSBzdHlsZSAoZXJyLCByZXN1bHQpIGNhbGxiYWNrXG4gKiBhcyB0aGUgbGFzdCBhcmd1bWVudCBpbnRvIGEgZnVuY3Rpb24gdGhhdCB0YWtlcyB0aGUgc2FtZSBhcmd1bWVudHNcbiAqIGFuZCByZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIG9yIHJlamVjdHMgd2l0aCB0aGUgdmFsdWVzIHByb3ZpZGVkXG4gKiBieSB0aGUgb3JpZ2luYWwgY2FsbGJhY2tcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgLSBmdW5jdGlvbiB0byB3cmFwXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn0gcHJvbWlzaWZpZWQgZnVuY3Rpb25cbiAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tdHJ5LWNhdGNoICovXG5leHBvcnQgZnVuY3Rpb24gcHJvbWlzaWZ5KGZ1bmMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHByb21pc2lmaWVkRnVuY3Rpb24oLi4uYXJncykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBmdW5jdGlvbiBjYWxsYmFjayhlcnJvciwgZGF0YSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzb2x2ZShkYXRhKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGZ1bmMoLi4uYXJncywgY2FsbGJhY2spO1xuICAgIH0pO1xuICB9O1xufVxuLyogZXNsaW50LWVuYWJsZSBuby10cnktY2F0Y2ggKi9cbiJdfQ==

/***/ },
/* 207 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.splat = splat;
	exports.noop = noop;
	exports.uid = uid;
	exports.merge = merge;
	/**
	 * Wraps the argument in an array if it is not one.
	 * @param {object} a - The object to wrap.
	 * @return {Array} array
	 **/
	function splat(a) {
	  return a ? Array.isArray(a) ? a : [a] : [];
	}
	
	/**
	* Provides a standard noop function.
	**/
	function noop() {}
	
	var uidCounters = {};
	
	/**
	 * Returns a UID.
	 * @param {String} id= - Identifier base name
	 * @return {number} uid
	 **/
	function uid() {
	  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'id';
	
	  uidCounters[id] = uidCounters[id] || 1;
	  var count = uidCounters[id]++;
	  return id + '-' + count;
	}
	
	/**
	 * Merge multiple objects into one.
	 * @param {...object} objects - The objects to merge.
	 * @return {object} object
	 **/
	function merge(objects) {
	  var mix = {};
	  for (var i = 0, l = arguments.length; i < l; i++) {
	    var object = arguments[i];
	    if (!object || object.constructor.name !== 'Object') {
	      /* eslint-disable no-continue */
	      continue;
	    }
	    for (var key in object) {
	      var op = object[key];
	      var mp = mix[key];
	      if (mp && op.constructor.name === 'Object' && mp.constructor.name === 'Object') {
	        mix[key] = merge(mp, op);
	      } else {
	        mix[key] = detach(op);
	      }
	    }
	  }
	  return mix;
	}
	
	/**
	 * Internal function for duplicating an object.
	 * @param {object} elem - The object to recursively duplicate.
	 * @return {object} object
	 **/
	function detach(elem) {
	  var t = elem.constructor.name;
	  var ans = void 0;
	  if (t === 'Object') {
	    ans = {};
	    for (var p in elem) {
	      ans[p] = detach(elem[p]);
	    }
	  } else if (t === 'Array') {
	    ans = [];
	    for (var i = 0, l = elem.length; i < l; i++) {
	      ans[i] = detach(elem[i]);
	    }
	  } else {
	    ans = elem;
	  }
	
	  return ans;
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy91dGlscy5qcyJdLCJuYW1lcyI6WyJzcGxhdCIsIm5vb3AiLCJ1aWQiLCJtZXJnZSIsImEiLCJBcnJheSIsImlzQXJyYXkiLCJ1aWRDb3VudGVycyIsImlkIiwiY291bnQiLCJvYmplY3RzIiwibWl4IiwiaSIsImwiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJvYmplY3QiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJrZXkiLCJvcCIsIm1wIiwiZGV0YWNoIiwiZWxlbSIsInQiLCJhbnMiLCJwIl0sIm1hcHBpbmdzIjoiOzs7OztRQUtnQkEsSyxHQUFBQSxLO1FBT0FDLEksR0FBQUEsSTtRQVNBQyxHLEdBQUFBLEc7UUFXQUMsSyxHQUFBQSxLO0FBaENoQjs7Ozs7QUFLTyxTQUFTSCxLQUFULENBQWVJLENBQWYsRUFBa0I7QUFDdkIsU0FBT0EsSUFBS0MsTUFBTUMsT0FBTixDQUFjRixDQUFkLElBQW1CQSxDQUFuQixHQUF1QixDQUFDQSxDQUFELENBQTVCLEdBQW1DLEVBQTFDO0FBQ0Q7O0FBRUQ7OztBQUdPLFNBQVNILElBQVQsR0FBZ0IsQ0FBRTs7QUFFekIsSUFBTU0sY0FBYyxFQUFwQjs7QUFFQTs7Ozs7QUFLTyxTQUFTTCxHQUFULEdBQXdCO0FBQUEsTUFBWE0sRUFBVyx1RUFBTixJQUFNOztBQUM3QkQsY0FBWUMsRUFBWixJQUFrQkQsWUFBWUMsRUFBWixLQUFtQixDQUFyQztBQUNBLE1BQU1DLFFBQVFGLFlBQVlDLEVBQVosR0FBZDtBQUNBLFNBQVVBLEVBQVYsU0FBZ0JDLEtBQWhCO0FBQ0Q7O0FBRUQ7Ozs7O0FBS08sU0FBU04sS0FBVCxDQUFlTyxPQUFmLEVBQXdCO0FBQzdCLE1BQU1DLE1BQU0sRUFBWjtBQUNBLE9BQUssSUFBSUMsSUFBSSxDQUFSLEVBQVdDLElBQUlDLFVBQVVDLE1BQTlCLEVBQXNDSCxJQUFJQyxDQUExQyxFQUE2Q0QsR0FBN0MsRUFBa0Q7QUFDaEQsUUFBTUksU0FBU0YsVUFBVUYsQ0FBVixDQUFmO0FBQ0EsUUFBSSxDQUFDSSxNQUFELElBQVdBLE9BQU9DLFdBQVAsQ0FBbUJDLElBQW5CLEtBQTRCLFFBQTNDLEVBQXFEO0FBQ25EO0FBQ0E7QUFDRDtBQUNELFNBQUssSUFBTUMsR0FBWCxJQUFrQkgsTUFBbEIsRUFBMEI7QUFDeEIsVUFBTUksS0FBS0osT0FBT0csR0FBUCxDQUFYO0FBQ0EsVUFBTUUsS0FBS1YsSUFBSVEsR0FBSixDQUFYO0FBQ0EsVUFBSUUsTUFBTUQsR0FBR0gsV0FBSCxDQUFlQyxJQUFmLEtBQXdCLFFBQTlCLElBQ0ZHLEdBQUdKLFdBQUgsQ0FBZUMsSUFBZixLQUF3QixRQUQxQixFQUNvQztBQUNsQ1AsWUFBSVEsR0FBSixJQUFXaEIsTUFBTWtCLEVBQU4sRUFBVUQsRUFBVixDQUFYO0FBQ0QsT0FIRCxNQUdPO0FBQ0xULFlBQUlRLEdBQUosSUFBV0csT0FBT0YsRUFBUCxDQUFYO0FBQ0Q7QUFDRjtBQUNGO0FBQ0QsU0FBT1QsR0FBUDtBQUNEOztBQUVEOzs7OztBQUtBLFNBQVNXLE1BQVQsQ0FBZ0JDLElBQWhCLEVBQXNCO0FBQ3BCLE1BQU1DLElBQUlELEtBQUtOLFdBQUwsQ0FBaUJDLElBQTNCO0FBQ0EsTUFBSU8sWUFBSjtBQUNBLE1BQUlELE1BQU0sUUFBVixFQUFvQjtBQUNsQkMsVUFBTSxFQUFOO0FBQ0EsU0FBSyxJQUFNQyxDQUFYLElBQWdCSCxJQUFoQixFQUFzQjtBQUNwQkUsVUFBSUMsQ0FBSixJQUFTSixPQUFPQyxLQUFLRyxDQUFMLENBQVAsQ0FBVDtBQUNEO0FBQ0YsR0FMRCxNQUtPLElBQUlGLE1BQU0sT0FBVixFQUFtQjtBQUN4QkMsVUFBTSxFQUFOO0FBQ0EsU0FBSyxJQUFJYixJQUFJLENBQVIsRUFBV0MsSUFBSVUsS0FBS1IsTUFBekIsRUFBaUNILElBQUlDLENBQXJDLEVBQXdDRCxHQUF4QyxFQUE2QztBQUMzQ2EsVUFBSWIsQ0FBSixJQUFTVSxPQUFPQyxLQUFLWCxDQUFMLENBQVAsQ0FBVDtBQUNEO0FBQ0YsR0FMTSxNQUtBO0FBQ0xhLFVBQU1GLElBQU47QUFDRDs7QUFFRCxTQUFPRSxHQUFQO0FBQ0QiLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFdyYXBzIHRoZSBhcmd1bWVudCBpbiBhbiBhcnJheSBpZiBpdCBpcyBub3Qgb25lLlxuICogQHBhcmFtIHtvYmplY3R9IGEgLSBUaGUgb2JqZWN0IHRvIHdyYXAuXG4gKiBAcmV0dXJuIHtBcnJheX0gYXJyYXlcbiAqKi9cbmV4cG9ydCBmdW5jdGlvbiBzcGxhdChhKSB7XG4gIHJldHVybiBhID8gKEFycmF5LmlzQXJyYXkoYSkgPyBhIDogW2FdKSA6IFtdO1xufVxuXG4vKipcbiogUHJvdmlkZXMgYSBzdGFuZGFyZCBub29wIGZ1bmN0aW9uLlxuKiovXG5leHBvcnQgZnVuY3Rpb24gbm9vcCgpIHt9XG5cbmNvbnN0IHVpZENvdW50ZXJzID0ge307XG5cbi8qKlxuICogUmV0dXJucyBhIFVJRC5cbiAqIEBwYXJhbSB7U3RyaW5nfSBpZD0gLSBJZGVudGlmaWVyIGJhc2UgbmFtZVxuICogQHJldHVybiB7bnVtYmVyfSB1aWRcbiAqKi9cbmV4cG9ydCBmdW5jdGlvbiB1aWQoaWQgPSAnaWQnKSB7XG4gIHVpZENvdW50ZXJzW2lkXSA9IHVpZENvdW50ZXJzW2lkXSB8fCAxO1xuICBjb25zdCBjb3VudCA9IHVpZENvdW50ZXJzW2lkXSsrO1xuICByZXR1cm4gYCR7aWR9LSR7Y291bnR9YDtcbn1cblxuLyoqXG4gKiBNZXJnZSBtdWx0aXBsZSBvYmplY3RzIGludG8gb25lLlxuICogQHBhcmFtIHsuLi5vYmplY3R9IG9iamVjdHMgLSBUaGUgb2JqZWN0cyB0byBtZXJnZS5cbiAqIEByZXR1cm4ge29iamVjdH0gb2JqZWN0XG4gKiovXG5leHBvcnQgZnVuY3Rpb24gbWVyZ2Uob2JqZWN0cykge1xuICBjb25zdCBtaXggPSB7fTtcbiAgZm9yIChsZXQgaSA9IDAsIGwgPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgY29uc3Qgb2JqZWN0ID0gYXJndW1lbnRzW2ldO1xuICAgIGlmICghb2JqZWN0IHx8IG9iamVjdC5jb25zdHJ1Y3Rvci5uYW1lICE9PSAnT2JqZWN0Jykge1xuICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tY29udGludWUgKi9cbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IGtleSBpbiBvYmplY3QpIHtcbiAgICAgIGNvbnN0IG9wID0gb2JqZWN0W2tleV07XG4gICAgICBjb25zdCBtcCA9IG1peFtrZXldO1xuICAgICAgaWYgKG1wICYmIG9wLmNvbnN0cnVjdG9yLm5hbWUgPT09ICdPYmplY3QnICYmXG4gICAgICAgIG1wLmNvbnN0cnVjdG9yLm5hbWUgPT09ICdPYmplY3QnKSB7XG4gICAgICAgIG1peFtrZXldID0gbWVyZ2UobXAsIG9wKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1peFtrZXldID0gZGV0YWNoKG9wKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIG1peDtcbn1cblxuLyoqXG4gKiBJbnRlcm5hbCBmdW5jdGlvbiBmb3IgZHVwbGljYXRpbmcgYW4gb2JqZWN0LlxuICogQHBhcmFtIHtvYmplY3R9IGVsZW0gLSBUaGUgb2JqZWN0IHRvIHJlY3Vyc2l2ZWx5IGR1cGxpY2F0ZS5cbiAqIEByZXR1cm4ge29iamVjdH0gb2JqZWN0XG4gKiovXG5mdW5jdGlvbiBkZXRhY2goZWxlbSkge1xuICBjb25zdCB0ID0gZWxlbS5jb25zdHJ1Y3Rvci5uYW1lO1xuICBsZXQgYW5zO1xuICBpZiAodCA9PT0gJ09iamVjdCcpIHtcbiAgICBhbnMgPSB7fTtcbiAgICBmb3IgKGNvbnN0IHAgaW4gZWxlbSkge1xuICAgICAgYW5zW3BdID0gZGV0YWNoKGVsZW1bcF0pO1xuICAgIH1cbiAgfSBlbHNlIGlmICh0ID09PSAnQXJyYXknKSB7XG4gICAgYW5zID0gW107XG4gICAgZm9yIChsZXQgaSA9IDAsIGwgPSBlbGVtLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgYW5zW2ldID0gZGV0YWNoKGVsZW1baV0pO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBhbnMgPSBlbGVtO1xuICB9XG5cbiAgcmV0dXJuIGFucztcbn1cbiJdfQ==

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.formatValue = formatValue;
	
	var _globals = __webpack_require__(190);
	
	var _globals2 = _interopRequireDefault(_globals);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* eslint-disable no-console */
	/* global console */
	
	var _log = {
	  priority: 0,
	  table: function table(priority, _table) {
	    if (priority <= _log.priority && _table) {
	      console.table(_table);
	    }
	  },
	  log: function log(priority) {
	    if (priority <= _log.priority) {
	      var _console;
	
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      (_console = console).debug.apply(_console, args);
	    }
	  },
	  info: function info(priority) {
	    if (priority <= _log.priority) {
	      var _console2;
	
	      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	        args[_key2 - 1] = arguments[_key2];
	      }
	
	      (_console2 = console).log.apply(_console2, args);
	    }
	  },
	  warn: function warn(priority) {
	    if (priority <= _log.priority) {
	      var _console3;
	
	      for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
	        args[_key3 - 1] = arguments[_key3];
	      }
	
	      (_console3 = console).warn.apply(_console3, args);
	    }
	  }
	};
	
	function formatArrayValue(v, opts) {
	  var _opts$maxElts = opts.maxElts,
	      maxElts = _opts$maxElts === undefined ? 16 : _opts$maxElts,
	      _opts$size = opts.size,
	      size = _opts$size === undefined ? 1 : _opts$size;
	
	  var string = '[';
	  for (var i = 0; i < v.length && i < maxElts; ++i) {
	    if (i > 0) {
	      string += ',' + (i % size === 0 ? ' ' : '');
	    }
	    string += formatValue(v[i], opts);
	  }
	  var terminator = v.length > maxElts ? '...' : ']';
	  return '' + string + terminator;
	}
	
	function formatValue(v) {
	  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  var _opts$isInteger = opts.isInteger,
	      isInteger = _opts$isInteger === undefined ? false : _opts$isInteger;
	
	  if (Array.isArray(v) || ArrayBuffer.isView(v)) {
	    return formatArrayValue(v, opts);
	  }
	  if (!Number.isFinite(v)) {
	    return String(v);
	  }
	  if (isInteger) {
	    return v.toFixed(0);
	  }
	  if (Math.abs(v) > 100 && Math.abs(v) < 10000) {
	    return v.toFixed(0);
	  }
	  var string = v.toPrecision(2);
	  var decimal = string.indexOf('.0');
	  return decimal === string.length - 2 ? string.slice(0, -1) : string;
	}
	
	// Make available in browser console
	_globals2.default.log = _log;
	
	exports.default = _log;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9sb2cuanMiXSwibmFtZXMiOlsiZm9ybWF0VmFsdWUiLCJsb2ciLCJwcmlvcml0eSIsInRhYmxlIiwiY29uc29sZSIsImFyZ3MiLCJkZWJ1ZyIsImluZm8iLCJ3YXJuIiwiZm9ybWF0QXJyYXlWYWx1ZSIsInYiLCJvcHRzIiwibWF4RWx0cyIsInNpemUiLCJzdHJpbmciLCJpIiwibGVuZ3RoIiwidGVybWluYXRvciIsImlzSW50ZWdlciIsIkFycmF5IiwiaXNBcnJheSIsIkFycmF5QnVmZmVyIiwiaXNWaWV3IiwiTnVtYmVyIiwiaXNGaW5pdGUiLCJTdHJpbmciLCJ0b0ZpeGVkIiwiTWF0aCIsImFicyIsInRvUHJlY2lzaW9uIiwiZGVjaW1hbCIsImluZGV4T2YiLCJzbGljZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUF5Q2dCQSxXLEdBQUFBLFc7O0FBekNoQjs7Ozs7O0FBQ0E7QUFDQTs7QUFFQSxJQUFNQyxPQUFNO0FBQ1ZDLFlBQVUsQ0FEQTtBQUVWQyxPQUZVLGlCQUVKRCxRQUZJLEVBRU1DLE1BRk4sRUFFYTtBQUNyQixRQUFJRCxZQUFZRCxLQUFJQyxRQUFoQixJQUE0QkMsTUFBaEMsRUFBdUM7QUFDckNDLGNBQVFELEtBQVIsQ0FBY0EsTUFBZDtBQUNEO0FBQ0YsR0FOUztBQU9WRixLQVBVLGVBT05DLFFBUE0sRUFPYTtBQUNyQixRQUFJQSxZQUFZRCxLQUFJQyxRQUFwQixFQUE4QjtBQUFBOztBQUFBLHdDQURmRyxJQUNlO0FBRGZBLFlBQ2U7QUFBQTs7QUFDNUIsMkJBQVFDLEtBQVIsaUJBQWlCRCxJQUFqQjtBQUNEO0FBQ0YsR0FYUztBQVlWRSxNQVpVLGdCQVlMTCxRQVpLLEVBWWM7QUFDdEIsUUFBSUEsWUFBWUQsS0FBSUMsUUFBcEIsRUFBOEI7QUFBQTs7QUFBQSx5Q0FEZEcsSUFDYztBQURkQSxZQUNjO0FBQUE7O0FBQzVCLDRCQUFRSixHQUFSLGtCQUFlSSxJQUFmO0FBQ0Q7QUFDRixHQWhCUztBQWlCVkcsTUFqQlUsZ0JBaUJMTixRQWpCSyxFQWlCYztBQUN0QixRQUFJQSxZQUFZRCxLQUFJQyxRQUFwQixFQUE4QjtBQUFBOztBQUFBLHlDQURkRyxJQUNjO0FBRGRBLFlBQ2M7QUFBQTs7QUFDNUIsNEJBQVFHLElBQVIsa0JBQWdCSCxJQUFoQjtBQUNEO0FBQ0Y7QUFyQlMsQ0FBWjs7QUF3QkEsU0FBU0ksZ0JBQVQsQ0FBMEJDLENBQTFCLEVBQTZCQyxJQUE3QixFQUFtQztBQUFBLHNCQUNBQSxJQURBLENBQzFCQyxPQUQwQjtBQUFBLE1BQzFCQSxPQUQwQixpQ0FDaEIsRUFEZ0I7QUFBQSxtQkFDQUQsSUFEQSxDQUNaRSxJQURZO0FBQUEsTUFDWkEsSUFEWSw4QkFDTCxDQURLOztBQUVqQyxNQUFJQyxTQUFTLEdBQWI7QUFDQSxPQUFLLElBQUlDLElBQUksQ0FBYixFQUFnQkEsSUFBSUwsRUFBRU0sTUFBTixJQUFnQkQsSUFBSUgsT0FBcEMsRUFBNkMsRUFBRUcsQ0FBL0MsRUFBa0Q7QUFDaEQsUUFBSUEsSUFBSSxDQUFSLEVBQVc7QUFDVEQsdUJBQWVDLElBQUlGLElBQUosS0FBYSxDQUFkLEdBQW1CLEdBQW5CLEdBQXlCLEVBQXZDO0FBQ0Q7QUFDREMsY0FBVWQsWUFBWVUsRUFBRUssQ0FBRixDQUFaLEVBQWtCSixJQUFsQixDQUFWO0FBQ0Q7QUFDRCxNQUFNTSxhQUFhUCxFQUFFTSxNQUFGLEdBQVdKLE9BQVgsR0FBcUIsS0FBckIsR0FBNkIsR0FBaEQ7QUFDQSxjQUFVRSxNQUFWLEdBQW1CRyxVQUFuQjtBQUNEOztBQUVNLFNBQVNqQixXQUFULENBQXFCVSxDQUFyQixFQUFtQztBQUFBLE1BQVhDLElBQVcsdUVBQUosRUFBSTtBQUFBLHdCQUNaQSxJQURZLENBQ2pDTyxTQURpQztBQUFBLE1BQ2pDQSxTQURpQyxtQ0FDckIsS0FEcUI7O0FBRXhDLE1BQUlDLE1BQU1DLE9BQU4sQ0FBY1YsQ0FBZCxLQUFvQlcsWUFBWUMsTUFBWixDQUFtQlosQ0FBbkIsQ0FBeEIsRUFBK0M7QUFDN0MsV0FBT0QsaUJBQWlCQyxDQUFqQixFQUFvQkMsSUFBcEIsQ0FBUDtBQUNEO0FBQ0QsTUFBSSxDQUFDWSxPQUFPQyxRQUFQLENBQWdCZCxDQUFoQixDQUFMLEVBQXlCO0FBQ3ZCLFdBQU9lLE9BQU9mLENBQVAsQ0FBUDtBQUNEO0FBQ0QsTUFBSVEsU0FBSixFQUFlO0FBQ2IsV0FBT1IsRUFBRWdCLE9BQUYsQ0FBVSxDQUFWLENBQVA7QUFDRDtBQUNELE1BQUlDLEtBQUtDLEdBQUwsQ0FBU2xCLENBQVQsSUFBYyxHQUFkLElBQXFCaUIsS0FBS0MsR0FBTCxDQUFTbEIsQ0FBVCxJQUFjLEtBQXZDLEVBQThDO0FBQzVDLFdBQU9BLEVBQUVnQixPQUFGLENBQVUsQ0FBVixDQUFQO0FBQ0Q7QUFDRCxNQUFNWixTQUFTSixFQUFFbUIsV0FBRixDQUFjLENBQWQsQ0FBZjtBQUNBLE1BQU1DLFVBQVVoQixPQUFPaUIsT0FBUCxDQUFlLElBQWYsQ0FBaEI7QUFDQSxTQUFPRCxZQUFZaEIsT0FBT0UsTUFBUCxHQUFnQixDQUE1QixHQUFnQ0YsT0FBT2tCLEtBQVAsQ0FBYSxDQUFiLEVBQWdCLENBQUMsQ0FBakIsQ0FBaEMsR0FBc0RsQixNQUE3RDtBQUNEOztBQUVEO0FBQ0Esa0JBQUtiLEdBQUwsR0FBV0EsSUFBWDs7a0JBRWVBLEkiLCJmaWxlIjoibG9nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGx1bWEgZnJvbSAnLi4vZ2xvYmFscyc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG4vKiBnbG9iYWwgY29uc29sZSAqL1xuXG5jb25zdCBsb2cgPSB7XG4gIHByaW9yaXR5OiAwLFxuICB0YWJsZShwcmlvcml0eSwgdGFibGUpIHtcbiAgICBpZiAocHJpb3JpdHkgPD0gbG9nLnByaW9yaXR5ICYmIHRhYmxlKSB7XG4gICAgICBjb25zb2xlLnRhYmxlKHRhYmxlKTtcbiAgICB9XG4gIH0sXG4gIGxvZyhwcmlvcml0eSwgLi4uYXJncykge1xuICAgIGlmIChwcmlvcml0eSA8PSBsb2cucHJpb3JpdHkpIHtcbiAgICAgIGNvbnNvbGUuZGVidWcoLi4uYXJncyk7XG4gICAgfVxuICB9LFxuICBpbmZvKHByaW9yaXR5LCAuLi5hcmdzKSB7XG4gICAgaWYgKHByaW9yaXR5IDw9IGxvZy5wcmlvcml0eSkge1xuICAgICAgY29uc29sZS5sb2coLi4uYXJncyk7XG4gICAgfVxuICB9LFxuICB3YXJuKHByaW9yaXR5LCAuLi5hcmdzKSB7XG4gICAgaWYgKHByaW9yaXR5IDw9IGxvZy5wcmlvcml0eSkge1xuICAgICAgY29uc29sZS53YXJuKC4uLmFyZ3MpO1xuICAgIH1cbiAgfVxufTtcblxuZnVuY3Rpb24gZm9ybWF0QXJyYXlWYWx1ZSh2LCBvcHRzKSB7XG4gIGNvbnN0IHttYXhFbHRzID0gMTYsIHNpemUgPSAxfSA9IG9wdHM7XG4gIGxldCBzdHJpbmcgPSAnWyc7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdi5sZW5ndGggJiYgaSA8IG1heEVsdHM7ICsraSkge1xuICAgIGlmIChpID4gMCkge1xuICAgICAgc3RyaW5nICs9IGAsJHsoaSAlIHNpemUgPT09IDApID8gJyAnIDogJyd9YDtcbiAgICB9XG4gICAgc3RyaW5nICs9IGZvcm1hdFZhbHVlKHZbaV0sIG9wdHMpO1xuICB9XG4gIGNvbnN0IHRlcm1pbmF0b3IgPSB2Lmxlbmd0aCA+IG1heEVsdHMgPyAnLi4uJyA6ICddJztcbiAgcmV0dXJuIGAke3N0cmluZ30ke3Rlcm1pbmF0b3J9YDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdFZhbHVlKHYsIG9wdHMgPSB7fSkge1xuICBjb25zdCB7aXNJbnRlZ2VyID0gZmFsc2V9ID0gb3B0cztcbiAgaWYgKEFycmF5LmlzQXJyYXkodikgfHwgQXJyYXlCdWZmZXIuaXNWaWV3KHYpKSB7XG4gICAgcmV0dXJuIGZvcm1hdEFycmF5VmFsdWUodiwgb3B0cyk7XG4gIH1cbiAgaWYgKCFOdW1iZXIuaXNGaW5pdGUodikpIHtcbiAgICByZXR1cm4gU3RyaW5nKHYpO1xuICB9XG4gIGlmIChpc0ludGVnZXIpIHtcbiAgICByZXR1cm4gdi50b0ZpeGVkKDApO1xuICB9XG4gIGlmIChNYXRoLmFicyh2KSA+IDEwMCAmJiBNYXRoLmFicyh2KSA8IDEwMDAwKSB7XG4gICAgcmV0dXJuIHYudG9GaXhlZCgwKTtcbiAgfVxuICBjb25zdCBzdHJpbmcgPSB2LnRvUHJlY2lzaW9uKDIpO1xuICBjb25zdCBkZWNpbWFsID0gc3RyaW5nLmluZGV4T2YoJy4wJyk7XG4gIHJldHVybiBkZWNpbWFsID09PSBzdHJpbmcubGVuZ3RoIC0gMiA/IHN0cmluZy5zbGljZSgwLCAtMSkgOiBzdHJpbmc7XG59XG5cbi8vIE1ha2UgYXZhaWxhYmxlIGluIGJyb3dzZXIgY29uc29sZVxubHVtYS5sb2cgPSBsb2c7XG5cbmV4cG9ydCBkZWZhdWx0IGxvZztcbiJdfQ==

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	exports.getUniformDescriptors = getUniformDescriptors;
	
	var _webgl = __webpack_require__(188);
	
	var _webglChecks = __webpack_require__(201);
	
	var _vertexAttributes = __webpack_require__(210);
	
	var VertexAttributes = _interopRequireWildcard(_vertexAttributes);
	
	var _buffer2 = __webpack_require__(200);
	
	var _buffer3 = _interopRequireDefault(_buffer2);
	
	var _texture = __webpack_require__(211);
	
	var _texture2 = _interopRequireDefault(_texture);
	
	var _uniforms = __webpack_require__(212);
	
	var _shader = __webpack_require__(202);
	
	var _shaderlib = __webpack_require__(213);
	
	var _shaderlib2 = _interopRequireDefault(_shaderlib);
	
	var _utils = __webpack_require__(204);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Program = function () {
	  _createClass(Program, null, [{
	    key: 'makeFrom',
	
	
	    /**
	     * Returns a Program wrapped WebGLProgram from a variety of inputs.
	     * Allows other functions to transparently accept raw WebGLPrograms etc
	     * and manipulate them using the methods in the `Program` class.
	     * Checks for ".handle"
	     *
	     * @param {WebGLRenderingContext} gl - if a new buffer needs to be initialized
	     * @param {*} object - candidate that will be coerced to a buffer
	     * @returns {Program} - Program object that wraps the buffer parameter
	     */
	    value: function makeFrom(gl) {
	      var object = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      return object instanceof Program ? object :
	      // Use .handle if available, else use 'program' directly
	      new Program(gl).setData({ handle: object.handle || object });
	    }
	
	    /*
	     * @classdesc
	     * Handles creation of programs, mapping of attributes and uniforms
	     *
	     * @class
	     * @param {WebGLRenderingContext} gl - gl context
	     * @param {Object} opts - options
	     * @param {String} opts.vs - Vertex shader source
	     * @param {String} opts.fs - Fragment shader source
	     * @param {String} opts.id= - Id
	     */
	    /* eslint-disable max-statements */
	
	  }]);
	
	  function Program(gl) {
	    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	        id = _ref.id,
	        _ref$vs = _ref.vs,
	        vs = _ref$vs === undefined ? _shaderlib2.default.DEFAULT.vs : _ref$vs,
	        _ref$fs = _ref.fs,
	        fs = _ref$fs === undefined ? _shaderlib2.default.DEFAULT.fs : _ref$fs,
	        defaultUniforms = _ref.defaultUniforms,
	        handle = _ref.handle;
	
	    _classCallCheck(this, Program);
	
	    (0, _webglChecks.assertWebGLContext)(gl);
	
	    // Assign default uniforms if any of the default shaders is being used
	    if (vs === _shaderlib2.default.DEFAULT.vs || fs === _shaderlib2.default.DEFAULT.fs && defaultUniforms === undefined) {
	      defaultUniforms = _shaderlib2.default.DEFAULT.defaultUniforms;
	    }
	
	    // Create shaders if needed
	    this.vs = typeof vs === 'string' ? new _shader.VertexShader(gl, vs) : vs;
	    this.fs = typeof vs === 'string' ? new _shader.FragmentShader(gl, fs) : fs;
	
	    (0, _assert2.default)(this.vs instanceof _shader.VertexShader, 'Program: bad vertex shader');
	    (0, _assert2.default)(this.fs instanceof _shader.FragmentShader, 'Program: bad fragment shader');
	
	    // If program is not named, name it after shader names
	    var programName = this.vs.getName() || this.fs.getName();
	    programName = programName ? programName + '-program' : 'program';
	    this.id = id || (0, _utils.uid)(programName);
	
	    this.gl = gl;
	    this.defaultUniforms = defaultUniforms;
	    this.handle = handle;
	    if (!this.handle) {
	      this.handle = gl.createProgram();
	      this._compileAndLink();
	    }
	    if (!this.handle) {
	      throw new Error('Failed to create program');
	    }
	
	    // determine attribute locations (i.e. indices)
	    this._attributeLocations = this._getAttributeLocations();
	    this._attributeCount = this.getAttributeCount();
	    this._warn = [];
	    this._filledLocations = {};
	
	    // prepare uniform setters
	    this._uniformSetters = this._getUniformSetters();
	    this._uniformCount = this.getUniformCount();
	    this._textureIndexCounter = 0;
	
	    this.userData = {};
	    Object.seal(this);
	  }
	  /* eslint-enable max-statements */
	
	  _createClass(Program, [{
	    key: 'delete',
	    value: function _delete() {
	      var gl = this.gl;
	
	      if (this.handle) {
	        gl.deleteProgram(this.handle);
	      }
	      this.handle = null;
	      return this;
	    }
	  }, {
	    key: 'use',
	    value: function use() {
	      var gl = this.gl;
	
	      gl.useProgram(this.handle);
	      return this;
	    }
	
	    // DEPRECATED METHODS
	
	  }, {
	    key: 'clearBuffers',
	    value: function clearBuffers() {
	      this._filledLocations = {};
	      return this;
	    }
	  }, {
	    key: '_print',
	    value: function _print(bufferName) {
	      return 'Program ' + this.id + ': Attribute ' + bufferName;
	    }
	
	    /**
	     * Attach a map of Buffers values to a program
	     * Only attributes with names actually present in the linked program
	     * will be updated. Other supplied buffers will be ignored.
	     *
	     * @param {Object} buffers - An object map with attribute names being keys
	     *  and values are expected to be instances of Buffer.
	     * @returns {Program} Returns itself for chaining.
	     */
	    /* eslint-disable max-statements */
	
	  }, {
	    key: 'setBuffers',
	    value: function setBuffers(buffers) {
	      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	          _ref2$clear = _ref2.clear,
	          clear = _ref2$clear === undefined ? true : _ref2$clear,
	          _ref2$check = _ref2.check,
	          check = _ref2$check === undefined ? true : _ref2$check,
	          _ref2$drawParams = _ref2.drawParams,
	          drawParams = _ref2$drawParams === undefined ? {} : _ref2$drawParams;
	
	      var gl = this.gl;
	
	      if (Array.isArray(buffers)) {
	        throw new Error('Program.setBuffers expects map of buffers');
	      }
	
	      if (clear) {
	        this.clearBuffers();
	      }
	
	      // indexing is autodetected - buffer with target gl.ELEMENT_ARRAY_BUFFER
	      // index type is saved for drawElement calls
	      drawParams.isInstanced = false;
	      drawParams.isIndexed = false;
	      drawParams.indexType = null;
	
	      var _sortBuffersByLocatio = this._sortBuffersByLocation(buffers),
	          locations = _sortBuffersByLocatio.locations,
	          elements = _sortBuffersByLocatio.elements;
	
	      // Process locations in order
	
	
	      for (var location = 0; location < locations.length; ++location) {
	        var bufferName = locations[location];
	        var buffer = buffers[bufferName];
	        // DISABLE MISSING ATTRIBUTE
	        if (!buffer) {
	          VertexAttributes.disable(gl, location);
	        } else {
	          var divisor = buffer.layout.instanced ? 1 : 0;
	          VertexAttributes.enable(gl, location);
	          VertexAttributes.setBuffer({ gl: gl, location: location, buffer: buffer });
	          VertexAttributes.setDivisor(gl, location, divisor);
	          drawParams.isInstanced = buffer.layout.instanced > 0;
	          this._filledLocations[bufferName] = true;
	        }
	      }
	
	      // SET ELEMENTS ARRAY BUFFER
	      if (elements) {
	        var _buffer = buffers[elements];
	        _buffer.bind();
	        drawParams.isIndexed = true;
	        drawParams.indexType = _buffer.layout.type;
	      }
	
	      if (check) {
	        this.checkBuffers();
	      }
	
	      return this;
	    }
	    /* eslint-enable max-statements */
	
	  }, {
	    key: 'checkBuffers',
	    value: function checkBuffers() {
	      for (var attributeName in this._attributeLocations) {
	        if (!this._filledLocations[attributeName] && !this._warn[attributeName]) {
	          var location = this._attributeLocations[attributeName];
	          // throw new Error(`Program ${this.id}: ` +
	          //   `Attribute ${location}:${attributeName} not supplied`);
	          _utils.log.warn(0, 'Program ' + this.id + ': ' + ('Attribute ' + location + ':' + attributeName + ' not supplied'));
	          this._warn[attributeName] = true;
	        }
	      }
	      return this;
	    }
	
	    /*
	     * @returns {Program} Returns itself for chaining.
	     */
	
	  }, {
	    key: 'unsetBuffers',
	    value: function unsetBuffers() {
	      var gl = this.gl;
	
	      var length = this._attributeCount;
	      for (var i = 1; i < length; ++i) {
	        // VertexAttributes.setDivisor(gl, i, 0);
	        VertexAttributes.disable(gl, i);
	      }
	      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);
	      return this;
	    }
	
	    /**
	     * Apply a set of uniform values to a program
	     * Only uniforms with names actually present in the linked program
	     * will be updated.
	     * other uniforms will be ignored
	     *
	     * @param {Object} uniformMap - An object with names being keys
	     * @returns {Program} - returns itself for chaining.
	     */
	    /* eslint-disable max-depth */
	
	  }, {
	    key: 'setUniforms',
	    value: function setUniforms(uniforms) {
	      for (var uniformName in uniforms) {
	        var uniform = uniforms[uniformName];
	        var uniformSetter = this._uniformSetters[uniformName];
	        if (uniformSetter) {
	          if (uniform instanceof _texture2.default) {
	            if (uniformSetter.textureIndex === undefined) {
	              uniformSetter.textureIndex = this._textureIndexCounter++;
	            }
	            // Bind texture to index, and set the uniform sampler to the index
	            var texture = uniform;
	            var textureIndex = uniformSetter.textureIndex;
	            // console.debug('setting texture', textureIndex, texture);
	
	            texture.bind(textureIndex);
	            uniformSetter(textureIndex);
	          } else {
	            // Just set the value
	            uniformSetter(uniform);
	          }
	        }
	      }
	      return this;
	    }
	    /* eslint-enable max-depth */
	
	    // RAW WEBGL METHODS
	
	  }, {
	    key: 'getAttachedShadersCount',
	    value: function getAttachedShadersCount() {
	      return this.getProgramParameter(_webgl.GL.ATTACHED_SHADERS);
	    }
	
	    // ATTRIBUTES API
	    // Note: Locations are numeric indices
	
	  }, {
	    key: 'getAttributeCount',
	    value: function getAttributeCount() {
	      return this.getProgramParameter(_webgl.GL.ACTIVE_ATTRIBUTES);
	    }
	
	    /**
	     * Returns an object with info about attribute at index "location"/
	     * @param {int} location - index of an attribute
	     * @returns {WebGLActiveInfo} - info about an active attribute
	     *   fields: {name, size, type}
	     */
	
	  }, {
	    key: 'getAttributeInfo',
	    value: function getAttributeInfo(location) {
	      return this.gl.getActiveAttrib(this.handle, location);
	    }
	  }, {
	    key: 'getAttributeName',
	    value: function getAttributeName(location) {
	      return this.getAttributeInfo(location).name;
	    }
	
	    /**
	     * Returns location (index) of a name
	     * @param {String} attributeName - name of an attribute
	     *   (matches name in a linked shader)
	     * @returns {String[]} - array of actual attribute names from shader linking
	     */
	
	  }, {
	    key: 'getAttributeLocation',
	    value: function getAttributeLocation(attributeName) {
	      return this.gl.getAttribLocation(this.handle, attributeName);
	    }
	
	    // UNIFORMS API
	    // Note: locations are opaque structures
	
	  }, {
	    key: 'getUniformCount',
	    value: function getUniformCount() {
	      return this.getProgramParameter(_webgl.GL.ACTIVE_UNIFORMS);
	    }
	
	    /*
	     * @returns {WebGLActiveInfo} - object with {name, size, type}
	     */
	
	  }, {
	    key: 'getUniformInfo',
	    value: function getUniformInfo(index) {
	      return this.gl.getActiveUniform(this.handle, index);
	    }
	
	    /*
	     * @returns {WebGLUniformLocation} - opaque object representing location
	     * of uniform, used by setter methods
	     */
	
	  }, {
	    key: 'getUniformLocation',
	    value: function getUniformLocation(name) {
	      return this.gl.getUniformLocation(this.handle, name);
	    }
	  }, {
	    key: 'getUniformValue',
	    value: function getUniformValue(location) {
	      return this.gl.getUniform(this.handle, location);
	    }
	
	    // PROGRAM API
	
	  }, {
	    key: 'isFlaggedForDeletion',
	    value: function isFlaggedForDeletion() {
	      return this.getProgramParameter(_webgl.GL.DELETE_STATUS);
	    }
	  }, {
	    key: 'getLastLinkStatus',
	    value: function getLastLinkStatus() {
	      return this.getProgramParameter(_webgl.GL.LINK_STATUS);
	    }
	  }, {
	    key: 'getLastValidationStatus',
	    value: function getLastValidationStatus() {
	      return this.getProgramParameter(_webgl.GL.VALIDATE_STATUS);
	    }
	
	    // WEBGL2 INTERFACE
	
	    // This may be gl.SEPARATE_ATTRIBS or gl.INTERLEAVED_ATTRIBS.
	
	  }, {
	    key: 'getTransformFeedbackBufferMode',
	    value: function getTransformFeedbackBufferMode() {
	      (0, _webglChecks.assertWebGL2Context)(this.gl);
	      return this.getProgramParameter(this.gl.TRANSFORM_FEEDBACK_BUFFER_MODE);
	    }
	  }, {
	    key: 'getTransformFeedbackVaryingsCount',
	    value: function getTransformFeedbackVaryingsCount() {
	      (0, _webglChecks.assertWebGL2Context)(this.gl);
	      return this.getProgramParameter(this.gl.TRANSFORM_FEEDBACK_VARYINGS);
	    }
	  }, {
	    key: 'getActiveUniformBlocksCount',
	    value: function getActiveUniformBlocksCount() {
	      (0, _webglChecks.assertWebGL2Context)(this.gl);
	      return this.getProgramParameter(this.gl.ACTIVE_UNIFORM_BLOCKS);
	    }
	
	    // Retrieves the assigned color number binding for the user-defined varying
	    // out variable name for program. program must have previously been linked.
	    // [WebGLHandlesContextLoss]
	
	  }, {
	    key: 'getFragDataLocation',
	    value: function getFragDataLocation(varyingName) {
	      (0, _webglChecks.assertWebGL2Context)(this.gl);
	      return this.gl.getFragDataLocation(this.handle, varyingName);
	    }
	
	    // Return the value for the passed pname given the passed program.
	    // The type returned is the natural type for the requested pname,
	    // as given in the following table:
	    // pname returned type
	    // DELETE_STATUS GLboolean
	    // LINK_STATUS GLboolean
	    // VALIDATE_STATUS GLboolean
	    // ATTACHED_SHADERS  GLint
	    // ACTIVE_ATTRIBUTES GLint
	    // ACTIVE_UNIFORMS GLint
	    // TRANSFORM_FEEDBACK_BUFFER_MODE  GLenum
	    // TRANSFORM_FEEDBACK_VARYINGS GLint
	    // ACTIVE_UNIFORM_BLOCKS GLint
	
	  }, {
	    key: 'getProgramParameter',
	    value: function getProgramParameter(pname) {
	      return this.gl.getProgramParameter(this.handle, pname);
	    }
	
	    // PRIVATE METHODS
	
	  }, {
	    key: '_compileAndLink',
	    value: function _compileAndLink() {
	      var gl = this.gl;
	
	      gl.attachShader(this.handle, this.vs.handle);
	      gl.attachShader(this.handle, this.fs.handle);
	      gl.linkProgram(this.handle);
	      gl.validateProgram(this.handle);
	      var linked = gl.getProgramParameter(this.handle, gl.LINK_STATUS);
	      if (!linked) {
	        throw new Error('Error linking ' + gl.getProgramInfoLog(this.handle));
	      }
	    }
	  }, {
	    key: '_sortBuffersByLocation',
	    value: function _sortBuffersByLocation(buffers) {
	      var elements = null;
	      var locations = new Array(this._attributeCount);
	
	      for (var bufferName in buffers) {
	        var buffer = _buffer3.default.makeFrom(this.gl, buffers[bufferName]);
	        var location = this._attributeLocations[bufferName];
	        if (location === undefined) {
	          if (buffer.target === _webgl.GL.ELEMENT_ARRAY_BUFFER && elements) {
	            throw new Error(this._print(bufferName) + ' duplicate gl.ELEMENT_ARRAY_BUFFER');
	          } else if (buffer.target === _webgl.GL.ELEMENT_ARRAY_BUFFER) {
	            elements = bufferName;
	          } else if (!this._warn[bufferName]) {
	            _utils.log.warn(2, this._print(bufferName) + ' not used');
	            this._warn[bufferName] = true;
	          }
	        } else {
	          if (buffer.target === _webgl.GL.ELEMENT_ARRAY_BUFFER) {
	            throw new Error(this._print(bufferName) + ':' + location + ' ' + 'has both location and type gl.ELEMENT_ARRAY_BUFFER');
	          }
	          locations[location] = bufferName;
	        }
	      }
	
	      return { locations: locations, elements: elements };
	    }
	
	    // Check that all active attributes are enabled
	
	  }, {
	    key: '_areAllAttributesEnabled',
	    value: function _areAllAttributesEnabled() {
	      var gl = this.gl;
	
	      var length = this._attributeCount;
	      for (var i = 0; i < length; ++i) {
	        if (!VertexAttributes.isEnabled(gl, i)) {
	          return false;
	        }
	      }
	      return true;
	    }
	
	    // determine attribute locations (maps attribute name to index)
	
	  }, {
	    key: '_getAttributeLocations',
	    value: function _getAttributeLocations() {
	      var attributeLocations = {};
	      var length = this.getAttributeCount();
	      for (var location = 0; location < length; location++) {
	        var name = this.getAttributeName(location);
	        attributeLocations[name] = this.getAttributeLocation(name);
	      }
	      return attributeLocations;
	    }
	
	    // create uniform setters
	    // Map of uniform names to setter functions
	
	  }, {
	    key: '_getUniformSetters',
	    value: function _getUniformSetters() {
	      var gl = this.gl;
	
	      var uniformSetters = {};
	      var length = this.getUniformCount();
	      for (var i = 0; i < length; i++) {
	        var info = this.getUniformInfo(i);
	        var parsedName = (0, _uniforms.parseUniformName)(info.name);
	        var location = this.getUniformLocation(parsedName.name);
	        uniformSetters[parsedName.name] = (0, _uniforms.getUniformSetter)(gl, location, info, parsedName.isArray);
	      }
	      return uniformSetters;
	    }
	  }]);
	
	  return Program;
	}();
	
	// create uniform setters
	// Map of uniform names to setter functions
	
	
	exports.default = Program;
	function getUniformDescriptors(gl, program) {
	  var uniformDescriptors = {};
	  var length = program.getUniformCount();
	  for (var i = 0; i < length; i++) {
	    var info = program.getUniformInfo(i);
	    var location = program.getUniformLocation(info.name);
	    var descriptor = (0, _uniforms.getUniformSetter)(gl, location, info);
	    uniformDescriptors[descriptor.name] = descriptor;
	  }
	  return uniformDescriptors;
	}
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getMaxAttributes = getMaxAttributes;
	exports.hasDivisor = hasDivisor;
	exports.isEnabled = isEnabled;
	exports.getBuffer = getBuffer;
	exports.getGeneric = getGeneric;
	exports.getSize = getSize;
	exports.getType = getType;
	exports.isNormalized = isNormalized;
	exports.isInteger = isInteger;
	exports.getStride = getStride;
	exports.getOffset = getOffset;
	exports.enable = enable;
	exports.disable = disable;
	exports.setDivisor = setDivisor;
	exports.getDivisor = getDivisor;
	exports.setBuffer = setBuffer;
	exports.setGeneric = setGeneric;
	exports.setGenericValues = setGenericValues;
	
	var _webgl = __webpack_require__(188);
	
	var _webglChecks = __webpack_require__(201);
	
	var _buffer = __webpack_require__(200);
	
	var _buffer2 = _interopRequireDefault(_buffer);
	
	var _utils = __webpack_require__(204);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Methods for manipulating the vertex attributes array, which is where
	 * vertex data is staged for shader execution.
	 *
	 * Vertex attributes are stored in "arrays" with indices from 0 and up.
	 * During shader execution, these indices (or 'locations') are matched to
	 * the indices assigned to shader attributes during WebGLProgram linking.
	 *
	 * Note: The global state contains an implicit vertex attribute array which
	 * the methods in this class manipulate by default. It is also possible to
	 * create and bind a VertexArrayObject to manage multiple arrays.
	 *
	 * Each vertex attribute has these properties:
	 * - Can be enabled or disabled (Only enable attrs actually used by a program)
	 * - Has an instance `divisor` (usually 1 or 0 to enable/disable instancing)
	 * - Have a size (1-4 values per vertex)
	 * - Has a value or values that is accessible in shaders
	 *
	 * Attribute values are either
	 * - Generic: a constant value for all vertices/instances, or
	 * - Bound to a WebGLBuffer with unique values for each vertex/instance
	 *
	 * When binding to a WebGLBuffer it is necessary to specify the layout of
	 * data in the buffer:
	 * - size (1-4 values per vertex)
	 * - data type (e.g. gl.FLOAT)
	 * - stride, offset, and integer normalization policy can also be specified
	 *
	 * Note: All methods in this class take a `location` index to specify which
	 * vertex attribute in the array they are operating on.
	 *
	 * Note: Attribute 0 can sometimes be treated specially by the driver,
	 * to be safe we avoid disabling it.
	 *
	 * Note: WebGL2
	 * - Improves support for integer attributes, both generic and buffered.
	 * - Setting instance "divisors" no longer require using a WebGL extension.
	 *
	 */
	
	function glGetLumaInfo(gl) {
	  if (!gl.luma) {
	    gl.luma = { extensions: {} };
	  }
	  if (gl.luma.extensions['ANGLE_instanced_arrays'] === undefined) {
	    gl.luma.extensions['ANGLE_instanced_arrays'] = gl.getExtension('ANGLE_instanced_arrays');
	  }
	  return gl.luma;
	}
	
	// ACCESSORS
	
	/**
	 * The max number of attributes in the vertex attribute array is an
	 * implementation defined limit, but never smaller than 8
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @returns {GLuint} - (max) number of attributes in the vertex attribute array
	 */
	/* eslint-disable dot-notation*/
	function getMaxAttributes(gl) {
	  (0, _webglChecks.assertWebGLContext)(gl);
	  return gl.getParameter(gl.MAX_VERTEX_ATTRIBS);
	}
	
	/**
	 * Is instance divisor availble (checks for WebGL2 or ANGLE extension)
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @returns {Boolean} - is divisor available?
	 */
	function hasDivisor(gl) {
	  (0, _webglChecks.assertWebGLContext)(gl);
	  return Boolean((0, _webglChecks.isWebGL2Context)(gl) || gl.getExtension(gl, 'ANGLE_instanced_arrays'));
	}
	
	/**
	 * Returns true if the vertex attribute is enabled at this index.
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @param {GLuint} location - ordinal number of the attribute
	 * @returns {Boolean} - enabled status
	 */
	function isEnabled(gl, location) {
	  return Boolean(get(gl, location, gl.VERTEX_ATTRIB_ARRAY_ENABLED));
	}
	
	/**
	 * Returns the currently bound buffer
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @param {GLuint} location - ordinal number of the attribute
	 * @returns {WebGLBuffer} Returns the currently bound buffer
	 */
	function getBuffer(gl, location) {
	  return get(gl, location, gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING);
	}
	
	/**
	 * Get values for generic vertex attributes
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @param {GLuint} location - ordinal number of the attribute
	 * @returns {Float32Array} (with 4 elements) representing the current value
	 * of the vertex attribute at the given index.
	 */
	function getGeneric(gl, location) {
	  return get(gl, gl.CURRENT_VERTEX_ATTRIB);
	}
	
	/**
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @param {GLuint} location - ordinal number of the attribute
	 */
	// @returns {GLint} the size of an element of the vertex array.
	function getSize(gl, location) {
	  return get(location, gl.VERTEX_ATTRIB_ARRAY_SIZE);
	}
	
	/**
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @param {GLuint} location - ordinal number of the attribute
	 */
	// @returns {GLenum} representing the array type.
	function getType(gl, location) {
	  return get(location, gl.VERTEX_ATTRIB_ARRAY_TYPE);
	}
	
	/**
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @param {GLuint} location - ordinal number of the attribute
	 */
	// @returns {GLboolean} true if fixed-point data types are normalized
	// for the vertex attribute array at the given index.
	function isNormalized(gl, location) {
	  return get(location, gl.VERTEX_ATTRIB_ARRAY_NORMALIZED);
	}
	
	/**
	 * check if an integer data type in the vertex attribute at index
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @param {GLuint} location - index of the vertex attribute.
	 * @returns {GLboolean} - true if an integer data type is in the
	 * vertex attribute array at the given index.
	 */
	function isInteger(gl, location) {
	  (0, _webglChecks.assertWebGL2Context)(gl);
	  return get(location, gl.VERTEX_ATTRIB_ARRAY_INTEGER);
	}
	
	/**
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @param {GLuint} location - ordinal number of the attribute
	 * @returns {GLint} number of bytes between successive elements in the array.
	 * 0 means that the elements are sequential.
	 */
	function getStride(gl, location) {
	  return get(location, gl.VERTEX_ATTRIB_ARRAY_STRIDE);
	}
	
	/**
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @param {GLuint} location - ordinal number of the attribute
	 * @param {GLuint} pname - enum specifying which offset to return
	 * @returns {GLuint} the address of a specified vertex attribute.
	 */
	function getOffset(gl, location) {
	  var pname = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : gl.VERTEX_ATTRIB_ARRAY_POINTER;
	
	  return gl.getVertexAttribOffset(location, pname);
	}
	
	/**
	 * @private
	 * Generic getter for information about a vertex attribute at a given position
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @param {GLuint} location - index of the vertex attribute.
	 * @param {GLenum} pname - specifies the information to query.
	 * @returns {*} - requested vertex attribute information (specified by pname)
	 */
	function get(gl, location, pname) {
	  (0, _webglChecks.assertWebGLContext)(gl);
	  return gl.getVertexAttrib(location, pname);
	}
	
	// MODIFIERS
	
	/**
	 * Enable the attribute
	 * Note: By default all attributes are disabled. Only attributes
	 * used by a program's shaders should be enabled.
	 *
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @param {GLuint} location - ordinal number of the attribute
	 */
	function enable(gl, location) {
	  gl.enableVertexAttribArray(location);
	}
	
	/**
	 * Disable the attribute
	 * Note: Only attributes used by a program's shaders should be enabled.
	 *
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @param {GLuint} location - ordinal number of the attribute
	 */
	function disable(gl, location) {
	  // Don't disable location 0
	  if (location > 0) {
	    gl.disableVertexAttribArray(location);
	  }
	}
	
	/**
	 * Set the frequency divisor used for instanced rendering.
	 * Note: Usually simply set to 1 or 0 to enable/disable instanced rendering
	 * for a specific attribute.
	 *
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @param {GLuint} location - ordinal number of the attribute
	 * @param {GLuint} divisor - instances that pass between updates of attribute
	 */
	function setDivisor(gl, location, divisor) {
	  if ((0, _webglChecks.isWebGL2Context)(gl)) {
	    gl.vertexAttribDivisor(location, divisor);
	    return;
	  }
	  var ext = glGetLumaInfo(gl).extensions['ANGLE_instanced_arrays'];
	  if (ext) {
	    ext.vertexAttribDivisorANGLE(location, divisor);
	    return;
	  }
	  // Accept divisor 0 even if instancing is not supported (0 = no instancing)
	  if (divisor !== 0) {
	    throw new Error('WebGL instanced rendering not supported');
	  }
	}
	
	/**
	 * Returns the frequency divisor used for instanced rendering.
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @param {GLuint} location - ordinal number of the attribute
	 * @returns {GLuint} divisor
	 */
	function getDivisor(gl, location) {
	  (0, _assert2.default)(location > 0);
	  if ((0, _webglChecks.isWebGL2Context)(gl)) {
	    var divisor = get(location, gl.VERTEX_ATTRIB_ARRAY_DIVISOR);
	    return divisor;
	  }
	  var ext = glGetLumaInfo(gl).extensions['ANGLE_instanced_arrays'];
	  if (ext) {
	    var _divisor = get(location, ext.VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE);
	    return _divisor;
	  }
	  // if instancing is not available, return 0 meaning divisor has not been set
	  return 0;
	}
	
	/**
	 * Set a location in vertex attributes array to a buffer, specifying
	 * its data layout and integer to float conversion and normalization flags
	 *
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @param {GLuint} location - ordinal number of the attribute
	 * @param {WebGLBuffer|Buffer} buffer - WebGL buffer to set as value
	 * @param {GLuint} target=gl.ARRAY_BUFFER - which target to bind to
	 * @param {Object} layout= Optional data layout, defaults to buffer's layout
	 * @param {GLuint} layout.size - number of values per element (1-4)
	 * @param {GLuint} layout.type - type of values (e.g. gl.FLOAT)
	 * @param {GLbool} layout.normalized=false - normalize integers to [-1,1], [0,1]
	 * @param {GLuint} layout.integer=false - WebGL2 only, disable int-to-float conv
	 * @param {GLuint} layout.stride=0 - supports strided arrays
	 * @param {GLuint} layout.offset=0 - supports strided arrays
	 */
	function setBuffer() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      gl = _ref.gl,
	      location = _ref.location,
	      buffer = _ref.buffer,
	      target = _ref.target,
	      layout = _ref.layout;
	
	  (0, _webglChecks.assertWebGLContext)(gl);
	  buffer = _buffer2.default.makeFrom(gl, buffer);
	
	  // Copy main data characteristics from buffer
	  target = (0, _webgl.glGet)(target !== undefined ? target : buffer.target);
	  layout = layout !== undefined ? layout : buffer.layout;
	  (0, _assert2.default)(target, 'setBuffer needs target');
	  (0, _assert2.default)(layout, 'setBuffer called on uninitialized buffer');
	
	  // a non-zero named buffer object must be bound to the GL_ARRAY_BUFFER target
	  buffer.bind({ target: gl.ARRAY_BUFFER });
	
	  // Attach bound ARRAY_BUFFER with specified buffer format to location
	  if (!layout.integer) {
	    gl.vertexAttribPointer(location, layout.size, (0, _webgl.glGet)(layout.type), layout.normalized, layout.stride, layout.offset);
	  } else {
	    // specifies *integer* data formats and locations of vertex attributes
	    // For glVertexAttribIPointer, Values are always left as integer values.
	    // Only accepts the integer types gl.BYTE, gl.UNSIGNED_BYTE,
	    // gl.SHORT, gl.UNSIGNED_SHORT, gl.INT, gl.UNSIGNED_INT
	    (0, _webglChecks.assertWebGL2Context)(gl);
	    gl.vertexAttribIPointer(location, layout.size, (0, _webgl.glGet)(layout.type), layout.stride, layout.offset);
	  }
	
	  buffer.unbind({ target: gl.ARRAY_BUFFER });
	}
	
	/*
	 * Specify values for generic vertex attributes
	 * Generic vertex attributes are constant for all vertices
	 * Up to 4 values depending on attribute size
	 *
	 * @param {WebGLRenderingContext} gl - webgl context
	 * @param {GLuint} location - ordinal number of the attribute
	 * @param {GLuint} divisor - instances that pass between updates of attribute
	 */
	function setGeneric(_ref2) {
	  var gl = _ref2.gl,
	      location = _ref2.location,
	      array = _ref2.array;
	
	  _utils.log.warn(0, 'VertexAttributes.setGeneric is not well tested');
	  // throw new Error('vertex attribute size must be between 1 and 4');
	
	  if (array instanceof Float32Array) {
	    gl.vertexAttrib4fv(location, array);
	  } else if (array instanceof Int32Array) {
	    (0, _webglChecks.assertWebGL2Context)(gl);
	    gl.vertexAttribI4iv(location, array);
	  } else if (array instanceof Uint32Array) {
	    (0, _webglChecks.assertWebGL2Context)(gl);
	    gl.vertexAttribI4uiv(location, array);
	  }
	}
	
	/*
	 * Specify values for generic vertex attributes
	 * Generic vertex attributes are constant for all vertices
	 * Up to 4 values depending on attribute size
	 *
	 * @param {GLuint} location - ordinal number of the attribute
	 * @param {GLuint} divisor - instances that pass between updates of attribute
	 */
	/* eslint-disable max-params */
	function setGenericValues(gl, location, v0, v1, v2, v3) {
	  _utils.log.warn(0, 'VertexAttributes.setGenericValues is not well tested');
	  switch (arguments.length - 1) {
	    case 1:
	      gl.vertexAttrib1f(location, v0);break;
	    case 2:
	      gl.vertexAttrib2f(location, v0, v1);break;
	    case 3:
	      gl.vertexAttrib3f(location, v0, v1, v2);break;
	    case 4:
	      gl.vertexAttrib4f(location, v0, v1, v2, v3);break;
	    default:
	      throw new Error('vertex attribute size must be between 1 and 4');
	  }
	
	  // assert(gl instanceof WebGL2RenderingContext, 'WebGL2 required');
	  // Looks like these will check how many arguments were supplied?
	  // gl.vertexAttribI4i(location, v0, v1, v2, v3);
	  // gl.vertexAttribI4ui(location, v0, v1, v2, v3);
	}
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _webgl = __webpack_require__(188);
	
	var _webglChecks = __webpack_require__(201);
	
	var _buffer = __webpack_require__(200);
	
	var _buffer2 = _interopRequireDefault(_buffer);
	
	var _utils = __webpack_require__(204);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Texture = function () {
	
	  /* eslint-disable max-statements */
	  function Texture(gl, _ref) {
	    var _ref$id = _ref.id,
	        id = _ref$id === undefined ? (0, _utils.uid)('texture') : _ref$id,
	        _ref$unpackFlipY = _ref.unpackFlipY,
	        unpackFlipY = _ref$unpackFlipY === undefined ? true : _ref$unpackFlipY,
	        _ref$magFilter = _ref.magFilter,
	        magFilter = _ref$magFilter === undefined ? _webgl.GL.NEAREST : _ref$magFilter,
	        _ref$minFilter = _ref.minFilter,
	        minFilter = _ref$minFilter === undefined ? _webgl.GL.NEAREST : _ref$minFilter,
	        _ref$wrapS = _ref.wrapS,
	        wrapS = _ref$wrapS === undefined ? _webgl.GL.CLAMP_TO_EDGE : _ref$wrapS,
	        _ref$wrapT = _ref.wrapT,
	        wrapT = _ref$wrapT === undefined ? _webgl.GL.CLAMP_TO_EDGE : _ref$wrapT,
	        _ref$target = _ref.target,
	        target = _ref$target === undefined ? _webgl.GL.TEXTURE_2D : _ref$target,
	        handle = _ref.handle,
	        opts = _objectWithoutProperties(_ref, ['id', 'unpackFlipY', 'magFilter', 'minFilter', 'wrapS', 'wrapT', 'target', 'handle']);
	
	    _classCallCheck(this, Texture);
	
	    (0, _webglChecks.assertWebGLContext)(gl);
	
	    this.handle = handle || gl.createTexture();
	    // if (!this.handle) {
	    // }
	
	    this.id = id;
	    this.gl = gl;
	    this.target = target;
	    this.hasFloatTexture = gl.getExtension('OES_texture_float');
	    this.width = null;
	    this.height = null;
	    this.textureUnit = undefined;
	    this.userData = {};
	
	    this.setPixelStorageModes(_extends({}, opts, { unpackFlipY: unpackFlipY }));
	    this.setParameters(_extends({}, opts, { magFilter: magFilter, minFilter: minFilter, wrapS: wrapS, wrapT: wrapT }));
	  }
	  /* eslint-enable max-statements */
	
	  _createClass(Texture, [{
	    key: 'delete',
	    value: function _delete() {
	      if (this.handle) {
	        this.gl.deleteTexture(this.handle);
	        this.handle = null;
	      }
	      return this;
	    }
	  }, {
	    key: 'toString',
	    value: function toString() {
	      return 'Texture(' + this.id + ',' + this.width + 'x' + this.height + ')';
	    }
	  }, {
	    key: 'generateMipmap',
	    value: function generateMipmap() {
	      this.gl.bindTexture(this.target, this.handle);
	      this.gl.generateMipmap(this.target);
	      this.gl.bindTexture(this.target, null);
	      return this;
	    }
	
	    /*
	     * @param {*} pixels -
	     *  null - create empty texture of specified format
	     *  Typed array - init from image data in typed array
	     *  Buffer|WebGLBuffer - (WEBGL2) init from image data in WebGLBuffer
	     *  HTMLImageElement|Image - Inits with content of image. Auto width/height
	     *  HTMLCanvasElement - Inits with contents of canvas. Auto width/height
	     *  HTMLVideoElement - Creates video texture. Auto width/height
	     *
	     * @param {GLint} width -
	     * @param {GLint} height -
	     * @param {GLint} mipMapLevel -
	     * @param {GLenum} format - format of image data.
	     * @param {GLenum} type
	     *  - format of array (autodetect from type) or
	     *  - (WEBGL2) format of buffer
	     * @param {Number} offset - (WEBGL2) offset from start of buffer
	     * @param {GLint} border - must be 0.
	     */
	    /* eslint-disable max-len, max-statements, complexity */
	
	  }, {
	    key: 'setImageData',
	    value: function setImageData(_ref2) {
	      var _ref2$target = _ref2.target,
	          target = _ref2$target === undefined ? this.target : _ref2$target,
	          _ref2$pixels = _ref2.pixels,
	          pixels = _ref2$pixels === undefined ? null : _ref2$pixels,
	          _ref2$data = _ref2.data,
	          data = _ref2$data === undefined ? null : _ref2$data,
	          width = _ref2.width,
	          height = _ref2.height,
	          _ref2$mipmapLevel = _ref2.mipmapLevel,
	          mipmapLevel = _ref2$mipmapLevel === undefined ? 0 : _ref2$mipmapLevel,
	          _ref2$format = _ref2.format,
	          format = _ref2$format === undefined ? _webgl.GL.RGBA : _ref2$format,
	          type = _ref2.type,
	          _ref2$offset = _ref2.offset,
	          offset = _ref2$offset === undefined ? 0 : _ref2$offset,
	          _ref2$border = _ref2.border,
	          border = _ref2$border === undefined ? 0 : _ref2$border,
	          opts = _objectWithoutProperties(_ref2, ['target', 'pixels', 'data', 'width', 'height', 'mipmapLevel', 'format', 'type', 'offset', 'border']);
	
	      var gl = this.gl;
	
	
	      pixels = pixels || data;
	
	      // Support ndarrays
	      if (pixels && pixels.data) {
	        var ndarray = pixels;
	        pixels = ndarray.data;
	        width = ndarray.shape[0];
	        height = ndarray.shape[1];
	      }
	
	      gl.bindTexture(this.target, this.handle);
	
	      if (pixels === null) {
	
	        // Create an minimal texture
	        width = width || 1;
	        height = height || 1;
	        type = type || _webgl.GL.UNSIGNED_BYTE;
	        // pixels = new Uint8Array([255, 0, 0, 1]);
	        gl.texImage2D(target, mipmapLevel, format, width, height, border, format, type, pixels);
	        this.width = width;
	        this.height = height;
	      } else if (ArrayBuffer.isView(pixels)) {
	
	        // Create from a typed array
	        (0, _assert2.default)(width > 0 && height > 0, 'Texture2D: Width and height required');
	        type = type || (0, _webgl.glTypeFromArray)(pixels);
	        // TODO - WebGL2 check?
	        if (type === gl.FLOAT && !this.hasFloatTexture) {
	          throw new Error('floating point textures are not supported.');
	        }
	        gl.texImage2D(target, mipmapLevel, format, width, height, border, format, type, pixels);
	        this.width = width;
	        this.height = height;
	      } else if (pixels instanceof _webgl.WebGLBuffer || pixels instanceof _buffer2.default) {
	
	        // WebGL2 allows us to create texture directly from a WebGL buffer
	        (0, _assert2.default)(gl instanceof _webgl.WebGL2RenderingContext, 'Requires WebGL2');
	        type = type || _webgl.GL.UNSIGNED_BYTE;
	        // This texImage2D signature uses currently bound GL_PIXEL_UNPACK_BUFFER
	        var buffer = _buffer2.default.makeFrom(pixels);
	        gl.bindBuffer(_webgl.GL.PIXEL_UNPACK_BUFFER, buffer.handle);
	        gl.texImage2D(target, mipmapLevel, format, width, height, border, format, type, offset);
	        gl.bindBuffer(_webgl.GL.GL_PIXEL_UNPACK_BUFFER, null);
	        this.width = width;
	        this.height = height;
	      } else {
	
	        var imageSize = this._deduceImageSize(pixels);
	        // Assume pixels is a browser supported object (ImageData, Canvas, ...)
	        (0, _assert2.default)(width === undefined && height === undefined, 'Texture2D.setImageData: Width and height must not be provided');
	        type = type || _webgl.GL.UNSIGNED_BYTE;
	        gl.texImage2D(target, mipmapLevel, format, format, type, pixels);
	        this.width = imageSize.width;
	        this.height = imageSize.height;
	      }
	
	      gl.bindTexture(this.target, null);
	
	      return this;
	    }
	    /* eslint-enable max-len, max-statements, complexity */
	
	    /* global ImageData, HTMLImageElement, HTMLCanvasElement, HTMLVideoElement */
	
	  }, {
	    key: '_deduceImageSize',
	    value: function _deduceImageSize(image) {
	      if (typeof ImageData !== 'undefined' && image instanceof ImageData) {
	        return { width: image.width, height: image.height };
	      } else if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement) {
	        return { width: image.naturalWidth, height: image.naturalHeight };
	      } else if (typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement) {
	        return { width: image.width, height: image.height };
	      } else if (typeof HTMLVideoElement !== 'undefined' && image instanceof HTMLVideoElement) {
	        return { width: image.videoWidth, height: image.videoHeight };
	      }
	      throw new Error('Unknown image data format. Failed to deduce image size');
	    }
	
	    /**
	     * Batch update pixel storage modes
	     * @param {GLint} packAlignment - Packing of pixel data in memory (1,2,4,8)
	     * @param {GLint} unpackAlignment - Unpacking pixel data from memory(1,2,4,8)
	     * @param {GLboolean} unpackFlipY -  Flip source data along its vertical axis
	     * @param {GLboolean} unpackPremultiplyAlpha -
	     *   Multiplies the alpha channel into the other color channels
	     * @param {GLenum} unpackColorspaceConversion -
	     *   Default color space conversion or no color space conversion.
	     *
	     * @param {GLint} packRowLength -
	     *  Number of pixels in a row.
	     * @param {} packSkipPixels -
	     *   Number of pixels skipped before the first pixel is written into memory.
	     * @param {} packSkipRows -
	     *   Number of rows of pixels skipped before first pixel is written to memory.
	     * @param {} unpackRowLength -
	     *   Number of pixels in a row.
	     * @param {} unpackImageHeight -
	     *   Image height used for reading pixel data from memory
	     * @param {} unpackSkipPixels -
	     *   Number of pixel images skipped before first pixel is read from memory
	     * @param {} unpackSkipRows -
	     *   Number of rows of pixels skipped before first pixel is read from memory
	     * @param {} unpackSkipImages -
	     *   Number of pixel images skipped before first pixel is read from memory
	     */
	    /* eslint-disable complexity, max-statements */
	
	  }, {
	    key: 'setPixelStorageModes',
	    value: function setPixelStorageModes() {
	      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          packAlignment = _ref3.packAlignment,
	          unpackAlignment = _ref3.unpackAlignment,
	          unpackFlipY = _ref3.unpackFlipY,
	          unpackPremultiplyAlpha = _ref3.unpackPremultiplyAlpha,
	          unpackColorspaceConversion = _ref3.unpackColorspaceConversion,
	          packRowLength = _ref3.packRowLength,
	          packSkipPixels = _ref3.packSkipPixels,
	          packSkipRows = _ref3.packSkipRows,
	          unpackRowLength = _ref3.unpackRowLength,
	          unpackImageHeight = _ref3.unpackImageHeight,
	          unpackSkipPixels = _ref3.unpackSkipPixels,
	          unpackSkipRows = _ref3.unpackSkipRows,
	          unpackSkipImages = _ref3.unpackSkipImages;
	
	      var gl = this.gl;
	
	
	      gl.bindTexture(this.target, this.handle);
	
	      if (packAlignment) {
	        gl.pixelStorei(gl.PACK_ALIGNMENT, packAlignment);
	      }
	      if (unpackAlignment) {
	        gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);
	      }
	      if (unpackFlipY) {
	        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, unpackFlipY);
	      }
	      if (unpackPremultiplyAlpha) {
	        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, unpackPremultiplyAlpha);
	      }
	      if (unpackColorspaceConversion) {
	        gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackColorspaceConversion);
	      }
	
	      // WEBGL2
	      if (packRowLength) {
	        gl.pixelStorei(gl.PACK_ROW_LENGTH, packRowLength);
	      }
	      if (packSkipPixels) {
	        gl.pixelStorei(gl.PACK_SKIP_PIXELS, packSkipPixels);
	      }
	      if (packSkipRows) {
	        gl.pixelStorei(gl.PACK_SKIP_ROWS, packSkipRows);
	      }
	      if (unpackRowLength) {
	        gl.pixelStorei(gl.UNPACK_ROW_LENGTH, unpackRowLength);
	      }
	      if (unpackImageHeight) {
	        gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight);
	      }
	      if (unpackSkipPixels) {
	        gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, unpackSkipPixels);
	      }
	      if (unpackSkipRows) {
	        gl.pixelStorei(gl.UNPACK_SKIP_ROWS, unpackSkipRows);
	      }
	      if (unpackSkipImages) {
	        gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, unpackSkipImages);
	      }
	
	      gl.bindTexture(this.target, null);
	      return this;
	    }
	    /* eslint-enable complexity, max-statements */
	
	    /**
	     * Batch update sampler settings
	     *
	     * @param {GLenum} magFilter - texture magnification filter.
	     * @param {GLenum} minFilter - texture minification filter
	     * @param {GLenum} wrapS - texture wrapping function for texture coordinate s.
	     * @param {GLenum} wrapT - texture wrapping function for texture coordinate t.
	     * WEBGL2 only:
	     * @param {GLenum} wrapR - texture wrapping function for texture coordinate r.
	     * @param {GLenum} compareFunc - texture comparison function.
	     * @param {GLenum} compareMode - texture comparison mode.
	     * @param {GLfloat} minLOD - minimum level-of-detail value.
	     * @param {GLfloat} maxLOD - maximum level-of-detail value.
	     * @param {GLfloat} baseLevel - Texture mipmap level
	     * @param {GLfloat} maxLevel - Maximum texture mipmap array level
	     */
	    /* eslint-disable complexity, max-statements */
	
	  }, {
	    key: 'setParameters',
	    value: function setParameters(_ref4) {
	      var magFilter = _ref4.magFilter,
	          minFilter = _ref4.minFilter,
	          wrapS = _ref4.wrapS,
	          wrapT = _ref4.wrapT,
	          wrapR = _ref4.wrapR,
	          baseLevel = _ref4.baseLevel,
	          maxLevel = _ref4.maxLevel,
	          minLOD = _ref4.minLOD,
	          maxLOD = _ref4.maxLOD,
	          compareFunc = _ref4.compareFunc,
	          compareMode = _ref4.compareMode;
	      var gl = this.gl;
	
	      gl.bindTexture(this.target, this.handle);
	
	      if (magFilter) {
	        gl.texParameteri(this.target, gl.TEXTURE_MAG_FILTER, magFilter);
	      }
	      if (minFilter) {
	        gl.texParameteri(this.target, gl.TEXTURE_MIN_FILTER, minFilter);
	      }
	      if (wrapS) {
	        gl.texParameteri(this.target, gl.TEXTURE_WRAP_S, wrapS);
	      }
	      if (wrapT) {
	        gl.texParameteri(this.target, gl.TEXTURE_WRAP_T, wrapT);
	      }
	      // WEBGL2
	      if (wrapR) {
	        gl.texParameteri(this.target, gl.TEXTURE_WRAP_R, wrapR);
	      }
	      if (baseLevel) {
	        gl.texParameteri(this.target, gl.TEXTURE_BASE_LEVEL, baseLevel);
	      }
	      if (maxLevel) {
	        gl.texParameteri(this.target, gl.TEXTURE_MAX_LEVEL, maxLevel);
	      }
	      if (compareFunc) {
	        gl.texParameteri(this.target, gl.TEXTURE_COMPARE_FUNC, compareFunc);
	      }
	      if (compareMode) {
	        gl.texParameteri(this.target, gl.TEXTURE_COMPARE_MODE, compareMode);
	      }
	      if (minLOD) {
	        gl.texParameterf(this.target, gl.TEXTURE_MIN_LOD, minLOD);
	      }
	      if (maxLOD) {
	        gl.texParameterf(this.target, gl.TEXTURE_MAX_LOD, maxLOD);
	      }
	
	      gl.bindTexture(this.target, null);
	      return this;
	    }
	    /* eslint-enable complexity, max-statements */
	
	  }, {
	    key: 'getParameters',
	    value: function getParameters() {
	      var gl = this.gl;
	
	      gl.bindTexture(this.target, this.handle);
	      var webglParams = {
	        magFilter: gl.getTexParameter(this.target, gl.TEXTURE_MAG_FILTER),
	        minFilter: gl.getTexParameter(this.target, gl.TEXTURE_MIN_FILTER),
	        wrapS: gl.getTexParameter(this.target, gl.TEXTURE_WRAP_S),
	        wrapT: gl.getTexParameter(this.target, gl.TEXTURE_WRAP_T)
	      };
	      gl.bindTexture(this.target, null);
	      return webglParams;
	    }
	
	    // Deprecated methods
	
	  }, {
	    key: 'image2D',
	    value: function image2D(_ref5) {
	      var pixels = _ref5.pixels,
	          _ref5$format = _ref5.format,
	          format = _ref5$format === undefined ? _webgl.GL.RGBA : _ref5$format,
	          _ref5$type = _ref5.type,
	          type = _ref5$type === undefined ? _webgl.GL.UNSIGNED_BYTE : _ref5$type;
	
	      // TODO - WebGL2 check?
	      if (type === _webgl.GL.FLOAT && !this.hasFloatTexture) {
	        throw new Error('floating point textures are not supported.');
	      }
	
	      this.gl.bindTexture(this.target, this.handle);
	      this.gl.texImage2D(_webgl.GL.TEXTURE_2D, 0, format, format, type, pixels);
	      this.gl.bindTexture(this.target, null);
	      return this;
	    }
	  }, {
	    key: 'update',
	    value: function update(opts) {
	      throw new Error('Texture.update() is deprecated()');
	    }
	  }]);
	
	  return Texture;
	}();
	
	exports.default = Texture;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _UNIFORM_BASE_DESCRIP;
	
	exports.parseUniformName = parseUniformName;
	exports.getUniformSetter = getUniformSetter;
	exports.checkUniformValues = checkUniformValues;
	exports.getUniformsTable = getUniformsTable;
	
	var _webgl = __webpack_require__(188);
	
	var _texture = __webpack_require__(211);
	
	var _texture2 = _interopRequireDefault(_texture);
	
	var _utils = __webpack_require__(204);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	// TODO - use tables to reduce complexity of method below
	/* eslint-disable max-len */
	var UNIFORM_BASE_DESCRIPTORS = (_UNIFORM_BASE_DESCRIP = {}, _defineProperty(_UNIFORM_BASE_DESCRIP, _webgl.GL.FLOAT, { function: 'uniform1f', type: Float32Array }), _defineProperty(_UNIFORM_BASE_DESCRIP, _webgl.GL.INT, { function: 'uniform1i', type: Uint16Array }), _defineProperty(_UNIFORM_BASE_DESCRIP, _webgl.GL.BOOL, { function: 'uniform1i', type: Uint16Array }), _defineProperty(_UNIFORM_BASE_DESCRIP, _webgl.GL.FLOAT_VEC2, { function: 'uniform2fv', type: Float32Array, elements: 2 }), _defineProperty(_UNIFORM_BASE_DESCRIP, _webgl.GL.FLOAT_VEC3, { function: 'uniform3fv', type: Float32Array, elements: 3 }), _defineProperty(_UNIFORM_BASE_DESCRIP, _webgl.GL.FLOAT_VEC4, { function: 'uniform4fv', type: Float32Array, elements: 4 }), _defineProperty(_UNIFORM_BASE_DESCRIP, _webgl.GL.INT_VEC2, { function: 'uniform2iv', type: Uint16Array, elements: 2 }), _defineProperty(_UNIFORM_BASE_DESCRIP, _webgl.GL.INT_VEC3, { function: 'uniform3iv', type: Uint16Array, elements: 3 }), _defineProperty(_UNIFORM_BASE_DESCRIP, _webgl.GL.INT_VEC4, { function: 'uniform4iv', type: Uint16Array, elements: 4 }), _defineProperty(_UNIFORM_BASE_DESCRIP, _webgl.GL.BOOL_VEC2, { function: 'uniform2iv', type: Uint16Array, elements: 2 }), _defineProperty(_UNIFORM_BASE_DESCRIP, _webgl.GL.BOOL_VEC3, { function: 'uniform3fv', type: Uint16Array, elements: 3 }), _defineProperty(_UNIFORM_BASE_DESCRIP, _webgl.GL.BOOL_VEC4, { function: 'uniform4iv', type: Uint16Array, elements: 4 }), _defineProperty(_UNIFORM_BASE_DESCRIP, _webgl.GL.FLOAT_MAT2, { function: 'uniformMatrix2fv', type: Float32Array, matrix: true, elements: 4 }), _defineProperty(_UNIFORM_BASE_DESCRIP, _webgl.GL.FLOAT_MAT3, { mfunction: 'uniformMatrix3fv', type: Float32Array, matrix: true, elements: 9 }), _defineProperty(_UNIFORM_BASE_DESCRIP, _webgl.GL.FLOAT_MAT4, { function: 'uniformMatrix4fv', type: Float32Array, matrix: true, elements: 16 }), _defineProperty(_UNIFORM_BASE_DESCRIP, _webgl.GL.SAMPLER_2D, { function: 'uniform1i', type: Uint16Array, texture: true }), _defineProperty(_UNIFORM_BASE_DESCRIP, _webgl.GL.SAMPLER_CUBE, { function: 'uniform1i', type: Uint16Array, texture: true }), _UNIFORM_BASE_DESCRIP);
	/* eslint-enable max-len */
	
	function parseUniformName(name) {
	  // name = name[name.length - 1] === ']' ?
	  // name.substr(0, name.length - 3) : name;
	
	  // if array name then clean the array brackets
	  var UNIFORM_NAME_REGEXP = /([^\[]*)(\[[0-9]+\])?/;
	  var matches = name.match(UNIFORM_NAME_REGEXP);
	  if (!matches || matches.length < 2) {
	    throw new Error('Failed to parse GLSL uniform name ' + name);
	  }
	
	  return {
	    name: matches[1],
	    length: matches[2] || 1,
	    isArray: Boolean(matches[2])
	  };
	}
	
	// Returns a Magic Uniform Setter
	/* eslint-disable complexity */
	function getUniformSetter(gl, location, info) {
	  var descriptor = UNIFORM_BASE_DESCRIPTORS[info.type];
	  if (!descriptor) {
	    throw new Error('Unknown GLSL uniform type ' + info.type);
	  }
	
	  var glFunction = gl[descriptor.function].bind(gl);
	  var TypedArray = descriptor.type;
	
	  // How many data elements does app need to provide
	  var flatArrayLength = info.size * (descriptor.elements || 1);
	
	  // console.log('getSetter', location, info, flatArrayLength);
	
	  // Set a uniform array
	  var setter = void 0;
	  if (flatArrayLength > 1) {
	    setter = function setter(val) {
	      if (!(val instanceof TypedArray)) {
	        var typedArray = new TypedArray(flatArrayLength);
	        typedArray.set(val);
	        val = typedArray;
	      }
	      (0, _assert2.default)(val.length === flatArrayLength);
	      if (descriptor.matrix) {
	        // Second param: whether to transpose the matrix. Must be false.
	        glFunction(location, false, val);
	      } else {
	        glFunction(location, val);
	      }
	    };
	  } else {
	    setter = function setter(val) {
	      return glFunction(location, val);
	    };
	  }
	
	  // Set a primitive-valued uniform
	  return setter;
	}
	
	// Basic checks of uniform values without knowledge of program
	// To facilitate early detection of e.g. undefined values in JavaScript
	function checkUniformValues(uniforms, source) {
	  for (var uniformName in uniforms) {
	    var value = uniforms[uniformName];
	    if (!checkUniformValue(value)) {
	      // Add space to source
	      source = source ? source + ' ' : '';
	      /* eslint-disable no-console */
	      /* global console */
	      // Value could be unprintable so write the object on console
	      console.error(source + ' Bad uniform ' + uniformName, value);
	      /* eslint-enable no-console */
	      throw new Error(source + ' Bad uniform ' + uniformName);
	    }
	  }
	  return true;
	}
	
	function checkUniformValue(value) {
	  var ok = true;
	
	  // Test for texture (for sampler uniforms)
	  // WebGL2: if (value instanceof Texture || value instanceof Sampler) {
	  if (value instanceof _texture2.default) {
	    ok = true;
	    // Check that every element in array is a number, and at least 1 element
	  } else if (Array.isArray(value)) {
	    var _iteratorNormalCompletion = true;
	    var _didIteratorError = false;
	    var _iteratorError = undefined;
	
	    try {
	      for (var _iterator = value[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	        var element = _step.value;
	
	        if (!isFinite(element)) {
	          ok = false;
	        }
	      }
	    } catch (err) {
	      _didIteratorError = true;
	      _iteratorError = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion && _iterator.return) {
	          _iterator.return();
	        }
	      } finally {
	        if (_didIteratorError) {
	          throw _iteratorError;
	        }
	      }
	    }
	
	    ok = ok && value.length > 0;
	    // Typed arrays can only contain numbers, but check length
	  } else if (ArrayBuffer.isView(value)) {
	    ok = value.length > 0;
	    // Check that single value is a number
	  } else if (!isFinite(value)) {
	    ok = false;
	  }
	
	  return ok;
	}
	
	// Prepares a table suitable for console.table
	/* eslint-disable max-statements */
	function getUniformsTable() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      _ref$header = _ref.header,
	      header = _ref$header === undefined ? 'Uniforms' : _ref$header,
	      program = _ref.program,
	      uniforms = _ref.uniforms;
	
	  (0, _assert2.default)(program);
	
	  var uniformLocations = program._uniformSetters;
	  var table = _defineProperty({}, header, {});
	
	  // Add program's provided uniforms
	  for (var uniformName in uniformLocations) {
	    var uniform = uniforms[uniformName];
	    if (uniform !== undefined) {
	      table[uniformName] = {
	        Type: uniform,
	        Value: (0, _utils.formatValue)(uniform)
	      };
	    }
	  }
	
	  // Add program's unprovided uniforms
	  for (var _uniformName in uniformLocations) {
	    var _uniform = uniforms[_uniformName];
	    if (_uniform === undefined) {
	      table[_uniformName] = {
	        Type: 'NOT PROVIDED',
	        Value: 'N/A'
	      };
	    }
	  }
	
	  var unusedTable = {};
	  var unusedCount = 0;
	
	  // List any unused uniforms
	  for (var _uniformName2 in uniforms) {
	    var _uniform2 = uniforms[_uniformName2];
	    if (!table[_uniformName2]) {
	      unusedCount++;
	      unusedTable[_uniformName2] = {
	        Type: 'NOT USED: ' + _uniform2,
	        Value: (0, _utils.formatValue)(_uniform2)
	      };
	    }
	  }
	
	  return { table: table, unusedTable: unusedTable, unusedCount: unusedCount };
	}
	
	/*
	  if (vector) {
	    switch (type) {
	    case GL.FLOAT:
	      glFunction = gl.uniform1f;
	      break;
	    case GL.FLOAT_VEC2:
	      glFunction = gl.uniform2fv;
	      TypedArray = isArray ? Float32Array : new Float32Array(2);
	      break;
	    case GL.FLOAT_VEC3:
	      glFunction = gl.uniform3fv;
	      TypedArray = isArray ? Float32Array : new Float32Array(3);
	      break;
	    case GL.FLOAT_VEC4:
	      glFunction = gl.uniform4fv;
	      TypedArray = isArray ? Float32Array : new Float32Array(4);
	      break;
	    case GL.INT:
	    case GL.BOOL:
	    case GL.SAMPLER_2D:
	    case GL.SAMPLER_CUBE:
	      glFunction = gl.uniform1i;
	      break;
	    case GL.INT_VEC2:
	    case GL.BOOL_VEC2:
	      glFunction = gl.uniform2iv;
	      TypedArray = isArray ? Uint16Array : new Uint16Array(2);
	      break;
	    case GL.INT_VEC3:
	    case GL.BOOL_VEC3:
	      glFunction = gl.uniform3iv;
	      TypedArray = isArray ? Uint16Array : new Uint16Array(3);
	      break;
	    case GL.INT_VEC4:
	    case GL.BOOL_VEC4:
	      glFunction = gl.uniform4iv;
	      TypedArray = isArray ? Uint16Array : new Uint16Array(4);
	      break;
	    case GL.FLOAT_MAT2:
	      matrix = true;
	      glFunction = gl.uniformMatrix2fv;
	      break;
	    case GL.FLOAT_MAT3:
	      matrix = true;
	      glFunction = gl.uniformMatrix3fv;
	      break;
	    case GL.FLOAT_MAT4:
	      matrix = true;
	      glFunction = gl.uniformMatrix4fv;
	      break;
	    default:
	      break;
	    }
	  }
	*/
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _path = __webpack_require__(214);
	
	// Default Shaders
	/* eslint-disable no-var */
	var vs = '#define SHADER_NAME luma-default-vertex\n\n#define LIGHT_MAX 4\n\n// object attributes\nattribute vec3 positions;\nattribute vec3 normals;\nattribute vec4 colors;\nattribute vec4 pickingColors;\nattribute vec2 texCoords;\n\n// camera and object matrices\nuniform mat4 viewMatrix;\nuniform mat4 viewInverseMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewProjectionMatrix;\n\n// objectMatrix * viewMatrix = worldMatrix\nuniform mat4 worldMatrix;\nuniform mat4 worldInverseMatrix;\nuniform mat4 worldInverseTransposeMatrix;\nuniform mat4 objectMatrix;\nuniform vec3 cameraPosition;\n\n// lighting configuration\nuniform bool enableLights;\nuniform vec3 ambientColor;\nuniform vec3 directionalColor;\nuniform vec3 lightingDirection;\n\n// point lights configuration\nuniform vec3 pointLocation[LIGHT_MAX];\nuniform vec3 pointColor[LIGHT_MAX];\nuniform int numberPoints;\n\n// reflection / refraction configuration\nuniform bool useReflection;\n\n// varyings\nvarying vec3 vReflection;\nvarying vec4 vColor;\nvarying vec4 vPickingColor;\nvarying vec2 vTexCoord;\nvarying vec4 vNormal;\nvarying vec3 lightWeighting;\n\nvoid main(void) {\n  vec4 mvPosition = worldMatrix * vec4(positions, 1.0);\n  vec4 transformedNormal = worldInverseTransposeMatrix * vec4(normals, 1.0);\n\n  // lighting code\n  if(!enableLights) {\n    lightWeighting = vec3(1.0, 1.0, 1.0);\n  } else {\n    vec3 plightDirection;\n    vec3 pointWeight = vec3(0.0, 0.0, 0.0);\n    float directionalLightWeighting =\n      max(dot(transformedNormal.xyz, lightingDirection), 0.0);\n    for (int i = 0; i < LIGHT_MAX; i++) {\n      if (i < numberPoints) {\n        plightDirection = normalize(\n          (viewMatrix * vec4(pointLocation[i], 1.0)).xyz - mvPosition.xyz);\n         pointWeight += max(\n          dot(transformedNormal.xyz, plightDirection), 0.0) * pointColor[i];\n       } else {\n         break;\n       }\n     }\n\n    lightWeighting = ambientColor +\n      (directionalColor * directionalLightWeighting) + pointWeight;\n  }\n\n  // refraction / reflection code\n  if (useReflection) {\n    vReflection =\n      (viewInverseMatrix[3] - (worldMatrix * vec4(positions, 1.0))).xyz;\n  } else {\n    vReflection = vec3(1.0, 1.0, 1.0);\n  }\n\n  // pass results to varyings\n  vColor = colors;\n  vPickingColor = pickingColors;\n  vTexCoord = texCoords;\n  vNormal = transformedNormal;\n  gl_Position = projectionMatrix * worldMatrix * vec4(positions, 1.0);\n}\n';
	var fs = '#define SHADER_NAME luma-default-fragment\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\n// varyings\nvarying vec4 vColor;\nvarying vec4 vPickingColor;\nvarying vec2 vTexCoord;\nvarying vec3 lightWeighting;\nvarying vec3 vReflection;\nvarying vec4 vNormal;\n\n// texture configs\nuniform bool hasTexture1;\nuniform sampler2D sampler1;\nuniform bool hasTextureCube1;\nuniform samplerCube samplerCube1;\n\n// picking configs\nuniform bool enablePicking;\nuniform bool hasPickingColors;\nuniform vec3 pickColor;\n\n// reflection / refraction configs\nuniform float reflection;\nuniform float refraction;\n\n// fog configuration\nuniform bool hasFog;\nuniform vec3 fogColor;\nuniform float fogNear;\nuniform float fogFar;\n\nvoid main(){\n  // set color from texture\n  if (!hasTexture1) {\n    gl_FragColor = vec4(vColor.rgb * lightWeighting, vColor.a);\n  } else {\n    gl_FragColor =\n      vec4(texture2D(sampler1, vec2(vTexCoord.s, vTexCoord.t)).rgb *\n      lightWeighting, 1.0);\n  }\n\n  // has cube texture then apply reflection\n  // if (hasTextureCube1) {\n  //   vec3 nReflection = normalize(vReflection);\n  //   vec3 reflectionValue;\n  //   if (refraction > 0.0) {\n  //    reflectionValue = refract(nReflection, vNormal.xyz, refraction);\n  //   } else {\n  //    reflectionValue = -reflect(nReflection, vNormal.xyz);\n  //   }\n\n  //   // TODO(nico): check whether this is right.\n  //   vec4 cubeColor = textureCube(samplerCube1,\n  //       vec3(-reflectionValue.x, -reflectionValue.y, reflectionValue.z));\n  //   gl_FragColor = vec4(mix(gl_FragColor.xyz, cubeColor.xyz, reflection), 1.0);\n  // }\n\n  // set picking\n  if (enablePicking) {\n    if (hasPickingColors) {\n      gl_FragColor = vPickingColor;\n    } else {\n      gl_FragColor = vec4(pickColor, 1.0);\n    }\n  }\n\n  // handle fog\n  // if (hasFog) {\n  //   float depth = gl_FragCoord.z / gl_FragCoord.w;\n  //   float fogFactor = smoothstep(fogNear, fogFar, depth);\n  //   gl_FragColor = mix(gl_FragColor, vec4(fogColor, gl_FragColor.w), fogFactor);\n  // }\n}\n';
	var defaultUniforms = __webpack_require__(215);
	
	module.exports = {
	  DEFAULT: {
	    vs: vs,
	    fs: fs,
	    defaultUniforms: defaultUniforms
	  }
	};
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zaGFkZXJsaWIvaW5kZXguanMiXSwibmFtZXMiOlsidnMiLCJmcyIsImRlZmF1bHRVbmlmb3JtcyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiREVGQVVMVCJdLCJtYXBwaW5ncyI6Ijs7QUFFQTs7QUFFQTtBQUpBO0FBS0EsSUFBTUEsbzVFQUFOO0FBQ0EsSUFBTUMsMmdFQUFOO0FBQ0EsSUFBTUMsa0JBQWtCQyxRQUFRLG9CQUFSLENBQXhCOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLFdBQVM7QUFDUE4sVUFETztBQUVQQyxVQUZPO0FBR1BDO0FBSE87QUFETSxDQUFqQiIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLXZhciAqL1xuaW1wb3J0IHtyZWFkRmlsZVN5bmN9IGZyb20gJ2ZzJztcbmltcG9ydCB7am9pbn0gZnJvbSAncGF0aCc7XG5cbi8vIERlZmF1bHQgU2hhZGVyc1xuY29uc3QgdnMgPSByZWFkRmlsZVN5bmMoam9pbihfX2Rpcm5hbWUsICcuL2RlZmF1bHQtdmVydGV4Lmdsc2wnKSwgJ3V0ZjgnKTtcbmNvbnN0IGZzID0gcmVhZEZpbGVTeW5jKGpvaW4oX19kaXJuYW1lLCAnLi9kZWZhdWx0LWZyYWdtZW50Lmdsc2wnKSwgJ3V0ZjgnKTtcbmNvbnN0IGRlZmF1bHRVbmlmb3JtcyA9IHJlcXVpcmUoJy4vZGVmYXVsdC11bmlmb3JtcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgREVGQVVMVDoge1xuICAgIHZzLFxuICAgIGZzLFxuICAgIGRlZmF1bHRVbmlmb3Jtc1xuICB9XG59O1xuIl19

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// resolves . and .. elements in a path array with directory names there
	// must be no slashes, empty elements, or device names (c:\) in the array
	// (so also no leading and trailing slashes - it does not distinguish
	// relative and absolute paths)
	function normalizeArray(parts, allowAboveRoot) {
	  // if the path tries to go above the root, `up` ends up > 0
	  var up = 0;
	  for (var i = parts.length - 1; i >= 0; i--) {
	    var last = parts[i];
	    if (last === '.') {
	      parts.splice(i, 1);
	    } else if (last === '..') {
	      parts.splice(i, 1);
	      up++;
	    } else if (up) {
	      parts.splice(i, 1);
	      up--;
	    }
	  }
	
	  // if the path is allowed to go above the root, restore leading ..s
	  if (allowAboveRoot) {
	    for (; up--; up) {
	      parts.unshift('..');
	    }
	  }
	
	  return parts;
	}
	
	// Split a filename into [root, dir, basename, ext], unix version
	// 'root' is just a slash, or nothing.
	var splitPathRe =
	    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
	var splitPath = function(filename) {
	  return splitPathRe.exec(filename).slice(1);
	};
	
	// path.resolve([from ...], to)
	// posix version
	exports.resolve = function() {
	  var resolvedPath = '',
	      resolvedAbsolute = false;
	
	  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
	    var path = (i >= 0) ? arguments[i] : process.cwd();
	
	    // Skip empty and invalid entries
	    if (typeof path !== 'string') {
	      throw new TypeError('Arguments to path.resolve must be strings');
	    } else if (!path) {
	      continue;
	    }
	
	    resolvedPath = path + '/' + resolvedPath;
	    resolvedAbsolute = path.charAt(0) === '/';
	  }
	
	  // At this point the path should be resolved to a full absolute path, but
	  // handle relative paths to be safe (might happen when process.cwd() fails)
	
	  // Normalize the path
	  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
	    return !!p;
	  }), !resolvedAbsolute).join('/');
	
	  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
	};
	
	// path.normalize(path)
	// posix version
	exports.normalize = function(path) {
	  var isAbsolute = exports.isAbsolute(path),
	      trailingSlash = substr(path, -1) === '/';
	
	  // Normalize the path
	  path = normalizeArray(filter(path.split('/'), function(p) {
	    return !!p;
	  }), !isAbsolute).join('/');
	
	  if (!path && !isAbsolute) {
	    path = '.';
	  }
	  if (path && trailingSlash) {
	    path += '/';
	  }
	
	  return (isAbsolute ? '/' : '') + path;
	};
	
	// posix version
	exports.isAbsolute = function(path) {
	  return path.charAt(0) === '/';
	};
	
	// posix version
	exports.join = function() {
	  var paths = Array.prototype.slice.call(arguments, 0);
	  return exports.normalize(filter(paths, function(p, index) {
	    if (typeof p !== 'string') {
	      throw new TypeError('Arguments to path.join must be strings');
	    }
	    return p;
	  }).join('/'));
	};
	
	
	// path.relative(from, to)
	// posix version
	exports.relative = function(from, to) {
	  from = exports.resolve(from).substr(1);
	  to = exports.resolve(to).substr(1);
	
	  function trim(arr) {
	    var start = 0;
	    for (; start < arr.length; start++) {
	      if (arr[start] !== '') break;
	    }
	
	    var end = arr.length - 1;
	    for (; end >= 0; end--) {
	      if (arr[end] !== '') break;
	    }
	
	    if (start > end) return [];
	    return arr.slice(start, end - start + 1);
	  }
	
	  var fromParts = trim(from.split('/'));
	  var toParts = trim(to.split('/'));
	
	  var length = Math.min(fromParts.length, toParts.length);
	  var samePartsLength = length;
	  for (var i = 0; i < length; i++) {
	    if (fromParts[i] !== toParts[i]) {
	      samePartsLength = i;
	      break;
	    }
	  }
	
	  var outputParts = [];
	  for (var i = samePartsLength; i < fromParts.length; i++) {
	    outputParts.push('..');
	  }
	
	  outputParts = outputParts.concat(toParts.slice(samePartsLength));
	
	  return outputParts.join('/');
	};
	
	exports.sep = '/';
	exports.delimiter = ':';
	
	exports.dirname = function(path) {
	  var result = splitPath(path),
	      root = result[0],
	      dir = result[1];
	
	  if (!root && !dir) {
	    // No dirname whatsoever
	    return '.';
	  }
	
	  if (dir) {
	    // It has a dirname, strip trailing slash
	    dir = dir.substr(0, dir.length - 1);
	  }
	
	  return root + dir;
	};
	
	
	exports.basename = function(path, ext) {
	  var f = splitPath(path)[2];
	  // TODO: make this comparison case-insensitive on windows?
	  if (ext && f.substr(-1 * ext.length) === ext) {
	    f = f.substr(0, f.length - ext.length);
	  }
	  return f;
	};
	
	
	exports.extname = function(path) {
	  return splitPath(path)[3];
	};
	
	function filter (xs, f) {
	    if (xs.filter) return xs.filter(f);
	    var res = [];
	    for (var i = 0; i < xs.length; i++) {
	        if (f(xs[i], i, xs)) res.push(xs[i]);
	    }
	    return res;
	}
	
	// String.prototype.substr - negative index don't work in IE8
	var substr = 'ab'.substr(-1) === 'b'
	    ? function (str, start, len) { return str.substr(start, len) }
	    : function (str, start, len) {
	        if (start < 0) start = str.length + start;
	        return str.substr(start, len);
	    }
	;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 215 */
/***/ function(module, exports) {

	"use strict";
	
	module.exports = {
	  hasTexture1: false,
	  hasTextureCube1: false,
	
	  enableLights: false,
	  useReflection: false,
	
	  // picking configs
	  enablePicking: false,
	  hasPickingColors: false,
	
	  // fog configuration
	  hasFog: false
	};
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zaGFkZXJsaWIvZGVmYXVsdC11bmlmb3Jtcy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiaGFzVGV4dHVyZTEiLCJoYXNUZXh0dXJlQ3ViZTEiLCJlbmFibGVMaWdodHMiLCJ1c2VSZWZsZWN0aW9uIiwiZW5hYmxlUGlja2luZyIsImhhc1BpY2tpbmdDb2xvcnMiLCJoYXNGb2ciXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU9DLE9BQVAsR0FBaUI7QUFDZkMsZUFBYSxLQURFO0FBRWZDLG1CQUFpQixLQUZGOztBQUlmQyxnQkFBYyxLQUpDO0FBS2ZDLGlCQUFlLEtBTEE7O0FBT2Y7QUFDQUMsaUJBQWUsS0FSQTtBQVNmQyxvQkFBa0IsS0FUSDs7QUFXZjtBQUNBQyxVQUFRO0FBWk8sQ0FBakIiLCJmaWxlIjoiZGVmYXVsdC11bmlmb3Jtcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xuICBoYXNUZXh0dXJlMTogZmFsc2UsXG4gIGhhc1RleHR1cmVDdWJlMTogZmFsc2UsXG5cbiAgZW5hYmxlTGlnaHRzOiBmYWxzZSxcbiAgdXNlUmVmbGVjdGlvbjogZmFsc2UsXG5cbiAgLy8gcGlja2luZyBjb25maWdzXG4gIGVuYWJsZVBpY2tpbmc6IGZhbHNlLFxuICBoYXNQaWNraW5nQ29sb3JzOiBmYWxzZSxcblxuICAvLyBmb2cgY29uZmlndXJhdGlvblxuICBoYXNGb2c6IGZhbHNlXG59O1xuIl19

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _webgl = __webpack_require__(188);
	
	var _webglChecks = __webpack_require__(201);
	
	var _texture2d = __webpack_require__(217);
	
	var _texture2d2 = _interopRequireDefault(_texture2d);
	
	var _renderbuffer = __webpack_require__(218);
	
	var _renderbuffer2 = _interopRequireDefault(_renderbuffer);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _utils = __webpack_require__(204);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	// Returns number of components in a specific WebGL format
	function glFormatToComponents(format) {
	  switch (format) {
	    case _webgl.GL.ALPHA:
	      return 1;
	    case _webgl.GL.RGB:
	      return 3;
	    case _webgl.GL.RGBA:
	      return 4;
	    default:
	      throw new Error('Unknown format');
	  }
	}
	
	var Framebuffer = function () {
	  _createClass(Framebuffer, null, [{
	    key: 'makeFrom',
	    value: function makeFrom(gl) {
	      var object = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      return object instanceof Framebuffer ? object :
	      // Use .handle (e.g from stack.gl's gl-buffer), else use buffer directly
	      new Framebuffer(gl, { handle: object.handle || object });
	    }
	
	    /* eslint-disable max-statements */
	
	  }]);
	
	  function Framebuffer(gl) {
	    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	        id = _ref.id,
	        params = _objectWithoutProperties(_ref, ['id']);
	
	    _classCallCheck(this, Framebuffer);
	
	    (0, _webglChecks.assertWebGLContext)(gl);
	
	    var handle = gl.createFramebuffer();
	    if (!handle) {
	      throw new Error('Failed to create WebGL Framebuffer');
	    }
	
	    this.gl = gl;
	    this.id = (0, _utils.uid)(id);
	    this.handle = handle;
	    this.colorBuffer = null;
	    this.depthBuffer = null;
	    this.stencilBuffer = null;
	    this.texture = null;
	    this.userData = {};
	    this.width = 0;
	    this.height = 0;
	    Object.seal(this);
	
	    this.resize(params);
	  }
	  /* eslint-enable max-statements */
	
	  _createClass(Framebuffer, [{
	    key: 'delete',
	    value: function _delete() {
	      var gl = this.gl;
	
	      gl.deleteFramebuffer(this.handle);
	    }
	
	    // SIMPLIFIED INTERFACE
	
	  }, {
	    key: 'resize',
	    value: function resize(_ref2) {
	      var width = _ref2.width,
	          height = _ref2.height;
	
	      this.update({ width: width, height: height });
	    }
	
	    /* eslint-disable max-statements */
	
	  }, {
	    key: 'update',
	    value: function update(_ref3) {
	      var _ref3$width = _ref3.width,
	          width = _ref3$width === undefined ? 1 : _ref3$width,
	          _ref3$height = _ref3.height,
	          height = _ref3$height === undefined ? 1 : _ref3$height,
	          _ref3$depth = _ref3.depth,
	          depth = _ref3$depth === undefined ? true : _ref3$depth,
	          _ref3$minFilter = _ref3.minFilter,
	          minFilter = _ref3$minFilter === undefined ? _webgl.GL.NEAREST : _ref3$minFilter,
	          _ref3$magFilter = _ref3.magFilter,
	          magFilter = _ref3$magFilter === undefined ? _webgl.GL.NEAREST : _ref3$magFilter,
	          _ref3$format = _ref3.format,
	          format = _ref3$format === undefined ? _webgl.GL.RGBA : _ref3$format,
	          _ref3$type = _ref3.type,
	          type = _ref3$type === undefined ? _webgl.GL.UNSIGNED_BYTE : _ref3$type;
	
	      (0, _assert2.default)(width >= 0 && height >= 0, 'Width and height need to be integers');
	      if (width === this.width && height === this.height) {
	        return;
	      }
	
	      _utils.log.log(1, 'Resizing framebuffer ' + this.id + ' to ' + width + 'x' + height);
	
	      var gl = this.gl;
	
	      // TODO - do we need to reallocate the framebuffer?
	
	      var colorBuffer = new _texture2d2.default(gl, {
	        minFilter: this.minFilter,
	        magFilter: this.magFilter
	      })
	      // TODO - should be handled by Texture2D constructor?
	      .setImageData({
	        data: null,
	        width: width,
	        height: height,
	        type: type,
	        format: format
	      });
	
	      this.attachTexture({
	        attachment: _webgl.GL.COLOR_ATTACHMENT0,
	        texture: colorBuffer
	      });
	
	      if (this.colorBuffer) {
	        this.colorBuffer.delete();
	      }
	      this.colorBuffer = colorBuffer;
	      this.texture = colorBuffer;
	
	      // Add a depth buffer if requested
	      if (depth) {
	        var depthBuffer = new _renderbuffer2.default(gl).storage({
	          internalFormat: _webgl.GL.DEPTH_COMPONENT16,
	          width: width,
	          height: height
	        });
	        this.attachRenderbuffer({
	          attachment: _webgl.GL.DEPTH_ATTACHMENT,
	          renderbuffer: depthBuffer
	        });
	
	        if (this.depthBuffer) {
	          this.depthBuffer.delete();
	        }
	        this.depthBuffer = depthBuffer;
	      }
	
	      // Checks that framebuffer was properly set up,
	      // if not, throws an explanatory error
	      this.checkStatus();
	
	      this.width = width;
	      this.height = height;
	    }
	
	    // WEBGL INTERFACE
	
	  }, {
	    key: 'bind',
	    value: function bind() {
	      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref4$target = _ref4.target,
	          target = _ref4$target === undefined ? _webgl.GL.FRAMEBUFFER : _ref4$target;
	
	      var gl = this.gl;
	
	      gl.bindFramebuffer(target, this.handle);
	      return this;
	    }
	  }, {
	    key: 'unbind',
	    value: function unbind() {
	      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref5$target = _ref5.target,
	          target = _ref5$target === undefined ? _webgl.GL.FRAMEBUFFER : _ref5$target;
	
	      var gl = this.gl;
	
	      gl.bindFramebuffer(target, null);
	      return this;
	    }
	
	    //
	    // NOTE: Slow requires roundtrip to GPU
	    // App can provide pixelArray or have it auto allocated by this method
	    // @returns {Uint8Array|Uint16Array|FloatArray} - pixel array,
	    //  newly allocated by this method unless provided by app.
	
	  }, {
	    key: 'readPixels',
	    value: function readPixels(_ref6) {
	      var _ref6$x = _ref6.x,
	          x = _ref6$x === undefined ? 0 : _ref6$x,
	          _ref6$y = _ref6.y,
	          y = _ref6$y === undefined ? 0 : _ref6$y,
	          width = _ref6.width,
	          height = _ref6.height,
	          _ref6$format = _ref6.format,
	          format = _ref6$format === undefined ? _webgl.GL.RGBA : _ref6$format,
	          type = _ref6.type,
	          _ref6$pixelArray = _ref6.pixelArray,
	          pixelArray = _ref6$pixelArray === undefined ? null : _ref6$pixelArray;
	      var gl = this.gl;
	
	      // Deduce type and allocated pixelArray if needed
	
	      if (!pixelArray) {
	        // Allocate pixel array if not already available, using supplied type
	        type = type || _webgl.GL.UNSIGNED_BYTE;
	        var ArrayType = (0, _webgl.glTypeToArray)(type);
	        var components = glFormatToComponents(format);
	        // TODO - check for composite type (components = 1).
	        pixelArray = pixelArray || new ArrayType(width * height * components);
	      }
	
	      // Pixel array available, if necessary, deduce type from it.
	      type = type || (0, _webgl.glTypeFromArray)(pixelArray);
	
	      this.bind();
	      gl.readPixels(x, y, width, height, format, type, pixelArray);
	      this.unbind();
	
	      return pixelArray;
	    }
	
	    /**
	     * Used to attach textures to a framebuffer, the textures will store
	     * the various buffers.
	     *
	     *  The set of available attachments is larger in WebGL2, and also the
	     *  extensions WEBGL_draw_buffers and WEBGL_depth_texture provide additional
	     *  attachments that match or exceed the WebGL2 set.
	     *
	     * @param {Texture2D|TextureCube|WebGLTexture|null} opt.texture=null -
	     *    default is null which unbinds the texture for the attachment
	     * @param {String|Number} opt.attachment= - which attachment to bind
	     *    defaults to gl.COLOR_ATTACHMENT0.
	     * @param {String|Number} opt.target= - bind point, normally gl.FRAMEBUFFER
	     *    (WebGL2 support separating bet)
	     * @param {String|Number} opt.textureTarget= - can be used to specify
	     *    faces of a cube map.
	     * @returns {FrameBuffer} returns itself to enable chaining
	     */
	
	  }, {
	    key: 'attachTexture',
	    value: function attachTexture() {
	      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref7$texture = _ref7.texture,
	          texture = _ref7$texture === undefined ? null : _ref7$texture,
	          _ref7$target = _ref7.target,
	          target = _ref7$target === undefined ? _webgl.GL.FRAMEBUFFER : _ref7$target,
	          _ref7$attachment = _ref7.attachment,
	          attachment = _ref7$attachment === undefined ? _webgl.GL.COLOR_ATTACHMENT0 : _ref7$attachment,
	          _ref7$textureTarget = _ref7.textureTarget,
	          textureTarget = _ref7$textureTarget === undefined ? _webgl.GL.TEXTURE_2D : _ref7$textureTarget,
	          _ref7$mipmapLevel = _ref7.mipmapLevel,
	          mipmapLevel = _ref7$mipmapLevel === undefined ? 0 : _ref7$mipmapLevel;
	
	      var gl = this.gl;
	
	
	      texture = texture && _texture2d2.default.makeFrom(gl, texture);
	
	      this.bind({ target: target });
	
	      gl.framebufferTexture2D(target, (0, _webgl.glGet)(attachment), (0, _webgl.glGet)(textureTarget), texture.handle, mipmapLevel);
	
	      this.unbind();
	      return this;
	    }
	
	    /**
	     * Used to attach a framebuffer to a framebuffer, the textures will store
	     * the various buffers.
	     * @param {Object} opts= - named parameters
	     * @param {RenderBuffer|WebGLRenderBuffer|null} opts.renderbuffer=null -
	     *    renderbuffer to bind
	     *    default is null which unbinds the renderbuffer for the attachment
	     * @param {String|Number} opts.attachment= - which buffer to bind
	     * @returns {FrameBuffer} returns itself to enable chaining
	     */
	
	  }, {
	    key: 'attachRenderbuffer',
	    value: function attachRenderbuffer() {
	      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref8$renderbuffer = _ref8.renderbuffer,
	          renderbuffer = _ref8$renderbuffer === undefined ? null : _ref8$renderbuffer,
	          _ref8$attachment = _ref8.attachment,
	          attachment = _ref8$attachment === undefined ? _webgl.GL.COLOR_ATTACHMENT0 : _ref8$attachment,
	          _ref8$target = _ref8.target,
	          target = _ref8$target === undefined ? _webgl.GL.FRAMEBUFFER : _ref8$target,
	          _ref8$renderbufferTar = _ref8.renderbufferTarget,
	          renderbufferTarget = _ref8$renderbufferTar === undefined ? _webgl.GL.RENDERBUFFER : _ref8$renderbufferTar;
	
	      var gl = this.gl;
	
	      renderbuffer = renderbuffer && _renderbuffer2.default.makeFrom(gl, renderbuffer);
	
	      this.bind({ target: target });
	
	      gl.framebufferRenderbuffer(target, (0, _webgl.glGet)(attachment), (0, _webgl.glGet)(renderbufferTarget), renderbuffer.handle);
	
	      this.unbind({ target: target });
	
	      return this;
	    }
	  }, {
	    key: 'checkStatus',
	    value: function checkStatus() {
	      var _ref9 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref9$target = _ref9.target,
	          target = _ref9$target === undefined ? _webgl.GL.FRAMEBUFFER : _ref9$target;
	
	      var gl = this.gl;
	
	
	      this.bind({ target: target });
	
	      var status = gl.checkFramebufferStatus(target);
	
	      this.unbind({ target: target });
	
	      if (status !== gl.FRAMEBUFFER_COMPLETE) {
	        throw new Error(this._getFrameBufferStatus(status));
	      }
	
	      return this;
	    }
	
	    // WEBGL2 INTERFACE
	
	  }, {
	    key: 'blit',
	    value: function blit(_ref10) {
	      var srcX0 = _ref10.srcX0,
	          srcY0 = _ref10.srcY0,
	          srcX1 = _ref10.srcX1,
	          srcY1 = _ref10.srcY1,
	          dstX0 = _ref10.dstX0,
	          dstY0 = _ref10.dstY0,
	          dstX1 = _ref10.dstX1,
	          dstY1 = _ref10.dstY1,
	          mask = _ref10.mask,
	          _ref10$filter = _ref10.filter,
	          filter = _ref10$filter === undefined ? _webgl.GL.NEAREST : _ref10$filter;
	      var gl = this.gl;
	
	      (0, _webglChecks.assertWebGL2)(gl);
	      gl.blitFramebuffer(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);
	      return this;
	    }
	  }, {
	    key: 'textureLayer',
	    value: function textureLayer() {
	      var _ref11 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref11$target = _ref11.target,
	          target = _ref11$target === undefined ? _webgl.GL.FRAMEBUFFER : _ref11$target,
	          attachment = _ref11.attachment,
	          texture = _ref11.texture,
	          level = _ref11.level,
	          layer = _ref11.layer;
	
	      var gl = this.gl;
	
	      (0, _webglChecks.assertWebGL2)(gl);
	      gl.framebufferTextureLayer(target, attachment, texture, level, layer);
	      return this;
	    }
	  }, {
	    key: 'invalidate',
	    value: function invalidate(_ref12) {
	      var _ref12$target = _ref12.target,
	          target = _ref12$target === undefined ? _webgl.GL.FRAMEBUFFER : _ref12$target,
	          _ref12$attachments = _ref12.attachments,
	          attachments = _ref12$attachments === undefined ? [] : _ref12$attachments;
	      var gl = this.gl;
	
	      (0, _webglChecks.assertWebGL2)(gl);
	      gl.invalidateFramebuffer(target, attachments);
	      return this;
	    }
	  }, {
	    key: 'invalidateSub',
	    value: function invalidateSub(_ref13) {
	      var _ref13$target = _ref13.target,
	          target = _ref13$target === undefined ? _webgl.GL.FRAMEBUFFER : _ref13$target,
	          _ref13$attachments = _ref13.attachments,
	          attachments = _ref13$attachments === undefined ? [] : _ref13$attachments,
	          _ref13$x = _ref13.x,
	          x = _ref13$x === undefined ? 0 : _ref13$x,
	          _ref13$y = _ref13.y,
	          y = _ref13$y === undefined ? 0 : _ref13$y,
	          width = _ref13.width,
	          height = _ref13.height;
	      var gl = this.gl;
	
	      (0, _webglChecks.assertWebGL2)(gl);
	      gl.invalidateFramebuffer(target, attachments, x, y, width, height);
	      return this;
	    }
	
	    // Selects a color buffer as the source for pixels for subsequent calls to
	    // copyTexImage2D, copyTexSubImage2D, copyTexSubImage3D or readPixels.
	    // src
	    //  gl.BACK: Reads from the back color buffer.
	    //  gl.NONE: Reads from no color buffer.
	    //  gl.COLOR_ATTACHMENT{0-15}: Reads from one of 16 color attachment buffers.
	
	  }, {
	    key: 'readBuffer',
	    value: function readBuffer(_ref14) {
	      var src = _ref14.src;
	      var gl = this.gl;
	
	      (0, _webglChecks.assertWebGL2)(gl);
	      gl.readBuffer(src);
	      return this;
	    }
	
	    // @returns {GLint}
	
	  }, {
	    key: 'alphaSize',
	    value: function alphaSize() {
	      return this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE);
	    }
	
	    // @returns {GLint}
	
	  }, {
	    key: 'blueSize',
	    value: function blueSize() {
	      return this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE);
	    }
	
	    // @returns {GLenum}
	
	  }, {
	    key: 'colorEncoding',
	    value: function colorEncoding() {
	      return this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING);
	    }
	
	    // @returns {GLenum}
	
	  }, {
	    key: 'componentType',
	    value: function componentType() {
	      return this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE);
	    }
	
	    // @returns {GLint}
	
	  }, {
	    key: 'depthSize',
	    value: function depthSize() {
	      return this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE);
	    }
	
	    // @returns {GLint}
	
	  }, {
	    key: 'greenSize',
	    value: function greenSize() {
	      return this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE);
	    }
	
	    // @returns {WebGLRenderbuffer|WebGLTexture}
	
	  }, {
	    key: 'objectName',
	    value: function objectName() {
	      return this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME);
	    }
	
	    // @returns {GLenum}
	
	  }, {
	    key: 'objectType',
	    value: function objectType() {
	      return this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE);
	    }
	
	    // @returns {GLint}
	
	  }, {
	    key: 'redSize',
	    value: function redSize() {
	      return this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_RED_SIZE);
	    }
	
	    // @returns {GLint}
	
	  }, {
	    key: 'stencilSize',
	    value: function stencilSize() {
	      return this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE);
	    }
	
	    // @returns {GLint}
	
	  }, {
	    key: 'cubeMapFace',
	    value: function cubeMapFace() {
	      return this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE);
	    }
	
	    // @returns {GLint}
	
	  }, {
	    key: 'layer',
	    value: function layer() {
	      return this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER);
	    }
	
	    // @returns {GLint}
	
	  }, {
	    key: 'level',
	    value: function level() {
	      return this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL);
	    }
	  }, {
	    key: 'getParameters',
	    value: function getParameters() {
	      return {
	        redSize: this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_RED_SIZE),
	        greenSize: this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE),
	        blueSize: this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE),
	        alphaSize: this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE),
	
	        depthSize: this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE),
	        stencilSize: this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE),
	
	        colorEncoding: this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING),
	        componentType: this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE),
	        objectName: this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME),
	        objectType: this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE),
	        cubeMapFace: this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE),
	        layer: this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER),
	        level: this.getAttachmentParameter(_webgl.GL.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL)
	      };
	    }
	
	    // (OpenGL ES 3.0.4 §6.1.13, similar to glGetFramebufferAttachmentParameteriv)
	    // Return the value for the passed pname given the target and attachment.
	    // The type returned is the natural type for the requested pname:
	    // pname returned type
	    // FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE GLint
	    // FRAMEBUFFER_ATTACHMENT_BLUE_SIZE  GLint
	    // FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING GLenum
	    // FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE GLenum
	    // FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE GLint
	    // FRAMEBUFFER_ATTACHMENT_GREEN_SIZE GLint
	    // FRAMEBUFFER_ATTACHMENT_OBJECT_NAME  WebGLRenderbuffer or WebGLTexture
	    // FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE  GLenum
	    // FRAMEBUFFER_ATTACHMENT_RED_SIZE GLint
	    // FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE GLint
	    // FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE  GLint
	    // FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER  GLint
	    // FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL  GLint
	    // If pname is not in the table above, generates an INVALID_ENUM error.
	    // If an OpenGL error is generated, returns null.
	
	  }, {
	    key: 'getAttachmentParameter',
	    value: function getAttachmentParameter() {
	      var _ref15 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          pname = _ref15.pname,
	          target = _ref15.target,
	          attachment = _ref15.attachment;
	
	      var gl = this.gl;
	
	      (0, _webglChecks.assertWebGL2)(gl);
	      var value = gl.getFramebufferAttachmentParameter(target, attachment, pname);
	      return value;
	    }
	
	    /* eslint-disable max-len */
	
	  }, {
	    key: '_getFrameBufferStatus',
	    value: function _getFrameBufferStatus(status) {
	      var error = void 0;
	      switch (status) {
	        case _webgl.GL.FRAMEBUFFER_COMPLETE:
	          error = 'Success. Framebuffer is correctly set up';
	          break;
	        case _webgl.GL.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:
	          error = 'The attachment types are mismatched or not all framebuffer attachment points are framebuffer attachment complete.';
	          break;
	        case _webgl.GL.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:
	          error = 'There is no attachment.';
	          break;
	        case _webgl.GL.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:
	          error = 'Height and width of the attachment are not the same.';
	          break;
	        case _webgl.GL.FRAMEBUFFER_UNSUPPORTED:
	          error = 'The format of the attachment is not supported or if depth and stencil attachments are not the same renderbuffer.';
	          break;
	        // When using a WebGL 2 context, the following values can be returned
	        case _webgl.GL.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:
	          error = 'The values of GL.RENDERBUFFER_SAMPLES are different among attached renderbuffers, or are non-zero if the attached images are a mix of renderbuffers and textures.';
	          break;
	        default:
	          error = 'Framebuffer error ' + status;
	          break;
	      }
	      return error;
	    }
	    /* eslint-enable max-len */
	
	  }]);
	
	  return Framebuffer;
	}();
	
	exports.default = Framebuffer;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _webgl = __webpack_require__(188);
	
	var _webglChecks = __webpack_require__(201);
	
	var _texture = __webpack_require__(211);
	
	var _texture2 = _interopRequireDefault(_texture);
	
	var _buffer = __webpack_require__(200);
	
	var _buffer2 = _interopRequireDefault(_buffer);
	
	var _framebuffer = __webpack_require__(216);
	
	var _framebuffer2 = _interopRequireDefault(_framebuffer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	// TODO - looks like circular include?
	
	
	var Texture2D = function (_Texture) {
	  _inherits(Texture2D, _Texture);
	
	  _createClass(Texture2D, null, [{
	    key: 'makeFrom',
	    value: function makeFrom(gl) {
	      var object = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      return object instanceof Texture2D ? object :
	      // Use .handle (e.g from stack.gl's gl-buffer), else use buffer directly
	      new Texture2D(gl, { handle: object.handle || object });
	    }
	  }, {
	    key: 'makeFromSolidColor',
	    value: function makeFromSolidColor(gl, _ref) {
	      var _ref2 = _slicedToArray(_ref, 4),
	          _ref2$ = _ref2[0],
	          r = _ref2$ === undefined ? 0 : _ref2$,
	          _ref2$2 = _ref2[1],
	          g = _ref2$2 === undefined ? 0 : _ref2$2,
	          _ref2$3 = _ref2[2],
	          b = _ref2$3 === undefined ? 0 : _ref2$3,
	          _ref2$4 = _ref2[3],
	          a = _ref2$4 === undefined ? 1 : _ref2$4;
	
	      return new Texture2D(gl, {
	        pixels: new Uint8Array([r, g, b, a]),
	        width: 1,
	        format: gl.RGBA,
	        magFilter: gl.NEAREST,
	        minFilter: gl.NEAREST
	      });
	    }
	  }, {
	    key: 'makeFromPixelArray',
	    value: function makeFromPixelArray(gl, _ref3) {
	      var dataArray = _ref3.dataArray,
	          format = _ref3.format,
	          width = _ref3.width,
	          height = _ref3.height,
	          opts = _objectWithoutProperties(_ref3, ['dataArray', 'format', 'width', 'height']);
	
	      // Don't need to do this if the data is already in a typed array
	      var dataTypedArray = new Uint8Array(dataArray);
	      return new Texture2D(gl, _extends({
	        pixels: dataTypedArray,
	        width: 1,
	        format: gl.RGBA
	      }, opts));
	    }
	
	    /**
	     * @classdesc
	     * 2D WebGL Texture
	     * Note: Constructor will initialize your texture.
	     *
	     * @class
	     * @param {WebGLRenderingContext} gl - gl context
	     * @param {Image|ArrayBuffer|null} opts= - named options
	     * @param {Image|ArrayBuffer|null} opts.data= - buffer
	     * @param {GLint} width - width of texture
	     * @param {GLint} height - height of texture
	     */
	
	  }]);
	
	  function Texture2D(gl) {
	    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    _classCallCheck(this, Texture2D);
	
	    (0, _webglChecks.assertWebGLContext)(gl);
	
	    var _this = _possibleConstructorReturn(this, (Texture2D.__proto__ || Object.getPrototypeOf(Texture2D)).call(this, gl, _extends({}, opts, { target: gl.TEXTURE_2D })));
	
	    _this.width = null;
	    _this.height = null;
	    Object.seal(_this);
	
	    _this.setImageData(opts);
	    if (opts.generateMipmap) {
	      _this.generateMipmap();
	    }
	    return _this;
	  }
	
	  // target cannot be modified by bind:
	  // textures are special because when you first bind them to a target,
	  // they get special information. When you first bind a texture as a
	  // GL_TEXTURE_2D, you are actually setting special state in the texture.
	  // You are saying that this texture is a 2D texture.
	  // And it will always be a 2D texture; this state cannot be changed ever.
	  // If you have a texture that was first bound as a GL_TEXTURE_2D,
	  // you must always bind it as a GL_TEXTURE_2D;
	  // attempting to bind it as GL_TEXTURE_1D will give rise to an error
	  // (while run-time).
	
	  _createClass(Texture2D, [{
	    key: 'bind',
	    value: function bind() {
	      var textureUnit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.textureUnit;
	      var gl = this.gl;
	
	      if (textureUnit === undefined) {
	        throw new Error('Texture.bind: must specify texture unit');
	      }
	      this.textureUnit = textureUnit;
	      gl.activeTexture(gl.TEXTURE0 + textureUnit);
	      gl.bindTexture(this.target, this.handle);
	      return textureUnit;
	    }
	  }, {
	    key: 'unbind',
	    value: function unbind() {
	      var gl = this.gl;
	
	      if (this.textureUnit === undefined) {
	        throw new Error('Texture.unbind: texture unit not specified');
	      }
	      gl.activeTexture(gl.TEXTURE0 + this.textureUnit);
	      gl.bindTexture(this.target, null);
	      return this.textureUnit;
	    }
	  }, {
	    key: 'getActiveUnit',
	    value: function getActiveUnit() {
	      return this.gl.getParameter(_webgl.GL.ACTIVE_TEXTURE) - _webgl.GL.TEXTURE0;
	    }
	
	    // WebGL2
	
	  }, {
	    key: 'setPixels',
	    value: function setPixels(_ref4) {
	      var buffer = _ref4.buffer,
	          _ref4$offset = _ref4.offset,
	          offset = _ref4$offset === undefined ? 0 : _ref4$offset,
	          _ref4$width = _ref4.width,
	          width = _ref4$width === undefined ? null : _ref4$width,
	          _ref4$height = _ref4.height,
	          height = _ref4$height === undefined ? null : _ref4$height,
	          _ref4$mipmapLevel = _ref4.mipmapLevel,
	          mipmapLevel = _ref4$mipmapLevel === undefined ? 0 : _ref4$mipmapLevel,
	          _ref4$internalFormat = _ref4.internalFormat,
	          internalFormat = _ref4$internalFormat === undefined ? _webgl.GL.RGBA : _ref4$internalFormat,
	          _ref4$format = _ref4.format,
	          format = _ref4$format === undefined ? _webgl.GL.RGBA : _ref4$format,
	          _ref4$type = _ref4.type,
	          type = _ref4$type === undefined ? _webgl.GL.UNSIGNED_BYTE : _ref4$type,
	          _ref4$border = _ref4.border,
	          border = _ref4$border === undefined ? 0 : _ref4$border,
	          opts = _objectWithoutProperties(_ref4, ['buffer', 'offset', 'width', 'height', 'mipmapLevel', 'internalFormat', 'format', 'type', 'border']);
	
	      var gl = this.gl;
	
	      // This signature of texImage2D uses currently bound GL_PIXEL_UNPACK_BUFFER
	
	      buffer = _buffer2.default.makeFrom(buffer);
	      gl.bindBuffer(_webgl.GL.PIXEL_UNPACK_BUFFER, buffer.target);
	      // And as always, we must also bind the texture itself
	      this.bind();
	
	      gl.texImage2D(gl.TEXTURE_2D, mipmapLevel, format, width, height, border, format, type, buffer.target);
	
	      this.unbind();
	      gl.bindBuffer(_webgl.GL.GL_PIXEL_UNPACK_BUFFER, null);
	      return this;
	    }
	  }, {
	    key: 'setImageDataFromCompressedBuffer',
	    value: function setImageDataFromCompressedBuffer(_ref5) {
	      var buffer = _ref5.buffer,
	          _ref5$offset = _ref5.offset,
	          offset = _ref5$offset === undefined ? 0 : _ref5$offset,
	          _ref5$width = _ref5.width,
	          width = _ref5$width === undefined ? null : _ref5$width,
	          _ref5$height = _ref5.height,
	          height = _ref5$height === undefined ? null : _ref5$height,
	          _ref5$mipmapLevel = _ref5.mipmapLevel,
	          mipmapLevel = _ref5$mipmapLevel === undefined ? 0 : _ref5$mipmapLevel,
	          _ref5$internalFormat = _ref5.internalFormat,
	          internalFormat = _ref5$internalFormat === undefined ? _webgl.GL.RGBA : _ref5$internalFormat,
	          _ref5$format = _ref5.format,
	          format = _ref5$format === undefined ? _webgl.GL.RGBA : _ref5$format,
	          _ref5$type = _ref5.type,
	          type = _ref5$type === undefined ? _webgl.GL.UNSIGNED_BYTE : _ref5$type,
	          _ref5$border = _ref5.border,
	          border = _ref5$border === undefined ? 0 : _ref5$border,
	          opts = _objectWithoutProperties(_ref5, ['buffer', 'offset', 'width', 'height', 'mipmapLevel', 'internalFormat', 'format', 'type', 'border']);
	
	      var gl = this.gl;
	
	      gl.compressedTexImage2D(this.target, mipmapLevel, internalFormat, width, height, border, buffer);
	      // gl.compressedTexSubImage2D(target,
	      //   level, xoffset, yoffset, width, height, format, ArrayBufferView? pixels);
	      return this;
	    }
	
	    /**
	     * Defines a two-dimensional texture image or cube-map texture image with
	     * pixels from the current framebuffer (rather than from client memory).
	     * (gl.copyTexImage2D wrapper)
	     */
	
	  }, {
	    key: 'copyImageFromFramebuffer',
	    value: function copyImageFromFramebuffer(_ref6) {
	      var framebuffer = _ref6.framebuffer,
	          _ref6$offset = _ref6.offset,
	          offset = _ref6$offset === undefined ? 0 : _ref6$offset,
	          x = _ref6.x,
	          y = _ref6.y,
	          width = _ref6.width,
	          height = _ref6.height,
	          _ref6$mipmapLevel = _ref6.mipmapLevel,
	          mipmapLevel = _ref6$mipmapLevel === undefined ? 0 : _ref6$mipmapLevel,
	          _ref6$internalFormat = _ref6.internalFormat,
	          internalFormat = _ref6$internalFormat === undefined ? _webgl.GL.RGBA : _ref6$internalFormat,
	          _ref6$type = _ref6.type,
	          type = _ref6$type === undefined ? _webgl.GL.UNSIGNED_BYTE : _ref6$type,
	          _ref6$border = _ref6.border,
	          border = _ref6$border === undefined ? 0 : _ref6$border,
	          opts = _objectWithoutProperties(_ref6, ['framebuffer', 'offset', 'x', 'y', 'width', 'height', 'mipmapLevel', 'internalFormat', 'type', 'border']);
	
	      var gl = this.gl;
	
	      framebuffer = _framebuffer2.default.makeFrom(framebuffer);
	      framebuffer.bind();
	
	      // target
	      this.bind();
	      gl.copyTexImage2D(this.target, mipmapLevel, internalFormat, x, y, width, height, border);
	      this.unbind();
	
	      framebuffer.unbind();
	    }
	  }, {
	    key: 'copySubImage',
	    value: function copySubImage(_ref7) {
	      // if (pixels instanceof ArrayBufferView) {
	      //   gl.texSubImage2D(target, level, x, y, width, height, format, type, pixels);
	      // }
	      // gl.texSubImage2D(target, level, x, y, format, type, ? pixels);
	      // gl.texSubImage2D(target, level, x, y, format, type, HTMLImageElement pixels);
	      // gl.texSubImage2D(target, level, x, y, format, type, HTMLCanvasElement pixels);
	      // gl.texSubImage2D(target, level, x, y, format, type, HTMLVideoElement pixels);
	      // // Additional signature in a WebGL 2 context:
	      // gl.texSubImage2D(target, level, x, y, format, type, GLintptr offset);
	
	      var pixels = _ref7.pixels,
	          _ref7$offset = _ref7.offset,
	          offset = _ref7$offset === undefined ? 0 : _ref7$offset,
	          x = _ref7.x,
	          y = _ref7.y,
	          width = _ref7.width,
	          height = _ref7.height,
	          _ref7$mipmapLevel = _ref7.mipmapLevel,
	          mipmapLevel = _ref7$mipmapLevel === undefined ? 0 : _ref7$mipmapLevel,
	          _ref7$internalFormat = _ref7.internalFormat,
	          internalFormat = _ref7$internalFormat === undefined ? _webgl.GL.RGBA : _ref7$internalFormat,
	          _ref7$type = _ref7.type,
	          type = _ref7$type === undefined ? _webgl.GL.UNSIGNED_BYTE : _ref7$type,
	          _ref7$border = _ref7.border,
	          border = _ref7$border === undefined ? 0 : _ref7$border;
	    }
	  }]);
	
	  return Texture2D;
	}(_texture2.default);
	
	exports.default = Texture2D;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _webgl = __webpack_require__(188);
	
	var _webgl2 = _interopRequireDefault(_webgl);
	
	var _webglChecks = __webpack_require__(201);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Renderbuffer = function () {
	  _createClass(Renderbuffer, null, [{
	    key: 'makeFrom',
	    value: function makeFrom(gl) {
	      var object = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      return object instanceof Renderbuffer ? object :
	      // Use .handle (e.g from stack.gl's gl-buffer), else use buffer directly
	      new Renderbuffer(gl, { handle: object.handle || object });
	    }
	  }]);
	
	  function Renderbuffer(gl) {
	    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    _classCallCheck(this, Renderbuffer);
	
	    (0, _webglChecks.assertWebGLContext)(gl);
	
	    this.gl = gl;
	    this.handle = gl.createRenderbuffer();
	    if (!this.handle) {
	      throw new Error('Failed to create WebGL Renderbuffer');
	    }
	  }
	
	  _createClass(Renderbuffer, [{
	    key: 'delete',
	    value: function _delete() {
	      this.gl.deleteRenderbuffer(this.handle);
	      return this;
	    }
	  }, {
	    key: 'bind',
	    value: function bind() {
	      this.gl.bindRenderbuffer(_webgl2.default.RENDERBUFFER, this.handle);
	      return this;
	    }
	  }, {
	    key: 'unbind',
	    value: function unbind() {
	      this.gl.bindRenderbuffer(_webgl2.default.RENDERBUFFER, null);
	      return this;
	    }
	
	    /**
	     * Creates and initializes a renderbuffer object's data store
	     *
	     * @param {GLenum} opt.internalFormat -
	     * @param {GLint} opt.width -
	     * @param {GLint} opt.height
	     * @param {Boolean} opt.autobind=true - method call will bind/unbind object
	     * @returns {Renderbuffer} returns itself to enable chaining
	     */
	
	  }, {
	    key: 'storage',
	    value: function storage(_ref) {
	      var internalFormat = _ref.internalFormat,
	          width = _ref.width,
	          height = _ref.height;
	      var gl = this.gl;
	
	      (0, _assert2.default)(internalFormat, 'Needs internalFormat');
	      this.bind();
	      gl.renderbufferStorage(_webgl2.default.RENDERBUFFER, (0, _webgl.glGet)(internalFormat), width, height);
	      this.unbind();
	      return this;
	    }
	
	    // @param {Boolean} opt.autobind=true - method call will bind/unbind object
	    // @returns {GLenum|GLint} - depends on pname
	
	  }, {
	    key: 'getParameter',
	    value: function getParameter(pname) {
	      var gl = this.gl;
	
	      this.bind();
	      var value = gl.getRenderbufferParameter(_webgl2.default.RENDERBUFFER, (0, _webgl.glGet)(pname));
	      this.unbind();
	      return value;
	    }
	
	    // @returns {GLint} - width of the image of the currently bound renderbuffer.
	
	  }, {
	    key: 'storageMultisample',
	
	
	    // WEBGL2 METHODS
	
	    // (OpenGL ES 3.0.4 §4.4.2)
	    value: function storageMultisample() {
	      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          samples = _ref2.samples,
	          internalformat = _ref2.internalformat,
	          width = _ref2.width,
	          height = _ref2.height;
	
	      var gl = this.gl;
	
	      (0, _webglChecks.assertWebGL2Context)(gl);
	      gl.renderbufferStorageMultisample(_webgl2.default.RENDERBUFFER, samples, internalformat, width, height);
	      return this;
	    }
	
	    // (OpenGL ES 3.0.4 §6.1.15)
	
	  }, {
	    key: 'getInternalformatParameter',
	    value: function getInternalformatParameter(_ref3) {
	      var internalformat = _ref3.internalformat,
	          _ref3$pname = _ref3.pname,
	          pname = _ref3$pname === undefined ? 'SAMPLES' : _ref3$pname;
	      var gl = this.gl;
	
	      (0, _webglChecks.assertWebGL2Context)(gl);
	      return gl.getInternalformatParameter(_webgl2.default.RENDERBUFFER, internalformat, pname);
	    }
	  }, {
	    key: 'width',
	    get: function get() {
	      return this.getParameter(_webgl2.default.RENDERBUFFER_WIDTH);
	    }
	
	    // @returns {GLint} - height of the image of the currently bound renderbuffer.
	
	  }, {
	    key: 'height',
	    get: function get() {
	      return this.getParameter(_webgl2.default.RENDERBUFFER_HEIGHT);
	    }
	
	    // @returns {GLenum} internal format of the currently bound renderbuffer.
	    // The default is gl.RGBA4. Possible return values:
	    // gl.RGBA4: 4 red bits, 4 green bits, 4 blue bits 4 alpha bits.
	    // gl.RGB565: 5 red bits, 6 green bits, 5 blue bits.
	    // gl.RGB5_A1: 5 red bits, 5 green bits, 5 blue bits, 1 alpha bit.
	    // gl.DEPTH_COMPONENT16: 16 depth bits.
	    // gl.STENCIL_INDEX8: 8 stencil bits.
	
	  }, {
	    key: 'internalFormat',
	    get: function get() {
	      return this.getParameter(_webgl2.default.RENDERBUFFER_INTERNAL_FORMAT);
	    }
	
	    //  @returns {GLint} - resolution size (in bits) for the green color.
	
	  }, {
	    key: 'greenSize',
	    get: function get() {
	      return this.getParameter(_webgl2.default.RENDERBUFFER_GREEN_SIZE);
	    }
	
	    // @returns {GLint} - resolution size (in bits) for the blue color.
	
	  }, {
	    key: 'blueSize',
	    get: function get() {
	      return this.getParameter(_webgl2.default.RENDERBUFFER_BLUE_SIZE);
	    }
	
	    // @returns {GLint} - resolution size (in bits) for the red color.
	
	  }, {
	    key: 'redSize',
	    get: function get() {
	      return this.getParameter(_webgl2.default.RENDERBUFFER_RED_SIZE);
	    }
	
	    // @returns {GLint} - resolution size (in bits) for the alpha component.
	
	  }, {
	    key: 'alphaSize',
	    get: function get() {
	      return this.getParameter(_webgl2.default.RENDERBUFFER_ALPHA_SIZE);
	    }
	
	    // @returns {GLint} - resolution size (in bits) for the depth component.
	
	  }, {
	    key: 'depthSize',
	    get: function get() {
	      return this.getParameter(_webgl2.default.RENDERBUFFER_DEPTH_SIZE);
	    }
	
	    // @returns {GLint} - resolution size (in bits) for the stencil component.
	
	  }, {
	    key: 'stencilSize',
	    get: function get() {
	      return this.getParameter(_webgl2.default.RENDERBUFFER_STENCIL_SIZE);
	    }
	
	    // When using a WebGL 2 context, the following value is available
	
	  }, {
	    key: 'samples',
	    get: function get() {
	      return this.getParameter(this.gl.RENDERBUFFER_SAMPLES);
	    }
	  }]);
	
	  return Renderbuffer;
	}();
	
	exports.default = Renderbuffer;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _webgl = __webpack_require__(188);
	
	var _webglChecks = __webpack_require__(201);
	
	var _texture = __webpack_require__(211);
	
	var _texture2 = _interopRequireDefault(_texture);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TextureCube = function (_Texture) {
	  _inherits(TextureCube, _Texture);
	
	  _createClass(TextureCube, null, [{
	    key: 'makeFrom',
	    value: function makeFrom(gl) {
	      var object = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      return object instanceof TextureCube ? object :
	      // Use .handle (e.g from stack.gl's gl-buffer), else use buffer directly
	      new TextureCube(gl, { handle: object.handle || object });
	    }
	  }]);
	
	  function TextureCube(gl) {
	    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    _classCallCheck(this, TextureCube);
	
	    (0, _webglChecks.assertWebGLContext)(gl);
	
	    var _this = _possibleConstructorReturn(this, (TextureCube.__proto__ || Object.getPrototypeOf(TextureCube)).call(this, gl, _extends({}, opts, { target: _webgl.GL.TEXTURE_CUBE_MAP })));
	
	    _this.setCubeMapImageData(opts);
	    return _this;
	  }
	
	  _createClass(TextureCube, [{
	    key: 'bind',
	    value: function bind() {
	      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          index = _ref.index;
	
	      var gl = this.gl;
	
	      if (index !== undefined) {
	        gl.activeTexture(_webgl.GL.TEXTURE0 + index);
	      }
	      gl.bindTexture(_webgl.GL.TEXTURE_CUBE_MAP, this.handle);
	      if (index === undefined) {
	        var result = gl.getParameter(gl.ACTIVE_TEXTURE) - _webgl.GL.TEXTURE0;
	        return result;
	      }
	      return index;
	    }
	  }, {
	    key: 'unbind',
	    value: function unbind() {
	      var gl = this.gl;
	
	      gl.bindTexture(_webgl.GL.TEXTURE_CUBE_MAP, null);
	    }
	
	    /* eslint-disable max-statements, max-len */
	
	  }, {
	    key: 'setCubeMapImageData',
	    value: function setCubeMapImageData(_ref2) {
	      var width = _ref2.width,
	          height = _ref2.height,
	          pixels = _ref2.pixels,
	          data = _ref2.data,
	          _ref2$border = _ref2.border,
	          border = _ref2$border === undefined ? 0 : _ref2$border,
	          _ref2$format = _ref2.format,
	          format = _ref2$format === undefined ? _webgl.GL.RGBA : _ref2$format,
	          _ref2$type = _ref2.type,
	          type = _ref2$type === undefined ? _webgl.GL.UNSIGNED_BYTE : _ref2$type,
	          _ref2$generateMipmap = _ref2.generateMipmap,
	          generateMipmap = _ref2$generateMipmap === undefined ? false : _ref2$generateMipmap,
	          opts = _objectWithoutProperties(_ref2, ['width', 'height', 'pixels', 'data', 'border', 'format', 'type', 'generateMipmap']);
	
	      var gl = this.gl;
	
	      pixels = pixels || data;
	      this.bind();
	      if (this.width || this.height) {
	        gl.texImage2D(_webgl.GL.TEXTURE_CUBE_MAP_POSITIVE_X, 0, format, width, height, border, format, type, pixels.pos.x);
	        gl.texImage2D(_webgl.GL.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, format, width, height, border, format, type, pixels.pos.y);
	        gl.texImage2D(_webgl.GL.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, format, width, height, border, format, type, pixels.pos.z);
	        gl.texImage2D(_webgl.GL.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, format, width, height, border, format, type, pixels.neg.x);
	        gl.texImage2D(_webgl.GL.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, format, width, height, border, format, type, pixels.neg.y);
	        gl.texImage2D(_webgl.GL.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, format, width, height, border, format, type, pixels.neg.z);
	      } else {
	        gl.texImage2D(_webgl.GL.TEXTURE_CUBE_MAP_POSITIVE_X, 0, format, format, type, pixels.pos.x);
	        gl.texImage2D(_webgl.GL.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, format, format, type, pixels.pos.y);
	        gl.texImage2D(_webgl.GL.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, format, format, type, pixels.pos.z);
	        gl.texImage2D(_webgl.GL.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, format, format, type, pixels.neg.x);
	        gl.texImage2D(_webgl.GL.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, format, format, type, pixels.neg.y);
	        gl.texImage2D(_webgl.GL.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, format, format, type, pixels.neg.z);
	      }
	
	      this.unbind();
	
	      if (generateMipmap) {
	        this.generateMipmap();
	      }
	      return this;
	    }
	  }]);
	
	  return TextureCube;
	}(_texture2.default);
	
	exports.default = TextureCube;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // WebGL2 VertexArray Objects Helper
	
	
	var _webglChecks = __webpack_require__(201);
	
	var _queryManager = __webpack_require__(221);
	
	var _queryManager2 = _interopRequireDefault(_queryManager);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/* eslint-disable no-multi-spaces */
	var GL_QUERY_COUNTER_BITS_EXT = 0x8864;
	var GL_QUERY_RESULT_EXT = 0x8866;
	var GL_QUERY_RESULT_AVAILABLE_EXT = 0x8867;
	var GL_TIME_ELAPSED_EXT = 0x88BF;
	var GL_TIMESTAMP_EXT = 0x8E28;
	var GL_GPU_DISJOINT_EXT = 0x8FBB;
	/* eslint-enable no-multi-spaces */
	
	var noop = function noop(x) {
	  return x;
	};
	
	var ERR_GPU_DISJOINT = 'Disjoint GPU operation invalidated timer queries';
	var ERR_TIMER_QUERY_NOT_SUPPORTED = 'Timer queries require "EXT_disjoint_timer_query" extension';
	
	var TimerQuery = function () {
	  _createClass(TimerQuery, null, [{
	    key: 'isSupported',
	
	    /**
	     * Returns true if TimerQuery is supported by the WebGL implementation
	     * (depends on the EXT_disjoint_timer_query extension)/
	     * Can also check whether timestamp queries are available.
	     *
	     * @param {WebGLRenderingContext} gl - gl context
	     * @param {Object} opts= - options
	     * @param {Object} opts.requireTimestamps=false -
	     *   If true, checks if timestamps are supported
	     * @return {Boolean} - TimerQueries are supported with specified configuration
	     */
	    value: function isSupported(gl) {
	      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	          _ref$requireTimestamp = _ref.requireTimestamps,
	          requireTimestamps = _ref$requireTimestamp === undefined ? false : _ref$requireTimestamp;
	
	      (0, _webglChecks.assertWebGLContext)(gl);
	      var ext = gl.getExtension('EXT_disjoint_timer_query');
	      var queryCounterBits = ext ? ext.getQueryEXT(GL_TIMESTAMP_EXT, GL_QUERY_COUNTER_BITS_EXT) : 0;
	      var timestampsSupported = queryCounterBits > 0;
	      return Boolean(ext) && (!requireTimestamps || timestampsSupported);
	    }
	
	    /**
	     * @classdesc
	     * Provides a way to measure the duration of a set of GL commands,
	     * without stalling the rendering pipeline.
	     *
	     * Exposes a `promise` member that tracks the state of the query
	     * when `poll` is used to update queries.
	     *
	     * @example
	        const timerQuery = new TimerQuery({
	          onComplete: timestamp => console.log(timestamp)
	          onError: error => console.warn(error)
	        });
	         timerQuery.begin();
	         // Issue GPU calls
	         timerQuery.end();
	         // Poll for resolved queries
	        requestAnimationFrame(() => TimerQuery.poll(gl))
	     *
	     * Remarks:
	     * - On Chrome, go to chrome:flags and enable "WebGL Draft Extensions"
	     *
	     * - For full functionality, TimerQuery depends on a `poll` function being
	     *   called regularly. When this is done, completed queries will be
	     *   automatically detected and any callbacks called.
	     *
	     * - TimerQuery instance creation will always succeed, even when the required
	     *   extension is not supported. Instead any issued queries will fail
	     *   immediately. This allows applications to unconditionally use TimerQueries
	     *   without adding logic to check whether they are supported; the
	     *   difference being that the `onComplete` callback never gets called,
	     *   (the `onError` callback, if supplied, will be called instead).
	     *
	     * - Even when supported, timer queries can fail whenever a change in the
	     *   GPU occurs that will make the values returned by this extension unusable
	     *   for performance metrics. Power conservation might cause the GPU to go to
	     *   sleep at the lower levers. TimerQuery will detect this condition and
	     *   fail any outstanding queries (which calls the `onError` function,
	     *   if supplied).
	     *
	     * @class
	     * @param {WebGLRenderingContext} gl - gl context
	     * @param {Object} opts - options
	     * @param {Function} opts.onComplete - called with a timestamp.
	     *   Specifying this parameter causes a timestamp query to be initiated
	     * @param {Function} opts.onComplete - called with a timestamp.
	     *   Specifying this parameter causes a timestamp query to be initiated
	     */
	
	  }]);
	
	  function TimerQuery(gl) {
	    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	        _ref2$onComplete = _ref2.onComplete,
	        onComplete = _ref2$onComplete === undefined ? noop : _ref2$onComplete,
	        _ref2$onError = _ref2.onError,
	        onError = _ref2$onError === undefined ? noop : _ref2$onError;
	
	    _classCallCheck(this, TimerQuery);
	
	    (0, _webglChecks.assertWebGLContext)(gl);
	
	    this.gl = gl;
	    this.ext = this.gl.getExtension('EXT_disjoint_timer_query');
	    this.handle = this.ext ? this.ext.createQueryEXT() : null;
	    this.target = null;
	    this.userData = {};
	
	    this.onComplete = onComplete;
	    this.onError = onError;
	
	    // query manager needs a promise field
	    this.promise = null;
	
	    Object.seal(this);
	  }
	
	  /**
	   * Destroys the WebGL object
	   * Rejects any pending query
	   *
	   * @return {TimerQuery} - returns itself, to enable chaining of calls.
	   */
	
	
	  _createClass(TimerQuery, [{
	    key: 'delete',
	    value: function _delete() {
	      if (this.handle) {
	        _queryManager2.default.deleteQuery(this);
	        this.ext.deleteQueryEXT(this.handle);
	        (0, _webglChecks.glCheckError)(this.gl);
	        this.handle = null;
	      }
	      return this;
	    }
	
	    /**
	     * Measures GPU time delta between this call and a matching `end` call in the
	     * GPU instruction stream.
	     *
	     * Remarks:
	     * - Due to OpenGL API limitations, after calling `begin()` on one TimerQuery
	     *   instance, `end()` must be called on that same instance before
	     *   calling `begin()` on another query. While there can be multiple
	     *   outstanding queries representing disjoint `begin()`/`end()` intervals.
	     *   It is not possible to interleave or overlap `begin` and `end` calls.
	     *
	     * - Triggering a new query when a TimerQuery is already tracking an
	     *   unresolved query causes that query to be cancelled.
	     *
	     * @return {TimerQuery} - returns itself, to enable chaining of calls.
	     */
	
	  }, {
	    key: 'begin',
	    value: function begin() {
	      _queryManager2.default.beginQuery(this, this.onComplete, this.onError);
	      if (this.ext) {
	        this.target = GL_TIME_ELAPSED_EXT;
	        this.ext.beginQueryEXT(this.target, this.handle);
	      } else {
	        _queryManager2.default.rejectQuery(this, ERR_TIMER_QUERY_NOT_SUPPORTED);
	      }
	      return this;
	    }
	
	    /**
	     * Inserts a query end marker into the GPU instruction stream.
	     * Can be called multiple times.
	     *
	     * @return {TimerQuery} - returns itself, to enable chaining of calls.
	     */
	
	  }, {
	    key: 'end',
	    value: function end() {
	      // Note: calling end does not affect the pending promise
	      if (this.target) {
	        this.ext.endQueryEXT(this.target);
	        this.target = null;
	      }
	      return this;
	    }
	
	    /**
	     * Generates a GPU time stamp when the GPU instruction stream reaches
	     * this instruction.
	     * To measure time deltas, two queries are needed.
	     *
	     * Remarks:
	     * - timestamp() queries may not be available even when the timer query
	     *   extension is. See TimeQuery.isSupported() flags.
	     *
	     * - Triggering a new query when a TimerQuery is already tracking an
	     *   unresolved query causes that query to be cancelled.
	     *
	     * @return {TimerQuery} - returns itself, to enable chaining of calls.
	     */
	
	  }, {
	    key: 'timestamp',
	    value: function timestamp() {
	      _queryManager2.default.beginQuery(this, this.onComplete, this.onError);
	      if (this.ext) {
	        this.ext.queryCounterEXT(this.handle, GL_TIMESTAMP_EXT);
	      } else {
	        _queryManager2.default.rejectQuery(this, ERR_TIMER_QUERY_NOT_SUPPORTED);
	      }
	      return this;
	    }
	
	    /**
	     * Cancels a pending query
	     * Note - Cancel's the promise and calls end on the current query if needed.
	     *
	     * @return {TimerQuery} - returns itself, to enable chaining of calls.
	     */
	
	  }, {
	    key: 'cancel',
	    value: function cancel() {
	      this.end();
	      _queryManager2.default.cancelQuery(this);
	      return this;
	    }
	
	    /**
	     * @return {Boolean} - true if query result is available
	     */
	
	  }, {
	    key: 'isResultAvailable',
	    value: function isResultAvailable() {
	      return this.ext && this.ext.getQueryObjectEXT(this.handle, GL_QUERY_RESULT_AVAILABLE_EXT);
	    }
	
	    /**
	     * Returns the query result, converted to milliseconds to match
	     * JavaScript conventions.
	     *
	     * @return {Number} - measured time or timestamp, in milliseconds
	     */
	
	  }, {
	    key: 'getResult',
	    value: function getResult() {
	      return this.ext ? this.ext.getQueryObjectEXT(this.handle, GL_QUERY_RESULT_EXT) / 1e6 : 0;
	    }
	  }]);
	
	  return TimerQuery;
	}();
	
	// NOTE: This call lets the queryManager know how to detect disjoint GPU state
	// It will check dsjoint state on polls and before adding a new query
	// and reject any outstanding TimerQueries with our supplied error message.
	
	
	exports.default = TimerQuery;
	_queryManager2.default.setInvalidator({
	  queryType: TimerQuery,
	  errorMessage: ERR_GPU_DISJOINT,
	  // Note: Querying the disjoint state resets it
	  checkInvalid: function checkInvalid(gl) {
	    return gl.getParameter(GL_GPU_DISJOINT_EXT);
	  }
	});
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 221 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ERR_DELETED = 'Query was deleted before result was available';
	var ERR_CANCEL = 'Query was canceled before result was available';
	
	var noop = function noop(x) {
	  return x;
	};
	
	var QueryManager = function () {
	
	  /**
	   * Internal class that helps "asynchronous WebGL query objects" manage
	   * pending requests (e.g. for EXT_disjoint_timer_query and WebGL2 queries)
	   *
	   * Creates and manages promises for the queries.
	   * Tracks pending queries enabling polling.
	   * Tracks pending queries enabling invalidation.
	   * Encapsulates some standard error messages.
	   *
	   * Remarks:
	   * - Maintains a minimal list of pending queries only to minimize GC impact
	   * - Exported as a singleton class instance.
	   */
	  function QueryManager() {
	    _classCallCheck(this, QueryManager);
	
	    this.pendingQueries = new Set();
	    this.invalidQueryType = null;
	    this.invalidErrorMessage = '';
	    this.checkInvalid = function () {
	      return false;
	    };
	  }
	
	  // API THAT SHOULD BE EXPOSED TO APPLICATION
	
	  // Checks invalidation callback and then all pending queries for completion
	  // Should only be called once per tick
	
	
	  _createClass(QueryManager, [{
	    key: 'poll',
	    value: function poll(gl) {
	      this.cancelInvalidQueries(gl);
	
	      // Now check availability of results and resolve promises as appropriate
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = this.pendingQueries.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var query = _step.value;
	
	          var resultAvailable = query.isResultAvailable();
	          if (resultAvailable) {
	            var result = query.getResult();
	            this.resolveQuery(query, result);
	          }
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	    }
	
	    // API FOR MANAGED QUERY CLASSES
	
	    // Registers query invalidation method - used to detect disjoint timer queries
	
	  }, {
	    key: 'setInvalidator',
	    value: function setInvalidator(_ref) {
	      var queryType = _ref.queryType,
	          errorMessage = _ref.errorMessage,
	          checkInvalid = _ref.checkInvalid;
	
	      this.invalidQueryType = queryType;
	      this.invalidErrorMessage = errorMessage;
	      this.checkInvalid = checkInvalid;
	    }
	
	    // Starts a query, sets up a new promise
	
	  }, {
	    key: 'beginQuery',
	    value: function beginQuery(query) {
	      var onComplete = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;
	      var onError = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;
	
	      // Make sure disjoint state is cleared, so that this query starts fresh
	      // Cancel other queries if needed
	      this.cancelInvalidQueries(query.gl);
	
	      // Cancel current promise - noop if already resolved or rejected
	      this.cancelQuery(query);
	
	      // Create a new promise with attached resolve and reject methods
	      var resolvers = {};
	      query.promise = new Promise(function (resolve, reject) {
	        resolvers.resolve = resolve;
	        resolvers.reject = reject;
	      });
	      Object.assign(query.promise, resolvers);
	
	      // Add this query to the pending queries
	      this.pendingQueries.add(query);
	      // Register the callbacks
	      return query.promise.then(onComplete).catch(onError);
	    }
	
	    // Resolves a query with a result
	
	  }, {
	    key: 'resolveQuery',
	    value: function resolveQuery(query, result) {
	      this.pendingQueries.delete(query);
	      query.promise.resolve(result);
	    }
	
	    // Rejects the promise
	
	  }, {
	    key: 'rejectQuery',
	    value: function rejectQuery(query, errorMessage) {
	      this.pendingQueries.delete(query);
	      if (query.promise) {
	        query.promise.reject(new Error(errorMessage));
	      }
	    }
	
	    // Rejects promise with standard message for Query.delete()
	
	  }, {
	    key: 'deleteQuery',
	    value: function deleteQuery(query) {
	      return this.rejectQuery(query, ERR_DELETED);
	    }
	
	    // Rejects promise with standard message for Query.cancel()
	
	  }, {
	    key: 'cancelQuery',
	    value: function cancelQuery(query) {
	      return this.rejectQuery(query, ERR_CANCEL);
	    }
	
	    // Rejects promise with registered message for invalidation
	
	  }, {
	    key: 'invalidateQuery',
	    value: function invalidateQuery(query) {
	      if (query instanceof this.invalidQueryType) {
	        this.rejectQuery(query, this.invalidErrorMessage);
	      }
	    }
	
	    // Checks all queries to see if need to be invalidated
	
	  }, {
	    key: 'cancelInvalidQueries',
	    value: function cancelInvalidQueries(gl) {
	      // We assume that we can cancel queries for all context.
	      // Should be OK since this is used to check for "disjoint" GPU state
	      if (this.checkInvalid(gl)) {
	        var _iteratorNormalCompletion2 = true;
	        var _didIteratorError2 = false;
	        var _iteratorError2 = undefined;
	
	        try {
	          for (var _iterator2 = this.pendingQueries.values()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	            var query = _step2.value;
	
	            this.invalidateQuery(query);
	          }
	        } catch (err) {
	          _didIteratorError2 = true;
	          _iteratorError2 = err;
	        } finally {
	          try {
	            if (!_iteratorNormalCompletion2 && _iterator2.return) {
	              _iterator2.return();
	            }
	          } finally {
	            if (_didIteratorError2) {
	              throw _iteratorError2;
	            }
	          }
	        }
	      }
	    }
	  }]);
	
	  return QueryManager;
	}();
	
	exports.default = new QueryManager();
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.createGLContext = createGLContext;
	exports.getGLExtension = getGLExtension;
	exports.poll = poll;
	exports.glContextWithState = glContextWithState;
	exports.glGetDebugInfo = glGetDebugInfo;
	exports.getExtension = getExtension;
	
	var _webglDebug = __webpack_require__(223);
	
	var _webglDebug2 = _interopRequireDefault(_webglDebug);
	
	var _webglTypes = __webpack_require__(189);
	
	var _webglChecks = __webpack_require__(201);
	
	var _queryManager = __webpack_require__(221);
	
	var _queryManager2 = _interopRequireDefault(_queryManager);
	
	var _utils = __webpack_require__(204);
	
	var _globals = __webpack_require__(190);
	
	var _globals2 = _interopRequireDefault(_globals);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // WebGLRenderingContext related methods
	/* eslint-disable no-try-catch, no-loop-func */
	
	
	/* global document */
	
	var ERR_WEBGL_MISSING_BROWSER = 'WebGL API is missing. Check your if your browser supports WebGL or\ninstall a recent version of a major browser.';
	
	var ERR_WEBGL_MISSING_NODE = 'WebGL API is missing. To run luma.gl under Node.js, please "npm install gl"\nand import \'luma.gl/headless\' before importing \'luma.gl\'.';
	
	var ERR_HEADLESSGL_NOT_AVAILABLE = 'Cannot create headless WebGL context, headlessGL not available';
	
	var ERR_HEADLESSGL_FAILED = 'headlessGL failed to create headless WebGL context';
	
	var STARTUP_MESSAGE = 'Assign luma.log.priority in console to control logging: 0: none, 1: minimal, 2: verbose, 3: attribute/uniforms, 4: gl logs\nluma.log.break[], set to gl funcs, luma.log.profile[] set to model names';
	
	// Checks if WebGL is enabled and creates a context for using WebGL.
	/* eslint-disable complexity, max-statements */
	function createGLContext() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      canvas = _ref.canvas,
	      _ref$width = _ref.width,
	      width = _ref$width === undefined ? 800 : _ref$width,
	      _ref$height = _ref.height,
	      height = _ref$height === undefined ? 600 : _ref$height,
	      _ref$webgl = _ref.webgl2,
	      webgl2 = _ref$webgl === undefined ? false : _ref$webgl,
	      _ref$debug = _ref.debug,
	      debug = _ref$debug === undefined ? true : _ref$debug,
	      opts = _objectWithoutProperties(_ref, ['canvas', 'width', 'height', 'webgl2', 'debug']);
	
	  var gl = void 0;
	
	  if (!_utils.isBrowser) {
	    gl = _createHeadlessContext(width, height, opts);
	  } else {
	    // Create browser gl context
	    if (!_webglTypes.webGLTypesAvailable) {
	      throw new Error(ERR_WEBGL_MISSING_BROWSER);
	    }
	    // Make sure we have a canvas
	    canvas = canvas;
	    if (typeof canvas === 'string') {
	      if (!_utils.isPageLoaded) {
	        throw new Error('createGLContext called on canvas \'' + canvas + '\' before page was loaded');
	      }
	      canvas = document.getElementById(canvas);
	    }
	    if (!canvas) {
	      canvas = _createCanvas();
	    }
	
	    canvas.addEventListener('webglcontextcreationerror', function (e) {
	      _utils.log.log(0, e.statusMessage || 'Unknown error');
	    }, false);
	
	    // Prefer webgl2 over webgl1, prefer conformant over experimental
	    if (webgl2) {
	      gl = canvas.getContext('webgl2', opts);
	      gl = gl || canvas.getContext('experimental-webgl2', opts);
	    }
	    gl = gl || canvas.getContext('webgl', opts);
	    gl = gl || canvas.getContext('experimental-webgl', opts);
	
	    (0, _assert2.default)(gl, 'Failed to create WebGLRenderingContext');
	  }
	
	  if (_utils.isBrowser && debug) {
	    var debugGL = _webglDebug2.default.makeDebugContext(gl, throwOnError, validateArgsAndLog);
	
	    var WebGLDebugContext = function WebGLDebugContext() {
	      _classCallCheck(this, WebGLDebugContext);
	    };
	
	    Object.assign(WebGLDebugContext.prototype, debugGL);
	    gl = debugGL;
	    gl.debug = true;
	    _utils.log.priority = _utils.log.priority < 1 ? 1 : _utils.log.priority;
	
	    logInfo(gl);
	
	    _utils.log.log(0, STARTUP_MESSAGE);
	  }
	
	  return gl;
	}
	
	// Create a canvas set to 100%
	// TODO - remove
	function _createCanvas() {
	  var canvas = document.createElement('canvas');
	  canvas.id = 'lumagl-canvas';
	  canvas.style.width = '100%';
	  canvas.style.height = '100%';
	  // adds the canvas to the body element
	  _utils.pageLoadPromise.then(function (document) {
	    var body = document.body;
	    body.insertBefore(canvas, body.firstChild);
	  });
	  return canvas;
	}
	
	function _createHeadlessContext(width, height, opts) {
	  // Create headless gl context
	  if (!_webglTypes.webGLTypesAvailable) {
	    throw new Error(ERR_WEBGL_MISSING_NODE);
	  }
	  if (!_globals2.default.globals.headlessGL) {
	    throw new Error(ERR_HEADLESSGL_NOT_AVAILABLE);
	  }
	  var gl = _globals2.default.globals.headlessGL(width, height, opts);
	  if (!gl) {
	    throw new Error(ERR_HEADLESSGL_FAILED);
	  }
	  return gl;
	}
	
	// Returns the extension or throws an error
	function getGLExtension(gl, extensionName) {
	  // assertWebGLContext(gl);
	  var ERROR = 'Illegal arg to getExtension';
	  (0, _assert2.default)(gl instanceof _webglTypes.WebGLRenderingContext, ERROR);
	  (0, _assert2.default)(typeof extensionName === 'string', ERROR);
	  var extension = gl.getExtension(extensionName);
	  (0, _assert2.default)(extension, extensionName + ' not supported!');
	  return extension;
	}
	
	// POLLING FOR PENDING QUERIES
	
	// Calling this function checks all pending queries for completion
	function poll(gl) {
	  (0, _webglChecks.assertWebGLContext)(gl);
	  _queryManager2.default.poll(gl);
	}
	
	// VERY LIMITED / BASIC GL STATE MANAGEMENT
	
	// Executes a function with gl states temporarily set, exception safe
	// Currently support scissor test and framebuffer binding
	function glContextWithState(gl, _ref2, func) {
	  var scissorTest = _ref2.scissorTest,
	      framebuffer = _ref2.framebuffer;
	
	  // assertWebGLContext(gl);
	
	  var scissorTestWasEnabled = void 0;
	  if (scissorTest) {
	    scissorTestWasEnabled = gl.isEnabled(gl.SCISSOR_TEST);
	    var x = scissorTest.x,
	        y = scissorTest.y,
	        w = scissorTest.w,
	        h = scissorTest.h;
	
	    gl.enable(gl.SCISSOR_TEST);
	    gl.scissor(x, y, w, h);
	  }
	
	  if (framebuffer) {
	    // TODO - was there any previously set frame buffer we need to remember?
	    framebuffer.bind();
	  }
	
	  var value = void 0;
	  try {
	    value = func(gl);
	  } finally {
	    if (!scissorTestWasEnabled) {
	      gl.disable(gl.SCISSOR_TEST);
	    }
	    if (framebuffer) {
	      // TODO - was there any previously set frame buffer?
	      // TODO - delegate "unbind" to Framebuffer object?
	      gl.bindFramebuffer(gl.FRAMEBUFFER, null);
	    }
	  }
	
	  return value;
	}
	
	// DEBUG INFO
	
	/**
	 * Provides strings identifying the GPU vendor and driver.
	 * https://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/
	 * @param {WebGLRenderingContext} gl - context
	 * @return {Object} - 'vendor' and 'renderer' string fields.
	 */
	function glGetDebugInfo(gl) {
	  var info = gl.getExtension('WEBGL_debug_renderer_info');
	  // We can't determine if 'WEBGL_debug_renderer_info' is supported by
	  // checking whether info is null here. Firefox doesn't follow the
	  // specs by returning null for unsupported extension. Instead,
	  // it returns an object without GL_UNMASKED_VENDOR_WEBGL and GL_UNMASKED_RENDERER_WEBGL.
	  return {
	    vendor: info && info.UNMASKED_VENDOR_WEBGL ? gl.getParameter(info.UNMASKED_VENDOR_WEBGL) : 'unknown',
	    renderer: info && info.UNMASKED_RENDERER_WEBGL ? gl.getParameter(info.UNMASKED_RENDERER_WEBGL) : 'unknown'
	  };
	}
	
	function logInfo(gl) {
	  var webGL = (0, _webglChecks.isWebGL2Context)(gl) ? 'WebGL2' : 'WebGL1';
	  var info = glGetDebugInfo(gl);
	  var driver = info ? 'using driver: ' + info.vendor + ' ' + info.renderer : '';
	  var debug = gl.debug ? 'debug' : '';
	  _utils.log.log(0, 'luma.gl ' + _globals2.default.VERSION + ': ' + webGL + ' ' + debug + ' context ' + driver, gl);
	
	  // const extensions = gl.getSupportedExtensions();
	  // log.log(0, `Supported extensions: [${extensions.join(', ')}]`);
	}
	
	// DEBUG TRACING
	
	function getFunctionString(functionName, functionArgs) {
	  var args = _webglDebug2.default.glFunctionArgsToString(functionName, functionArgs);
	  args = '' + args.slice(0, 100) + (args.length > 100 ? '...' : '');
	  return 'gl.' + functionName + '(' + args + ')';
	}
	
	function throwOnError(err, functionName, args) {
	  var errorMessage = _webglDebug2.default.glEnumToString(err);
	  var functionArgs = _webglDebug2.default.glFunctionArgsToString(functionName, args);
	  throw new Error(errorMessage + ' was caused by call to: ' + ('gl.' + functionName + '(' + functionArgs + ')'));
	}
	
	// Don't generate function string until it is needed
	function validateArgsAndLog(functionName, functionArgs) {
	  var functionString = void 0;
	  if (_utils.log.priority >= 4) {
	    functionString = getFunctionString(functionName, functionArgs);
	    _utils.log.info(4, '' + functionString);
	  }
	
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;
	
	  try {
	    for (var _iterator = functionArgs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      var arg = _step.value;
	
	      if (arg === undefined) {
	        functionString = functionString || getFunctionString(functionName, functionArgs);
	        throw new Error('Undefined argument: ' + functionString);
	      }
	    }
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator.return) {
	        _iterator.return();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }
	
	  if (_utils.log.break) {
	    functionString = functionString || getFunctionString(functionName, functionArgs);
	    var isBreakpoint = _utils.log.break && _utils.log.break.every(function (breakString) {
	      return functionString.indexOf(breakString) !== -1;
	    });
	
	    /* eslint-disable no-debugger */
	    if (isBreakpoint) {
	      debugger;
	    }
	    /* eslint-enable no-debugger */
	  }
	}
	
	// Deprecated methods
	
	function getExtension(gl, extensionName) {
	  _utils.log.warn(0, 'luma.gl: getExtension is deprecated');
	  return getGLExtension(gl, extensionName);
	}
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 223 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/*
	** Copyright (c) 2012 The Khronos Group Inc.
	**
	** Permission is hereby granted, free of charge, to any person obtaining a
	** copy of this software and/or associated documentation files (the
	** "Materials"), to deal in the Materials without restriction, including
	** without limitation the rights to use, copy, modify, merge, publish,
	** distribute, sublicense, and/or sell copies of the Materials, and to
	** permit persons to whom the Materials are furnished to do so, subject to
	** the following conditions:
	**
	** The above copyright notice and this permission notice shall be included
	** in all copies or substantial portions of the Materials.
	**
	** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
	*/
	
	//Ported to node by Marcin Ignac on 2016-05-20
	
	// Various functions for helping debug WebGL apps.
	
	WebGLDebugUtils = function() {
	
	//polyfill window in node
	if (typeof(window) == 'undefined') {
	    window = global;
	}
	
	/**
	 * Wrapped logging function.
	 * @param {string} msg Message to log.
	 */
	var log = function(msg) {
	  if (window.console && window.console.log) {
	    window.console.log(msg);
	  }
	};
	
	/**
	 * Wrapped error logging function.
	 * @param {string} msg Message to log.
	 */
	var error = function(msg) {
	  if (window.console && window.console.error) {
	    window.console.error(msg);
	  } else {
	    log(msg);
	  }
	};
	
	
	/**
	 * Which arguments are enums based on the number of arguments to the function.
	 * So
	 *    'texImage2D': {
	 *       9: { 0:true, 2:true, 6:true, 7:true },
	 *       6: { 0:true, 2:true, 3:true, 4:true },
	 *    },
	 *
	 * means if there are 9 arguments then 6 and 7 are enums, if there are 6
	 * arguments 3 and 4 are enums
	 *
	 * @type {!Object.<number, !Object.<number, string>}
	 */
	var glValidEnumContexts = {
	  // Generic setters and getters
	
	  'enable': {1: { 0:true }},
	  'disable': {1: { 0:true }},
	  'getParameter': {1: { 0:true }},
	
	  // Rendering
	
	  'drawArrays': {3:{ 0:true }},
	  'drawElements': {4:{ 0:true, 2:true }},
	
	  // Shaders
	
	  'createShader': {1: { 0:true }},
	  'getShaderParameter': {2: { 1:true }},
	  'getProgramParameter': {2: { 1:true }},
	  'getShaderPrecisionFormat': {2: { 0: true, 1:true }},
	
	  // Vertex attributes
	
	  'getVertexAttrib': {2: { 1:true }},
	  'vertexAttribPointer': {6: { 2:true }},
	
	  // Textures
	
	  'bindTexture': {2: { 0:true }},
	  'activeTexture': {1: { 0:true }},
	  'getTexParameter': {2: { 0:true, 1:true }},
	  'texParameterf': {3: { 0:true, 1:true }},
	  'texParameteri': {3: { 0:true, 1:true, 2:true }},
	  'texImage2D': {
	     9: { 0:true, 2:true, 6:true, 7:true },
	     6: { 0:true, 2:true, 3:true, 4:true }
	  },
	  'texSubImage2D': {
	    9: { 0:true, 6:true, 7:true },
	    7: { 0:true, 4:true, 5:true }
	  },
	  'copyTexImage2D': {8: { 0:true, 2:true }},
	  'copyTexSubImage2D': {8: { 0:true }},
	  'generateMipmap': {1: { 0:true }},
	  'compressedTexImage2D': {7: { 0: true, 2:true }},
	  'compressedTexSubImage2D': {8: { 0: true, 6:true }},
	
	  // Buffer objects
	
	  'bindBuffer': {2: { 0:true }},
	  'bufferData': {3: { 0:true, 2:true }},
	  'bufferSubData': {3: { 0:true }},
	  'getBufferParameter': {2: { 0:true, 1:true }},
	
	  // Renderbuffers and framebuffers
	
	  'pixelStorei': {2: { 0:true, 1:true }},
	  'readPixels': {7: { 4:true, 5:true }},
	  'bindRenderbuffer': {2: { 0:true }},
	  'bindFramebuffer': {2: { 0:true }},
	  'checkFramebufferStatus': {1: { 0:true }},
	  'framebufferRenderbuffer': {4: { 0:true, 1:true, 2:true }},
	  'framebufferTexture2D': {5: { 0:true, 1:true, 2:true }},
	  'getFramebufferAttachmentParameter': {3: { 0:true, 1:true, 2:true }},
	  'getRenderbufferParameter': {2: { 0:true, 1:true }},
	  'renderbufferStorage': {4: { 0:true, 1:true }},
	
	  // Frame buffer operations (clear, blend, depth test, stencil)
	
	  'clear': {1: { 0: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }}},
	  'depthFunc': {1: { 0:true }},
	  'blendFunc': {2: { 0:true, 1:true }},
	  'blendFuncSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},
	  'blendEquation': {1: { 0:true }},
	  'blendEquationSeparate': {2: { 0:true, 1:true }},
	  'stencilFunc': {3: { 0:true }},
	  'stencilFuncSeparate': {4: { 0:true, 1:true }},
	  'stencilMaskSeparate': {2: { 0:true }},
	  'stencilOp': {3: { 0:true, 1:true, 2:true }},
	  'stencilOpSeparate': {4: { 0:true, 1:true, 2:true, 3:true }},
	
	  // Culling
	
	  'cullFace': {1: { 0:true }},
	  'frontFace': {1: { 0:true }},
	
	  // ANGLE_instanced_arrays extension
	
	  'drawArraysInstancedANGLE': {4: { 0:true }},
	  'drawElementsInstancedANGLE': {5: { 0:true, 2:true }},
	
	  // EXT_blend_minmax extension
	
	  'blendEquationEXT': {1: { 0:true }}
	};
	
	/**
	 * Map of numbers to names.
	 * @type {Object}
	 */
	var glEnums = null;
	
	/**
	 * Map of names to numbers.
	 * @type {Object}
	 */
	var enumStringToValue = null;
	
	/**
	 * Initializes this module. Safe to call more than once.
	 * @param {!WebGLRenderingContext} ctx A WebGL context. If
	 *    you have more than one context it doesn't matter which one
	 *    you pass in, it is only used to pull out constants.
	 */
	function init(ctx) {
	  if (glEnums == null) {
	    glEnums = { };
	    enumStringToValue = { };
	    for (var propertyName in ctx) {
	      if (typeof ctx[propertyName] == 'number') {
	        glEnums[ctx[propertyName]] = propertyName;
	        enumStringToValue[propertyName] = ctx[propertyName];
	      }
	    }
	  }
	}
	
	/**
	 * Checks the utils have been initialized.
	 */
	function checkInit() {
	  if (glEnums == null) {
	    throw 'WebGLDebugUtils.init(ctx) not called';
	  }
	}
	
	/**
	 * Returns true or false if value matches any WebGL enum
	 * @param {*} value Value to check if it might be an enum.
	 * @return {boolean} True if value matches one of the WebGL defined enums
	 */
	function mightBeEnum(value) {
	  checkInit();
	  return (glEnums[value] !== undefined);
	}
	
	/**
	 * Gets an string version of an WebGL enum.
	 *
	 * Example:
	 *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());
	 *
	 * @param {number} value Value to return an enum for
	 * @return {string} The string version of the enum.
	 */
	function glEnumToString(value) {
	  checkInit();
	  var name = glEnums[value];
	  return (name !== undefined) ? ("gl." + name) :
	      ("/*UNKNOWN WebGL ENUM*/ 0x" + value.toString(16) + "");
	}
	
	/**
	 * Returns the string version of a WebGL argument.
	 * Attempts to convert enum arguments to strings.
	 * @param {string} functionName the name of the WebGL function.
	 * @param {number} numArgs the number of arguments passed to the function.
	 * @param {number} argumentIndx the index of the argument.
	 * @param {*} value The value of the argument.
	 * @return {string} The value as a string.
	 */
	function glFunctionArgToString(functionName, numArgs, argumentIndex, value) {
	  var funcInfo = glValidEnumContexts[functionName];
	  if (funcInfo !== undefined) {
	    var funcInfo = funcInfo[numArgs];
	    if (funcInfo !== undefined) {
	      if (funcInfo[argumentIndex]) {
	        if (typeof funcInfo[argumentIndex] === 'object' &&
	            funcInfo[argumentIndex]['enumBitwiseOr'] !== undefined) {
	          var enums = funcInfo[argumentIndex]['enumBitwiseOr'];
	          var orResult = 0;
	          var orEnums = [];
	          for (var i = 0; i < enums.length; ++i) {
	            var enumValue = enumStringToValue[enums[i]];
	            if ((value & enumValue) !== 0) {
	              orResult |= enumValue;
	              orEnums.push(glEnumToString(enumValue));
	            }
	          }
	          if (orResult === value) {
	            return orEnums.join(' | ');
	          } else {
	            return glEnumToString(value);
	          }
	        } else {
	          return glEnumToString(value);
	        }
	      }
	    }
	  }
	  if (value === null) {
	    return "null";
	  } else if (value === undefined) {
	    return "undefined";
	  } else {
	    return value.toString();
	  }
	}
	
	/**
	 * Converts the arguments of a WebGL function to a string.
	 * Attempts to convert enum arguments to strings.
	 *
	 * @param {string} functionName the name of the WebGL function.
	 * @param {number} args The arguments.
	 * @return {string} The arguments as a string.
	 */
	function glFunctionArgsToString(functionName, args) {
	  // apparently we can't do args.join(",");
	  var argStr = "";
	  var numArgs = args.length;
	  for (var ii = 0; ii < numArgs; ++ii) {
	    argStr += ((ii == 0) ? '' : ', ') +
	        glFunctionArgToString(functionName, numArgs, ii, args[ii]);
	  }
	  return argStr;
	};
	
	
	function makePropertyWrapper(wrapper, original, propertyName) {
	  //log("wrap prop: " + propertyName);
	  wrapper.__defineGetter__(propertyName, function() {
	    return original[propertyName];
	  });
	  // TODO(gmane): this needs to handle properties that take more than
	  // one value?
	  wrapper.__defineSetter__(propertyName, function(value) {
	    //log("set: " + propertyName);
	    original[propertyName] = value;
	  });
	}
	
	// Makes a function that calls a function on another object.
	function makeFunctionWrapper(original, functionName) {
	  //log("wrap fn: " + functionName);
	  var f = original[functionName];
	  return function() {
	    //log("call: " + functionName);
	    var result = f.apply(original, arguments);
	    return result;
	  };
	}
	
	/**
	 * Given a WebGL context returns a wrapped context that calls
	 * gl.getError after every command and calls a function if the
	 * result is not gl.NO_ERROR.
	 *
	 * @param {!WebGLRenderingContext} ctx The webgl context to
	 *        wrap.
	 * @param {!function(err, funcName, args): void} opt_onErrorFunc
	 *        The function to call when gl.getError returns an
	 *        error. If not specified the default function calls
	 *        console.log with a message.
	 * @param {!function(funcName, args): void} opt_onFunc The
	 *        function to call when each webgl function is called.
	 *        You can use this to log all calls for example.
	 * @param {!WebGLRenderingContext} opt_err_ctx The webgl context
	 *        to call getError on if different than ctx.
	 */
	function makeDebugContext(ctx, opt_onErrorFunc, opt_onFunc, opt_err_ctx) {
	  opt_err_ctx = opt_err_ctx || ctx;
	  init(ctx);
	  opt_onErrorFunc = opt_onErrorFunc || function(err, functionName, args) {
	        // apparently we can't do args.join(",");
	        var argStr = "";
	        var numArgs = args.length;
	        for (var ii = 0; ii < numArgs; ++ii) {
	          argStr += ((ii == 0) ? '' : ', ') +
	              glFunctionArgToString(functionName, numArgs, ii, args[ii]);
	        }
	        error("WebGL error "+ glEnumToString(err) + " in "+ functionName +
	              "(" + argStr + ")");
	      };
	
	  // Holds booleans for each GL error so after we get the error ourselves
	  // we can still return it to the client app.
	  var glErrorShadow = { };
	
	  // Makes a function that calls a WebGL function and then calls getError.
	  function makeErrorWrapper(ctx, functionName) {
	    return function() {
	      if (opt_onFunc) {
	        opt_onFunc(functionName, arguments);
	      }
	      var result = ctx[functionName].apply(ctx, arguments);
	      var err = opt_err_ctx.getError();
	      if (err != 0) {
	        glErrorShadow[err] = true;
	        opt_onErrorFunc(err, functionName, arguments);
	      }
	      return result;
	    };
	  }
	
	  // Make a an object that has a copy of every property of the WebGL context
	  // but wraps all functions.
	  var wrapper = {};
	  for (var propertyName in ctx) {
	    if (typeof ctx[propertyName] == 'function') {
	      if (propertyName != 'getExtension') {
	        wrapper[propertyName] = makeErrorWrapper(ctx, propertyName);
	      } else {
	        var wrapped = makeErrorWrapper(ctx, propertyName);
	        wrapper[propertyName] = function () {
	          var result = wrapped.apply(ctx, arguments);
	          return makeDebugContext(result, opt_onErrorFunc, opt_onFunc, opt_err_ctx);
	        };
	      }
	    } else {
	      makePropertyWrapper(wrapper, ctx, propertyName);
	    }
	  }
	
	  // Override the getError function with one that returns our saved results.
	  wrapper.getError = function() {
	    for (var err in glErrorShadow) {
	      if (glErrorShadow.hasOwnProperty(err)) {
	        if (glErrorShadow[err]) {
	          glErrorShadow[err] = false;
	          return err;
	        }
	      }
	    }
	    return ctx.NO_ERROR;
	  };
	
	  return wrapper;
	}
	
	function resetToInitialState(ctx) {
	  var numAttribs = ctx.getParameter(ctx.MAX_VERTEX_ATTRIBS);
	  var tmp = ctx.createBuffer();
	  ctx.bindBuffer(ctx.ARRAY_BUFFER, tmp);
	  for (var ii = 0; ii < numAttribs; ++ii) {
	    ctx.disableVertexAttribArray(ii);
	    ctx.vertexAttribPointer(ii, 4, ctx.FLOAT, false, 0, 0);
	    ctx.vertexAttrib1f(ii, 0);
	  }
	  ctx.deleteBuffer(tmp);
	
	  var numTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);
	  for (var ii = 0; ii < numTextureUnits; ++ii) {
	    ctx.activeTexture(ctx.TEXTURE0 + ii);
	    ctx.bindTexture(ctx.TEXTURE_CUBE_MAP, null);
	    ctx.bindTexture(ctx.TEXTURE_2D, null);
	  }
	
	  ctx.activeTexture(ctx.TEXTURE0);
	  ctx.useProgram(null);
	  ctx.bindBuffer(ctx.ARRAY_BUFFER, null);
	  ctx.bindBuffer(ctx.ELEMENT_ARRAY_BUFFER, null);
	  ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);
	  ctx.bindRenderbuffer(ctx.RENDERBUFFER, null);
	  ctx.disable(ctx.BLEND);
	  ctx.disable(ctx.CULL_FACE);
	  ctx.disable(ctx.DEPTH_TEST);
	  ctx.disable(ctx.DITHER);
	  ctx.disable(ctx.SCISSOR_TEST);
	  ctx.blendColor(0, 0, 0, 0);
	  ctx.blendEquation(ctx.FUNC_ADD);
	  ctx.blendFunc(ctx.ONE, ctx.ZERO);
	  ctx.clearColor(0, 0, 0, 0);
	  ctx.clearDepth(1);
	  ctx.clearStencil(-1);
	  ctx.colorMask(true, true, true, true);
	  ctx.cullFace(ctx.BACK);
	  ctx.depthFunc(ctx.LESS);
	  ctx.depthMask(true);
	  ctx.depthRange(0, 1);
	  ctx.frontFace(ctx.CCW);
	  ctx.hint(ctx.GENERATE_MIPMAP_HINT, ctx.DONT_CARE);
	  ctx.lineWidth(1);
	  ctx.pixelStorei(ctx.PACK_ALIGNMENT, 4);
	  ctx.pixelStorei(ctx.UNPACK_ALIGNMENT, 4);
	  ctx.pixelStorei(ctx.UNPACK_FLIP_Y_WEBGL, false);
	  ctx.pixelStorei(ctx.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);
	  // TODO: Delete this IF.
	  if (ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL) {
	    ctx.pixelStorei(ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL, ctx.BROWSER_DEFAULT_WEBGL);
	  }
	  ctx.polygonOffset(0, 0);
	  ctx.sampleCoverage(1, false);
	  ctx.scissor(0, 0, ctx.canvas.width, ctx.canvas.height);
	  ctx.stencilFunc(ctx.ALWAYS, 0, 0xFFFFFFFF);
	  ctx.stencilMask(0xFFFFFFFF);
	  ctx.stencilOp(ctx.KEEP, ctx.KEEP, ctx.KEEP);
	  ctx.viewport(0, 0, ctx.canvas.width, ctx.canvas.height);
	  ctx.clear(ctx.COLOR_BUFFER_BIT | ctx.DEPTH_BUFFER_BIT | ctx.STENCIL_BUFFER_BIT);
	
	  // TODO: This should NOT be needed but Firefox fails with 'hint'
	  while(ctx.getError());
	}
	
	function makeLostContextSimulatingCanvas(canvas) {
	  var unwrappedContext_;
	  var wrappedContext_;
	  var onLost_ = [];
	  var onRestored_ = [];
	  var wrappedContext_ = {};
	  var contextId_ = 1;
	  var contextLost_ = false;
	  var resourceId_ = 0;
	  var resourceDb_ = [];
	  var numCallsToLoseContext_ = 0;
	  var numCalls_ = 0;
	  var canRestore_ = false;
	  var restoreTimeout_ = 0;
	
	  // Holds booleans for each GL error so can simulate errors.
	  var glErrorShadow_ = { };
	
	  canvas.getContext = function(f) {
	    return function() {
	      var ctx = f.apply(canvas, arguments);
	      // Did we get a context and is it a WebGL context?
	      if (ctx instanceof WebGLRenderingContext) {
	        if (ctx != unwrappedContext_) {
	          if (unwrappedContext_) {
	            throw "got different context"
	          }
	          unwrappedContext_ = ctx;
	          wrappedContext_ = makeLostContextSimulatingContext(unwrappedContext_);
	        }
	        return wrappedContext_;
	      }
	      return ctx;
	    }
	  }(canvas.getContext);
	
	  function wrapEvent(listener) {
	    if (typeof(listener) == "function") {
	      return listener;
	    } else {
	      return function(info) {
	        listener.handleEvent(info);
	      }
	    }
	  }
	
	  var addOnContextLostListener = function(listener) {
	    onLost_.push(wrapEvent(listener));
	  };
	
	  var addOnContextRestoredListener = function(listener) {
	    onRestored_.push(wrapEvent(listener));
	  };
	
	
	  function wrapAddEventListener(canvas) {
	    var f = canvas.addEventListener;
	    canvas.addEventListener = function(type, listener, bubble) {
	      switch (type) {
	        case 'webglcontextlost':
	          addOnContextLostListener(listener);
	          break;
	        case 'webglcontextrestored':
	          addOnContextRestoredListener(listener);
	          break;
	        default:
	          f.apply(canvas, arguments);
	      }
	    };
	  }
	
	  wrapAddEventListener(canvas);
	
	  canvas.loseContext = function() {
	    if (!contextLost_) {
	      contextLost_ = true;
	      numCallsToLoseContext_ = 0;
	      ++contextId_;
	      while (unwrappedContext_.getError());
	      clearErrors();
	      glErrorShadow_[unwrappedContext_.CONTEXT_LOST_WEBGL] = true;
	      var event = makeWebGLContextEvent("context lost");
	      var callbacks = onLost_.slice();
	      setTimeout(function() {
	          //log("numCallbacks:" + callbacks.length);
	          for (var ii = 0; ii < callbacks.length; ++ii) {
	            //log("calling callback:" + ii);
	            callbacks[ii](event);
	          }
	          if (restoreTimeout_ >= 0) {
	            setTimeout(function() {
	                canvas.restoreContext();
	              }, restoreTimeout_);
	          }
	        }, 0);
	    }
	  };
	
	  canvas.restoreContext = function() {
	    if (contextLost_) {
	      if (onRestored_.length) {
	        setTimeout(function() {
	            if (!canRestore_) {
	              throw "can not restore. webglcontestlost listener did not call event.preventDefault";
	            }
	            freeResources();
	            resetToInitialState(unwrappedContext_);
	            contextLost_ = false;
	            numCalls_ = 0;
	            canRestore_ = false;
	            var callbacks = onRestored_.slice();
	            var event = makeWebGLContextEvent("context restored");
	            for (var ii = 0; ii < callbacks.length; ++ii) {
	              callbacks[ii](event);
	            }
	          }, 0);
	      }
	    }
	  };
	
	  canvas.loseContextInNCalls = function(numCalls) {
	    if (contextLost_) {
	      throw "You can not ask a lost contet to be lost";
	    }
	    numCallsToLoseContext_ = numCalls_ + numCalls;
	  };
	
	  canvas.getNumCalls = function() {
	    return numCalls_;
	  };
	
	  canvas.setRestoreTimeout = function(timeout) {
	    restoreTimeout_ = timeout;
	  };
	
	  function isWebGLObject(obj) {
	    //return false;
	    return (obj instanceof WebGLBuffer ||
	            obj instanceof WebGLFramebuffer ||
	            obj instanceof WebGLProgram ||
	            obj instanceof WebGLRenderbuffer ||
	            obj instanceof WebGLShader ||
	            obj instanceof WebGLTexture);
	  }
	
	  function checkResources(args) {
	    for (var ii = 0; ii < args.length; ++ii) {
	      var arg = args[ii];
	      if (isWebGLObject(arg)) {
	        return arg.__webglDebugContextLostId__ == contextId_;
	      }
	    }
	    return true;
	  }
	
	  function clearErrors() {
	    var k = Object.keys(glErrorShadow_);
	    for (var ii = 0; ii < k.length; ++ii) {
	      delete glErrorShadow_[k];
	    }
	  }
	
	  function loseContextIfTime() {
	    ++numCalls_;
	    if (!contextLost_) {
	      if (numCallsToLoseContext_ == numCalls_) {
	        canvas.loseContext();
	      }
	    }
	  }
	
	  // Makes a function that simulates WebGL when out of context.
	  function makeLostContextFunctionWrapper(ctx, functionName) {
	    var f = ctx[functionName];
	    return function() {
	      // log("calling:" + functionName);
	      // Only call the functions if the context is not lost.
	      loseContextIfTime();
	      if (!contextLost_) {
	        //if (!checkResources(arguments)) {
	        //  glErrorShadow_[wrappedContext_.INVALID_OPERATION] = true;
	        //  return;
	        //}
	        var result = f.apply(ctx, arguments);
	        return result;
	      }
	    };
	  }
	
	  function freeResources() {
	    for (var ii = 0; ii < resourceDb_.length; ++ii) {
	      var resource = resourceDb_[ii];
	      if (resource instanceof WebGLBuffer) {
	        unwrappedContext_.deleteBuffer(resource);
	      } else if (resource instanceof WebGLFramebuffer) {
	        unwrappedContext_.deleteFramebuffer(resource);
	      } else if (resource instanceof WebGLProgram) {
	        unwrappedContext_.deleteProgram(resource);
	      } else if (resource instanceof WebGLRenderbuffer) {
	        unwrappedContext_.deleteRenderbuffer(resource);
	      } else if (resource instanceof WebGLShader) {
	        unwrappedContext_.deleteShader(resource);
	      } else if (resource instanceof WebGLTexture) {
	        unwrappedContext_.deleteTexture(resource);
	      }
	    }
	  }
	
	  function makeWebGLContextEvent(statusMessage) {
	    return {
	      statusMessage: statusMessage,
	      preventDefault: function() {
	          canRestore_ = true;
	        }
	    };
	  }
	
	  return canvas;
	
	  function makeLostContextSimulatingContext(ctx) {
	    // copy all functions and properties to wrapper
	    for (var propertyName in ctx) {
	      if (typeof ctx[propertyName] == 'function') {
	         wrappedContext_[propertyName] = makeLostContextFunctionWrapper(
	             ctx, propertyName);
	       } else {
	         makePropertyWrapper(wrappedContext_, ctx, propertyName);
	       }
	    }
	
	    // Wrap a few functions specially.
	    wrappedContext_.getError = function() {
	      loseContextIfTime();
	      if (!contextLost_) {
	        var err;
	        while (err = unwrappedContext_.getError()) {
	          glErrorShadow_[err] = true;
	        }
	      }
	      for (var err in glErrorShadow_) {
	        if (glErrorShadow_[err]) {
	          delete glErrorShadow_[err];
	          return err;
	        }
	      }
	      return wrappedContext_.NO_ERROR;
	    };
	
	    var creationFunctions = [
	      "createBuffer",
	      "createFramebuffer",
	      "createProgram",
	      "createRenderbuffer",
	      "createShader",
	      "createTexture"
	    ];
	    for (var ii = 0; ii < creationFunctions.length; ++ii) {
	      var functionName = creationFunctions[ii];
	      wrappedContext_[functionName] = function(f) {
	        return function() {
	          loseContextIfTime();
	          if (contextLost_) {
	            return null;
	          }
	          var obj = f.apply(ctx, arguments);
	          obj.__webglDebugContextLostId__ = contextId_;
	          resourceDb_.push(obj);
	          return obj;
	        };
	      }(ctx[functionName]);
	    }
	
	    var functionsThatShouldReturnNull = [
	      "getActiveAttrib",
	      "getActiveUniform",
	      "getBufferParameter",
	      "getContextAttributes",
	      "getAttachedShaders",
	      "getFramebufferAttachmentParameter",
	      "getParameter",
	      "getProgramParameter",
	      "getProgramInfoLog",
	      "getRenderbufferParameter",
	      "getShaderParameter",
	      "getShaderInfoLog",
	      "getShaderSource",
	      "getTexParameter",
	      "getUniform",
	      "getUniformLocation",
	      "getVertexAttrib"
	    ];
	    for (var ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {
	      var functionName = functionsThatShouldReturnNull[ii];
	      wrappedContext_[functionName] = function(f) {
	        return function() {
	          loseContextIfTime();
	          if (contextLost_) {
	            return null;
	          }
	          return f.apply(ctx, arguments);
	        }
	      }(wrappedContext_[functionName]);
	    }
	
	    var isFunctions = [
	      "isBuffer",
	      "isEnabled",
	      "isFramebuffer",
	      "isProgram",
	      "isRenderbuffer",
	      "isShader",
	      "isTexture"
	    ];
	    for (var ii = 0; ii < isFunctions.length; ++ii) {
	      var functionName = isFunctions[ii];
	      wrappedContext_[functionName] = function(f) {
	        return function() {
	          loseContextIfTime();
	          if (contextLost_) {
	            return false;
	          }
	          return f.apply(ctx, arguments);
	        }
	      }(wrappedContext_[functionName]);
	    }
	
	    wrappedContext_.checkFramebufferStatus = function(f) {
	      return function() {
	        loseContextIfTime();
	        if (contextLost_) {
	          return wrappedContext_.FRAMEBUFFER_UNSUPPORTED;
	        }
	        return f.apply(ctx, arguments);
	      };
	    }(wrappedContext_.checkFramebufferStatus);
	
	    wrappedContext_.getAttribLocation = function(f) {
	      return function() {
	        loseContextIfTime();
	        if (contextLost_) {
	          return -1;
	        }
	        return f.apply(ctx, arguments);
	      };
	    }(wrappedContext_.getAttribLocation);
	
	    wrappedContext_.getVertexAttribOffset = function(f) {
	      return function() {
	        loseContextIfTime();
	        if (contextLost_) {
	          return 0;
	        }
	        return f.apply(ctx, arguments);
	      };
	    }(wrappedContext_.getVertexAttribOffset);
	
	    wrappedContext_.isContextLost = function() {
	      return contextLost_;
	    };
	
	    return wrappedContext_;
	  }
	}
	
	return {
	  /**
	   * Initializes this module. Safe to call more than once.
	   * @param {!WebGLRenderingContext} ctx A WebGL context. If
	   *    you have more than one context it doesn't matter which one
	   *    you pass in, it is only used to pull out constants.
	   */
	  'init': init,
	
	  /**
	   * Returns true or false if value matches any WebGL enum
	   * @param {*} value Value to check if it might be an enum.
	   * @return {boolean} True if value matches one of the WebGL defined enums
	   */
	  'mightBeEnum': mightBeEnum,
	
	  /**
	   * Gets an string version of an WebGL enum.
	   *
	   * Example:
	   *   WebGLDebugUtil.init(ctx);
	   *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());
	   *
	   * @param {number} value Value to return an enum for
	   * @return {string} The string version of the enum.
	   */
	  'glEnumToString': glEnumToString,
	
	  /**
	   * Converts the argument of a WebGL function to a string.
	   * Attempts to convert enum arguments to strings.
	   *
	   * Example:
	   *   WebGLDebugUtil.init(ctx);
	   *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 2, 0, gl.TEXTURE_2D);
	   *
	   * would return 'TEXTURE_2D'
	   *
	   * @param {string} functionName the name of the WebGL function.
	   * @param {number} numArgs The number of arguments
	   * @param {number} argumentIndx the index of the argument.
	   * @param {*} value The value of the argument.
	   * @return {string} The value as a string.
	   */
	  'glFunctionArgToString': glFunctionArgToString,
	
	  /**
	   * Converts the arguments of a WebGL function to a string.
	   * Attempts to convert enum arguments to strings.
	   *
	   * @param {string} functionName the name of the WebGL function.
	   * @param {number} args The arguments.
	   * @return {string} The arguments as a string.
	   */
	  'glFunctionArgsToString': glFunctionArgsToString,
	
	  /**
	   * Given a WebGL context returns a wrapped context that calls
	   * gl.getError after every command and calls a function if the
	   * result is not NO_ERROR.
	   *
	   * You can supply your own function if you want. For example, if you'd like
	   * an exception thrown on any GL error you could do this
	   *
	   *    function throwOnGLError(err, funcName, args) {
	   *      throw WebGLDebugUtils.glEnumToString(err) +
	   *            " was caused by call to " + funcName;
	   *    };
	   *
	   *    ctx = WebGLDebugUtils.makeDebugContext(
	   *        canvas.getContext("webgl"), throwOnGLError);
	   *
	   * @param {!WebGLRenderingContext} ctx The webgl context to wrap.
	   * @param {!function(err, funcName, args): void} opt_onErrorFunc The function
	   *     to call when gl.getError returns an error. If not specified the default
	   *     function calls console.log with a message.
	   * @param {!function(funcName, args): void} opt_onFunc The
	   *     function to call when each webgl function is called. You
	   *     can use this to log all calls for example.
	   */
	  'makeDebugContext': makeDebugContext,
	
	  /**
	   * Given a canvas element returns a wrapped canvas element that will
	   * simulate lost context. The canvas returned adds the following functions.
	   *
	   * loseContext:
	   *   simulates a lost context event.
	   *
	   * restoreContext:
	   *   simulates the context being restored.
	   *
	   * lostContextInNCalls:
	   *   loses the context after N gl calls.
	   *
	   * getNumCalls:
	   *   tells you how many gl calls there have been so far.
	   *
	   * setRestoreTimeout:
	   *   sets the number of milliseconds until the context is restored
	   *   after it has been lost. Defaults to 0. Pass -1 to prevent
	   *   automatic restoring.
	   *
	   * @param {!Canvas} canvas The canvas element to wrap.
	   */
	  'makeLostContextSimulatingCanvas': makeLostContextSimulatingCanvas,
	
	  /**
	   * Resets a context to the initial state.
	   * @param {!WebGLRenderingContext} ctx The webgl context to
	   *     reset.
	   */
	  'resetToInitialState': resetToInitialState
	};
	
	}();
	
	module.exports = WebGLDebugUtils;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.draw = draw;
	
	var _context = __webpack_require__(222);
	
	var _webgl = __webpack_require__(188);
	
	var _webglChecks = __webpack_require__(201);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// A good thing about webGL is that there are so many ways to draw things,
	// e.g. depending on whether data is indexed and/or isInstanced.
	// This function unifies those into a single call with simple parameters
	// that have sane defaults.
	/* eslint-disable */
	// TODO - generic draw call
	// One of the good things about GL is that there are so many ways to draw things
	function draw(gl, _ref) {
	  var _ref$drawMode = _ref.drawMode,
	      drawMode = _ref$drawMode === undefined ? _webgl.GL.TRIANGLES : _ref$drawMode,
	      vertexCount = _ref.vertexCount,
	      _ref$offset = _ref.offset,
	      offset = _ref$offset === undefined ? 0 : _ref$offset,
	      _ref$isIndexed = _ref.isIndexed,
	      isIndexed = _ref$isIndexed === undefined ? false : _ref$isIndexed,
	      _ref$indexType = _ref.indexType,
	      indexType = _ref$indexType === undefined ? _webgl.GL.UNSIGNED_SHORT : _ref$indexType,
	      _ref$isInstanced = _ref.isInstanced,
	      isInstanced = _ref$isInstanced === undefined ? false : _ref$isInstanced,
	      _ref$instanceCount = _ref.instanceCount,
	      instanceCount = _ref$instanceCount === undefined ? 0 : _ref$instanceCount;
	
	  (0, _webglChecks.assertWebGLContext)(gl);
	
	  drawMode = (0, _webgl.glGet)(drawMode);
	  indexType = (0, _webgl.glGet)(indexType);
	
	  (0, _webglChecks.assertDrawMode)(drawMode, 'in draw');
	  if (isIndexed) {
	    (0, _webglChecks.assertIndexType)(indexType, 'in draw');
	  }
	
	  // TODO - Use polyfilled WebGL2RenderingContext instead of ANGLE extension
	  if (isInstanced) {
	    var extension = gl.getExtension('ANGLE_instanced_arrays');
	    if (isIndexed) {
	      extension.drawElementsInstancedANGLE(drawMode, vertexCount, indexType, offset, instanceCount);
	    } else {
	      extension.drawArraysInstancedANGLE(drawMode, offset, vertexCount, instanceCount);
	    }
	  } else if (isIndexed) {
	    gl.drawElements(drawMode, vertexCount, indexType, offset);
	  } else {
	    gl.drawArrays(drawMode, offset, vertexCount);
	  }
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy93ZWJnbC9kcmF3LmpzIl0sIm5hbWVzIjpbImRyYXciLCJnbCIsImRyYXdNb2RlIiwiVFJJQU5HTEVTIiwidmVydGV4Q291bnQiLCJvZmZzZXQiLCJpc0luZGV4ZWQiLCJpbmRleFR5cGUiLCJVTlNJR05FRF9TSE9SVCIsImlzSW5zdGFuY2VkIiwiaW5zdGFuY2VDb3VudCIsImV4dGVuc2lvbiIsImdldEV4dGVuc2lvbiIsImRyYXdFbGVtZW50c0luc3RhbmNlZEFOR0xFIiwiZHJhd0FycmF5c0luc3RhbmNlZEFOR0xFIiwiZHJhd0VsZW1lbnRzIiwiZHJhd0FycmF5cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFhZ0JBLEksR0FBQUEsSTs7QUFWaEI7O0FBQ0E7O0FBQ0E7O0FBRUE7Ozs7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBWkE7QUFDQTtBQUNBO0FBV08sU0FBU0EsSUFBVCxDQUFjQyxFQUFkLFFBUUo7QUFBQSwyQkFQREMsUUFPQztBQUFBLE1BUERBLFFBT0MsaUNBUFUsVUFBR0MsU0FPYjtBQUFBLE1BTkRDLFdBTUMsUUFOREEsV0FNQztBQUFBLHlCQUxEQyxNQUtDO0FBQUEsTUFMREEsTUFLQywrQkFMUSxDQUtSO0FBQUEsNEJBSkRDLFNBSUM7QUFBQSxNQUpEQSxTQUlDLGtDQUpXLEtBSVg7QUFBQSw0QkFIREMsU0FHQztBQUFBLE1BSERBLFNBR0Msa0NBSFcsVUFBR0MsY0FHZDtBQUFBLDhCQUZEQyxXQUVDO0FBQUEsTUFGREEsV0FFQyxvQ0FGYSxLQUViO0FBQUEsZ0NBRERDLGFBQ0M7QUFBQSxNQUREQSxhQUNDLHNDQURlLENBQ2Y7O0FBQ0QsdUNBQW1CVCxFQUFuQjs7QUFFQUMsYUFBVyxrQkFBTUEsUUFBTixDQUFYO0FBQ0FLLGNBQVksa0JBQU1BLFNBQU4sQ0FBWjs7QUFFQSxtQ0FBZUwsUUFBZixFQUF5QixTQUF6QjtBQUNBLE1BQUlJLFNBQUosRUFBZTtBQUNiLHNDQUFnQkMsU0FBaEIsRUFBMkIsU0FBM0I7QUFDRDs7QUFFRDtBQUNBLE1BQUlFLFdBQUosRUFBaUI7QUFDZixRQUFNRSxZQUFZVixHQUFHVyxZQUFILENBQWdCLHdCQUFoQixDQUFsQjtBQUNBLFFBQUlOLFNBQUosRUFBZTtBQUNiSyxnQkFBVUUsMEJBQVYsQ0FDRVgsUUFERixFQUNZRSxXQURaLEVBQ3lCRyxTQUR6QixFQUNvQ0YsTUFEcEMsRUFDNENLLGFBRDVDO0FBR0QsS0FKRCxNQUlPO0FBQ0xDLGdCQUFVRyx3QkFBVixDQUNFWixRQURGLEVBQ1lHLE1BRFosRUFDb0JELFdBRHBCLEVBQ2lDTSxhQURqQztBQUdEO0FBQ0YsR0FYRCxNQVdPLElBQUlKLFNBQUosRUFBZTtBQUNwQkwsT0FBR2MsWUFBSCxDQUFnQmIsUUFBaEIsRUFBMEJFLFdBQTFCLEVBQXVDRyxTQUF2QyxFQUFrREYsTUFBbEQ7QUFDRCxHQUZNLE1BRUE7QUFDTEosT0FBR2UsVUFBSCxDQUFjZCxRQUFkLEVBQXdCRyxNQUF4QixFQUFnQ0QsV0FBaEM7QUFDRDtBQUNGIiwiZmlsZSI6ImRyYXcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuLy8gVE9ETyAtIGdlbmVyaWMgZHJhdyBjYWxsXG4vLyBPbmUgb2YgdGhlIGdvb2QgdGhpbmdzIGFib3V0IEdMIGlzIHRoYXQgdGhlcmUgYXJlIHNvIG1hbnkgd2F5cyB0byBkcmF3IHRoaW5nc1xuaW1wb3J0IHtnZXRFeHRlbnNpb259IGZyb20gJy4vY29udGV4dCc7XG5pbXBvcnQge0dMLCBnbEdldH0gZnJvbSAnLi93ZWJnbCc7XG5pbXBvcnQge2Fzc2VydFdlYkdMQ29udGV4dCwgYXNzZXJ0RHJhd01vZGUsIGFzc2VydEluZGV4VHlwZX1cbiAgZnJvbSAnLi93ZWJnbC1jaGVja3MnO1xuaW1wb3J0IGFzc2VydCBmcm9tICdhc3NlcnQnO1xuXG4vLyBBIGdvb2QgdGhpbmcgYWJvdXQgd2ViR0wgaXMgdGhhdCB0aGVyZSBhcmUgc28gbWFueSB3YXlzIHRvIGRyYXcgdGhpbmdzLFxuLy8gZS5nLiBkZXBlbmRpbmcgb24gd2hldGhlciBkYXRhIGlzIGluZGV4ZWQgYW5kL29yIGlzSW5zdGFuY2VkLlxuLy8gVGhpcyBmdW5jdGlvbiB1bmlmaWVzIHRob3NlIGludG8gYSBzaW5nbGUgY2FsbCB3aXRoIHNpbXBsZSBwYXJhbWV0ZXJzXG4vLyB0aGF0IGhhdmUgc2FuZSBkZWZhdWx0cy5cbmV4cG9ydCBmdW5jdGlvbiBkcmF3KGdsLCB7XG4gIGRyYXdNb2RlID0gR0wuVFJJQU5HTEVTLFxuICB2ZXJ0ZXhDb3VudCxcbiAgb2Zmc2V0ID0gMCxcbiAgaXNJbmRleGVkID0gZmFsc2UsXG4gIGluZGV4VHlwZSA9IEdMLlVOU0lHTkVEX1NIT1JULFxuICBpc0luc3RhbmNlZCA9IGZhbHNlLFxuICBpbnN0YW5jZUNvdW50ID0gMFxufSkge1xuICBhc3NlcnRXZWJHTENvbnRleHQoZ2wpO1xuXG4gIGRyYXdNb2RlID0gZ2xHZXQoZHJhd01vZGUpO1xuICBpbmRleFR5cGUgPSBnbEdldChpbmRleFR5cGUpO1xuXG4gIGFzc2VydERyYXdNb2RlKGRyYXdNb2RlLCAnaW4gZHJhdycpO1xuICBpZiAoaXNJbmRleGVkKSB7XG4gICAgYXNzZXJ0SW5kZXhUeXBlKGluZGV4VHlwZSwgJ2luIGRyYXcnKTtcbiAgfVxuXG4gIC8vIFRPRE8gLSBVc2UgcG9seWZpbGxlZCBXZWJHTDJSZW5kZXJpbmdDb250ZXh0IGluc3RlYWQgb2YgQU5HTEUgZXh0ZW5zaW9uXG4gIGlmIChpc0luc3RhbmNlZCkge1xuICAgIGNvbnN0IGV4dGVuc2lvbiA9IGdsLmdldEV4dGVuc2lvbignQU5HTEVfaW5zdGFuY2VkX2FycmF5cycpO1xuICAgIGlmIChpc0luZGV4ZWQpIHtcbiAgICAgIGV4dGVuc2lvbi5kcmF3RWxlbWVudHNJbnN0YW5jZWRBTkdMRShcbiAgICAgICAgZHJhd01vZGUsIHZlcnRleENvdW50LCBpbmRleFR5cGUsIG9mZnNldCwgaW5zdGFuY2VDb3VudFxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZXh0ZW5zaW9uLmRyYXdBcnJheXNJbnN0YW5jZWRBTkdMRShcbiAgICAgICAgZHJhd01vZGUsIG9mZnNldCwgdmVydGV4Q291bnQsIGluc3RhbmNlQ291bnRcbiAgICAgICk7XG4gICAgfVxuICB9IGVsc2UgaWYgKGlzSW5kZXhlZCkge1xuICAgIGdsLmRyYXdFbGVtZW50cyhkcmF3TW9kZSwgdmVydGV4Q291bnQsIGluZGV4VHlwZSwgb2Zmc2V0KTtcbiAgfSBlbHNlIHtcbiAgICBnbC5kcmF3QXJyYXlzKGRyYXdNb2RlLCBvZmZzZXQsIHZlcnRleENvdW50KTtcbiAgfVxufVxuIl19

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _vertexArrayObject = __webpack_require__(226);
	
	Object.defineProperty(exports, 'VertexArrayObject', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_vertexArrayObject).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy93ZWJnbDIvaW5kZXguanMiXSwibmFtZXMiOlsiZGVmYXVsdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7c0RBQVFBLE8iLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge2RlZmF1bHQgYXMgVmVydGV4QXJyYXlPYmplY3R9IGZyb20gJy4vdmVydGV4LWFycmF5LW9iamVjdCc7XG4iXX0=

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // WebGL2 VertexArray Objects Helper
	
	
	exports.isVertexArray = isVertexArray;
	
	var _webglTypes = __webpack_require__(189);
	
	var _webglChecks = __webpack_require__(201);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/* eslint-disable camelcase */
	var OES_vertex_array_object = 'OES_vertex_array_object';
	
	var VertexArrayObject = function () {
	  _createClass(VertexArrayObject, null, [{
	    key: 'isSupported',
	
	
	    // Returns true if VertexArrayObject is supported by implementation
	    value: function isSupported(gl) {
	      (0, _webglChecks.assertWebGLContext)(gl);
	      return gl instanceof _webglTypes.WebGL2RenderingContext || gl.getExtension('OES_vertex_array_object');
	    }
	
	    // Wraps a WebGLVertexArrayObject in a VertexArrayObject
	
	  }, {
	    key: 'wrap',
	    value: function wrap(gl, object) {
	      return object instanceof VertexArrayObject ? object : new VertexArrayObject(gl, { handle: object.handle || object });
	    }
	
	    // Create a VertexArrayObject
	
	  }]);
	
	  function VertexArrayObject(gl) {
	    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	        handle = _ref.handle;
	
	    _classCallCheck(this, VertexArrayObject);
	
	    (0, _webglChecks.assertWebGLContext)(gl);
	    (0, _assert2.default)(VertexArrayObject.isSupported(gl), 'VertexArrayObject: WebGL2 or OES_vertex_array_object required');
	
	    handle = handle || createVertexArray(gl);
	    // TODO isVertexArray fails when using extension for some reason
	    // if (!isVertexArray(gl, handle)) {
	    if (!handle) {
	      throw new Error('Could not create VertexArrayObject');
	    }
	
	    this.gl = gl;
	    this.handle = handle;
	    this.userData = {};
	    Object.seal(this);
	  }
	
	  _createClass(VertexArrayObject, [{
	    key: 'delete',
	    value: function _delete() {
	      deleteVertexArray(this.gl, this.handle);
	      return this;
	    }
	  }, {
	    key: 'bind',
	    value: function bind() {
	      bindVertexArray(this.gl, this.handle);
	      return this;
	    }
	  }, {
	    key: 'unbind',
	    value: function unbind() {
	      bindVertexArray(this.gl, null);
	      return this;
	    }
	  }]);
	
	  return VertexArrayObject;
	}();
	
	exports.default = VertexArrayObject;
	
	
	function createVertexArray(gl) {
	  if (gl instanceof _webglTypes.WebGL2RenderingContext) {
	    return gl.createVertexArray();
	  }
	  var ext = gl.getExtension(OES_vertex_array_object);
	  if (ext) {
	    return ext.createVertexArrayOES();
	  }
	  return null;
	}
	
	function deleteVertexArray(gl, vertexArray) {
	  if (gl instanceof _webglTypes.WebGL2RenderingContext) {
	    gl.deleteVertexArray(vertexArray);
	  }
	  var ext = gl.getExtension(OES_vertex_array_object);
	  if (ext) {
	    ext.deleteVertexArrayOES(vertexArray);
	  }
	}
	
	function isVertexArray(gl, vertexArray) {
	  if (gl instanceof _webglTypes.WebGL2RenderingContext) {
	    return gl.isVertexArray(vertexArray);
	  }
	  var ext = gl.getExtension(OES_vertex_array_object);
	  if (ext) {
	    return ext.isVertexArrayOES(vertexArray);
	  }
	  return false;
	}
	
	function bindVertexArray(gl, vertexArray) {
	  if (gl instanceof _webglTypes.WebGL2RenderingContext) {
	    gl.bindVertexArray(vertexArray);
	  }
	  var ext = gl.getExtension(OES_vertex_array_object);
	  if (ext) {
	    ext.bindVertexArrayOES(vertexArray);
	  }
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy93ZWJnbDIvdmVydGV4LWFycmF5LW9iamVjdC5qcyJdLCJuYW1lcyI6WyJpc1ZlcnRleEFycmF5IiwiT0VTX3ZlcnRleF9hcnJheV9vYmplY3QiLCJWZXJ0ZXhBcnJheU9iamVjdCIsImdsIiwiZ2V0RXh0ZW5zaW9uIiwib2JqZWN0IiwiaGFuZGxlIiwiaXNTdXBwb3J0ZWQiLCJjcmVhdGVWZXJ0ZXhBcnJheSIsIkVycm9yIiwidXNlckRhdGEiLCJPYmplY3QiLCJzZWFsIiwiZGVsZXRlVmVydGV4QXJyYXkiLCJiaW5kVmVydGV4QXJyYXkiLCJleHQiLCJjcmVhdGVWZXJ0ZXhBcnJheU9FUyIsInZlcnRleEFycmF5IiwiZGVsZXRlVmVydGV4QXJyYXlPRVMiLCJpc1ZlcnRleEFycmF5T0VTIiwiYmluZFZlcnRleEFycmF5T0VTIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O3FqQkFBQTs7O1FBa0ZnQkEsYSxHQUFBQSxhOztBQWpGaEI7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBRUE7QUFDQSxJQUFNQywwQkFBMEIseUJBQWhDOztJQUVxQkMsaUI7Ozs7O0FBRW5CO2dDQUNtQkMsRSxFQUFJO0FBQ3JCLDJDQUFtQkEsRUFBbkI7QUFDQSxhQUNFQSxvREFDQUEsR0FBR0MsWUFBSCxDQUFnQix5QkFBaEIsQ0FGRjtBQUlEOztBQUVEOzs7O3lCQUNZRCxFLEVBQUlFLE0sRUFBUTtBQUN0QixhQUFPQSxrQkFBa0JILGlCQUFsQixHQUNMRyxNQURLLEdBRUwsSUFBSUgsaUJBQUosQ0FBc0JDLEVBQXRCLEVBQTBCLEVBQUNHLFFBQVFELE9BQU9DLE1BQVAsSUFBaUJELE1BQTFCLEVBQTFCLENBRkY7QUFHRDs7QUFFRDs7OztBQUNBLDZCQUFZRixFQUFaLEVBQStCO0FBQUEsbUZBQUosRUFBSTtBQUFBLFFBQWRHLE1BQWMsUUFBZEEsTUFBYzs7QUFBQTs7QUFDN0IseUNBQW1CSCxFQUFuQjtBQUNBLDBCQUFPRCxrQkFBa0JLLFdBQWxCLENBQThCSixFQUE5QixDQUFQLEVBQ0UsK0RBREY7O0FBR0FHLGFBQVNBLFVBQVVFLGtCQUFrQkwsRUFBbEIsQ0FBbkI7QUFDQTtBQUNBO0FBQ0EsUUFBSSxDQUFDRyxNQUFMLEVBQWE7QUFDWCxZQUFNLElBQUlHLEtBQUosQ0FBVSxvQ0FBVixDQUFOO0FBQ0Q7O0FBRUQsU0FBS04sRUFBTCxHQUFVQSxFQUFWO0FBQ0EsU0FBS0csTUFBTCxHQUFjQSxNQUFkO0FBQ0EsU0FBS0ksUUFBTCxHQUFnQixFQUFoQjtBQUNBQyxXQUFPQyxJQUFQLENBQVksSUFBWjtBQUNEOzs7OzhCQUVRO0FBQ1BDLHdCQUFrQixLQUFLVixFQUF2QixFQUEyQixLQUFLRyxNQUFoQztBQUNBLGFBQU8sSUFBUDtBQUNEOzs7MkJBRU07QUFDTFEsc0JBQWdCLEtBQUtYLEVBQXJCLEVBQXlCLEtBQUtHLE1BQTlCO0FBQ0EsYUFBTyxJQUFQO0FBQ0Q7Ozs2QkFFUTtBQUNQUSxzQkFBZ0IsS0FBS1gsRUFBckIsRUFBeUIsSUFBekI7QUFDQSxhQUFPLElBQVA7QUFDRDs7Ozs7O2tCQWxEa0JELGlCOzs7QUFxRHJCLFNBQVNNLGlCQUFULENBQTJCTCxFQUEzQixFQUErQjtBQUM3QixNQUFJQSxnREFBSixFQUEwQztBQUN4QyxXQUFPQSxHQUFHSyxpQkFBSCxFQUFQO0FBQ0Q7QUFDRCxNQUFNTyxNQUFNWixHQUFHQyxZQUFILENBQWdCSCx1QkFBaEIsQ0FBWjtBQUNBLE1BQUljLEdBQUosRUFBUztBQUNQLFdBQU9BLElBQUlDLG9CQUFKLEVBQVA7QUFDRDtBQUNELFNBQU8sSUFBUDtBQUNEOztBQUVELFNBQVNILGlCQUFULENBQTJCVixFQUEzQixFQUErQmMsV0FBL0IsRUFBNEM7QUFDMUMsTUFBSWQsZ0RBQUosRUFBMEM7QUFDeENBLE9BQUdVLGlCQUFILENBQXFCSSxXQUFyQjtBQUNEO0FBQ0QsTUFBTUYsTUFBTVosR0FBR0MsWUFBSCxDQUFnQkgsdUJBQWhCLENBQVo7QUFDQSxNQUFJYyxHQUFKLEVBQVM7QUFDUEEsUUFBSUcsb0JBQUosQ0FBeUJELFdBQXpCO0FBQ0Q7QUFDRjs7QUFFTSxTQUFTakIsYUFBVCxDQUF1QkcsRUFBdkIsRUFBMkJjLFdBQTNCLEVBQXdDO0FBQzdDLE1BQUlkLGdEQUFKLEVBQTBDO0FBQ3hDLFdBQU9BLEdBQUdILGFBQUgsQ0FBaUJpQixXQUFqQixDQUFQO0FBQ0Q7QUFDRCxNQUFNRixNQUFNWixHQUFHQyxZQUFILENBQWdCSCx1QkFBaEIsQ0FBWjtBQUNBLE1BQUljLEdBQUosRUFBUztBQUNQLFdBQU9BLElBQUlJLGdCQUFKLENBQXFCRixXQUFyQixDQUFQO0FBQ0Q7QUFDRCxTQUFPLEtBQVA7QUFDRDs7QUFFRCxTQUFTSCxlQUFULENBQXlCWCxFQUF6QixFQUE2QmMsV0FBN0IsRUFBMEM7QUFDeEMsTUFBSWQsZ0RBQUosRUFBMEM7QUFDeENBLE9BQUdXLGVBQUgsQ0FBbUJHLFdBQW5CO0FBQ0Q7QUFDRCxNQUFNRixNQUFNWixHQUFHQyxZQUFILENBQWdCSCx1QkFBaEIsQ0FBWjtBQUNBLE1BQUljLEdBQUosRUFBUztBQUNQQSxRQUFJSyxrQkFBSixDQUF1QkgsV0FBdkI7QUFDRDtBQUNGIiwiZmlsZSI6InZlcnRleC1hcnJheS1vYmplY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBXZWJHTDIgVmVydGV4QXJyYXkgT2JqZWN0cyBIZWxwZXJcbmltcG9ydCB7V2ViR0wyUmVuZGVyaW5nQ29udGV4dH0gZnJvbSAnLi4vd2ViZ2wvd2ViZ2wtdHlwZXMnO1xuaW1wb3J0IHthc3NlcnRXZWJHTENvbnRleHR9IGZyb20gJy4uL3dlYmdsL3dlYmdsLWNoZWNrcyc7XG5pbXBvcnQgYXNzZXJ0IGZyb20gJ2Fzc2VydCc7XG5cbi8qIGVzbGludC1kaXNhYmxlIGNhbWVsY2FzZSAqL1xuY29uc3QgT0VTX3ZlcnRleF9hcnJheV9vYmplY3QgPSAnT0VTX3ZlcnRleF9hcnJheV9vYmplY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWZXJ0ZXhBcnJheU9iamVjdCB7XG5cbiAgLy8gUmV0dXJucyB0cnVlIGlmIFZlcnRleEFycmF5T2JqZWN0IGlzIHN1cHBvcnRlZCBieSBpbXBsZW1lbnRhdGlvblxuICBzdGF0aWMgaXNTdXBwb3J0ZWQoZ2wpIHtcbiAgICBhc3NlcnRXZWJHTENvbnRleHQoZ2wpO1xuICAgIHJldHVybiAoXG4gICAgICBnbCBpbnN0YW5jZW9mIFdlYkdMMlJlbmRlcmluZ0NvbnRleHQgfHxcbiAgICAgIGdsLmdldEV4dGVuc2lvbignT0VTX3ZlcnRleF9hcnJheV9vYmplY3QnKVxuICAgICk7XG4gIH1cblxuICAvLyBXcmFwcyBhIFdlYkdMVmVydGV4QXJyYXlPYmplY3QgaW4gYSBWZXJ0ZXhBcnJheU9iamVjdFxuICBzdGF0aWMgd3JhcChnbCwgb2JqZWN0KSB7XG4gICAgcmV0dXJuIG9iamVjdCBpbnN0YW5jZW9mIFZlcnRleEFycmF5T2JqZWN0ID9cbiAgICAgIG9iamVjdCA6XG4gICAgICBuZXcgVmVydGV4QXJyYXlPYmplY3QoZ2wsIHtoYW5kbGU6IG9iamVjdC5oYW5kbGUgfHwgb2JqZWN0fSk7XG4gIH1cblxuICAvLyBDcmVhdGUgYSBWZXJ0ZXhBcnJheU9iamVjdFxuICBjb25zdHJ1Y3RvcihnbCwge2hhbmRsZX0gPSB7fSkge1xuICAgIGFzc2VydFdlYkdMQ29udGV4dChnbCk7XG4gICAgYXNzZXJ0KFZlcnRleEFycmF5T2JqZWN0LmlzU3VwcG9ydGVkKGdsKSxcbiAgICAgICdWZXJ0ZXhBcnJheU9iamVjdDogV2ViR0wyIG9yIE9FU192ZXJ0ZXhfYXJyYXlfb2JqZWN0IHJlcXVpcmVkJyk7XG5cbiAgICBoYW5kbGUgPSBoYW5kbGUgfHwgY3JlYXRlVmVydGV4QXJyYXkoZ2wpO1xuICAgIC8vIFRPRE8gaXNWZXJ0ZXhBcnJheSBmYWlscyB3aGVuIHVzaW5nIGV4dGVuc2lvbiBmb3Igc29tZSByZWFzb25cbiAgICAvLyBpZiAoIWlzVmVydGV4QXJyYXkoZ2wsIGhhbmRsZSkpIHtcbiAgICBpZiAoIWhhbmRsZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb3VsZCBub3QgY3JlYXRlIFZlcnRleEFycmF5T2JqZWN0Jyk7XG4gICAgfVxuXG4gICAgdGhpcy5nbCA9IGdsO1xuICAgIHRoaXMuaGFuZGxlID0gaGFuZGxlO1xuICAgIHRoaXMudXNlckRhdGEgPSB7fTtcbiAgICBPYmplY3Quc2VhbCh0aGlzKTtcbiAgfVxuXG4gIGRlbGV0ZSgpIHtcbiAgICBkZWxldGVWZXJ0ZXhBcnJheSh0aGlzLmdsLCB0aGlzLmhhbmRsZSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBiaW5kKCkge1xuICAgIGJpbmRWZXJ0ZXhBcnJheSh0aGlzLmdsLCB0aGlzLmhhbmRsZSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICB1bmJpbmQoKSB7XG4gICAgYmluZFZlcnRleEFycmF5KHRoaXMuZ2wsIG51bGwpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVZlcnRleEFycmF5KGdsKSB7XG4gIGlmIChnbCBpbnN0YW5jZW9mIFdlYkdMMlJlbmRlcmluZ0NvbnRleHQpIHtcbiAgICByZXR1cm4gZ2wuY3JlYXRlVmVydGV4QXJyYXkoKTtcbiAgfVxuICBjb25zdCBleHQgPSBnbC5nZXRFeHRlbnNpb24oT0VTX3ZlcnRleF9hcnJheV9vYmplY3QpO1xuICBpZiAoZXh0KSB7XG4gICAgcmV0dXJuIGV4dC5jcmVhdGVWZXJ0ZXhBcnJheU9FUygpO1xuICB9XG4gIHJldHVybiBudWxsO1xufVxuXG5mdW5jdGlvbiBkZWxldGVWZXJ0ZXhBcnJheShnbCwgdmVydGV4QXJyYXkpIHtcbiAgaWYgKGdsIGluc3RhbmNlb2YgV2ViR0wyUmVuZGVyaW5nQ29udGV4dCkge1xuICAgIGdsLmRlbGV0ZVZlcnRleEFycmF5KHZlcnRleEFycmF5KTtcbiAgfVxuICBjb25zdCBleHQgPSBnbC5nZXRFeHRlbnNpb24oT0VTX3ZlcnRleF9hcnJheV9vYmplY3QpO1xuICBpZiAoZXh0KSB7XG4gICAgZXh0LmRlbGV0ZVZlcnRleEFycmF5T0VTKHZlcnRleEFycmF5KTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNWZXJ0ZXhBcnJheShnbCwgdmVydGV4QXJyYXkpIHtcbiAgaWYgKGdsIGluc3RhbmNlb2YgV2ViR0wyUmVuZGVyaW5nQ29udGV4dCkge1xuICAgIHJldHVybiBnbC5pc1ZlcnRleEFycmF5KHZlcnRleEFycmF5KTtcbiAgfVxuICBjb25zdCBleHQgPSBnbC5nZXRFeHRlbnNpb24oT0VTX3ZlcnRleF9hcnJheV9vYmplY3QpO1xuICBpZiAoZXh0KSB7XG4gICAgcmV0dXJuIGV4dC5pc1ZlcnRleEFycmF5T0VTKHZlcnRleEFycmF5KTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIGJpbmRWZXJ0ZXhBcnJheShnbCwgdmVydGV4QXJyYXkpIHtcbiAgaWYgKGdsIGluc3RhbmNlb2YgV2ViR0wyUmVuZGVyaW5nQ29udGV4dCkge1xuICAgIGdsLmJpbmRWZXJ0ZXhBcnJheSh2ZXJ0ZXhBcnJheSk7XG4gIH1cbiAgY29uc3QgZXh0ID0gZ2wuZ2V0RXh0ZW5zaW9uKE9FU192ZXJ0ZXhfYXJyYXlfb2JqZWN0KTtcbiAgaWYgKGV4dCkge1xuICAgIGV4dC5iaW5kVmVydGV4QXJyYXlPRVModmVydGV4QXJyYXkpO1xuICB9XG59XG4iXX0=

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _common = __webpack_require__(228);
	
	Object.keys(_common).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _common[key];
	    }
	  });
	});
	
	var _vector = __webpack_require__(239);
	
	Object.defineProperty(exports, 'Vector2', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_vector).default;
	  }
	});
	
	var _vector2 = __webpack_require__(242);
	
	Object.defineProperty(exports, 'Vector3', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_vector2).default;
	  }
	});
	
	var _vector3 = __webpack_require__(243);
	
	Object.defineProperty(exports, 'Vector4', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_vector3).default;
	  }
	});
	
	var _matrix = __webpack_require__(244);
	
	Object.defineProperty(exports, 'Matrix4', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_matrix).default;
	  }
	});
	
	var _quaternion = __webpack_require__(246);
	
	Object.defineProperty(exports, 'Quaternion', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_quaternion).default;
	  }
	});
	
	var _euler = __webpack_require__(247);
	
	Object.defineProperty(exports, 'Euler', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_euler).default;
	  }
	});
	exports.tapeEquals = tapeEquals;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// FOR TAPE TESTING
	// Use tape assert to compares using a.equals(b)
	// Usage test(..., t => { tapeEquals(t, a, b, ...); });
	function tapeEquals(t, a, b, msg, extra) {
	  /* eslint-disable no-invalid-this */
	  t._assert(a.equals(b), {
	    message: msg || 'should be equal',
	    operator: 'equal',
	    actual: a,
	    expected: b,
	    extra: extra
	  });
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYXRoL2luZGV4LmpzIl0sIm5hbWVzIjpbImRlZmF1bHQiLCJ0YXBlRXF1YWxzIiwidCIsImEiLCJiIiwibXNnIiwiZXh0cmEiLCJfYXNzZXJ0IiwiZXF1YWxzIiwibWVzc2FnZSIsIm9wZXJhdG9yIiwiYWN0dWFsIiwiZXhwZWN0ZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7OzJDQUNRQSxPOzs7Ozs7Ozs7NENBQ0FBLE87Ozs7Ozs7Ozs0Q0FDQUEsTzs7Ozs7Ozs7OzJDQUNBQSxPOzs7Ozs7Ozs7K0NBQ0FBLE87Ozs7Ozs7OzswQ0FDQUEsTzs7O1FBS1FDLFUsR0FBQUEsVTs7OztBQUhoQjtBQUNBO0FBQ0E7QUFDTyxTQUFTQSxVQUFULENBQW9CQyxDQUFwQixFQUF1QkMsQ0FBdkIsRUFBMEJDLENBQTFCLEVBQTZCQyxHQUE3QixFQUFrQ0MsS0FBbEMsRUFBeUM7QUFDOUM7QUFDQUosSUFBRUssT0FBRixDQUFVSixFQUFFSyxNQUFGLENBQVNKLENBQVQsQ0FBVixFQUF1QjtBQUNyQkssYUFBU0osT0FBTyxpQkFESztBQUVyQkssY0FBVSxPQUZXO0FBR3JCQyxZQUFRUixDQUhhO0FBSXJCUyxjQUFVUixDQUpXO0FBS3JCRTtBQUxxQixHQUF2QjtBQU9EIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9jb21tb24nO1xuZXhwb3J0IHtkZWZhdWx0IGFzIFZlY3RvcjJ9IGZyb20gJy4vdmVjdG9yMic7XG5leHBvcnQge2RlZmF1bHQgYXMgVmVjdG9yM30gZnJvbSAnLi92ZWN0b3IzJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBWZWN0b3I0fSBmcm9tICcuL3ZlY3RvcjQnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIE1hdHJpeDR9IGZyb20gJy4vbWF0cml4NCc7XG5leHBvcnQge2RlZmF1bHQgYXMgUXVhdGVybmlvbn0gZnJvbSAnLi9xdWF0ZXJuaW9uJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBFdWxlcn0gZnJvbSAnLi9ldWxlcic7XG5cbi8vIEZPUiBUQVBFIFRFU1RJTkdcbi8vIFVzZSB0YXBlIGFzc2VydCB0byBjb21wYXJlcyB1c2luZyBhLmVxdWFscyhiKVxuLy8gVXNhZ2UgdGVzdCguLi4sIHQgPT4geyB0YXBlRXF1YWxzKHQsIGEsIGIsIC4uLik7IH0pO1xuZXhwb3J0IGZ1bmN0aW9uIHRhcGVFcXVhbHModCwgYSwgYiwgbXNnLCBleHRyYSkge1xuICAvKiBlc2xpbnQtZGlzYWJsZSBuby1pbnZhbGlkLXRoaXMgKi9cbiAgdC5fYXNzZXJ0KGEuZXF1YWxzKGIpLCB7XG4gICAgbWVzc2FnZTogbXNnIHx8ICdzaG91bGQgYmUgZXF1YWwnLFxuICAgIG9wZXJhdG9yOiAnZXF1YWwnLFxuICAgIGFjdHVhbDogYSxcbiAgICBleHBlY3RlZDogYixcbiAgICBleHRyYVxuICB9KTtcbn1cbiJdfQ==

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.glMatrix = undefined;
	exports.configure = configure;
	exports.formatValue = formatValue;
	exports.isArray = isArray;
	exports.clone = clone;
	exports.radians = radians;
	exports.degrees = degrees;
	exports.sin = sin;
	exports.cos = cos;
	exports.tan = tan;
	exports.asin = asin;
	exports.acos = acos;
	exports.atan = atan;
	exports.clamp = clamp;
	exports.equals = equals;
	
	var _glMatrix = __webpack_require__(229);
	
	// TODO - remove
	_glMatrix.glMatrix.debug = true; /* eslint-disable no-shadow */
	
	_glMatrix.glMatrix.printRowMajor = true;
	
	exports.glMatrix = _glMatrix.glMatrix;
	function configure(options) {
	  if ('epsilon' in options) {
	    _glMatrix.glMatrix.EPSILON = options.epsilon;
	  }
	
	  if ('debug' in options) {
	    _glMatrix.glMatrix.debug = options.debug;
	  }
	}
	
	function formatValue(value) {
	  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _glMatrix.glMatrix.precision || 4;
	
	  return parseFloat(value.toPrecision(precision));
	}
	
	// Returns true if value is either an array or a typed array
	// Note: does not return true for ArrayBuffers and DataViews
	function isArray(value) {
	  return Array.isArray(value) || ArrayBuffer.isView(value) && value.length;
	}
	
	// If the array has a clone function, calls it, otherwise returns a copy
	function clone(array) {
	  return array.clone ? array.clone() : new Array(array);
	}
	
	// If the argument value is an array, applies the func element wise,
	// otherwise applies func to the argument value
	function map(value, func) {
	  if (isArray(value)) {
	    var result = clone(value);
	    for (var i = 0; i < result.length; ++i) {
	      result[i] = func(result[i], i, result);
	    }
	    return result;
	  }
	  return func(value);
	}
	
	//
	// GLSL math function equivalents
	// Works on both single values and vectors
	//
	
	function radians(degrees) {
	  return map(degrees, function (degrees) {
	    return degrees / 180 * Math.PI;
	  });
	}
	
	// GLSL equivalent: Works on single values and vectors
	function degrees(radians) {
	  return map(radians, function (radians) {
	    return radians * 180 / Math.PI;
	  });
	}
	
	// GLSL equivalent: Works on single values and vectors
	function sin(radians) {
	  return map(radians, function (angle) {
	    return Math.sin(angle);
	  });
	}
	
	// GLSL equivalent: Works on single values and vectors
	function cos(radians) {
	  return map(radians, function (angle) {
	    return Math.cos(angle);
	  });
	}
	
	// GLSL equivalent: Works on single values and vectors
	function tan(radians) {
	  return map(radians, function (angle) {
	    return Math.tan(angle);
	  });
	}
	
	// GLSL equivalent: Works on single values and vectors
	function asin(radians) {
	  return map(radians, function (angle) {
	    return Math.asin(angle);
	  });
	}
	
	// GLSL equivalent: Works on single values and vectors
	function acos(radians) {
	  return map(radians, function (angle) {
	    return Math.acos(angle);
	  });
	}
	
	// GLSL equivalent: Works on single values and vectors
	function atan(radians) {
	  return map(radians, function (angle) {
	    return Math.atan(angle);
	  });
	}
	
	// TODO - glsl equivalent
	function clamp(value, min, max) {
	  return Math.max(min, Math.min(max, value));
	}
	
	function equals(a, b) {
	  return Math.abs(a - b) <= _glMatrix.glMatrix.EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYXRoL2NvbW1vbi5qcyJdLCJuYW1lcyI6WyJjb25maWd1cmUiLCJmb3JtYXRWYWx1ZSIsImlzQXJyYXkiLCJjbG9uZSIsInJhZGlhbnMiLCJkZWdyZWVzIiwic2luIiwiY29zIiwidGFuIiwiYXNpbiIsImFjb3MiLCJhdGFuIiwiY2xhbXAiLCJlcXVhbHMiLCJkZWJ1ZyIsInByaW50Um93TWFqb3IiLCJnbE1hdHJpeCIsIm9wdGlvbnMiLCJFUFNJTE9OIiwiZXBzaWxvbiIsInZhbHVlIiwicHJlY2lzaW9uIiwicGFyc2VGbG9hdCIsInRvUHJlY2lzaW9uIiwiQXJyYXkiLCJBcnJheUJ1ZmZlciIsImlzVmlldyIsImxlbmd0aCIsImFycmF5IiwibWFwIiwiZnVuYyIsInJlc3VsdCIsImkiLCJNYXRoIiwiUEkiLCJhbmdsZSIsIm1pbiIsIm1heCIsImEiLCJiIiwiYWJzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7UUFTZ0JBLFMsR0FBQUEsUztRQVVBQyxXLEdBQUFBLFc7UUFNQUMsTyxHQUFBQSxPO1FBS0FDLEssR0FBQUEsSztRQXNCQUMsTyxHQUFBQSxPO1FBS0FDLE8sR0FBQUEsTztRQUtBQyxHLEdBQUFBLEc7UUFLQUMsRyxHQUFBQSxHO1FBS0FDLEcsR0FBQUEsRztRQUtBQyxJLEdBQUFBLEk7UUFLQUMsSSxHQUFBQSxJO1FBS0FDLEksR0FBQUEsSTtRQUtBQyxLLEdBQUFBLEs7UUFJQUMsTSxHQUFBQSxNOztBQS9GaEI7O0FBRUE7QUFDQSxtQkFBU0MsS0FBVCxHQUFpQixJQUFqQixDLENBSkE7O0FBS0EsbUJBQVNDLGFBQVQsR0FBeUIsSUFBekI7O1FBRVFDLFE7QUFFRCxTQUFTaEIsU0FBVCxDQUFtQmlCLE9BQW5CLEVBQTRCO0FBQ2pDLE1BQUksYUFBYUEsT0FBakIsRUFBMEI7QUFDeEIsdUJBQVNDLE9BQVQsR0FBbUJELFFBQVFFLE9BQTNCO0FBQ0Q7O0FBRUQsTUFBSSxXQUFXRixPQUFmLEVBQXdCO0FBQ3RCLHVCQUFTSCxLQUFULEdBQWlCRyxRQUFRSCxLQUF6QjtBQUNEO0FBQ0Y7O0FBRU0sU0FBU2IsV0FBVCxDQUFxQm1CLEtBQXJCLEVBQWlFO0FBQUEsTUFBckNDLFNBQXFDLHVFQUF6QixtQkFBU0EsU0FBVCxJQUFzQixDQUFHOztBQUN0RSxTQUFPQyxXQUFXRixNQUFNRyxXQUFOLENBQWtCRixTQUFsQixDQUFYLENBQVA7QUFDRDs7QUFFRDtBQUNBO0FBQ08sU0FBU25CLE9BQVQsQ0FBaUJrQixLQUFqQixFQUF3QjtBQUM3QixTQUFPSSxNQUFNdEIsT0FBTixDQUFja0IsS0FBZCxLQUF5QkssWUFBWUMsTUFBWixDQUFtQk4sS0FBbkIsS0FBNkJBLE1BQU1PLE1BQW5FO0FBQ0Q7O0FBRUQ7QUFDTyxTQUFTeEIsS0FBVCxDQUFleUIsS0FBZixFQUFzQjtBQUMzQixTQUFPQSxNQUFNekIsS0FBTixHQUFjeUIsTUFBTXpCLEtBQU4sRUFBZCxHQUE4QixJQUFJcUIsS0FBSixDQUFVSSxLQUFWLENBQXJDO0FBQ0Q7O0FBRUQ7QUFDQTtBQUNBLFNBQVNDLEdBQVQsQ0FBYVQsS0FBYixFQUFvQlUsSUFBcEIsRUFBMEI7QUFDeEIsTUFBSTVCLFFBQVFrQixLQUFSLENBQUosRUFBb0I7QUFDbEIsUUFBTVcsU0FBUzVCLE1BQU1pQixLQUFOLENBQWY7QUFDQSxTQUFLLElBQUlZLElBQUksQ0FBYixFQUFnQkEsSUFBSUQsT0FBT0osTUFBM0IsRUFBbUMsRUFBRUssQ0FBckMsRUFBd0M7QUFDdENELGFBQU9DLENBQVAsSUFBWUYsS0FBS0MsT0FBT0MsQ0FBUCxDQUFMLEVBQWdCQSxDQUFoQixFQUFtQkQsTUFBbkIsQ0FBWjtBQUNEO0FBQ0QsV0FBT0EsTUFBUDtBQUNEO0FBQ0QsU0FBT0QsS0FBS1YsS0FBTCxDQUFQO0FBQ0Q7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRU8sU0FBU2hCLE9BQVQsQ0FBaUJDLE9BQWpCLEVBQTBCO0FBQy9CLFNBQU93QixJQUFJeEIsT0FBSixFQUFhO0FBQUEsV0FBV0EsVUFBVSxHQUFWLEdBQWdCNEIsS0FBS0MsRUFBaEM7QUFBQSxHQUFiLENBQVA7QUFDRDs7QUFFRDtBQUNPLFNBQVM3QixPQUFULENBQWlCRCxPQUFqQixFQUEwQjtBQUMvQixTQUFPeUIsSUFBSXpCLE9BQUosRUFBYTtBQUFBLFdBQVdBLFVBQVUsR0FBVixHQUFnQjZCLEtBQUtDLEVBQWhDO0FBQUEsR0FBYixDQUFQO0FBQ0Q7O0FBRUQ7QUFDTyxTQUFTNUIsR0FBVCxDQUFhRixPQUFiLEVBQXNCO0FBQzNCLFNBQU95QixJQUFJekIsT0FBSixFQUFhO0FBQUEsV0FBUzZCLEtBQUszQixHQUFMLENBQVM2QixLQUFULENBQVQ7QUFBQSxHQUFiLENBQVA7QUFDRDs7QUFFRDtBQUNPLFNBQVM1QixHQUFULENBQWFILE9BQWIsRUFBc0I7QUFDM0IsU0FBT3lCLElBQUl6QixPQUFKLEVBQWE7QUFBQSxXQUFTNkIsS0FBSzFCLEdBQUwsQ0FBUzRCLEtBQVQsQ0FBVDtBQUFBLEdBQWIsQ0FBUDtBQUNEOztBQUVEO0FBQ08sU0FBUzNCLEdBQVQsQ0FBYUosT0FBYixFQUFzQjtBQUMzQixTQUFPeUIsSUFBSXpCLE9BQUosRUFBYTtBQUFBLFdBQVM2QixLQUFLekIsR0FBTCxDQUFTMkIsS0FBVCxDQUFUO0FBQUEsR0FBYixDQUFQO0FBQ0Q7O0FBRUQ7QUFDTyxTQUFTMUIsSUFBVCxDQUFjTCxPQUFkLEVBQXVCO0FBQzVCLFNBQU95QixJQUFJekIsT0FBSixFQUFhO0FBQUEsV0FBUzZCLEtBQUt4QixJQUFMLENBQVUwQixLQUFWLENBQVQ7QUFBQSxHQUFiLENBQVA7QUFDRDs7QUFFRDtBQUNPLFNBQVN6QixJQUFULENBQWNOLE9BQWQsRUFBdUI7QUFDNUIsU0FBT3lCLElBQUl6QixPQUFKLEVBQWE7QUFBQSxXQUFTNkIsS0FBS3ZCLElBQUwsQ0FBVXlCLEtBQVYsQ0FBVDtBQUFBLEdBQWIsQ0FBUDtBQUNEOztBQUVEO0FBQ08sU0FBU3hCLElBQVQsQ0FBY1AsT0FBZCxFQUF1QjtBQUM1QixTQUFPeUIsSUFBSXpCLE9BQUosRUFBYTtBQUFBLFdBQVM2QixLQUFLdEIsSUFBTCxDQUFVd0IsS0FBVixDQUFUO0FBQUEsR0FBYixDQUFQO0FBQ0Q7O0FBRUQ7QUFDTyxTQUFTdkIsS0FBVCxDQUFlUSxLQUFmLEVBQXNCZ0IsR0FBdEIsRUFBMkJDLEdBQTNCLEVBQWdDO0FBQ3JDLFNBQU9KLEtBQUtJLEdBQUwsQ0FBU0QsR0FBVCxFQUFjSCxLQUFLRyxHQUFMLENBQVNDLEdBQVQsRUFBY2pCLEtBQWQsQ0FBZCxDQUFQO0FBQ0Q7O0FBRU0sU0FBU1AsTUFBVCxDQUFnQnlCLENBQWhCLEVBQW1CQyxDQUFuQixFQUFzQjtBQUMzQixTQUFPTixLQUFLTyxHQUFMLENBQVNGLElBQUlDLENBQWIsS0FDTCxtQkFBU3JCLE9BQVQsR0FBbUJlLEtBQUtJLEdBQUwsQ0FBUyxHQUFULEVBQWNKLEtBQUtPLEdBQUwsQ0FBU0YsQ0FBVCxDQUFkLEVBQTJCTCxLQUFLTyxHQUFMLENBQVNELENBQVQsQ0FBM0IsQ0FEckI7QUFFRCIsImZpbGUiOiJjb21tb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby1zaGFkb3cgKi9cbmltcG9ydCB7Z2xNYXRyaXh9IGZyb20gJ2dsLW1hdHJpeCc7XG5cbi8vIFRPRE8gLSByZW1vdmVcbmdsTWF0cml4LmRlYnVnID0gdHJ1ZTtcbmdsTWF0cml4LnByaW50Um93TWFqb3IgPSB0cnVlO1xuXG5leHBvcnQge2dsTWF0cml4fTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNvbmZpZ3VyZShvcHRpb25zKSB7XG4gIGlmICgnZXBzaWxvbicgaW4gb3B0aW9ucykge1xuICAgIGdsTWF0cml4LkVQU0lMT04gPSBvcHRpb25zLmVwc2lsb247XG4gIH1cblxuICBpZiAoJ2RlYnVnJyBpbiBvcHRpb25zKSB7XG4gICAgZ2xNYXRyaXguZGVidWcgPSBvcHRpb25zLmRlYnVnO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRWYWx1ZSh2YWx1ZSwgcHJlY2lzaW9uID0gZ2xNYXRyaXgucHJlY2lzaW9uIHx8IDQpIHtcbiAgcmV0dXJuIHBhcnNlRmxvYXQodmFsdWUudG9QcmVjaXNpb24ocHJlY2lzaW9uKSk7XG59XG5cbi8vIFJldHVybnMgdHJ1ZSBpZiB2YWx1ZSBpcyBlaXRoZXIgYW4gYXJyYXkgb3IgYSB0eXBlZCBhcnJheVxuLy8gTm90ZTogZG9lcyBub3QgcmV0dXJuIHRydWUgZm9yIEFycmF5QnVmZmVycyBhbmQgRGF0YVZpZXdzXG5leHBvcnQgZnVuY3Rpb24gaXNBcnJheSh2YWx1ZSkge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSkgfHwgKEFycmF5QnVmZmVyLmlzVmlldyh2YWx1ZSkgJiYgdmFsdWUubGVuZ3RoKTtcbn1cblxuLy8gSWYgdGhlIGFycmF5IGhhcyBhIGNsb25lIGZ1bmN0aW9uLCBjYWxscyBpdCwgb3RoZXJ3aXNlIHJldHVybnMgYSBjb3B5XG5leHBvcnQgZnVuY3Rpb24gY2xvbmUoYXJyYXkpIHtcbiAgcmV0dXJuIGFycmF5LmNsb25lID8gYXJyYXkuY2xvbmUoKSA6IG5ldyBBcnJheShhcnJheSk7XG59XG5cbi8vIElmIHRoZSBhcmd1bWVudCB2YWx1ZSBpcyBhbiBhcnJheSwgYXBwbGllcyB0aGUgZnVuYyBlbGVtZW50IHdpc2UsXG4vLyBvdGhlcndpc2UgYXBwbGllcyBmdW5jIHRvIHRoZSBhcmd1bWVudCB2YWx1ZVxuZnVuY3Rpb24gbWFwKHZhbHVlLCBmdW5jKSB7XG4gIGlmIChpc0FycmF5KHZhbHVlKSkge1xuICAgIGNvbnN0IHJlc3VsdCA9IGNsb25lKHZhbHVlKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlc3VsdC5sZW5ndGg7ICsraSkge1xuICAgICAgcmVzdWx0W2ldID0gZnVuYyhyZXN1bHRbaV0sIGksIHJlc3VsdCk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgcmV0dXJuIGZ1bmModmFsdWUpO1xufVxuXG4vL1xuLy8gR0xTTCBtYXRoIGZ1bmN0aW9uIGVxdWl2YWxlbnRzXG4vLyBXb3JrcyBvbiBib3RoIHNpbmdsZSB2YWx1ZXMgYW5kIHZlY3RvcnNcbi8vXG5cbmV4cG9ydCBmdW5jdGlvbiByYWRpYW5zKGRlZ3JlZXMpIHtcbiAgcmV0dXJuIG1hcChkZWdyZWVzLCBkZWdyZWVzID0+IGRlZ3JlZXMgLyAxODAgKiBNYXRoLlBJKTtcbn1cblxuLy8gR0xTTCBlcXVpdmFsZW50OiBXb3JrcyBvbiBzaW5nbGUgdmFsdWVzIGFuZCB2ZWN0b3JzXG5leHBvcnQgZnVuY3Rpb24gZGVncmVlcyhyYWRpYW5zKSB7XG4gIHJldHVybiBtYXAocmFkaWFucywgcmFkaWFucyA9PiByYWRpYW5zICogMTgwIC8gTWF0aC5QSSk7XG59XG5cbi8vIEdMU0wgZXF1aXZhbGVudDogV29ya3Mgb24gc2luZ2xlIHZhbHVlcyBhbmQgdmVjdG9yc1xuZXhwb3J0IGZ1bmN0aW9uIHNpbihyYWRpYW5zKSB7XG4gIHJldHVybiBtYXAocmFkaWFucywgYW5nbGUgPT4gTWF0aC5zaW4oYW5nbGUpKTtcbn1cblxuLy8gR0xTTCBlcXVpdmFsZW50OiBXb3JrcyBvbiBzaW5nbGUgdmFsdWVzIGFuZCB2ZWN0b3JzXG5leHBvcnQgZnVuY3Rpb24gY29zKHJhZGlhbnMpIHtcbiAgcmV0dXJuIG1hcChyYWRpYW5zLCBhbmdsZSA9PiBNYXRoLmNvcyhhbmdsZSkpO1xufVxuXG4vLyBHTFNMIGVxdWl2YWxlbnQ6IFdvcmtzIG9uIHNpbmdsZSB2YWx1ZXMgYW5kIHZlY3RvcnNcbmV4cG9ydCBmdW5jdGlvbiB0YW4ocmFkaWFucykge1xuICByZXR1cm4gbWFwKHJhZGlhbnMsIGFuZ2xlID0+IE1hdGgudGFuKGFuZ2xlKSk7XG59XG5cbi8vIEdMU0wgZXF1aXZhbGVudDogV29ya3Mgb24gc2luZ2xlIHZhbHVlcyBhbmQgdmVjdG9yc1xuZXhwb3J0IGZ1bmN0aW9uIGFzaW4ocmFkaWFucykge1xuICByZXR1cm4gbWFwKHJhZGlhbnMsIGFuZ2xlID0+IE1hdGguYXNpbihhbmdsZSkpO1xufVxuXG4vLyBHTFNMIGVxdWl2YWxlbnQ6IFdvcmtzIG9uIHNpbmdsZSB2YWx1ZXMgYW5kIHZlY3RvcnNcbmV4cG9ydCBmdW5jdGlvbiBhY29zKHJhZGlhbnMpIHtcbiAgcmV0dXJuIG1hcChyYWRpYW5zLCBhbmdsZSA9PiBNYXRoLmFjb3MoYW5nbGUpKTtcbn1cblxuLy8gR0xTTCBlcXVpdmFsZW50OiBXb3JrcyBvbiBzaW5nbGUgdmFsdWVzIGFuZCB2ZWN0b3JzXG5leHBvcnQgZnVuY3Rpb24gYXRhbihyYWRpYW5zKSB7XG4gIHJldHVybiBtYXAocmFkaWFucywgYW5nbGUgPT4gTWF0aC5hdGFuKGFuZ2xlKSk7XG59XG5cbi8vIFRPRE8gLSBnbHNsIGVxdWl2YWxlbnRcbmV4cG9ydCBmdW5jdGlvbiBjbGFtcCh2YWx1ZSwgbWluLCBtYXgpIHtcbiAgcmV0dXJuIE1hdGgubWF4KG1pbiwgTWF0aC5taW4obWF4LCB2YWx1ZSkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKGEsIGIpIHtcbiAgcmV0dXJuIE1hdGguYWJzKGEgLSBiKSA8PVxuICAgIGdsTWF0cml4LkVQU0lMT04gKiBNYXRoLm1heCgxLjAsIE1hdGguYWJzKGEpLCBNYXRoLmFicyhiKSk7XG59XG4iXX0=

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @fileoverview gl-matrix - High performance matrix and vector operations
	 * @author Brandon Jones
	 * @author Colin MacKenzie IV
	 * @version 2.3.2
	 */
	
	/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE. */
	// END HEADER
	
	exports.glMatrix = __webpack_require__(230);
	exports.mat2 = __webpack_require__(231);
	exports.mat2d = __webpack_require__(232);
	exports.mat3 = __webpack_require__(233);
	exports.mat4 = __webpack_require__(234);
	exports.quat = __webpack_require__(235);
	exports.vec2 = __webpack_require__(238);
	exports.vec3 = __webpack_require__(236);
	exports.vec4 = __webpack_require__(237);

/***/ },
/* 230 */
/***/ function(module, exports) {

	/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE. */
	
	/**
	 * @class Common utilities
	 * @name glMatrix
	 */
	var glMatrix = {};
	
	// Configuration Constants
	glMatrix.EPSILON = 0.000001;
	glMatrix.ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;
	glMatrix.RANDOM = Math.random;
	glMatrix.ENABLE_SIMD = false;
	
	// Capability detection
	glMatrix.SIMD_AVAILABLE = (glMatrix.ARRAY_TYPE === Float32Array) && ('SIMD' in this);
	glMatrix.USE_SIMD = glMatrix.ENABLE_SIMD && glMatrix.SIMD_AVAILABLE;
	
	/**
	 * Sets the type of array used when creating new vectors and matrices
	 *
	 * @param {Type} type Array type, such as Float32Array or Array
	 */
	glMatrix.setMatrixArrayType = function(type) {
	    glMatrix.ARRAY_TYPE = type;
	}
	
	var degree = Math.PI / 180;
	
	/**
	* Convert Degree To Radian
	*
	* @param {Number} Angle in Degrees
	*/
	glMatrix.toRadian = function(a){
	     return a * degree;
	}
	
	/**
	 * Tests whether or not the arguments have approximately the same value, within an absolute
	 * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less 
	 * than or equal to 1.0, and a relative tolerance is used for larger values)
	 * 
	 * @param {Number} a The first number to test.
	 * @param {Number} b The second number to test.
	 * @returns {Boolean} True if the numbers are approximately equal, false otherwise.
	 */
	glMatrix.equals = function(a, b) {
		return Math.abs(a - b) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));
	}
	
	module.exports = glMatrix;


/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE. */
	
	var glMatrix = __webpack_require__(230);
	
	/**
	 * @class 2x2 Matrix
	 * @name mat2
	 */
	var mat2 = {};
	
	/**
	 * Creates a new identity mat2
	 *
	 * @returns {mat2} a new 2x2 matrix
	 */
	mat2.create = function() {
	    var out = new glMatrix.ARRAY_TYPE(4);
	    out[0] = 1;
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 1;
	    return out;
	};
	
	/**
	 * Creates a new mat2 initialized with values from an existing matrix
	 *
	 * @param {mat2} a matrix to clone
	 * @returns {mat2} a new 2x2 matrix
	 */
	mat2.clone = function(a) {
	    var out = new glMatrix.ARRAY_TYPE(4);
	    out[0] = a[0];
	    out[1] = a[1];
	    out[2] = a[2];
	    out[3] = a[3];
	    return out;
	};
	
	/**
	 * Copy the values from one mat2 to another
	 *
	 * @param {mat2} out the receiving matrix
	 * @param {mat2} a the source matrix
	 * @returns {mat2} out
	 */
	mat2.copy = function(out, a) {
	    out[0] = a[0];
	    out[1] = a[1];
	    out[2] = a[2];
	    out[3] = a[3];
	    return out;
	};
	
	/**
	 * Set a mat2 to the identity matrix
	 *
	 * @param {mat2} out the receiving matrix
	 * @returns {mat2} out
	 */
	mat2.identity = function(out) {
	    out[0] = 1;
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 1;
	    return out;
	};
	
	/**
	 * Create a new mat2 with the given values
	 *
	 * @param {Number} m00 Component in column 0, row 0 position (index 0)
	 * @param {Number} m01 Component in column 0, row 1 position (index 1)
	 * @param {Number} m10 Component in column 1, row 0 position (index 2)
	 * @param {Number} m11 Component in column 1, row 1 position (index 3)
	 * @returns {mat2} out A new 2x2 matrix
	 */
	mat2.fromValues = function(m00, m01, m10, m11) {
	    var out = new glMatrix.ARRAY_TYPE(4);
	    out[0] = m00;
	    out[1] = m01;
	    out[2] = m10;
	    out[3] = m11;
	    return out;
	};
	
	/**
	 * Set the components of a mat2 to the given values
	 *
	 * @param {mat2} out the receiving matrix
	 * @param {Number} m00 Component in column 0, row 0 position (index 0)
	 * @param {Number} m01 Component in column 0, row 1 position (index 1)
	 * @param {Number} m10 Component in column 1, row 0 position (index 2)
	 * @param {Number} m11 Component in column 1, row 1 position (index 3)
	 * @returns {mat2} out
	 */
	mat2.set = function(out, m00, m01, m10, m11) {
	    out[0] = m00;
	    out[1] = m01;
	    out[2] = m10;
	    out[3] = m11;
	    return out;
	};
	
	
	/**
	 * Transpose the values of a mat2
	 *
	 * @param {mat2} out the receiving matrix
	 * @param {mat2} a the source matrix
	 * @returns {mat2} out
	 */
	mat2.transpose = function(out, a) {
	    // If we are transposing ourselves we can skip a few steps but have to cache some values
	    if (out === a) {
	        var a1 = a[1];
	        out[1] = a[2];
	        out[2] = a1;
	    } else {
	        out[0] = a[0];
	        out[1] = a[2];
	        out[2] = a[1];
	        out[3] = a[3];
	    }
	    
	    return out;
	};
	
	/**
	 * Inverts a mat2
	 *
	 * @param {mat2} out the receiving matrix
	 * @param {mat2} a the source matrix
	 * @returns {mat2} out
	 */
	mat2.invert = function(out, a) {
	    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],
	
	        // Calculate the determinant
	        det = a0 * a3 - a2 * a1;
	
	    if (!det) {
	        return null;
	    }
	    det = 1.0 / det;
	    
	    out[0] =  a3 * det;
	    out[1] = -a1 * det;
	    out[2] = -a2 * det;
	    out[3] =  a0 * det;
	
	    return out;
	};
	
	/**
	 * Calculates the adjugate of a mat2
	 *
	 * @param {mat2} out the receiving matrix
	 * @param {mat2} a the source matrix
	 * @returns {mat2} out
	 */
	mat2.adjoint = function(out, a) {
	    // Caching this value is nessecary if out == a
	    var a0 = a[0];
	    out[0] =  a[3];
	    out[1] = -a[1];
	    out[2] = -a[2];
	    out[3] =  a0;
	
	    return out;
	};
	
	/**
	 * Calculates the determinant of a mat2
	 *
	 * @param {mat2} a the source matrix
	 * @returns {Number} determinant of a
	 */
	mat2.determinant = function (a) {
	    return a[0] * a[3] - a[2] * a[1];
	};
	
	/**
	 * Multiplies two mat2's
	 *
	 * @param {mat2} out the receiving matrix
	 * @param {mat2} a the first operand
	 * @param {mat2} b the second operand
	 * @returns {mat2} out
	 */
	mat2.multiply = function (out, a, b) {
	    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];
	    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
	    out[0] = a0 * b0 + a2 * b1;
	    out[1] = a1 * b0 + a3 * b1;
	    out[2] = a0 * b2 + a2 * b3;
	    out[3] = a1 * b2 + a3 * b3;
	    return out;
	};
	
	/**
	 * Alias for {@link mat2.multiply}
	 * @function
	 */
	mat2.mul = mat2.multiply;
	
	/**
	 * Rotates a mat2 by the given angle
	 *
	 * @param {mat2} out the receiving matrix
	 * @param {mat2} a the matrix to rotate
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat2} out
	 */
	mat2.rotate = function (out, a, rad) {
	    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],
	        s = Math.sin(rad),
	        c = Math.cos(rad);
	    out[0] = a0 *  c + a2 * s;
	    out[1] = a1 *  c + a3 * s;
	    out[2] = a0 * -s + a2 * c;
	    out[3] = a1 * -s + a3 * c;
	    return out;
	};
	
	/**
	 * Scales the mat2 by the dimensions in the given vec2
	 *
	 * @param {mat2} out the receiving matrix
	 * @param {mat2} a the matrix to rotate
	 * @param {vec2} v the vec2 to scale the matrix by
	 * @returns {mat2} out
	 **/
	mat2.scale = function(out, a, v) {
	    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],
	        v0 = v[0], v1 = v[1];
	    out[0] = a0 * v0;
	    out[1] = a1 * v0;
	    out[2] = a2 * v1;
	    out[3] = a3 * v1;
	    return out;
	};
	
	/**
	 * Creates a matrix from a given angle
	 * This is equivalent to (but much faster than):
	 *
	 *     mat2.identity(dest);
	 *     mat2.rotate(dest, dest, rad);
	 *
	 * @param {mat2} out mat2 receiving operation result
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat2} out
	 */
	mat2.fromRotation = function(out, rad) {
	    var s = Math.sin(rad),
	        c = Math.cos(rad);
	    out[0] = c;
	    out[1] = s;
	    out[2] = -s;
	    out[3] = c;
	    return out;
	}
	
	/**
	 * Creates a matrix from a vector scaling
	 * This is equivalent to (but much faster than):
	 *
	 *     mat2.identity(dest);
	 *     mat2.scale(dest, dest, vec);
	 *
	 * @param {mat2} out mat2 receiving operation result
	 * @param {vec2} v Scaling vector
	 * @returns {mat2} out
	 */
	mat2.fromScaling = function(out, v) {
	    out[0] = v[0];
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = v[1];
	    return out;
	}
	
	/**
	 * Returns a string representation of a mat2
	 *
	 * @param {mat2} mat matrix to represent as a string
	 * @returns {String} string representation of the matrix
	 */
	mat2.str = function (a) {
	    return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';
	};
	
	/**
	 * Returns Frobenius norm of a mat2
	 *
	 * @param {mat2} a the matrix to calculate Frobenius norm of
	 * @returns {Number} Frobenius norm
	 */
	mat2.frob = function (a) {
	    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))
	};
	
	/**
	 * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix
	 * @param {mat2} L the lower triangular matrix 
	 * @param {mat2} D the diagonal matrix 
	 * @param {mat2} U the upper triangular matrix 
	 * @param {mat2} a the input matrix to factorize
	 */
	
	mat2.LDU = function (L, D, U, a) { 
	    L[2] = a[2]/a[0]; 
	    U[0] = a[0]; 
	    U[1] = a[1]; 
	    U[3] = a[3] - L[2] * U[1]; 
	    return [L, D, U];       
	}; 
	
	/**
	 * Adds two mat2's
	 *
	 * @param {mat2} out the receiving matrix
	 * @param {mat2} a the first operand
	 * @param {mat2} b the second operand
	 * @returns {mat2} out
	 */
	mat2.add = function(out, a, b) {
	    out[0] = a[0] + b[0];
	    out[1] = a[1] + b[1];
	    out[2] = a[2] + b[2];
	    out[3] = a[3] + b[3];
	    return out;
	};
	
	/**
	 * Subtracts matrix b from matrix a
	 *
	 * @param {mat2} out the receiving matrix
	 * @param {mat2} a the first operand
	 * @param {mat2} b the second operand
	 * @returns {mat2} out
	 */
	mat2.subtract = function(out, a, b) {
	    out[0] = a[0] - b[0];
	    out[1] = a[1] - b[1];
	    out[2] = a[2] - b[2];
	    out[3] = a[3] - b[3];
	    return out;
	};
	
	/**
	 * Alias for {@link mat2.subtract}
	 * @function
	 */
	mat2.sub = mat2.subtract;
	
	/**
	 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
	 *
	 * @param {mat2} a The first matrix.
	 * @param {mat2} b The second matrix.
	 * @returns {Boolean} True if the matrices are equal, false otherwise.
	 */
	mat2.exactEquals = function (a, b) {
	    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];
	};
	
	/**
	 * Returns whether or not the matrices have approximately the same elements in the same position.
	 *
	 * @param {mat2} a The first matrix.
	 * @param {mat2} b The second matrix.
	 * @returns {Boolean} True if the matrices are equal, false otherwise.
	 */
	mat2.equals = function (a, b) {
	    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];
	    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
	    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
	            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
	            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
	            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));
	};
	
	/**
	 * Multiply each element of the matrix by a scalar.
	 *
	 * @param {mat2} out the receiving matrix
	 * @param {mat2} a the matrix to scale
	 * @param {Number} b amount to scale the matrix's elements by
	 * @returns {mat2} out
	 */
	mat2.multiplyScalar = function(out, a, b) {
	    out[0] = a[0] * b;
	    out[1] = a[1] * b;
	    out[2] = a[2] * b;
	    out[3] = a[3] * b;
	    return out;
	};
	
	/**
	 * Adds two mat2's after multiplying each element of the second operand by a scalar value.
	 *
	 * @param {mat2} out the receiving vector
	 * @param {mat2} a the first operand
	 * @param {mat2} b the second operand
	 * @param {Number} scale the amount to scale b's elements by before adding
	 * @returns {mat2} out
	 */
	mat2.multiplyScalarAndAdd = function(out, a, b, scale) {
	    out[0] = a[0] + (b[0] * scale);
	    out[1] = a[1] + (b[1] * scale);
	    out[2] = a[2] + (b[2] * scale);
	    out[3] = a[3] + (b[3] * scale);
	    return out;
	};
	
	module.exports = mat2;


/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE. */
	
	var glMatrix = __webpack_require__(230);
	
	/**
	 * @class 2x3 Matrix
	 * @name mat2d
	 * 
	 * @description 
	 * A mat2d contains six elements defined as:
	 * <pre>
	 * [a, c, tx,
	 *  b, d, ty]
	 * </pre>
	 * This is a short form for the 3x3 matrix:
	 * <pre>
	 * [a, c, tx,
	 *  b, d, ty,
	 *  0, 0, 1]
	 * </pre>
	 * The last row is ignored so the array is shorter and operations are faster.
	 */
	var mat2d = {};
	
	/**
	 * Creates a new identity mat2d
	 *
	 * @returns {mat2d} a new 2x3 matrix
	 */
	mat2d.create = function() {
	    var out = new glMatrix.ARRAY_TYPE(6);
	    out[0] = 1;
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 1;
	    out[4] = 0;
	    out[5] = 0;
	    return out;
	};
	
	/**
	 * Creates a new mat2d initialized with values from an existing matrix
	 *
	 * @param {mat2d} a matrix to clone
	 * @returns {mat2d} a new 2x3 matrix
	 */
	mat2d.clone = function(a) {
	    var out = new glMatrix.ARRAY_TYPE(6);
	    out[0] = a[0];
	    out[1] = a[1];
	    out[2] = a[2];
	    out[3] = a[3];
	    out[4] = a[4];
	    out[5] = a[5];
	    return out;
	};
	
	/**
	 * Copy the values from one mat2d to another
	 *
	 * @param {mat2d} out the receiving matrix
	 * @param {mat2d} a the source matrix
	 * @returns {mat2d} out
	 */
	mat2d.copy = function(out, a) {
	    out[0] = a[0];
	    out[1] = a[1];
	    out[2] = a[2];
	    out[3] = a[3];
	    out[4] = a[4];
	    out[5] = a[5];
	    return out;
	};
	
	/**
	 * Set a mat2d to the identity matrix
	 *
	 * @param {mat2d} out the receiving matrix
	 * @returns {mat2d} out
	 */
	mat2d.identity = function(out) {
	    out[0] = 1;
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 1;
	    out[4] = 0;
	    out[5] = 0;
	    return out;
	};
	
	/**
	 * Create a new mat2d with the given values
	 *
	 * @param {Number} a Component A (index 0)
	 * @param {Number} b Component B (index 1)
	 * @param {Number} c Component C (index 2)
	 * @param {Number} d Component D (index 3)
	 * @param {Number} tx Component TX (index 4)
	 * @param {Number} ty Component TY (index 5)
	 * @returns {mat2d} A new mat2d
	 */
	mat2d.fromValues = function(a, b, c, d, tx, ty) {
	    var out = new glMatrix.ARRAY_TYPE(6);
	    out[0] = a;
	    out[1] = b;
	    out[2] = c;
	    out[3] = d;
	    out[4] = tx;
	    out[5] = ty;
	    return out;
	};
	
	/**
	 * Set the components of a mat2d to the given values
	 *
	 * @param {mat2d} out the receiving matrix
	 * @param {Number} a Component A (index 0)
	 * @param {Number} b Component B (index 1)
	 * @param {Number} c Component C (index 2)
	 * @param {Number} d Component D (index 3)
	 * @param {Number} tx Component TX (index 4)
	 * @param {Number} ty Component TY (index 5)
	 * @returns {mat2d} out
	 */
	mat2d.set = function(out, a, b, c, d, tx, ty) {
	    out[0] = a;
	    out[1] = b;
	    out[2] = c;
	    out[3] = d;
	    out[4] = tx;
	    out[5] = ty;
	    return out;
	};
	
	/**
	 * Inverts a mat2d
	 *
	 * @param {mat2d} out the receiving matrix
	 * @param {mat2d} a the source matrix
	 * @returns {mat2d} out
	 */
	mat2d.invert = function(out, a) {
	    var aa = a[0], ab = a[1], ac = a[2], ad = a[3],
	        atx = a[4], aty = a[5];
	
	    var det = aa * ad - ab * ac;
	    if(!det){
	        return null;
	    }
	    det = 1.0 / det;
	
	    out[0] = ad * det;
	    out[1] = -ab * det;
	    out[2] = -ac * det;
	    out[3] = aa * det;
	    out[4] = (ac * aty - ad * atx) * det;
	    out[5] = (ab * atx - aa * aty) * det;
	    return out;
	};
	
	/**
	 * Calculates the determinant of a mat2d
	 *
	 * @param {mat2d} a the source matrix
	 * @returns {Number} determinant of a
	 */
	mat2d.determinant = function (a) {
	    return a[0] * a[3] - a[1] * a[2];
	};
	
	/**
	 * Multiplies two mat2d's
	 *
	 * @param {mat2d} out the receiving matrix
	 * @param {mat2d} a the first operand
	 * @param {mat2d} b the second operand
	 * @returns {mat2d} out
	 */
	mat2d.multiply = function (out, a, b) {
	    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],
	        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];
	    out[0] = a0 * b0 + a2 * b1;
	    out[1] = a1 * b0 + a3 * b1;
	    out[2] = a0 * b2 + a2 * b3;
	    out[3] = a1 * b2 + a3 * b3;
	    out[4] = a0 * b4 + a2 * b5 + a4;
	    out[5] = a1 * b4 + a3 * b5 + a5;
	    return out;
	};
	
	/**
	 * Alias for {@link mat2d.multiply}
	 * @function
	 */
	mat2d.mul = mat2d.multiply;
	
	/**
	 * Rotates a mat2d by the given angle
	 *
	 * @param {mat2d} out the receiving matrix
	 * @param {mat2d} a the matrix to rotate
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat2d} out
	 */
	mat2d.rotate = function (out, a, rad) {
	    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],
	        s = Math.sin(rad),
	        c = Math.cos(rad);
	    out[0] = a0 *  c + a2 * s;
	    out[1] = a1 *  c + a3 * s;
	    out[2] = a0 * -s + a2 * c;
	    out[3] = a1 * -s + a3 * c;
	    out[4] = a4;
	    out[5] = a5;
	    return out;
	};
	
	/**
	 * Scales the mat2d by the dimensions in the given vec2
	 *
	 * @param {mat2d} out the receiving matrix
	 * @param {mat2d} a the matrix to translate
	 * @param {vec2} v the vec2 to scale the matrix by
	 * @returns {mat2d} out
	 **/
	mat2d.scale = function(out, a, v) {
	    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],
	        v0 = v[0], v1 = v[1];
	    out[0] = a0 * v0;
	    out[1] = a1 * v0;
	    out[2] = a2 * v1;
	    out[3] = a3 * v1;
	    out[4] = a4;
	    out[5] = a5;
	    return out;
	};
	
	/**
	 * Translates the mat2d by the dimensions in the given vec2
	 *
	 * @param {mat2d} out the receiving matrix
	 * @param {mat2d} a the matrix to translate
	 * @param {vec2} v the vec2 to translate the matrix by
	 * @returns {mat2d} out
	 **/
	mat2d.translate = function(out, a, v) {
	    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],
	        v0 = v[0], v1 = v[1];
	    out[0] = a0;
	    out[1] = a1;
	    out[2] = a2;
	    out[3] = a3;
	    out[4] = a0 * v0 + a2 * v1 + a4;
	    out[5] = a1 * v0 + a3 * v1 + a5;
	    return out;
	};
	
	/**
	 * Creates a matrix from a given angle
	 * This is equivalent to (but much faster than):
	 *
	 *     mat2d.identity(dest);
	 *     mat2d.rotate(dest, dest, rad);
	 *
	 * @param {mat2d} out mat2d receiving operation result
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat2d} out
	 */
	mat2d.fromRotation = function(out, rad) {
	    var s = Math.sin(rad), c = Math.cos(rad);
	    out[0] = c;
	    out[1] = s;
	    out[2] = -s;
	    out[3] = c;
	    out[4] = 0;
	    out[5] = 0;
	    return out;
	}
	
	/**
	 * Creates a matrix from a vector scaling
	 * This is equivalent to (but much faster than):
	 *
	 *     mat2d.identity(dest);
	 *     mat2d.scale(dest, dest, vec);
	 *
	 * @param {mat2d} out mat2d receiving operation result
	 * @param {vec2} v Scaling vector
	 * @returns {mat2d} out
	 */
	mat2d.fromScaling = function(out, v) {
	    out[0] = v[0];
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = v[1];
	    out[4] = 0;
	    out[5] = 0;
	    return out;
	}
	
	/**
	 * Creates a matrix from a vector translation
	 * This is equivalent to (but much faster than):
	 *
	 *     mat2d.identity(dest);
	 *     mat2d.translate(dest, dest, vec);
	 *
	 * @param {mat2d} out mat2d receiving operation result
	 * @param {vec2} v Translation vector
	 * @returns {mat2d} out
	 */
	mat2d.fromTranslation = function(out, v) {
	    out[0] = 1;
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 1;
	    out[4] = v[0];
	    out[5] = v[1];
	    return out;
	}
	
	/**
	 * Returns a string representation of a mat2d
	 *
	 * @param {mat2d} a matrix to represent as a string
	 * @returns {String} string representation of the matrix
	 */
	mat2d.str = function (a) {
	    return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + 
	                    a[3] + ', ' + a[4] + ', ' + a[5] + ')';
	};
	
	/**
	 * Returns Frobenius norm of a mat2d
	 *
	 * @param {mat2d} a the matrix to calculate Frobenius norm of
	 * @returns {Number} Frobenius norm
	 */
	mat2d.frob = function (a) { 
	    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))
	}; 
	
	/**
	 * Adds two mat2d's
	 *
	 * @param {mat2d} out the receiving matrix
	 * @param {mat2d} a the first operand
	 * @param {mat2d} b the second operand
	 * @returns {mat2d} out
	 */
	mat2d.add = function(out, a, b) {
	    out[0] = a[0] + b[0];
	    out[1] = a[1] + b[1];
	    out[2] = a[2] + b[2];
	    out[3] = a[3] + b[3];
	    out[4] = a[4] + b[4];
	    out[5] = a[5] + b[5];
	    return out;
	};
	
	/**
	 * Subtracts matrix b from matrix a
	 *
	 * @param {mat2d} out the receiving matrix
	 * @param {mat2d} a the first operand
	 * @param {mat2d} b the second operand
	 * @returns {mat2d} out
	 */
	mat2d.subtract = function(out, a, b) {
	    out[0] = a[0] - b[0];
	    out[1] = a[1] - b[1];
	    out[2] = a[2] - b[2];
	    out[3] = a[3] - b[3];
	    out[4] = a[4] - b[4];
	    out[5] = a[5] - b[5];
	    return out;
	};
	
	/**
	 * Alias for {@link mat2d.subtract}
	 * @function
	 */
	mat2d.sub = mat2d.subtract;
	
	/**
	 * Multiply each element of the matrix by a scalar.
	 *
	 * @param {mat2d} out the receiving matrix
	 * @param {mat2d} a the matrix to scale
	 * @param {Number} b amount to scale the matrix's elements by
	 * @returns {mat2d} out
	 */
	mat2d.multiplyScalar = function(out, a, b) {
	    out[0] = a[0] * b;
	    out[1] = a[1] * b;
	    out[2] = a[2] * b;
	    out[3] = a[3] * b;
	    out[4] = a[4] * b;
	    out[5] = a[5] * b;
	    return out;
	};
	
	/**
	 * Adds two mat2d's after multiplying each element of the second operand by a scalar value.
	 *
	 * @param {mat2d} out the receiving vector
	 * @param {mat2d} a the first operand
	 * @param {mat2d} b the second operand
	 * @param {Number} scale the amount to scale b's elements by before adding
	 * @returns {mat2d} out
	 */
	mat2d.multiplyScalarAndAdd = function(out, a, b, scale) {
	    out[0] = a[0] + (b[0] * scale);
	    out[1] = a[1] + (b[1] * scale);
	    out[2] = a[2] + (b[2] * scale);
	    out[3] = a[3] + (b[3] * scale);
	    out[4] = a[4] + (b[4] * scale);
	    out[5] = a[5] + (b[5] * scale);
	    return out;
	};
	
	/**
	 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
	 *
	 * @param {mat2d} a The first matrix.
	 * @param {mat2d} b The second matrix.
	 * @returns {Boolean} True if the matrices are equal, false otherwise.
	 */
	mat2d.exactEquals = function (a, b) {
	    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];
	};
	
	/**
	 * Returns whether or not the matrices have approximately the same elements in the same position.
	 *
	 * @param {mat2d} a The first matrix.
	 * @param {mat2d} b The second matrix.
	 * @returns {Boolean} True if the matrices are equal, false otherwise.
	 */
	mat2d.equals = function (a, b) {
	    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];
	    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];
	    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
	            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
	            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
	            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&
	            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&
	            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));
	};
	
	module.exports = mat2d;


/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE. */
	
	var glMatrix = __webpack_require__(230);
	
	/**
	 * @class 3x3 Matrix
	 * @name mat3
	 */
	var mat3 = {};
	
	/**
	 * Creates a new identity mat3
	 *
	 * @returns {mat3} a new 3x3 matrix
	 */
	mat3.create = function() {
	    var out = new glMatrix.ARRAY_TYPE(9);
	    out[0] = 1;
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 0;
	    out[4] = 1;
	    out[5] = 0;
	    out[6] = 0;
	    out[7] = 0;
	    out[8] = 1;
	    return out;
	};
	
	/**
	 * Copies the upper-left 3x3 values into the given mat3.
	 *
	 * @param {mat3} out the receiving 3x3 matrix
	 * @param {mat4} a   the source 4x4 matrix
	 * @returns {mat3} out
	 */
	mat3.fromMat4 = function(out, a) {
	    out[0] = a[0];
	    out[1] = a[1];
	    out[2] = a[2];
	    out[3] = a[4];
	    out[4] = a[5];
	    out[5] = a[6];
	    out[6] = a[8];
	    out[7] = a[9];
	    out[8] = a[10];
	    return out;
	};
	
	/**
	 * Creates a new mat3 initialized with values from an existing matrix
	 *
	 * @param {mat3} a matrix to clone
	 * @returns {mat3} a new 3x3 matrix
	 */
	mat3.clone = function(a) {
	    var out = new glMatrix.ARRAY_TYPE(9);
	    out[0] = a[0];
	    out[1] = a[1];
	    out[2] = a[2];
	    out[3] = a[3];
	    out[4] = a[4];
	    out[5] = a[5];
	    out[6] = a[6];
	    out[7] = a[7];
	    out[8] = a[8];
	    return out;
	};
	
	/**
	 * Copy the values from one mat3 to another
	 *
	 * @param {mat3} out the receiving matrix
	 * @param {mat3} a the source matrix
	 * @returns {mat3} out
	 */
	mat3.copy = function(out, a) {
	    out[0] = a[0];
	    out[1] = a[1];
	    out[2] = a[2];
	    out[3] = a[3];
	    out[4] = a[4];
	    out[5] = a[5];
	    out[6] = a[6];
	    out[7] = a[7];
	    out[8] = a[8];
	    return out;
	};
	
	/**
	 * Create a new mat3 with the given values
	 *
	 * @param {Number} m00 Component in column 0, row 0 position (index 0)
	 * @param {Number} m01 Component in column 0, row 1 position (index 1)
	 * @param {Number} m02 Component in column 0, row 2 position (index 2)
	 * @param {Number} m10 Component in column 1, row 0 position (index 3)
	 * @param {Number} m11 Component in column 1, row 1 position (index 4)
	 * @param {Number} m12 Component in column 1, row 2 position (index 5)
	 * @param {Number} m20 Component in column 2, row 0 position (index 6)
	 * @param {Number} m21 Component in column 2, row 1 position (index 7)
	 * @param {Number} m22 Component in column 2, row 2 position (index 8)
	 * @returns {mat3} A new mat3
	 */
	mat3.fromValues = function(m00, m01, m02, m10, m11, m12, m20, m21, m22) {
	    var out = new glMatrix.ARRAY_TYPE(9);
	    out[0] = m00;
	    out[1] = m01;
	    out[2] = m02;
	    out[3] = m10;
	    out[4] = m11;
	    out[5] = m12;
	    out[6] = m20;
	    out[7] = m21;
	    out[8] = m22;
	    return out;
	};
	
	/**
	 * Set the components of a mat3 to the given values
	 *
	 * @param {mat3} out the receiving matrix
	 * @param {Number} m00 Component in column 0, row 0 position (index 0)
	 * @param {Number} m01 Component in column 0, row 1 position (index 1)
	 * @param {Number} m02 Component in column 0, row 2 position (index 2)
	 * @param {Number} m10 Component in column 1, row 0 position (index 3)
	 * @param {Number} m11 Component in column 1, row 1 position (index 4)
	 * @param {Number} m12 Component in column 1, row 2 position (index 5)
	 * @param {Number} m20 Component in column 2, row 0 position (index 6)
	 * @param {Number} m21 Component in column 2, row 1 position (index 7)
	 * @param {Number} m22 Component in column 2, row 2 position (index 8)
	 * @returns {mat3} out
	 */
	mat3.set = function(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {
	    out[0] = m00;
	    out[1] = m01;
	    out[2] = m02;
	    out[3] = m10;
	    out[4] = m11;
	    out[5] = m12;
	    out[6] = m20;
	    out[7] = m21;
	    out[8] = m22;
	    return out;
	};
	
	/**
	 * Set a mat3 to the identity matrix
	 *
	 * @param {mat3} out the receiving matrix
	 * @returns {mat3} out
	 */
	mat3.identity = function(out) {
	    out[0] = 1;
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 0;
	    out[4] = 1;
	    out[5] = 0;
	    out[6] = 0;
	    out[7] = 0;
	    out[8] = 1;
	    return out;
	};
	
	/**
	 * Transpose the values of a mat3
	 *
	 * @param {mat3} out the receiving matrix
	 * @param {mat3} a the source matrix
	 * @returns {mat3} out
	 */
	mat3.transpose = function(out, a) {
	    // If we are transposing ourselves we can skip a few steps but have to cache some values
	    if (out === a) {
	        var a01 = a[1], a02 = a[2], a12 = a[5];
	        out[1] = a[3];
	        out[2] = a[6];
	        out[3] = a01;
	        out[5] = a[7];
	        out[6] = a02;
	        out[7] = a12;
	    } else {
	        out[0] = a[0];
	        out[1] = a[3];
	        out[2] = a[6];
	        out[3] = a[1];
	        out[4] = a[4];
	        out[5] = a[7];
	        out[6] = a[2];
	        out[7] = a[5];
	        out[8] = a[8];
	    }
	    
	    return out;
	};
	
	/**
	 * Inverts a mat3
	 *
	 * @param {mat3} out the receiving matrix
	 * @param {mat3} a the source matrix
	 * @returns {mat3} out
	 */
	mat3.invert = function(out, a) {
	    var a00 = a[0], a01 = a[1], a02 = a[2],
	        a10 = a[3], a11 = a[4], a12 = a[5],
	        a20 = a[6], a21 = a[7], a22 = a[8],
	
	        b01 = a22 * a11 - a12 * a21,
	        b11 = -a22 * a10 + a12 * a20,
	        b21 = a21 * a10 - a11 * a20,
	
	        // Calculate the determinant
	        det = a00 * b01 + a01 * b11 + a02 * b21;
	
	    if (!det) { 
	        return null; 
	    }
	    det = 1.0 / det;
	
	    out[0] = b01 * det;
	    out[1] = (-a22 * a01 + a02 * a21) * det;
	    out[2] = (a12 * a01 - a02 * a11) * det;
	    out[3] = b11 * det;
	    out[4] = (a22 * a00 - a02 * a20) * det;
	    out[5] = (-a12 * a00 + a02 * a10) * det;
	    out[6] = b21 * det;
	    out[7] = (-a21 * a00 + a01 * a20) * det;
	    out[8] = (a11 * a00 - a01 * a10) * det;
	    return out;
	};
	
	/**
	 * Calculates the adjugate of a mat3
	 *
	 * @param {mat3} out the receiving matrix
	 * @param {mat3} a the source matrix
	 * @returns {mat3} out
	 */
	mat3.adjoint = function(out, a) {
	    var a00 = a[0], a01 = a[1], a02 = a[2],
	        a10 = a[3], a11 = a[4], a12 = a[5],
	        a20 = a[6], a21 = a[7], a22 = a[8];
	
	    out[0] = (a11 * a22 - a12 * a21);
	    out[1] = (a02 * a21 - a01 * a22);
	    out[2] = (a01 * a12 - a02 * a11);
	    out[3] = (a12 * a20 - a10 * a22);
	    out[4] = (a00 * a22 - a02 * a20);
	    out[5] = (a02 * a10 - a00 * a12);
	    out[6] = (a10 * a21 - a11 * a20);
	    out[7] = (a01 * a20 - a00 * a21);
	    out[8] = (a00 * a11 - a01 * a10);
	    return out;
	};
	
	/**
	 * Calculates the determinant of a mat3
	 *
	 * @param {mat3} a the source matrix
	 * @returns {Number} determinant of a
	 */
	mat3.determinant = function (a) {
	    var a00 = a[0], a01 = a[1], a02 = a[2],
	        a10 = a[3], a11 = a[4], a12 = a[5],
	        a20 = a[6], a21 = a[7], a22 = a[8];
	
	    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);
	};
	
	/**
	 * Multiplies two mat3's
	 *
	 * @param {mat3} out the receiving matrix
	 * @param {mat3} a the first operand
	 * @param {mat3} b the second operand
	 * @returns {mat3} out
	 */
	mat3.multiply = function (out, a, b) {
	    var a00 = a[0], a01 = a[1], a02 = a[2],
	        a10 = a[3], a11 = a[4], a12 = a[5],
	        a20 = a[6], a21 = a[7], a22 = a[8],
	
	        b00 = b[0], b01 = b[1], b02 = b[2],
	        b10 = b[3], b11 = b[4], b12 = b[5],
	        b20 = b[6], b21 = b[7], b22 = b[8];
	
	    out[0] = b00 * a00 + b01 * a10 + b02 * a20;
	    out[1] = b00 * a01 + b01 * a11 + b02 * a21;
	    out[2] = b00 * a02 + b01 * a12 + b02 * a22;
	
	    out[3] = b10 * a00 + b11 * a10 + b12 * a20;
	    out[4] = b10 * a01 + b11 * a11 + b12 * a21;
	    out[5] = b10 * a02 + b11 * a12 + b12 * a22;
	
	    out[6] = b20 * a00 + b21 * a10 + b22 * a20;
	    out[7] = b20 * a01 + b21 * a11 + b22 * a21;
	    out[8] = b20 * a02 + b21 * a12 + b22 * a22;
	    return out;
	};
	
	/**
	 * Alias for {@link mat3.multiply}
	 * @function
	 */
	mat3.mul = mat3.multiply;
	
	/**
	 * Translate a mat3 by the given vector
	 *
	 * @param {mat3} out the receiving matrix
	 * @param {mat3} a the matrix to translate
	 * @param {vec2} v vector to translate by
	 * @returns {mat3} out
	 */
	mat3.translate = function(out, a, v) {
	    var a00 = a[0], a01 = a[1], a02 = a[2],
	        a10 = a[3], a11 = a[4], a12 = a[5],
	        a20 = a[6], a21 = a[7], a22 = a[8],
	        x = v[0], y = v[1];
	
	    out[0] = a00;
	    out[1] = a01;
	    out[2] = a02;
	
	    out[3] = a10;
	    out[4] = a11;
	    out[5] = a12;
	
	    out[6] = x * a00 + y * a10 + a20;
	    out[7] = x * a01 + y * a11 + a21;
	    out[8] = x * a02 + y * a12 + a22;
	    return out;
	};
	
	/**
	 * Rotates a mat3 by the given angle
	 *
	 * @param {mat3} out the receiving matrix
	 * @param {mat3} a the matrix to rotate
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat3} out
	 */
	mat3.rotate = function (out, a, rad) {
	    var a00 = a[0], a01 = a[1], a02 = a[2],
	        a10 = a[3], a11 = a[4], a12 = a[5],
	        a20 = a[6], a21 = a[7], a22 = a[8],
	
	        s = Math.sin(rad),
	        c = Math.cos(rad);
	
	    out[0] = c * a00 + s * a10;
	    out[1] = c * a01 + s * a11;
	    out[2] = c * a02 + s * a12;
	
	    out[3] = c * a10 - s * a00;
	    out[4] = c * a11 - s * a01;
	    out[5] = c * a12 - s * a02;
	
	    out[6] = a20;
	    out[7] = a21;
	    out[8] = a22;
	    return out;
	};
	
	/**
	 * Scales the mat3 by the dimensions in the given vec2
	 *
	 * @param {mat3} out the receiving matrix
	 * @param {mat3} a the matrix to rotate
	 * @param {vec2} v the vec2 to scale the matrix by
	 * @returns {mat3} out
	 **/
	mat3.scale = function(out, a, v) {
	    var x = v[0], y = v[1];
	
	    out[0] = x * a[0];
	    out[1] = x * a[1];
	    out[2] = x * a[2];
	
	    out[3] = y * a[3];
	    out[4] = y * a[4];
	    out[5] = y * a[5];
	
	    out[6] = a[6];
	    out[7] = a[7];
	    out[8] = a[8];
	    return out;
	};
	
	/**
	 * Creates a matrix from a vector translation
	 * This is equivalent to (but much faster than):
	 *
	 *     mat3.identity(dest);
	 *     mat3.translate(dest, dest, vec);
	 *
	 * @param {mat3} out mat3 receiving operation result
	 * @param {vec2} v Translation vector
	 * @returns {mat3} out
	 */
	mat3.fromTranslation = function(out, v) {
	    out[0] = 1;
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 0;
	    out[4] = 1;
	    out[5] = 0;
	    out[6] = v[0];
	    out[7] = v[1];
	    out[8] = 1;
	    return out;
	}
	
	/**
	 * Creates a matrix from a given angle
	 * This is equivalent to (but much faster than):
	 *
	 *     mat3.identity(dest);
	 *     mat3.rotate(dest, dest, rad);
	 *
	 * @param {mat3} out mat3 receiving operation result
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat3} out
	 */
	mat3.fromRotation = function(out, rad) {
	    var s = Math.sin(rad), c = Math.cos(rad);
	
	    out[0] = c;
	    out[1] = s;
	    out[2] = 0;
	
	    out[3] = -s;
	    out[4] = c;
	    out[5] = 0;
	
	    out[6] = 0;
	    out[7] = 0;
	    out[8] = 1;
	    return out;
	}
	
	/**
	 * Creates a matrix from a vector scaling
	 * This is equivalent to (but much faster than):
	 *
	 *     mat3.identity(dest);
	 *     mat3.scale(dest, dest, vec);
	 *
	 * @param {mat3} out mat3 receiving operation result
	 * @param {vec2} v Scaling vector
	 * @returns {mat3} out
	 */
	mat3.fromScaling = function(out, v) {
	    out[0] = v[0];
	    out[1] = 0;
	    out[2] = 0;
	
	    out[3] = 0;
	    out[4] = v[1];
	    out[5] = 0;
	
	    out[6] = 0;
	    out[7] = 0;
	    out[8] = 1;
	    return out;
	}
	
	/**
	 * Copies the values from a mat2d into a mat3
	 *
	 * @param {mat3} out the receiving matrix
	 * @param {mat2d} a the matrix to copy
	 * @returns {mat3} out
	 **/
	mat3.fromMat2d = function(out, a) {
	    out[0] = a[0];
	    out[1] = a[1];
	    out[2] = 0;
	
	    out[3] = a[2];
	    out[4] = a[3];
	    out[5] = 0;
	
	    out[6] = a[4];
	    out[7] = a[5];
	    out[8] = 1;
	    return out;
	};
	
	/**
	* Calculates a 3x3 matrix from the given quaternion
	*
	* @param {mat3} out mat3 receiving operation result
	* @param {quat} q Quaternion to create matrix from
	*
	* @returns {mat3} out
	*/
	mat3.fromQuat = function (out, q) {
	    var x = q[0], y = q[1], z = q[2], w = q[3],
	        x2 = x + x,
	        y2 = y + y,
	        z2 = z + z,
	
	        xx = x * x2,
	        yx = y * x2,
	        yy = y * y2,
	        zx = z * x2,
	        zy = z * y2,
	        zz = z * z2,
	        wx = w * x2,
	        wy = w * y2,
	        wz = w * z2;
	
	    out[0] = 1 - yy - zz;
	    out[3] = yx - wz;
	    out[6] = zx + wy;
	
	    out[1] = yx + wz;
	    out[4] = 1 - xx - zz;
	    out[7] = zy - wx;
	
	    out[2] = zx - wy;
	    out[5] = zy + wx;
	    out[8] = 1 - xx - yy;
	
	    return out;
	};
	
	/**
	* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix
	*
	* @param {mat3} out mat3 receiving operation result
	* @param {mat4} a Mat4 to derive the normal matrix from
	*
	* @returns {mat3} out
	*/
	mat3.normalFromMat4 = function (out, a) {
	    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
	        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
	        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
	        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],
	
	        b00 = a00 * a11 - a01 * a10,
	        b01 = a00 * a12 - a02 * a10,
	        b02 = a00 * a13 - a03 * a10,
	        b03 = a01 * a12 - a02 * a11,
	        b04 = a01 * a13 - a03 * a11,
	        b05 = a02 * a13 - a03 * a12,
	        b06 = a20 * a31 - a21 * a30,
	        b07 = a20 * a32 - a22 * a30,
	        b08 = a20 * a33 - a23 * a30,
	        b09 = a21 * a32 - a22 * a31,
	        b10 = a21 * a33 - a23 * a31,
	        b11 = a22 * a33 - a23 * a32,
	
	        // Calculate the determinant
	        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
	
	    if (!det) { 
	        return null; 
	    }
	    det = 1.0 / det;
	
	    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;
	    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;
	    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;
	
	    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;
	    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;
	    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;
	
	    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;
	    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;
	    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;
	
	    return out;
	};
	
	/**
	 * Returns a string representation of a mat3
	 *
	 * @param {mat3} mat matrix to represent as a string
	 * @returns {String} string representation of the matrix
	 */
	mat3.str = function (a) {
	    return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + 
	                    a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + 
	                    a[6] + ', ' + a[7] + ', ' + a[8] + ')';
	};
	
	/**
	 * Returns Frobenius norm of a mat3
	 *
	 * @param {mat3} a the matrix to calculate Frobenius norm of
	 * @returns {Number} Frobenius norm
	 */
	mat3.frob = function (a) {
	    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))
	};
	
	/**
	 * Adds two mat3's
	 *
	 * @param {mat3} out the receiving matrix
	 * @param {mat3} a the first operand
	 * @param {mat3} b the second operand
	 * @returns {mat3} out
	 */
	mat3.add = function(out, a, b) {
	    out[0] = a[0] + b[0];
	    out[1] = a[1] + b[1];
	    out[2] = a[2] + b[2];
	    out[3] = a[3] + b[3];
	    out[4] = a[4] + b[4];
	    out[5] = a[5] + b[5];
	    out[6] = a[6] + b[6];
	    out[7] = a[7] + b[7];
	    out[8] = a[8] + b[8];
	    return out;
	};
	
	/**
	 * Subtracts matrix b from matrix a
	 *
	 * @param {mat3} out the receiving matrix
	 * @param {mat3} a the first operand
	 * @param {mat3} b the second operand
	 * @returns {mat3} out
	 */
	mat3.subtract = function(out, a, b) {
	    out[0] = a[0] - b[0];
	    out[1] = a[1] - b[1];
	    out[2] = a[2] - b[2];
	    out[3] = a[3] - b[3];
	    out[4] = a[4] - b[4];
	    out[5] = a[5] - b[5];
	    out[6] = a[6] - b[6];
	    out[7] = a[7] - b[7];
	    out[8] = a[8] - b[8];
	    return out;
	};
	
	/**
	 * Alias for {@link mat3.subtract}
	 * @function
	 */
	mat3.sub = mat3.subtract;
	
	/**
	 * Multiply each element of the matrix by a scalar.
	 *
	 * @param {mat3} out the receiving matrix
	 * @param {mat3} a the matrix to scale
	 * @param {Number} b amount to scale the matrix's elements by
	 * @returns {mat3} out
	 */
	mat3.multiplyScalar = function(out, a, b) {
	    out[0] = a[0] * b;
	    out[1] = a[1] * b;
	    out[2] = a[2] * b;
	    out[3] = a[3] * b;
	    out[4] = a[4] * b;
	    out[5] = a[5] * b;
	    out[6] = a[6] * b;
	    out[7] = a[7] * b;
	    out[8] = a[8] * b;
	    return out;
	};
	
	/**
	 * Adds two mat3's after multiplying each element of the second operand by a scalar value.
	 *
	 * @param {mat3} out the receiving vector
	 * @param {mat3} a the first operand
	 * @param {mat3} b the second operand
	 * @param {Number} scale the amount to scale b's elements by before adding
	 * @returns {mat3} out
	 */
	mat3.multiplyScalarAndAdd = function(out, a, b, scale) {
	    out[0] = a[0] + (b[0] * scale);
	    out[1] = a[1] + (b[1] * scale);
	    out[2] = a[2] + (b[2] * scale);
	    out[3] = a[3] + (b[3] * scale);
	    out[4] = a[4] + (b[4] * scale);
	    out[5] = a[5] + (b[5] * scale);
	    out[6] = a[6] + (b[6] * scale);
	    out[7] = a[7] + (b[7] * scale);
	    out[8] = a[8] + (b[8] * scale);
	    return out;
	};
	
	/*
	 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
	 *
	 * @param {mat3} a The first matrix.
	 * @param {mat3} b The second matrix.
	 * @returns {Boolean} True if the matrices are equal, false otherwise.
	 */
	mat3.exactEquals = function (a, b) {
	    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && 
	           a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&
	           a[6] === b[6] && a[7] === b[7] && a[8] === b[8];
	};
	
	/**
	 * Returns whether or not the matrices have approximately the same elements in the same position.
	 *
	 * @param {mat3} a The first matrix.
	 * @param {mat3} b The second matrix.
	 * @returns {Boolean} True if the matrices are equal, false otherwise.
	 */
	mat3.equals = function (a, b) {
	    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];
	    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = a[6], b7 = b[7], b8 = b[8];
	    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
	            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
	            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
	            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&
	            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&
	            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&
	            Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&
	            Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&
	            Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));
	};
	
	
	module.exports = mat3;


/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE. */
	
	var glMatrix = __webpack_require__(230);
	
	/**
	 * @class 4x4 Matrix
	 * @name mat4
	 */
	var mat4 = {
	  scalar: {},
	  SIMD: {},
	};
	
	/**
	 * Creates a new identity mat4
	 *
	 * @returns {mat4} a new 4x4 matrix
	 */
	mat4.create = function() {
	    var out = new glMatrix.ARRAY_TYPE(16);
	    out[0] = 1;
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 0;
	    out[4] = 0;
	    out[5] = 1;
	    out[6] = 0;
	    out[7] = 0;
	    out[8] = 0;
	    out[9] = 0;
	    out[10] = 1;
	    out[11] = 0;
	    out[12] = 0;
	    out[13] = 0;
	    out[14] = 0;
	    out[15] = 1;
	    return out;
	};
	
	/**
	 * Creates a new mat4 initialized with values from an existing matrix
	 *
	 * @param {mat4} a matrix to clone
	 * @returns {mat4} a new 4x4 matrix
	 */
	mat4.clone = function(a) {
	    var out = new glMatrix.ARRAY_TYPE(16);
	    out[0] = a[0];
	    out[1] = a[1];
	    out[2] = a[2];
	    out[3] = a[3];
	    out[4] = a[4];
	    out[5] = a[5];
	    out[6] = a[6];
	    out[7] = a[7];
	    out[8] = a[8];
	    out[9] = a[9];
	    out[10] = a[10];
	    out[11] = a[11];
	    out[12] = a[12];
	    out[13] = a[13];
	    out[14] = a[14];
	    out[15] = a[15];
	    return out;
	};
	
	/**
	 * Copy the values from one mat4 to another
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the source matrix
	 * @returns {mat4} out
	 */
	mat4.copy = function(out, a) {
	    out[0] = a[0];
	    out[1] = a[1];
	    out[2] = a[2];
	    out[3] = a[3];
	    out[4] = a[4];
	    out[5] = a[5];
	    out[6] = a[6];
	    out[7] = a[7];
	    out[8] = a[8];
	    out[9] = a[9];
	    out[10] = a[10];
	    out[11] = a[11];
	    out[12] = a[12];
	    out[13] = a[13];
	    out[14] = a[14];
	    out[15] = a[15];
	    return out;
	};
	
	/**
	 * Create a new mat4 with the given values
	 *
	 * @param {Number} m00 Component in column 0, row 0 position (index 0)
	 * @param {Number} m01 Component in column 0, row 1 position (index 1)
	 * @param {Number} m02 Component in column 0, row 2 position (index 2)
	 * @param {Number} m03 Component in column 0, row 3 position (index 3)
	 * @param {Number} m10 Component in column 1, row 0 position (index 4)
	 * @param {Number} m11 Component in column 1, row 1 position (index 5)
	 * @param {Number} m12 Component in column 1, row 2 position (index 6)
	 * @param {Number} m13 Component in column 1, row 3 position (index 7)
	 * @param {Number} m20 Component in column 2, row 0 position (index 8)
	 * @param {Number} m21 Component in column 2, row 1 position (index 9)
	 * @param {Number} m22 Component in column 2, row 2 position (index 10)
	 * @param {Number} m23 Component in column 2, row 3 position (index 11)
	 * @param {Number} m30 Component in column 3, row 0 position (index 12)
	 * @param {Number} m31 Component in column 3, row 1 position (index 13)
	 * @param {Number} m32 Component in column 3, row 2 position (index 14)
	 * @param {Number} m33 Component in column 3, row 3 position (index 15)
	 * @returns {mat4} A new mat4
	 */
	mat4.fromValues = function(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
	    var out = new glMatrix.ARRAY_TYPE(16);
	    out[0] = m00;
	    out[1] = m01;
	    out[2] = m02;
	    out[3] = m03;
	    out[4] = m10;
	    out[5] = m11;
	    out[6] = m12;
	    out[7] = m13;
	    out[8] = m20;
	    out[9] = m21;
	    out[10] = m22;
	    out[11] = m23;
	    out[12] = m30;
	    out[13] = m31;
	    out[14] = m32;
	    out[15] = m33;
	    return out;
	};
	
	/**
	 * Set the components of a mat4 to the given values
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {Number} m00 Component in column 0, row 0 position (index 0)
	 * @param {Number} m01 Component in column 0, row 1 position (index 1)
	 * @param {Number} m02 Component in column 0, row 2 position (index 2)
	 * @param {Number} m03 Component in column 0, row 3 position (index 3)
	 * @param {Number} m10 Component in column 1, row 0 position (index 4)
	 * @param {Number} m11 Component in column 1, row 1 position (index 5)
	 * @param {Number} m12 Component in column 1, row 2 position (index 6)
	 * @param {Number} m13 Component in column 1, row 3 position (index 7)
	 * @param {Number} m20 Component in column 2, row 0 position (index 8)
	 * @param {Number} m21 Component in column 2, row 1 position (index 9)
	 * @param {Number} m22 Component in column 2, row 2 position (index 10)
	 * @param {Number} m23 Component in column 2, row 3 position (index 11)
	 * @param {Number} m30 Component in column 3, row 0 position (index 12)
	 * @param {Number} m31 Component in column 3, row 1 position (index 13)
	 * @param {Number} m32 Component in column 3, row 2 position (index 14)
	 * @param {Number} m33 Component in column 3, row 3 position (index 15)
	 * @returns {mat4} out
	 */
	mat4.set = function(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
	    out[0] = m00;
	    out[1] = m01;
	    out[2] = m02;
	    out[3] = m03;
	    out[4] = m10;
	    out[5] = m11;
	    out[6] = m12;
	    out[7] = m13;
	    out[8] = m20;
	    out[9] = m21;
	    out[10] = m22;
	    out[11] = m23;
	    out[12] = m30;
	    out[13] = m31;
	    out[14] = m32;
	    out[15] = m33;
	    return out;
	};
	
	
	/**
	 * Set a mat4 to the identity matrix
	 *
	 * @param {mat4} out the receiving matrix
	 * @returns {mat4} out
	 */
	mat4.identity = function(out) {
	    out[0] = 1;
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 0;
	    out[4] = 0;
	    out[5] = 1;
	    out[6] = 0;
	    out[7] = 0;
	    out[8] = 0;
	    out[9] = 0;
	    out[10] = 1;
	    out[11] = 0;
	    out[12] = 0;
	    out[13] = 0;
	    out[14] = 0;
	    out[15] = 1;
	    return out;
	};
	
	/**
	 * Transpose the values of a mat4 not using SIMD
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the source matrix
	 * @returns {mat4} out
	 */
	mat4.scalar.transpose = function(out, a) {
	    // If we are transposing ourselves we can skip a few steps but have to cache some values
	    if (out === a) {
	        var a01 = a[1], a02 = a[2], a03 = a[3],
	            a12 = a[6], a13 = a[7],
	            a23 = a[11];
	
	        out[1] = a[4];
	        out[2] = a[8];
	        out[3] = a[12];
	        out[4] = a01;
	        out[6] = a[9];
	        out[7] = a[13];
	        out[8] = a02;
	        out[9] = a12;
	        out[11] = a[14];
	        out[12] = a03;
	        out[13] = a13;
	        out[14] = a23;
	    } else {
	        out[0] = a[0];
	        out[1] = a[4];
	        out[2] = a[8];
	        out[3] = a[12];
	        out[4] = a[1];
	        out[5] = a[5];
	        out[6] = a[9];
	        out[7] = a[13];
	        out[8] = a[2];
	        out[9] = a[6];
	        out[10] = a[10];
	        out[11] = a[14];
	        out[12] = a[3];
	        out[13] = a[7];
	        out[14] = a[11];
	        out[15] = a[15];
	    }
	
	    return out;
	};
	
	/**
	 * Transpose the values of a mat4 using SIMD
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the source matrix
	 * @returns {mat4} out
	 */
	mat4.SIMD.transpose = function(out, a) {
	    var a0, a1, a2, a3,
	        tmp01, tmp23,
	        out0, out1, out2, out3;
	
	    a0 = SIMD.Float32x4.load(a, 0);
	    a1 = SIMD.Float32x4.load(a, 4);
	    a2 = SIMD.Float32x4.load(a, 8);
	    a3 = SIMD.Float32x4.load(a, 12);
	
	    tmp01 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);
	    tmp23 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);
	    out0  = SIMD.Float32x4.shuffle(tmp01, tmp23, 0, 2, 4, 6);
	    out1  = SIMD.Float32x4.shuffle(tmp01, tmp23, 1, 3, 5, 7);
	    SIMD.Float32x4.store(out, 0,  out0);
	    SIMD.Float32x4.store(out, 4,  out1);
	
	    tmp01 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);
	    tmp23 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);
	    out2  = SIMD.Float32x4.shuffle(tmp01, tmp23, 0, 2, 4, 6);
	    out3  = SIMD.Float32x4.shuffle(tmp01, tmp23, 1, 3, 5, 7);
	    SIMD.Float32x4.store(out, 8,  out2);
	    SIMD.Float32x4.store(out, 12, out3);
	
	    return out;
	};
	
	/**
	 * Transpse a mat4 using SIMD if available and enabled
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the source matrix
	 * @returns {mat4} out
	 */
	mat4.transpose = glMatrix.USE_SIMD ? mat4.SIMD.transpose : mat4.scalar.transpose;
	
	/**
	 * Inverts a mat4 not using SIMD
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the source matrix
	 * @returns {mat4} out
	 */
	mat4.scalar.invert = function(out, a) {
	    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
	        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
	        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
	        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],
	
	        b00 = a00 * a11 - a01 * a10,
	        b01 = a00 * a12 - a02 * a10,
	        b02 = a00 * a13 - a03 * a10,
	        b03 = a01 * a12 - a02 * a11,
	        b04 = a01 * a13 - a03 * a11,
	        b05 = a02 * a13 - a03 * a12,
	        b06 = a20 * a31 - a21 * a30,
	        b07 = a20 * a32 - a22 * a30,
	        b08 = a20 * a33 - a23 * a30,
	        b09 = a21 * a32 - a22 * a31,
	        b10 = a21 * a33 - a23 * a31,
	        b11 = a22 * a33 - a23 * a32,
	
	        // Calculate the determinant
	        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
	
	    if (!det) {
	        return null;
	    }
	    det = 1.0 / det;
	
	    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;
	    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;
	    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;
	    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;
	    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;
	    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;
	    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;
	    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;
	    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;
	    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;
	    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;
	    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;
	    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;
	    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;
	    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;
	    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;
	
	    return out;
	};
	
	/**
	 * Inverts a mat4 using SIMD
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the source matrix
	 * @returns {mat4} out
	 */
	mat4.SIMD.invert = function(out, a) {
	  var row0, row1, row2, row3,
	      tmp1,
	      minor0, minor1, minor2, minor3,
	      det,
	      a0 = SIMD.Float32x4.load(a, 0),
	      a1 = SIMD.Float32x4.load(a, 4),
	      a2 = SIMD.Float32x4.load(a, 8),
	      a3 = SIMD.Float32x4.load(a, 12);
	
	  // Compute matrix adjugate
	  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);
	  row1 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);
	  row0 = SIMD.Float32x4.shuffle(tmp1, row1, 0, 2, 4, 6);
	  row1 = SIMD.Float32x4.shuffle(row1, tmp1, 1, 3, 5, 7);
	  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);
	  row3 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);
	  row2 = SIMD.Float32x4.shuffle(tmp1, row3, 0, 2, 4, 6);
	  row3 = SIMD.Float32x4.shuffle(row3, tmp1, 1, 3, 5, 7);
	
	  tmp1   = SIMD.Float32x4.mul(row2, row3);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
	  minor0 = SIMD.Float32x4.mul(row1, tmp1);
	  minor1 = SIMD.Float32x4.mul(row0, tmp1);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
	  minor0 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row1, tmp1), minor0);
	  minor1 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor1);
	  minor1 = SIMD.Float32x4.swizzle(minor1, 2, 3, 0, 1);
	
	  tmp1   = SIMD.Float32x4.mul(row1, row2);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
	  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor0);
	  minor3 = SIMD.Float32x4.mul(row0, tmp1);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
	  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row3, tmp1));
	  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor3);
	  minor3 = SIMD.Float32x4.swizzle(minor3, 2, 3, 0, 1);
	
	  tmp1   = SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(row1, 2, 3, 0, 1), row3);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
	  row2   = SIMD.Float32x4.swizzle(row2, 2, 3, 0, 1);
	  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor0);
	  minor2 = SIMD.Float32x4.mul(row0, tmp1);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
	  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row2, tmp1));
	  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor2);
	  minor2 = SIMD.Float32x4.swizzle(minor2, 2, 3, 0, 1);
	
	  tmp1   = SIMD.Float32x4.mul(row0, row1);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
	  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor2);
	  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row2, tmp1), minor3);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
	  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row3, tmp1), minor2);
	  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row2, tmp1));
	
	  tmp1   = SIMD.Float32x4.mul(row0, row3);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
	  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row2, tmp1));
	  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor2);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
	  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor1);
	  minor2 = SIMD.Float32x4.sub(minor2, SIMD.Float32x4.mul(row1, tmp1));
	
	  tmp1   = SIMD.Float32x4.mul(row0, row2);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
	  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor1);
	  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row1, tmp1));
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
	  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row3, tmp1));
	  minor3 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor3);
	
	  // Compute matrix determinant
	  det   = SIMD.Float32x4.mul(row0, minor0);
	  det   = SIMD.Float32x4.add(SIMD.Float32x4.swizzle(det, 2, 3, 0, 1), det);
	  det   = SIMD.Float32x4.add(SIMD.Float32x4.swizzle(det, 1, 0, 3, 2), det);
	  tmp1  = SIMD.Float32x4.reciprocalApproximation(det);
	  det   = SIMD.Float32x4.sub(
	               SIMD.Float32x4.add(tmp1, tmp1),
	               SIMD.Float32x4.mul(det, SIMD.Float32x4.mul(tmp1, tmp1)));
	  det   = SIMD.Float32x4.swizzle(det, 0, 0, 0, 0);
	  if (!det) {
	      return null;
	  }
	
	  // Compute matrix inverse
	  SIMD.Float32x4.store(out, 0,  SIMD.Float32x4.mul(det, minor0));
	  SIMD.Float32x4.store(out, 4,  SIMD.Float32x4.mul(det, minor1));
	  SIMD.Float32x4.store(out, 8,  SIMD.Float32x4.mul(det, minor2));
	  SIMD.Float32x4.store(out, 12, SIMD.Float32x4.mul(det, minor3));
	  return out;
	}
	
	/**
	 * Inverts a mat4 using SIMD if available and enabled
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the source matrix
	 * @returns {mat4} out
	 */
	mat4.invert = glMatrix.USE_SIMD ? mat4.SIMD.invert : mat4.scalar.invert;
	
	/**
	 * Calculates the adjugate of a mat4 not using SIMD
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the source matrix
	 * @returns {mat4} out
	 */
	mat4.scalar.adjoint = function(out, a) {
	    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
	        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
	        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
	        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];
	
	    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));
	    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));
	    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));
	    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));
	    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));
	    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));
	    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));
	    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));
	    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));
	    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));
	    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));
	    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));
	    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));
	    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));
	    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));
	    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));
	    return out;
	};
	
	/**
	 * Calculates the adjugate of a mat4 using SIMD
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the source matrix
	 * @returns {mat4} out
	 */
	mat4.SIMD.adjoint = function(out, a) {
	  var a0, a1, a2, a3;
	  var row0, row1, row2, row3;
	  var tmp1;
	  var minor0, minor1, minor2, minor3;
	
	  var a0 = SIMD.Float32x4.load(a, 0);
	  var a1 = SIMD.Float32x4.load(a, 4);
	  var a2 = SIMD.Float32x4.load(a, 8);
	  var a3 = SIMD.Float32x4.load(a, 12);
	
	  // Transpose the source matrix.  Sort of.  Not a true transpose operation
	  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);
	  row1 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);
	  row0 = SIMD.Float32x4.shuffle(tmp1, row1, 0, 2, 4, 6);
	  row1 = SIMD.Float32x4.shuffle(row1, tmp1, 1, 3, 5, 7);
	
	  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);
	  row3 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);
	  row2 = SIMD.Float32x4.shuffle(tmp1, row3, 0, 2, 4, 6);
	  row3 = SIMD.Float32x4.shuffle(row3, tmp1, 1, 3, 5, 7);
	
	  tmp1   = SIMD.Float32x4.mul(row2, row3);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
	  minor0 = SIMD.Float32x4.mul(row1, tmp1);
	  minor1 = SIMD.Float32x4.mul(row0, tmp1);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
	  minor0 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row1, tmp1), minor0);
	  minor1 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor1);
	  minor1 = SIMD.Float32x4.swizzle(minor1, 2, 3, 0, 1);
	
	  tmp1   = SIMD.Float32x4.mul(row1, row2);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
	  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor0);
	  minor3 = SIMD.Float32x4.mul(row0, tmp1);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
	  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row3, tmp1));
	  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor3);
	  minor3 = SIMD.Float32x4.swizzle(minor3, 2, 3, 0, 1);
	
	  tmp1   = SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(row1, 2, 3, 0, 1), row3);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
	  row2   = SIMD.Float32x4.swizzle(row2, 2, 3, 0, 1);
	  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor0);
	  minor2 = SIMD.Float32x4.mul(row0, tmp1);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
	  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row2, tmp1));
	  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor2);
	  minor2 = SIMD.Float32x4.swizzle(minor2, 2, 3, 0, 1);
	
	  tmp1   = SIMD.Float32x4.mul(row0, row1);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
	  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor2);
	  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row2, tmp1), minor3);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
	  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row3, tmp1), minor2);
	  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row2, tmp1));
	
	  tmp1   = SIMD.Float32x4.mul(row0, row3);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
	  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row2, tmp1));
	  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor2);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
	  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor1);
	  minor2 = SIMD.Float32x4.sub(minor2, SIMD.Float32x4.mul(row1, tmp1));
	
	  tmp1   = SIMD.Float32x4.mul(row0, row2);
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
	  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor1);
	  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row1, tmp1));
	  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
	  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row3, tmp1));
	  minor3 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor3);
	
	  SIMD.Float32x4.store(out, 0,  minor0);
	  SIMD.Float32x4.store(out, 4,  minor1);
	  SIMD.Float32x4.store(out, 8,  minor2);
	  SIMD.Float32x4.store(out, 12, minor3);
	  return out;
	};
	
	/**
	 * Calculates the adjugate of a mat4 using SIMD if available and enabled
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the source matrix
	 * @returns {mat4} out
	 */
	 mat4.adjoint = glMatrix.USE_SIMD ? mat4.SIMD.adjoint : mat4.scalar.adjoint;
	
	/**
	 * Calculates the determinant of a mat4
	 *
	 * @param {mat4} a the source matrix
	 * @returns {Number} determinant of a
	 */
	mat4.determinant = function (a) {
	    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
	        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
	        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
	        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],
	
	        b00 = a00 * a11 - a01 * a10,
	        b01 = a00 * a12 - a02 * a10,
	        b02 = a00 * a13 - a03 * a10,
	        b03 = a01 * a12 - a02 * a11,
	        b04 = a01 * a13 - a03 * a11,
	        b05 = a02 * a13 - a03 * a12,
	        b06 = a20 * a31 - a21 * a30,
	        b07 = a20 * a32 - a22 * a30,
	        b08 = a20 * a33 - a23 * a30,
	        b09 = a21 * a32 - a22 * a31,
	        b10 = a21 * a33 - a23 * a31,
	        b11 = a22 * a33 - a23 * a32;
	
	    // Calculate the determinant
	    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
	};
	
	/**
	 * Multiplies two mat4's explicitly using SIMD
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the first operand, must be a Float32Array
	 * @param {mat4} b the second operand, must be a Float32Array
	 * @returns {mat4} out
	 */
	mat4.SIMD.multiply = function (out, a, b) {
	    var a0 = SIMD.Float32x4.load(a, 0);
	    var a1 = SIMD.Float32x4.load(a, 4);
	    var a2 = SIMD.Float32x4.load(a, 8);
	    var a3 = SIMD.Float32x4.load(a, 12);
	
	    var b0 = SIMD.Float32x4.load(b, 0);
	    var out0 = SIMD.Float32x4.add(
	                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 0, 0, 0, 0), a0),
	                   SIMD.Float32x4.add(
	                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 1, 1, 1, 1), a1),
	                       SIMD.Float32x4.add(
	                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 2, 2, 2, 2), a2),
	                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 3, 3, 3, 3), a3))));
	    SIMD.Float32x4.store(out, 0, out0);
	
	    var b1 = SIMD.Float32x4.load(b, 4);
	    var out1 = SIMD.Float32x4.add(
	                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 0, 0, 0, 0), a0),
	                   SIMD.Float32x4.add(
	                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 1, 1, 1, 1), a1),
	                       SIMD.Float32x4.add(
	                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 2, 2, 2, 2), a2),
	                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 3, 3, 3, 3), a3))));
	    SIMD.Float32x4.store(out, 4, out1);
	
	    var b2 = SIMD.Float32x4.load(b, 8);
	    var out2 = SIMD.Float32x4.add(
	                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 0, 0, 0, 0), a0),
	                   SIMD.Float32x4.add(
	                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 1, 1, 1, 1), a1),
	                       SIMD.Float32x4.add(
	                               SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 2, 2, 2, 2), a2),
	                               SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 3, 3, 3, 3), a3))));
	    SIMD.Float32x4.store(out, 8, out2);
	
	    var b3 = SIMD.Float32x4.load(b, 12);
	    var out3 = SIMD.Float32x4.add(
	                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 0, 0, 0, 0), a0),
	                   SIMD.Float32x4.add(
	                        SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 1, 1, 1, 1), a1),
	                        SIMD.Float32x4.add(
	                            SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 2, 2, 2, 2), a2),
	                            SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 3, 3, 3, 3), a3))));
	    SIMD.Float32x4.store(out, 12, out3);
	
	    return out;
	};
	
	/**
	 * Multiplies two mat4's explicitly not using SIMD
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the first operand
	 * @param {mat4} b the second operand
	 * @returns {mat4} out
	 */
	mat4.scalar.multiply = function (out, a, b) {
	    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
	        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
	        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
	        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];
	
	    // Cache only the current line of the second matrix
	    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
	    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
	    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
	    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
	    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;
	
	    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];
	    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
	    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
	    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
	    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;
	
	    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];
	    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
	    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
	    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
	    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;
	
	    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];
	    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
	    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
	    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
	    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;
	    return out;
	};
	
	/**
	 * Multiplies two mat4's using SIMD if available and enabled
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the first operand
	 * @param {mat4} b the second operand
	 * @returns {mat4} out
	 */
	mat4.multiply = glMatrix.USE_SIMD ? mat4.SIMD.multiply : mat4.scalar.multiply;
	
	/**
	 * Alias for {@link mat4.multiply}
	 * @function
	 */
	mat4.mul = mat4.multiply;
	
	/**
	 * Translate a mat4 by the given vector not using SIMD
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the matrix to translate
	 * @param {vec3} v vector to translate by
	 * @returns {mat4} out
	 */
	mat4.scalar.translate = function (out, a, v) {
	    var x = v[0], y = v[1], z = v[2],
	        a00, a01, a02, a03,
	        a10, a11, a12, a13,
	        a20, a21, a22, a23;
	
	    if (a === out) {
	        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];
	        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];
	        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];
	        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];
	    } else {
	        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];
	        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];
	        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];
	
	        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;
	        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;
	        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;
	
	        out[12] = a00 * x + a10 * y + a20 * z + a[12];
	        out[13] = a01 * x + a11 * y + a21 * z + a[13];
	        out[14] = a02 * x + a12 * y + a22 * z + a[14];
	        out[15] = a03 * x + a13 * y + a23 * z + a[15];
	    }
	
	    return out;
	};
	
	/**
	 * Translates a mat4 by the given vector using SIMD
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the matrix to translate
	 * @param {vec3} v vector to translate by
	 * @returns {mat4} out
	 */
	mat4.SIMD.translate = function (out, a, v) {
	    var a0 = SIMD.Float32x4.load(a, 0),
	        a1 = SIMD.Float32x4.load(a, 4),
	        a2 = SIMD.Float32x4.load(a, 8),
	        a3 = SIMD.Float32x4.load(a, 12),
	        vec = SIMD.Float32x4(v[0], v[1], v[2] , 0);
	
	    if (a !== out) {
	        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];
	        out[4] = a[4]; out[5] = a[5]; out[6] = a[6]; out[7] = a[7];
	        out[8] = a[8]; out[9] = a[9]; out[10] = a[10]; out[11] = a[11];
	    }
	
	    a0 = SIMD.Float32x4.mul(a0, SIMD.Float32x4.swizzle(vec, 0, 0, 0, 0));
	    a1 = SIMD.Float32x4.mul(a1, SIMD.Float32x4.swizzle(vec, 1, 1, 1, 1));
	    a2 = SIMD.Float32x4.mul(a2, SIMD.Float32x4.swizzle(vec, 2, 2, 2, 2));
	
	    var t0 = SIMD.Float32x4.add(a0, SIMD.Float32x4.add(a1, SIMD.Float32x4.add(a2, a3)));
	    SIMD.Float32x4.store(out, 12, t0);
	
	    return out;
	};
	
	/**
	 * Translates a mat4 by the given vector using SIMD if available and enabled
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the matrix to translate
	 * @param {vec3} v vector to translate by
	 * @returns {mat4} out
	 */
	mat4.translate = glMatrix.USE_SIMD ? mat4.SIMD.translate : mat4.scalar.translate;
	
	/**
	 * Scales the mat4 by the dimensions in the given vec3 not using vectorization
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the matrix to scale
	 * @param {vec3} v the vec3 to scale the matrix by
	 * @returns {mat4} out
	 **/
	mat4.scalar.scale = function(out, a, v) {
	    var x = v[0], y = v[1], z = v[2];
	
	    out[0] = a[0] * x;
	    out[1] = a[1] * x;
	    out[2] = a[2] * x;
	    out[3] = a[3] * x;
	    out[4] = a[4] * y;
	    out[5] = a[5] * y;
	    out[6] = a[6] * y;
	    out[7] = a[7] * y;
	    out[8] = a[8] * z;
	    out[9] = a[9] * z;
	    out[10] = a[10] * z;
	    out[11] = a[11] * z;
	    out[12] = a[12];
	    out[13] = a[13];
	    out[14] = a[14];
	    out[15] = a[15];
	    return out;
	};
	
	/**
	 * Scales the mat4 by the dimensions in the given vec3 using vectorization
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the matrix to scale
	 * @param {vec3} v the vec3 to scale the matrix by
	 * @returns {mat4} out
	 **/
	mat4.SIMD.scale = function(out, a, v) {
	    var a0, a1, a2;
	    var vec = SIMD.Float32x4(v[0], v[1], v[2], 0);
	
	    a0 = SIMD.Float32x4.load(a, 0);
	    SIMD.Float32x4.store(
	        out, 0, SIMD.Float32x4.mul(a0, SIMD.Float32x4.swizzle(vec, 0, 0, 0, 0)));
	
	    a1 = SIMD.Float32x4.load(a, 4);
	    SIMD.Float32x4.store(
	        out, 4, SIMD.Float32x4.mul(a1, SIMD.Float32x4.swizzle(vec, 1, 1, 1, 1)));
	
	    a2 = SIMD.Float32x4.load(a, 8);
	    SIMD.Float32x4.store(
	        out, 8, SIMD.Float32x4.mul(a2, SIMD.Float32x4.swizzle(vec, 2, 2, 2, 2)));
	
	    out[12] = a[12];
	    out[13] = a[13];
	    out[14] = a[14];
	    out[15] = a[15];
	    return out;
	};
	
	/**
	 * Scales the mat4 by the dimensions in the given vec3 using SIMD if available and enabled
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the matrix to scale
	 * @param {vec3} v the vec3 to scale the matrix by
	 * @returns {mat4} out
	 */
	mat4.scale = glMatrix.USE_SIMD ? mat4.SIMD.scale : mat4.scalar.scale;
	
	/**
	 * Rotates a mat4 by the given angle around the given axis
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the matrix to rotate
	 * @param {Number} rad the angle to rotate the matrix by
	 * @param {vec3} axis the axis to rotate around
	 * @returns {mat4} out
	 */
	mat4.rotate = function (out, a, rad, axis) {
	    var x = axis[0], y = axis[1], z = axis[2],
	        len = Math.sqrt(x * x + y * y + z * z),
	        s, c, t,
	        a00, a01, a02, a03,
	        a10, a11, a12, a13,
	        a20, a21, a22, a23,
	        b00, b01, b02,
	        b10, b11, b12,
	        b20, b21, b22;
	
	    if (Math.abs(len) < glMatrix.EPSILON) { return null; }
	
	    len = 1 / len;
	    x *= len;
	    y *= len;
	    z *= len;
	
	    s = Math.sin(rad);
	    c = Math.cos(rad);
	    t = 1 - c;
	
	    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];
	    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];
	    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];
	
	    // Construct the elements of the rotation matrix
	    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;
	    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;
	    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;
	
	    // Perform rotation-specific matrix multiplication
	    out[0] = a00 * b00 + a10 * b01 + a20 * b02;
	    out[1] = a01 * b00 + a11 * b01 + a21 * b02;
	    out[2] = a02 * b00 + a12 * b01 + a22 * b02;
	    out[3] = a03 * b00 + a13 * b01 + a23 * b02;
	    out[4] = a00 * b10 + a10 * b11 + a20 * b12;
	    out[5] = a01 * b10 + a11 * b11 + a21 * b12;
	    out[6] = a02 * b10 + a12 * b11 + a22 * b12;
	    out[7] = a03 * b10 + a13 * b11 + a23 * b12;
	    out[8] = a00 * b20 + a10 * b21 + a20 * b22;
	    out[9] = a01 * b20 + a11 * b21 + a21 * b22;
	    out[10] = a02 * b20 + a12 * b21 + a22 * b22;
	    out[11] = a03 * b20 + a13 * b21 + a23 * b22;
	
	    if (a !== out) { // If the source and destination differ, copy the unchanged last row
	        out[12] = a[12];
	        out[13] = a[13];
	        out[14] = a[14];
	        out[15] = a[15];
	    }
	    return out;
	};
	
	/**
	 * Rotates a matrix by the given angle around the X axis not using SIMD
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the matrix to rotate
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat4} out
	 */
	mat4.scalar.rotateX = function (out, a, rad) {
	    var s = Math.sin(rad),
	        c = Math.cos(rad),
	        a10 = a[4],
	        a11 = a[5],
	        a12 = a[6],
	        a13 = a[7],
	        a20 = a[8],
	        a21 = a[9],
	        a22 = a[10],
	        a23 = a[11];
	
	    if (a !== out) { // If the source and destination differ, copy the unchanged rows
	        out[0]  = a[0];
	        out[1]  = a[1];
	        out[2]  = a[2];
	        out[3]  = a[3];
	        out[12] = a[12];
	        out[13] = a[13];
	        out[14] = a[14];
	        out[15] = a[15];
	    }
	
	    // Perform axis-specific matrix multiplication
	    out[4] = a10 * c + a20 * s;
	    out[5] = a11 * c + a21 * s;
	    out[6] = a12 * c + a22 * s;
	    out[7] = a13 * c + a23 * s;
	    out[8] = a20 * c - a10 * s;
	    out[9] = a21 * c - a11 * s;
	    out[10] = a22 * c - a12 * s;
	    out[11] = a23 * c - a13 * s;
	    return out;
	};
	
	/**
	 * Rotates a matrix by the given angle around the X axis using SIMD
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the matrix to rotate
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat4} out
	 */
	mat4.SIMD.rotateX = function (out, a, rad) {
	    var s = SIMD.Float32x4.splat(Math.sin(rad)),
	        c = SIMD.Float32x4.splat(Math.cos(rad));
	
	    if (a !== out) { // If the source and destination differ, copy the unchanged rows
	      out[0]  = a[0];
	      out[1]  = a[1];
	      out[2]  = a[2];
	      out[3]  = a[3];
	      out[12] = a[12];
	      out[13] = a[13];
	      out[14] = a[14];
	      out[15] = a[15];
	    }
	
	    // Perform axis-specific matrix multiplication
	    var a_1 = SIMD.Float32x4.load(a, 4);
	    var a_2 = SIMD.Float32x4.load(a, 8);
	    SIMD.Float32x4.store(out, 4,
	                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_1, c), SIMD.Float32x4.mul(a_2, s)));
	    SIMD.Float32x4.store(out, 8,
	                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_2, c), SIMD.Float32x4.mul(a_1, s)));
	    return out;
	};
	
	/**
	 * Rotates a matrix by the given angle around the X axis using SIMD if availabe and enabled
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the matrix to rotate
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat4} out
	 */
	mat4.rotateX = glMatrix.USE_SIMD ? mat4.SIMD.rotateX : mat4.scalar.rotateX;
	
	/**
	 * Rotates a matrix by the given angle around the Y axis not using SIMD
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the matrix to rotate
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat4} out
	 */
	mat4.scalar.rotateY = function (out, a, rad) {
	    var s = Math.sin(rad),
	        c = Math.cos(rad),
	        a00 = a[0],
	        a01 = a[1],
	        a02 = a[2],
	        a03 = a[3],
	        a20 = a[8],
	        a21 = a[9],
	        a22 = a[10],
	        a23 = a[11];
	
	    if (a !== out) { // If the source and destination differ, copy the unchanged rows
	        out[4]  = a[4];
	        out[5]  = a[5];
	        out[6]  = a[6];
	        out[7]  = a[7];
	        out[12] = a[12];
	        out[13] = a[13];
	        out[14] = a[14];
	        out[15] = a[15];
	    }
	
	    // Perform axis-specific matrix multiplication
	    out[0] = a00 * c - a20 * s;
	    out[1] = a01 * c - a21 * s;
	    out[2] = a02 * c - a22 * s;
	    out[3] = a03 * c - a23 * s;
	    out[8] = a00 * s + a20 * c;
	    out[9] = a01 * s + a21 * c;
	    out[10] = a02 * s + a22 * c;
	    out[11] = a03 * s + a23 * c;
	    return out;
	};
	
	/**
	 * Rotates a matrix by the given angle around the Y axis using SIMD
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the matrix to rotate
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat4} out
	 */
	mat4.SIMD.rotateY = function (out, a, rad) {
	    var s = SIMD.Float32x4.splat(Math.sin(rad)),
	        c = SIMD.Float32x4.splat(Math.cos(rad));
	
	    if (a !== out) { // If the source and destination differ, copy the unchanged rows
	        out[4]  = a[4];
	        out[5]  = a[5];
	        out[6]  = a[6];
	        out[7]  = a[7];
	        out[12] = a[12];
	        out[13] = a[13];
	        out[14] = a[14];
	        out[15] = a[15];
	    }
	
	    // Perform axis-specific matrix multiplication
	    var a_0 = SIMD.Float32x4.load(a, 0);
	    var a_2 = SIMD.Float32x4.load(a, 8);
	    SIMD.Float32x4.store(out, 0,
	                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_0, c), SIMD.Float32x4.mul(a_2, s)));
	    SIMD.Float32x4.store(out, 8,
	                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_0, s), SIMD.Float32x4.mul(a_2, c)));
	    return out;
	};
	
	/**
	 * Rotates a matrix by the given angle around the Y axis if SIMD available and enabled
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the matrix to rotate
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat4} out
	 */
	 mat4.rotateY = glMatrix.USE_SIMD ? mat4.SIMD.rotateY : mat4.scalar.rotateY;
	
	/**
	 * Rotates a matrix by the given angle around the Z axis not using SIMD
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the matrix to rotate
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat4} out
	 */
	mat4.scalar.rotateZ = function (out, a, rad) {
	    var s = Math.sin(rad),
	        c = Math.cos(rad),
	        a00 = a[0],
	        a01 = a[1],
	        a02 = a[2],
	        a03 = a[3],
	        a10 = a[4],
	        a11 = a[5],
	        a12 = a[6],
	        a13 = a[7];
	
	    if (a !== out) { // If the source and destination differ, copy the unchanged last row
	        out[8]  = a[8];
	        out[9]  = a[9];
	        out[10] = a[10];
	        out[11] = a[11];
	        out[12] = a[12];
	        out[13] = a[13];
	        out[14] = a[14];
	        out[15] = a[15];
	    }
	
	    // Perform axis-specific matrix multiplication
	    out[0] = a00 * c + a10 * s;
	    out[1] = a01 * c + a11 * s;
	    out[2] = a02 * c + a12 * s;
	    out[3] = a03 * c + a13 * s;
	    out[4] = a10 * c - a00 * s;
	    out[5] = a11 * c - a01 * s;
	    out[6] = a12 * c - a02 * s;
	    out[7] = a13 * c - a03 * s;
	    return out;
	};
	
	/**
	 * Rotates a matrix by the given angle around the Z axis using SIMD
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the matrix to rotate
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat4} out
	 */
	mat4.SIMD.rotateZ = function (out, a, rad) {
	    var s = SIMD.Float32x4.splat(Math.sin(rad)),
	        c = SIMD.Float32x4.splat(Math.cos(rad));
	
	    if (a !== out) { // If the source and destination differ, copy the unchanged last row
	        out[8]  = a[8];
	        out[9]  = a[9];
	        out[10] = a[10];
	        out[11] = a[11];
	        out[12] = a[12];
	        out[13] = a[13];
	        out[14] = a[14];
	        out[15] = a[15];
	    }
	
	    // Perform axis-specific matrix multiplication
	    var a_0 = SIMD.Float32x4.load(a, 0);
	    var a_1 = SIMD.Float32x4.load(a, 4);
	    SIMD.Float32x4.store(out, 0,
	                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_0, c), SIMD.Float32x4.mul(a_1, s)));
	    SIMD.Float32x4.store(out, 4,
	                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_1, c), SIMD.Float32x4.mul(a_0, s)));
	    return out;
	};
	
	/**
	 * Rotates a matrix by the given angle around the Z axis if SIMD available and enabled
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the matrix to rotate
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat4} out
	 */
	 mat4.rotateZ = glMatrix.USE_SIMD ? mat4.SIMD.rotateZ : mat4.scalar.rotateZ;
	
	/**
	 * Creates a matrix from a vector translation
	 * This is equivalent to (but much faster than):
	 *
	 *     mat4.identity(dest);
	 *     mat4.translate(dest, dest, vec);
	 *
	 * @param {mat4} out mat4 receiving operation result
	 * @param {vec3} v Translation vector
	 * @returns {mat4} out
	 */
	mat4.fromTranslation = function(out, v) {
	    out[0] = 1;
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 0;
	    out[4] = 0;
	    out[5] = 1;
	    out[6] = 0;
	    out[7] = 0;
	    out[8] = 0;
	    out[9] = 0;
	    out[10] = 1;
	    out[11] = 0;
	    out[12] = v[0];
	    out[13] = v[1];
	    out[14] = v[2];
	    out[15] = 1;
	    return out;
	}
	
	/**
	 * Creates a matrix from a vector scaling
	 * This is equivalent to (but much faster than):
	 *
	 *     mat4.identity(dest);
	 *     mat4.scale(dest, dest, vec);
	 *
	 * @param {mat4} out mat4 receiving operation result
	 * @param {vec3} v Scaling vector
	 * @returns {mat4} out
	 */
	mat4.fromScaling = function(out, v) {
	    out[0] = v[0];
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 0;
	    out[4] = 0;
	    out[5] = v[1];
	    out[6] = 0;
	    out[7] = 0;
	    out[8] = 0;
	    out[9] = 0;
	    out[10] = v[2];
	    out[11] = 0;
	    out[12] = 0;
	    out[13] = 0;
	    out[14] = 0;
	    out[15] = 1;
	    return out;
	}
	
	/**
	 * Creates a matrix from a given angle around a given axis
	 * This is equivalent to (but much faster than):
	 *
	 *     mat4.identity(dest);
	 *     mat4.rotate(dest, dest, rad, axis);
	 *
	 * @param {mat4} out mat4 receiving operation result
	 * @param {Number} rad the angle to rotate the matrix by
	 * @param {vec3} axis the axis to rotate around
	 * @returns {mat4} out
	 */
	mat4.fromRotation = function(out, rad, axis) {
	    var x = axis[0], y = axis[1], z = axis[2],
	        len = Math.sqrt(x * x + y * y + z * z),
	        s, c, t;
	
	    if (Math.abs(len) < glMatrix.EPSILON) { return null; }
	
	    len = 1 / len;
	    x *= len;
	    y *= len;
	    z *= len;
	
	    s = Math.sin(rad);
	    c = Math.cos(rad);
	    t = 1 - c;
	
	    // Perform rotation-specific matrix multiplication
	    out[0] = x * x * t + c;
	    out[1] = y * x * t + z * s;
	    out[2] = z * x * t - y * s;
	    out[3] = 0;
	    out[4] = x * y * t - z * s;
	    out[5] = y * y * t + c;
	    out[6] = z * y * t + x * s;
	    out[7] = 0;
	    out[8] = x * z * t + y * s;
	    out[9] = y * z * t - x * s;
	    out[10] = z * z * t + c;
	    out[11] = 0;
	    out[12] = 0;
	    out[13] = 0;
	    out[14] = 0;
	    out[15] = 1;
	    return out;
	}
	
	/**
	 * Creates a matrix from the given angle around the X axis
	 * This is equivalent to (but much faster than):
	 *
	 *     mat4.identity(dest);
	 *     mat4.rotateX(dest, dest, rad);
	 *
	 * @param {mat4} out mat4 receiving operation result
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat4} out
	 */
	mat4.fromXRotation = function(out, rad) {
	    var s = Math.sin(rad),
	        c = Math.cos(rad);
	
	    // Perform axis-specific matrix multiplication
	    out[0]  = 1;
	    out[1]  = 0;
	    out[2]  = 0;
	    out[3]  = 0;
	    out[4] = 0;
	    out[5] = c;
	    out[6] = s;
	    out[7] = 0;
	    out[8] = 0;
	    out[9] = -s;
	    out[10] = c;
	    out[11] = 0;
	    out[12] = 0;
	    out[13] = 0;
	    out[14] = 0;
	    out[15] = 1;
	    return out;
	}
	
	/**
	 * Creates a matrix from the given angle around the Y axis
	 * This is equivalent to (but much faster than):
	 *
	 *     mat4.identity(dest);
	 *     mat4.rotateY(dest, dest, rad);
	 *
	 * @param {mat4} out mat4 receiving operation result
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat4} out
	 */
	mat4.fromYRotation = function(out, rad) {
	    var s = Math.sin(rad),
	        c = Math.cos(rad);
	
	    // Perform axis-specific matrix multiplication
	    out[0]  = c;
	    out[1]  = 0;
	    out[2]  = -s;
	    out[3]  = 0;
	    out[4] = 0;
	    out[5] = 1;
	    out[6] = 0;
	    out[7] = 0;
	    out[8] = s;
	    out[9] = 0;
	    out[10] = c;
	    out[11] = 0;
	    out[12] = 0;
	    out[13] = 0;
	    out[14] = 0;
	    out[15] = 1;
	    return out;
	}
	
	/**
	 * Creates a matrix from the given angle around the Z axis
	 * This is equivalent to (but much faster than):
	 *
	 *     mat4.identity(dest);
	 *     mat4.rotateZ(dest, dest, rad);
	 *
	 * @param {mat4} out mat4 receiving operation result
	 * @param {Number} rad the angle to rotate the matrix by
	 * @returns {mat4} out
	 */
	mat4.fromZRotation = function(out, rad) {
	    var s = Math.sin(rad),
	        c = Math.cos(rad);
	
	    // Perform axis-specific matrix multiplication
	    out[0]  = c;
	    out[1]  = s;
	    out[2]  = 0;
	    out[3]  = 0;
	    out[4] = -s;
	    out[5] = c;
	    out[6] = 0;
	    out[7] = 0;
	    out[8] = 0;
	    out[9] = 0;
	    out[10] = 1;
	    out[11] = 0;
	    out[12] = 0;
	    out[13] = 0;
	    out[14] = 0;
	    out[15] = 1;
	    return out;
	}
	
	/**
	 * Creates a matrix from a quaternion rotation and vector translation
	 * This is equivalent to (but much faster than):
	 *
	 *     mat4.identity(dest);
	 *     mat4.translate(dest, vec);
	 *     var quatMat = mat4.create();
	 *     quat4.toMat4(quat, quatMat);
	 *     mat4.multiply(dest, quatMat);
	 *
	 * @param {mat4} out mat4 receiving operation result
	 * @param {quat4} q Rotation quaternion
	 * @param {vec3} v Translation vector
	 * @returns {mat4} out
	 */
	mat4.fromRotationTranslation = function (out, q, v) {
	    // Quaternion math
	    var x = q[0], y = q[1], z = q[2], w = q[3],
	        x2 = x + x,
	        y2 = y + y,
	        z2 = z + z,
	
	        xx = x * x2,
	        xy = x * y2,
	        xz = x * z2,
	        yy = y * y2,
	        yz = y * z2,
	        zz = z * z2,
	        wx = w * x2,
	        wy = w * y2,
	        wz = w * z2;
	
	    out[0] = 1 - (yy + zz);
	    out[1] = xy + wz;
	    out[2] = xz - wy;
	    out[3] = 0;
	    out[4] = xy - wz;
	    out[5] = 1 - (xx + zz);
	    out[6] = yz + wx;
	    out[7] = 0;
	    out[8] = xz + wy;
	    out[9] = yz - wx;
	    out[10] = 1 - (xx + yy);
	    out[11] = 0;
	    out[12] = v[0];
	    out[13] = v[1];
	    out[14] = v[2];
	    out[15] = 1;
	
	    return out;
	};
	
	/**
	 * Returns the translation vector component of a transformation
	 *  matrix. If a matrix is built with fromRotationTranslation,
	 *  the returned vector will be the same as the translation vector
	 *  originally supplied.
	 * @param  {vec3} out Vector to receive translation component
	 * @param  {mat4} mat Matrix to be decomposed (input)
	 * @return {vec3} out
	 */
	mat4.getTranslation = function (out, mat) {
	  out[0] = mat[12];
	  out[1] = mat[13];
	  out[2] = mat[14];
	
	  return out;
	};
	
	/**
	 * Returns a quaternion representing the rotational component
	 *  of a transformation matrix. If a matrix is built with
	 *  fromRotationTranslation, the returned quaternion will be the
	 *  same as the quaternion originally supplied.
	 * @param {quat} out Quaternion to receive the rotation component
	 * @param {mat4} mat Matrix to be decomposed (input)
	 * @return {quat} out
	 */
	mat4.getRotation = function (out, mat) {
	  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm
	  var trace = mat[0] + mat[5] + mat[10];
	  var S = 0;
	
	  if (trace > 0) { 
	    S = Math.sqrt(trace + 1.0) * 2;
	    out[3] = 0.25 * S;
	    out[0] = (mat[6] - mat[9]) / S;
	    out[1] = (mat[8] - mat[2]) / S; 
	    out[2] = (mat[1] - mat[4]) / S; 
	  } else if ((mat[0] > mat[5])&(mat[0] > mat[10])) { 
	    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;
	    out[3] = (mat[6] - mat[9]) / S;
	    out[0] = 0.25 * S;
	    out[1] = (mat[1] + mat[4]) / S; 
	    out[2] = (mat[8] + mat[2]) / S; 
	  } else if (mat[5] > mat[10]) { 
	    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;
	    out[3] = (mat[8] - mat[2]) / S;
	    out[0] = (mat[1] + mat[4]) / S; 
	    out[1] = 0.25 * S;
	    out[2] = (mat[6] + mat[9]) / S; 
	  } else { 
	    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;
	    out[3] = (mat[1] - mat[4]) / S;
	    out[0] = (mat[8] + mat[2]) / S;
	    out[1] = (mat[6] + mat[9]) / S;
	    out[2] = 0.25 * S;
	  }
	
	  return out;
	};
	
	/**
	 * Creates a matrix from a quaternion rotation, vector translation and vector scale
	 * This is equivalent to (but much faster than):
	 *
	 *     mat4.identity(dest);
	 *     mat4.translate(dest, vec);
	 *     var quatMat = mat4.create();
	 *     quat4.toMat4(quat, quatMat);
	 *     mat4.multiply(dest, quatMat);
	 *     mat4.scale(dest, scale)
	 *
	 * @param {mat4} out mat4 receiving operation result
	 * @param {quat4} q Rotation quaternion
	 * @param {vec3} v Translation vector
	 * @param {vec3} s Scaling vector
	 * @returns {mat4} out
	 */
	mat4.fromRotationTranslationScale = function (out, q, v, s) {
	    // Quaternion math
	    var x = q[0], y = q[1], z = q[2], w = q[3],
	        x2 = x + x,
	        y2 = y + y,
	        z2 = z + z,
	
	        xx = x * x2,
	        xy = x * y2,
	        xz = x * z2,
	        yy = y * y2,
	        yz = y * z2,
	        zz = z * z2,
	        wx = w * x2,
	        wy = w * y2,
	        wz = w * z2,
	        sx = s[0],
	        sy = s[1],
	        sz = s[2];
	
	    out[0] = (1 - (yy + zz)) * sx;
	    out[1] = (xy + wz) * sx;
	    out[2] = (xz - wy) * sx;
	    out[3] = 0;
	    out[4] = (xy - wz) * sy;
	    out[5] = (1 - (xx + zz)) * sy;
	    out[6] = (yz + wx) * sy;
	    out[7] = 0;
	    out[8] = (xz + wy) * sz;
	    out[9] = (yz - wx) * sz;
	    out[10] = (1 - (xx + yy)) * sz;
	    out[11] = 0;
	    out[12] = v[0];
	    out[13] = v[1];
	    out[14] = v[2];
	    out[15] = 1;
	
	    return out;
	};
	
	/**
	 * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin
	 * This is equivalent to (but much faster than):
	 *
	 *     mat4.identity(dest);
	 *     mat4.translate(dest, vec);
	 *     mat4.translate(dest, origin);
	 *     var quatMat = mat4.create();
	 *     quat4.toMat4(quat, quatMat);
	 *     mat4.multiply(dest, quatMat);
	 *     mat4.scale(dest, scale)
	 *     mat4.translate(dest, negativeOrigin);
	 *
	 * @param {mat4} out mat4 receiving operation result
	 * @param {quat4} q Rotation quaternion
	 * @param {vec3} v Translation vector
	 * @param {vec3} s Scaling vector
	 * @param {vec3} o The origin vector around which to scale and rotate
	 * @returns {mat4} out
	 */
	mat4.fromRotationTranslationScaleOrigin = function (out, q, v, s, o) {
	  // Quaternion math
	  var x = q[0], y = q[1], z = q[2], w = q[3],
	      x2 = x + x,
	      y2 = y + y,
	      z2 = z + z,
	
	      xx = x * x2,
	      xy = x * y2,
	      xz = x * z2,
	      yy = y * y2,
	      yz = y * z2,
	      zz = z * z2,
	      wx = w * x2,
	      wy = w * y2,
	      wz = w * z2,
	
	      sx = s[0],
	      sy = s[1],
	      sz = s[2],
	
	      ox = o[0],
	      oy = o[1],
	      oz = o[2];
	
	  out[0] = (1 - (yy + zz)) * sx;
	  out[1] = (xy + wz) * sx;
	  out[2] = (xz - wy) * sx;
	  out[3] = 0;
	  out[4] = (xy - wz) * sy;
	  out[5] = (1 - (xx + zz)) * sy;
	  out[6] = (yz + wx) * sy;
	  out[7] = 0;
	  out[8] = (xz + wy) * sz;
	  out[9] = (yz - wx) * sz;
	  out[10] = (1 - (xx + yy)) * sz;
	  out[11] = 0;
	  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);
	  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);
	  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);
	  out[15] = 1;
	
	  return out;
	};
	
	/**
	 * Calculates a 4x4 matrix from the given quaternion
	 *
	 * @param {mat4} out mat4 receiving operation result
	 * @param {quat} q Quaternion to create matrix from
	 *
	 * @returns {mat4} out
	 */
	mat4.fromQuat = function (out, q) {
	    var x = q[0], y = q[1], z = q[2], w = q[3],
	        x2 = x + x,
	        y2 = y + y,
	        z2 = z + z,
	
	        xx = x * x2,
	        yx = y * x2,
	        yy = y * y2,
	        zx = z * x2,
	        zy = z * y2,
	        zz = z * z2,
	        wx = w * x2,
	        wy = w * y2,
	        wz = w * z2;
	
	    out[0] = 1 - yy - zz;
	    out[1] = yx + wz;
	    out[2] = zx - wy;
	    out[3] = 0;
	
	    out[4] = yx - wz;
	    out[5] = 1 - xx - zz;
	    out[6] = zy + wx;
	    out[7] = 0;
	
	    out[8] = zx + wy;
	    out[9] = zy - wx;
	    out[10] = 1 - xx - yy;
	    out[11] = 0;
	
	    out[12] = 0;
	    out[13] = 0;
	    out[14] = 0;
	    out[15] = 1;
	
	    return out;
	};
	
	/**
	 * Generates a frustum matrix with the given bounds
	 *
	 * @param {mat4} out mat4 frustum matrix will be written into
	 * @param {Number} left Left bound of the frustum
	 * @param {Number} right Right bound of the frustum
	 * @param {Number} bottom Bottom bound of the frustum
	 * @param {Number} top Top bound of the frustum
	 * @param {Number} near Near bound of the frustum
	 * @param {Number} far Far bound of the frustum
	 * @returns {mat4} out
	 */
	mat4.frustum = function (out, left, right, bottom, top, near, far) {
	    var rl = 1 / (right - left),
	        tb = 1 / (top - bottom),
	        nf = 1 / (near - far);
	    out[0] = (near * 2) * rl;
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 0;
	    out[4] = 0;
	    out[5] = (near * 2) * tb;
	    out[6] = 0;
	    out[7] = 0;
	    out[8] = (right + left) * rl;
	    out[9] = (top + bottom) * tb;
	    out[10] = (far + near) * nf;
	    out[11] = -1;
	    out[12] = 0;
	    out[13] = 0;
	    out[14] = (far * near * 2) * nf;
	    out[15] = 0;
	    return out;
	};
	
	/**
	 * Generates a perspective projection matrix with the given bounds
	 *
	 * @param {mat4} out mat4 frustum matrix will be written into
	 * @param {number} fovy Vertical field of view in radians
	 * @param {number} aspect Aspect ratio. typically viewport width/height
	 * @param {number} near Near bound of the frustum
	 * @param {number} far Far bound of the frustum
	 * @returns {mat4} out
	 */
	mat4.perspective = function (out, fovy, aspect, near, far) {
	    var f = 1.0 / Math.tan(fovy / 2),
	        nf = 1 / (near - far);
	    out[0] = f / aspect;
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 0;
	    out[4] = 0;
	    out[5] = f;
	    out[6] = 0;
	    out[7] = 0;
	    out[8] = 0;
	    out[9] = 0;
	    out[10] = (far + near) * nf;
	    out[11] = -1;
	    out[12] = 0;
	    out[13] = 0;
	    out[14] = (2 * far * near) * nf;
	    out[15] = 0;
	    return out;
	};
	
	/**
	 * Generates a perspective projection matrix with the given field of view.
	 * This is primarily useful for generating projection matrices to be used
	 * with the still experiemental WebVR API.
	 *
	 * @param {mat4} out mat4 frustum matrix will be written into
	 * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees
	 * @param {number} near Near bound of the frustum
	 * @param {number} far Far bound of the frustum
	 * @returns {mat4} out
	 */
	mat4.perspectiveFromFieldOfView = function (out, fov, near, far) {
	    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),
	        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),
	        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),
	        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),
	        xScale = 2.0 / (leftTan + rightTan),
	        yScale = 2.0 / (upTan + downTan);
	
	    out[0] = xScale;
	    out[1] = 0.0;
	    out[2] = 0.0;
	    out[3] = 0.0;
	    out[4] = 0.0;
	    out[5] = yScale;
	    out[6] = 0.0;
	    out[7] = 0.0;
	    out[8] = -((leftTan - rightTan) * xScale * 0.5);
	    out[9] = ((upTan - downTan) * yScale * 0.5);
	    out[10] = far / (near - far);
	    out[11] = -1.0;
	    out[12] = 0.0;
	    out[13] = 0.0;
	    out[14] = (far * near) / (near - far);
	    out[15] = 0.0;
	    return out;
	}
	
	/**
	 * Generates a orthogonal projection matrix with the given bounds
	 *
	 * @param {mat4} out mat4 frustum matrix will be written into
	 * @param {number} left Left bound of the frustum
	 * @param {number} right Right bound of the frustum
	 * @param {number} bottom Bottom bound of the frustum
	 * @param {number} top Top bound of the frustum
	 * @param {number} near Near bound of the frustum
	 * @param {number} far Far bound of the frustum
	 * @returns {mat4} out
	 */
	mat4.ortho = function (out, left, right, bottom, top, near, far) {
	    var lr = 1 / (left - right),
	        bt = 1 / (bottom - top),
	        nf = 1 / (near - far);
	    out[0] = -2 * lr;
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 0;
	    out[4] = 0;
	    out[5] = -2 * bt;
	    out[6] = 0;
	    out[7] = 0;
	    out[8] = 0;
	    out[9] = 0;
	    out[10] = 2 * nf;
	    out[11] = 0;
	    out[12] = (left + right) * lr;
	    out[13] = (top + bottom) * bt;
	    out[14] = (far + near) * nf;
	    out[15] = 1;
	    return out;
	};
	
	/**
	 * Generates a look-at matrix with the given eye position, focal point, and up axis
	 *
	 * @param {mat4} out mat4 frustum matrix will be written into
	 * @param {vec3} eye Position of the viewer
	 * @param {vec3} center Point the viewer is looking at
	 * @param {vec3} up vec3 pointing up
	 * @returns {mat4} out
	 */
	mat4.lookAt = function (out, eye, center, up) {
	    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,
	        eyex = eye[0],
	        eyey = eye[1],
	        eyez = eye[2],
	        upx = up[0],
	        upy = up[1],
	        upz = up[2],
	        centerx = center[0],
	        centery = center[1],
	        centerz = center[2];
	
	    if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&
	        Math.abs(eyey - centery) < glMatrix.EPSILON &&
	        Math.abs(eyez - centerz) < glMatrix.EPSILON) {
	        return mat4.identity(out);
	    }
	
	    z0 = eyex - centerx;
	    z1 = eyey - centery;
	    z2 = eyez - centerz;
	
	    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);
	    z0 *= len;
	    z1 *= len;
	    z2 *= len;
	
	    x0 = upy * z2 - upz * z1;
	    x1 = upz * z0 - upx * z2;
	    x2 = upx * z1 - upy * z0;
	    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);
	    if (!len) {
	        x0 = 0;
	        x1 = 0;
	        x2 = 0;
	    } else {
	        len = 1 / len;
	        x0 *= len;
	        x1 *= len;
	        x2 *= len;
	    }
	
	    y0 = z1 * x2 - z2 * x1;
	    y1 = z2 * x0 - z0 * x2;
	    y2 = z0 * x1 - z1 * x0;
	
	    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);
	    if (!len) {
	        y0 = 0;
	        y1 = 0;
	        y2 = 0;
	    } else {
	        len = 1 / len;
	        y0 *= len;
	        y1 *= len;
	        y2 *= len;
	    }
	
	    out[0] = x0;
	    out[1] = y0;
	    out[2] = z0;
	    out[3] = 0;
	    out[4] = x1;
	    out[5] = y1;
	    out[6] = z1;
	    out[7] = 0;
	    out[8] = x2;
	    out[9] = y2;
	    out[10] = z2;
	    out[11] = 0;
	    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);
	    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);
	    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);
	    out[15] = 1;
	
	    return out;
	};
	
	/**
	 * Returns a string representation of a mat4
	 *
	 * @param {mat4} mat matrix to represent as a string
	 * @returns {String} string representation of the matrix
	 */
	mat4.str = function (a) {
	    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +
	                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +
	                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +
	                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';
	};
	
	/**
	 * Returns Frobenius norm of a mat4
	 *
	 * @param {mat4} a the matrix to calculate Frobenius norm of
	 * @returns {Number} Frobenius norm
	 */
	mat4.frob = function (a) {
	    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))
	};
	
	/**
	 * Adds two mat4's
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the first operand
	 * @param {mat4} b the second operand
	 * @returns {mat4} out
	 */
	mat4.add = function(out, a, b) {
	    out[0] = a[0] + b[0];
	    out[1] = a[1] + b[1];
	    out[2] = a[2] + b[2];
	    out[3] = a[3] + b[3];
	    out[4] = a[4] + b[4];
	    out[5] = a[5] + b[5];
	    out[6] = a[6] + b[6];
	    out[7] = a[7] + b[7];
	    out[8] = a[8] + b[8];
	    out[9] = a[9] + b[9];
	    out[10] = a[10] + b[10];
	    out[11] = a[11] + b[11];
	    out[12] = a[12] + b[12];
	    out[13] = a[13] + b[13];
	    out[14] = a[14] + b[14];
	    out[15] = a[15] + b[15];
	    return out;
	};
	
	/**
	 * Subtracts matrix b from matrix a
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the first operand
	 * @param {mat4} b the second operand
	 * @returns {mat4} out
	 */
	mat4.subtract = function(out, a, b) {
	    out[0] = a[0] - b[0];
	    out[1] = a[1] - b[1];
	    out[2] = a[2] - b[2];
	    out[3] = a[3] - b[3];
	    out[4] = a[4] - b[4];
	    out[5] = a[5] - b[5];
	    out[6] = a[6] - b[6];
	    out[7] = a[7] - b[7];
	    out[8] = a[8] - b[8];
	    out[9] = a[9] - b[9];
	    out[10] = a[10] - b[10];
	    out[11] = a[11] - b[11];
	    out[12] = a[12] - b[12];
	    out[13] = a[13] - b[13];
	    out[14] = a[14] - b[14];
	    out[15] = a[15] - b[15];
	    return out;
	};
	
	/**
	 * Alias for {@link mat4.subtract}
	 * @function
	 */
	mat4.sub = mat4.subtract;
	
	/**
	 * Multiply each element of the matrix by a scalar.
	 *
	 * @param {mat4} out the receiving matrix
	 * @param {mat4} a the matrix to scale
	 * @param {Number} b amount to scale the matrix's elements by
	 * @returns {mat4} out
	 */
	mat4.multiplyScalar = function(out, a, b) {
	    out[0] = a[0] * b;
	    out[1] = a[1] * b;
	    out[2] = a[2] * b;
	    out[3] = a[3] * b;
	    out[4] = a[4] * b;
	    out[5] = a[5] * b;
	    out[6] = a[6] * b;
	    out[7] = a[7] * b;
	    out[8] = a[8] * b;
	    out[9] = a[9] * b;
	    out[10] = a[10] * b;
	    out[11] = a[11] * b;
	    out[12] = a[12] * b;
	    out[13] = a[13] * b;
	    out[14] = a[14] * b;
	    out[15] = a[15] * b;
	    return out;
	};
	
	/**
	 * Adds two mat4's after multiplying each element of the second operand by a scalar value.
	 *
	 * @param {mat4} out the receiving vector
	 * @param {mat4} a the first operand
	 * @param {mat4} b the second operand
	 * @param {Number} scale the amount to scale b's elements by before adding
	 * @returns {mat4} out
	 */
	mat4.multiplyScalarAndAdd = function(out, a, b, scale) {
	    out[0] = a[0] + (b[0] * scale);
	    out[1] = a[1] + (b[1] * scale);
	    out[2] = a[2] + (b[2] * scale);
	    out[3] = a[3] + (b[3] * scale);
	    out[4] = a[4] + (b[4] * scale);
	    out[5] = a[5] + (b[5] * scale);
	    out[6] = a[6] + (b[6] * scale);
	    out[7] = a[7] + (b[7] * scale);
	    out[8] = a[8] + (b[8] * scale);
	    out[9] = a[9] + (b[9] * scale);
	    out[10] = a[10] + (b[10] * scale);
	    out[11] = a[11] + (b[11] * scale);
	    out[12] = a[12] + (b[12] * scale);
	    out[13] = a[13] + (b[13] * scale);
	    out[14] = a[14] + (b[14] * scale);
	    out[15] = a[15] + (b[15] * scale);
	    return out;
	};
	
	/**
	 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
	 *
	 * @param {mat4} a The first matrix.
	 * @param {mat4} b The second matrix.
	 * @returns {Boolean} True if the matrices are equal, false otherwise.
	 */
	mat4.exactEquals = function (a, b) {
	    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && 
	           a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && 
	           a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&
	           a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];
	};
	
	/**
	 * Returns whether or not the matrices have approximately the same elements in the same position.
	 *
	 * @param {mat4} a The first matrix.
	 * @param {mat4} b The second matrix.
	 * @returns {Boolean} True if the matrices are equal, false otherwise.
	 */
	mat4.equals = function (a, b) {
	    var a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3],
	        a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7], 
	        a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11], 
	        a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];
	
	    var b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3],
	        b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7], 
	        b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11], 
	        b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];
	
	    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
	            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
	            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
	            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&
	            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&
	            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&
	            Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&
	            Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&
	            Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&
	            Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&
	            Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&
	            Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&
	            Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&
	            Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&
	            Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&
	            Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));
	};
	
	
	
	module.exports = mat4;


/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE. */
	
	var glMatrix = __webpack_require__(230);
	var mat3 = __webpack_require__(233);
	var vec3 = __webpack_require__(236);
	var vec4 = __webpack_require__(237);
	
	/**
	 * @class Quaternion
	 * @name quat
	 */
	var quat = {};
	
	/**
	 * Creates a new identity quat
	 *
	 * @returns {quat} a new quaternion
	 */
	quat.create = function() {
	    var out = new glMatrix.ARRAY_TYPE(4);
	    out[0] = 0;
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 1;
	    return out;
	};
	
	/**
	 * Sets a quaternion to represent the shortest rotation from one
	 * vector to another.
	 *
	 * Both vectors are assumed to be unit length.
	 *
	 * @param {quat} out the receiving quaternion.
	 * @param {vec3} a the initial vector
	 * @param {vec3} b the destination vector
	 * @returns {quat} out
	 */
	quat.rotationTo = (function() {
	    var tmpvec3 = vec3.create();
	    var xUnitVec3 = vec3.fromValues(1,0,0);
	    var yUnitVec3 = vec3.fromValues(0,1,0);
	
	    return function(out, a, b) {
	        var dot = vec3.dot(a, b);
	        if (dot < -0.999999) {
	            vec3.cross(tmpvec3, xUnitVec3, a);
	            if (vec3.length(tmpvec3) < 0.000001)
	                vec3.cross(tmpvec3, yUnitVec3, a);
	            vec3.normalize(tmpvec3, tmpvec3);
	            quat.setAxisAngle(out, tmpvec3, Math.PI);
	            return out;
	        } else if (dot > 0.999999) {
	            out[0] = 0;
	            out[1] = 0;
	            out[2] = 0;
	            out[3] = 1;
	            return out;
	        } else {
	            vec3.cross(tmpvec3, a, b);
	            out[0] = tmpvec3[0];
	            out[1] = tmpvec3[1];
	            out[2] = tmpvec3[2];
	            out[3] = 1 + dot;
	            return quat.normalize(out, out);
	        }
	    };
	})();
	
	/**
	 * Sets the specified quaternion with values corresponding to the given
	 * axes. Each axis is a vec3 and is expected to be unit length and
	 * perpendicular to all other specified axes.
	 *
	 * @param {vec3} view  the vector representing the viewing direction
	 * @param {vec3} right the vector representing the local "right" direction
	 * @param {vec3} up    the vector representing the local "up" direction
	 * @returns {quat} out
	 */
	quat.setAxes = (function() {
	    var matr = mat3.create();
	
	    return function(out, view, right, up) {
	        matr[0] = right[0];
	        matr[3] = right[1];
	        matr[6] = right[2];
	
	        matr[1] = up[0];
	        matr[4] = up[1];
	        matr[7] = up[2];
	
	        matr[2] = -view[0];
	        matr[5] = -view[1];
	        matr[8] = -view[2];
	
	        return quat.normalize(out, quat.fromMat3(out, matr));
	    };
	})();
	
	/**
	 * Creates a new quat initialized with values from an existing quaternion
	 *
	 * @param {quat} a quaternion to clone
	 * @returns {quat} a new quaternion
	 * @function
	 */
	quat.clone = vec4.clone;
	
	/**
	 * Creates a new quat initialized with the given values
	 *
	 * @param {Number} x X component
	 * @param {Number} y Y component
	 * @param {Number} z Z component
	 * @param {Number} w W component
	 * @returns {quat} a new quaternion
	 * @function
	 */
	quat.fromValues = vec4.fromValues;
	
	/**
	 * Copy the values from one quat to another
	 *
	 * @param {quat} out the receiving quaternion
	 * @param {quat} a the source quaternion
	 * @returns {quat} out
	 * @function
	 */
	quat.copy = vec4.copy;
	
	/**
	 * Set the components of a quat to the given values
	 *
	 * @param {quat} out the receiving quaternion
	 * @param {Number} x X component
	 * @param {Number} y Y component
	 * @param {Number} z Z component
	 * @param {Number} w W component
	 * @returns {quat} out
	 * @function
	 */
	quat.set = vec4.set;
	
	/**
	 * Set a quat to the identity quaternion
	 *
	 * @param {quat} out the receiving quaternion
	 * @returns {quat} out
	 */
	quat.identity = function(out) {
	    out[0] = 0;
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 1;
	    return out;
	};
	
	/**
	 * Sets a quat from the given angle and rotation axis,
	 * then returns it.
	 *
	 * @param {quat} out the receiving quaternion
	 * @param {vec3} axis the axis around which to rotate
	 * @param {Number} rad the angle in radians
	 * @returns {quat} out
	 **/
	quat.setAxisAngle = function(out, axis, rad) {
	    rad = rad * 0.5;
	    var s = Math.sin(rad);
	    out[0] = s * axis[0];
	    out[1] = s * axis[1];
	    out[2] = s * axis[2];
	    out[3] = Math.cos(rad);
	    return out;
	};
	
	/**
	 * Gets the rotation axis and angle for a given
	 *  quaternion. If a quaternion is created with
	 *  setAxisAngle, this method will return the same
	 *  values as providied in the original parameter list
	 *  OR functionally equivalent values.
	 * Example: The quaternion formed by axis [0, 0, 1] and
	 *  angle -90 is the same as the quaternion formed by
	 *  [0, 0, 1] and 270. This method favors the latter.
	 * @param  {vec3} out_axis  Vector receiving the axis of rotation
	 * @param  {quat} q     Quaternion to be decomposed
	 * @return {Number}     Angle, in radians, of the rotation
	 */
	quat.getAxisAngle = function(out_axis, q) {
	    var rad = Math.acos(q[3]) * 2.0;
	    var s = Math.sin(rad / 2.0);
	    if (s != 0.0) {
	        out_axis[0] = q[0] / s;
	        out_axis[1] = q[1] / s;
	        out_axis[2] = q[2] / s;
	    } else {
	        // If s is zero, return any axis (no rotation - axis does not matter)
	        out_axis[0] = 1;
	        out_axis[1] = 0;
	        out_axis[2] = 0;
	    }
	    return rad;
	};
	
	/**
	 * Adds two quat's
	 *
	 * @param {quat} out the receiving quaternion
	 * @param {quat} a the first operand
	 * @param {quat} b the second operand
	 * @returns {quat} out
	 * @function
	 */
	quat.add = vec4.add;
	
	/**
	 * Multiplies two quat's
	 *
	 * @param {quat} out the receiving quaternion
	 * @param {quat} a the first operand
	 * @param {quat} b the second operand
	 * @returns {quat} out
	 */
	quat.multiply = function(out, a, b) {
	    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
	        bx = b[0], by = b[1], bz = b[2], bw = b[3];
	
	    out[0] = ax * bw + aw * bx + ay * bz - az * by;
	    out[1] = ay * bw + aw * by + az * bx - ax * bz;
	    out[2] = az * bw + aw * bz + ax * by - ay * bx;
	    out[3] = aw * bw - ax * bx - ay * by - az * bz;
	    return out;
	};
	
	/**
	 * Alias for {@link quat.multiply}
	 * @function
	 */
	quat.mul = quat.multiply;
	
	/**
	 * Scales a quat by a scalar number
	 *
	 * @param {quat} out the receiving vector
	 * @param {quat} a the vector to scale
	 * @param {Number} b amount to scale the vector by
	 * @returns {quat} out
	 * @function
	 */
	quat.scale = vec4.scale;
	
	/**
	 * Rotates a quaternion by the given angle about the X axis
	 *
	 * @param {quat} out quat receiving operation result
	 * @param {quat} a quat to rotate
	 * @param {number} rad angle (in radians) to rotate
	 * @returns {quat} out
	 */
	quat.rotateX = function (out, a, rad) {
	    rad *= 0.5; 
	
	    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
	        bx = Math.sin(rad), bw = Math.cos(rad);
	
	    out[0] = ax * bw + aw * bx;
	    out[1] = ay * bw + az * bx;
	    out[2] = az * bw - ay * bx;
	    out[3] = aw * bw - ax * bx;
	    return out;
	};
	
	/**
	 * Rotates a quaternion by the given angle about the Y axis
	 *
	 * @param {quat} out quat receiving operation result
	 * @param {quat} a quat to rotate
	 * @param {number} rad angle (in radians) to rotate
	 * @returns {quat} out
	 */
	quat.rotateY = function (out, a, rad) {
	    rad *= 0.5; 
	
	    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
	        by = Math.sin(rad), bw = Math.cos(rad);
	
	    out[0] = ax * bw - az * by;
	    out[1] = ay * bw + aw * by;
	    out[2] = az * bw + ax * by;
	    out[3] = aw * bw - ay * by;
	    return out;
	};
	
	/**
	 * Rotates a quaternion by the given angle about the Z axis
	 *
	 * @param {quat} out quat receiving operation result
	 * @param {quat} a quat to rotate
	 * @param {number} rad angle (in radians) to rotate
	 * @returns {quat} out
	 */
	quat.rotateZ = function (out, a, rad) {
	    rad *= 0.5; 
	
	    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
	        bz = Math.sin(rad), bw = Math.cos(rad);
	
	    out[0] = ax * bw + ay * bz;
	    out[1] = ay * bw - ax * bz;
	    out[2] = az * bw + aw * bz;
	    out[3] = aw * bw - az * bz;
	    return out;
	};
	
	/**
	 * Calculates the W component of a quat from the X, Y, and Z components.
	 * Assumes that quaternion is 1 unit in length.
	 * Any existing W component will be ignored.
	 *
	 * @param {quat} out the receiving quaternion
	 * @param {quat} a quat to calculate W component of
	 * @returns {quat} out
	 */
	quat.calculateW = function (out, a) {
	    var x = a[0], y = a[1], z = a[2];
	
	    out[0] = x;
	    out[1] = y;
	    out[2] = z;
	    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));
	    return out;
	};
	
	/**
	 * Calculates the dot product of two quat's
	 *
	 * @param {quat} a the first operand
	 * @param {quat} b the second operand
	 * @returns {Number} dot product of a and b
	 * @function
	 */
	quat.dot = vec4.dot;
	
	/**
	 * Performs a linear interpolation between two quat's
	 *
	 * @param {quat} out the receiving quaternion
	 * @param {quat} a the first operand
	 * @param {quat} b the second operand
	 * @param {Number} t interpolation amount between the two inputs
	 * @returns {quat} out
	 * @function
	 */
	quat.lerp = vec4.lerp;
	
	/**
	 * Performs a spherical linear interpolation between two quat
	 *
	 * @param {quat} out the receiving quaternion
	 * @param {quat} a the first operand
	 * @param {quat} b the second operand
	 * @param {Number} t interpolation amount between the two inputs
	 * @returns {quat} out
	 */
	quat.slerp = function (out, a, b, t) {
	    // benchmarks:
	    //    http://jsperf.com/quaternion-slerp-implementations
	
	    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
	        bx = b[0], by = b[1], bz = b[2], bw = b[3];
	
	    var        omega, cosom, sinom, scale0, scale1;
	
	    // calc cosine
	    cosom = ax * bx + ay * by + az * bz + aw * bw;
	    // adjust signs (if necessary)
	    if ( cosom < 0.0 ) {
	        cosom = -cosom;
	        bx = - bx;
	        by = - by;
	        bz = - bz;
	        bw = - bw;
	    }
	    // calculate coefficients
	    if ( (1.0 - cosom) > 0.000001 ) {
	        // standard case (slerp)
	        omega  = Math.acos(cosom);
	        sinom  = Math.sin(omega);
	        scale0 = Math.sin((1.0 - t) * omega) / sinom;
	        scale1 = Math.sin(t * omega) / sinom;
	    } else {        
	        // "from" and "to" quaternions are very close 
	        //  ... so we can do a linear interpolation
	        scale0 = 1.0 - t;
	        scale1 = t;
	    }
	    // calculate final values
	    out[0] = scale0 * ax + scale1 * bx;
	    out[1] = scale0 * ay + scale1 * by;
	    out[2] = scale0 * az + scale1 * bz;
	    out[3] = scale0 * aw + scale1 * bw;
	    
	    return out;
	};
	
	/**
	 * Performs a spherical linear interpolation with two control points
	 *
	 * @param {quat} out the receiving quaternion
	 * @param {quat} a the first operand
	 * @param {quat} b the second operand
	 * @param {quat} c the third operand
	 * @param {quat} d the fourth operand
	 * @param {Number} t interpolation amount
	 * @returns {quat} out
	 */
	quat.sqlerp = (function () {
	  var temp1 = quat.create();
	  var temp2 = quat.create();
	  
	  return function (out, a, b, c, d, t) {
	    quat.slerp(temp1, a, d, t);
	    quat.slerp(temp2, b, c, t);
	    quat.slerp(out, temp1, temp2, 2 * t * (1 - t));
	    
	    return out;
	  };
	}());
	
	/**
	 * Calculates the inverse of a quat
	 *
	 * @param {quat} out the receiving quaternion
	 * @param {quat} a quat to calculate inverse of
	 * @returns {quat} out
	 */
	quat.invert = function(out, a) {
	    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],
	        dot = a0*a0 + a1*a1 + a2*a2 + a3*a3,
	        invDot = dot ? 1.0/dot : 0;
	    
	    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0
	
	    out[0] = -a0*invDot;
	    out[1] = -a1*invDot;
	    out[2] = -a2*invDot;
	    out[3] = a3*invDot;
	    return out;
	};
	
	/**
	 * Calculates the conjugate of a quat
	 * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.
	 *
	 * @param {quat} out the receiving quaternion
	 * @param {quat} a quat to calculate conjugate of
	 * @returns {quat} out
	 */
	quat.conjugate = function (out, a) {
	    out[0] = -a[0];
	    out[1] = -a[1];
	    out[2] = -a[2];
	    out[3] = a[3];
	    return out;
	};
	
	/**
	 * Calculates the length of a quat
	 *
	 * @param {quat} a vector to calculate length of
	 * @returns {Number} length of a
	 * @function
	 */
	quat.length = vec4.length;
	
	/**
	 * Alias for {@link quat.length}
	 * @function
	 */
	quat.len = quat.length;
	
	/**
	 * Calculates the squared length of a quat
	 *
	 * @param {quat} a vector to calculate squared length of
	 * @returns {Number} squared length of a
	 * @function
	 */
	quat.squaredLength = vec4.squaredLength;
	
	/**
	 * Alias for {@link quat.squaredLength}
	 * @function
	 */
	quat.sqrLen = quat.squaredLength;
	
	/**
	 * Normalize a quat
	 *
	 * @param {quat} out the receiving quaternion
	 * @param {quat} a quaternion to normalize
	 * @returns {quat} out
	 * @function
	 */
	quat.normalize = vec4.normalize;
	
	/**
	 * Creates a quaternion from the given 3x3 rotation matrix.
	 *
	 * NOTE: The resultant quaternion is not normalized, so you should be sure
	 * to renormalize the quaternion yourself where necessary.
	 *
	 * @param {quat} out the receiving quaternion
	 * @param {mat3} m rotation matrix
	 * @returns {quat} out
	 * @function
	 */
	quat.fromMat3 = function(out, m) {
	    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes
	    // article "Quaternion Calculus and Fast Animation".
	    var fTrace = m[0] + m[4] + m[8];
	    var fRoot;
	
	    if ( fTrace > 0.0 ) {
	        // |w| > 1/2, may as well choose w > 1/2
	        fRoot = Math.sqrt(fTrace + 1.0);  // 2w
	        out[3] = 0.5 * fRoot;
	        fRoot = 0.5/fRoot;  // 1/(4w)
	        out[0] = (m[5]-m[7])*fRoot;
	        out[1] = (m[6]-m[2])*fRoot;
	        out[2] = (m[1]-m[3])*fRoot;
	    } else {
	        // |w| <= 1/2
	        var i = 0;
	        if ( m[4] > m[0] )
	          i = 1;
	        if ( m[8] > m[i*3+i] )
	          i = 2;
	        var j = (i+1)%3;
	        var k = (i+2)%3;
	        
	        fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);
	        out[i] = 0.5 * fRoot;
	        fRoot = 0.5 / fRoot;
	        out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;
	        out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;
	        out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;
	    }
	    
	    return out;
	};
	
	/**
	 * Returns a string representation of a quatenion
	 *
	 * @param {quat} vec vector to represent as a string
	 * @returns {String} string representation of the vector
	 */
	quat.str = function (a) {
	    return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';
	};
	
	/**
	 * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)
	 *
	 * @param {quat} a The first quaternion.
	 * @param {quat} b The second quaternion.
	 * @returns {Boolean} True if the vectors are equal, false otherwise.
	 */
	quat.exactEquals = vec4.exactEquals;
	
	/**
	 * Returns whether or not the quaternions have approximately the same elements in the same position.
	 *
	 * @param {quat} a The first vector.
	 * @param {quat} b The second vector.
	 * @returns {Boolean} True if the vectors are equal, false otherwise.
	 */
	quat.equals = vec4.equals;
	
	module.exports = quat;


/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE. */
	
	var glMatrix = __webpack_require__(230);
	
	/**
	 * @class 3 Dimensional Vector
	 * @name vec3
	 */
	var vec3 = {};
	
	/**
	 * Creates a new, empty vec3
	 *
	 * @returns {vec3} a new 3D vector
	 */
	vec3.create = function() {
	    var out = new glMatrix.ARRAY_TYPE(3);
	    out[0] = 0;
	    out[1] = 0;
	    out[2] = 0;
	    return out;
	};
	
	/**
	 * Creates a new vec3 initialized with values from an existing vector
	 *
	 * @param {vec3} a vector to clone
	 * @returns {vec3} a new 3D vector
	 */
	vec3.clone = function(a) {
	    var out = new glMatrix.ARRAY_TYPE(3);
	    out[0] = a[0];
	    out[1] = a[1];
	    out[2] = a[2];
	    return out;
	};
	
	/**
	 * Creates a new vec3 initialized with the given values
	 *
	 * @param {Number} x X component
	 * @param {Number} y Y component
	 * @param {Number} z Z component
	 * @returns {vec3} a new 3D vector
	 */
	vec3.fromValues = function(x, y, z) {
	    var out = new glMatrix.ARRAY_TYPE(3);
	    out[0] = x;
	    out[1] = y;
	    out[2] = z;
	    return out;
	};
	
	/**
	 * Copy the values from one vec3 to another
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a the source vector
	 * @returns {vec3} out
	 */
	vec3.copy = function(out, a) {
	    out[0] = a[0];
	    out[1] = a[1];
	    out[2] = a[2];
	    return out;
	};
	
	/**
	 * Set the components of a vec3 to the given values
	 *
	 * @param {vec3} out the receiving vector
	 * @param {Number} x X component
	 * @param {Number} y Y component
	 * @param {Number} z Z component
	 * @returns {vec3} out
	 */
	vec3.set = function(out, x, y, z) {
	    out[0] = x;
	    out[1] = y;
	    out[2] = z;
	    return out;
	};
	
	/**
	 * Adds two vec3's
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a the first operand
	 * @param {vec3} b the second operand
	 * @returns {vec3} out
	 */
	vec3.add = function(out, a, b) {
	    out[0] = a[0] + b[0];
	    out[1] = a[1] + b[1];
	    out[2] = a[2] + b[2];
	    return out;
	};
	
	/**
	 * Subtracts vector b from vector a
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a the first operand
	 * @param {vec3} b the second operand
	 * @returns {vec3} out
	 */
	vec3.subtract = function(out, a, b) {
	    out[0] = a[0] - b[0];
	    out[1] = a[1] - b[1];
	    out[2] = a[2] - b[2];
	    return out;
	};
	
	/**
	 * Alias for {@link vec3.subtract}
	 * @function
	 */
	vec3.sub = vec3.subtract;
	
	/**
	 * Multiplies two vec3's
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a the first operand
	 * @param {vec3} b the second operand
	 * @returns {vec3} out
	 */
	vec3.multiply = function(out, a, b) {
	    out[0] = a[0] * b[0];
	    out[1] = a[1] * b[1];
	    out[2] = a[2] * b[2];
	    return out;
	};
	
	/**
	 * Alias for {@link vec3.multiply}
	 * @function
	 */
	vec3.mul = vec3.multiply;
	
	/**
	 * Divides two vec3's
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a the first operand
	 * @param {vec3} b the second operand
	 * @returns {vec3} out
	 */
	vec3.divide = function(out, a, b) {
	    out[0] = a[0] / b[0];
	    out[1] = a[1] / b[1];
	    out[2] = a[2] / b[2];
	    return out;
	};
	
	/**
	 * Alias for {@link vec3.divide}
	 * @function
	 */
	vec3.div = vec3.divide;
	
	/**
	 * Math.ceil the components of a vec3
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a vector to ceil
	 * @returns {vec3} out
	 */
	vec3.ceil = function (out, a) {
	    out[0] = Math.ceil(a[0]);
	    out[1] = Math.ceil(a[1]);
	    out[2] = Math.ceil(a[2]);
	    return out;
	};
	
	/**
	 * Math.floor the components of a vec3
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a vector to floor
	 * @returns {vec3} out
	 */
	vec3.floor = function (out, a) {
	    out[0] = Math.floor(a[0]);
	    out[1] = Math.floor(a[1]);
	    out[2] = Math.floor(a[2]);
	    return out;
	};
	
	/**
	 * Returns the minimum of two vec3's
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a the first operand
	 * @param {vec3} b the second operand
	 * @returns {vec3} out
	 */
	vec3.min = function(out, a, b) {
	    out[0] = Math.min(a[0], b[0]);
	    out[1] = Math.min(a[1], b[1]);
	    out[2] = Math.min(a[2], b[2]);
	    return out;
	};
	
	/**
	 * Returns the maximum of two vec3's
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a the first operand
	 * @param {vec3} b the second operand
	 * @returns {vec3} out
	 */
	vec3.max = function(out, a, b) {
	    out[0] = Math.max(a[0], b[0]);
	    out[1] = Math.max(a[1], b[1]);
	    out[2] = Math.max(a[2], b[2]);
	    return out;
	};
	
	/**
	 * Math.round the components of a vec3
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a vector to round
	 * @returns {vec3} out
	 */
	vec3.round = function (out, a) {
	    out[0] = Math.round(a[0]);
	    out[1] = Math.round(a[1]);
	    out[2] = Math.round(a[2]);
	    return out;
	};
	
	/**
	 * Scales a vec3 by a scalar number
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a the vector to scale
	 * @param {Number} b amount to scale the vector by
	 * @returns {vec3} out
	 */
	vec3.scale = function(out, a, b) {
	    out[0] = a[0] * b;
	    out[1] = a[1] * b;
	    out[2] = a[2] * b;
	    return out;
	};
	
	/**
	 * Adds two vec3's after scaling the second operand by a scalar value
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a the first operand
	 * @param {vec3} b the second operand
	 * @param {Number} scale the amount to scale b by before adding
	 * @returns {vec3} out
	 */
	vec3.scaleAndAdd = function(out, a, b, scale) {
	    out[0] = a[0] + (b[0] * scale);
	    out[1] = a[1] + (b[1] * scale);
	    out[2] = a[2] + (b[2] * scale);
	    return out;
	};
	
	/**
	 * Calculates the euclidian distance between two vec3's
	 *
	 * @param {vec3} a the first operand
	 * @param {vec3} b the second operand
	 * @returns {Number} distance between a and b
	 */
	vec3.distance = function(a, b) {
	    var x = b[0] - a[0],
	        y = b[1] - a[1],
	        z = b[2] - a[2];
	    return Math.sqrt(x*x + y*y + z*z);
	};
	
	/**
	 * Alias for {@link vec3.distance}
	 * @function
	 */
	vec3.dist = vec3.distance;
	
	/**
	 * Calculates the squared euclidian distance between two vec3's
	 *
	 * @param {vec3} a the first operand
	 * @param {vec3} b the second operand
	 * @returns {Number} squared distance between a and b
	 */
	vec3.squaredDistance = function(a, b) {
	    var x = b[0] - a[0],
	        y = b[1] - a[1],
	        z = b[2] - a[2];
	    return x*x + y*y + z*z;
	};
	
	/**
	 * Alias for {@link vec3.squaredDistance}
	 * @function
	 */
	vec3.sqrDist = vec3.squaredDistance;
	
	/**
	 * Calculates the length of a vec3
	 *
	 * @param {vec3} a vector to calculate length of
	 * @returns {Number} length of a
	 */
	vec3.length = function (a) {
	    var x = a[0],
	        y = a[1],
	        z = a[2];
	    return Math.sqrt(x*x + y*y + z*z);
	};
	
	/**
	 * Alias for {@link vec3.length}
	 * @function
	 */
	vec3.len = vec3.length;
	
	/**
	 * Calculates the squared length of a vec3
	 *
	 * @param {vec3} a vector to calculate squared length of
	 * @returns {Number} squared length of a
	 */
	vec3.squaredLength = function (a) {
	    var x = a[0],
	        y = a[1],
	        z = a[2];
	    return x*x + y*y + z*z;
	};
	
	/**
	 * Alias for {@link vec3.squaredLength}
	 * @function
	 */
	vec3.sqrLen = vec3.squaredLength;
	
	/**
	 * Negates the components of a vec3
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a vector to negate
	 * @returns {vec3} out
	 */
	vec3.negate = function(out, a) {
	    out[0] = -a[0];
	    out[1] = -a[1];
	    out[2] = -a[2];
	    return out;
	};
	
	/**
	 * Returns the inverse of the components of a vec3
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a vector to invert
	 * @returns {vec3} out
	 */
	vec3.inverse = function(out, a) {
	  out[0] = 1.0 / a[0];
	  out[1] = 1.0 / a[1];
	  out[2] = 1.0 / a[2];
	  return out;
	};
	
	/**
	 * Normalize a vec3
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a vector to normalize
	 * @returns {vec3} out
	 */
	vec3.normalize = function(out, a) {
	    var x = a[0],
	        y = a[1],
	        z = a[2];
	    var len = x*x + y*y + z*z;
	    if (len > 0) {
	        //TODO: evaluate use of glm_invsqrt here?
	        len = 1 / Math.sqrt(len);
	        out[0] = a[0] * len;
	        out[1] = a[1] * len;
	        out[2] = a[2] * len;
	    }
	    return out;
	};
	
	/**
	 * Calculates the dot product of two vec3's
	 *
	 * @param {vec3} a the first operand
	 * @param {vec3} b the second operand
	 * @returns {Number} dot product of a and b
	 */
	vec3.dot = function (a, b) {
	    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
	};
	
	/**
	 * Computes the cross product of two vec3's
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a the first operand
	 * @param {vec3} b the second operand
	 * @returns {vec3} out
	 */
	vec3.cross = function(out, a, b) {
	    var ax = a[0], ay = a[1], az = a[2],
	        bx = b[0], by = b[1], bz = b[2];
	
	    out[0] = ay * bz - az * by;
	    out[1] = az * bx - ax * bz;
	    out[2] = ax * by - ay * bx;
	    return out;
	};
	
	/**
	 * Performs a linear interpolation between two vec3's
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a the first operand
	 * @param {vec3} b the second operand
	 * @param {Number} t interpolation amount between the two inputs
	 * @returns {vec3} out
	 */
	vec3.lerp = function (out, a, b, t) {
	    var ax = a[0],
	        ay = a[1],
	        az = a[2];
	    out[0] = ax + t * (b[0] - ax);
	    out[1] = ay + t * (b[1] - ay);
	    out[2] = az + t * (b[2] - az);
	    return out;
	};
	
	/**
	 * Performs a hermite interpolation with two control points
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a the first operand
	 * @param {vec3} b the second operand
	 * @param {vec3} c the third operand
	 * @param {vec3} d the fourth operand
	 * @param {Number} t interpolation amount between the two inputs
	 * @returns {vec3} out
	 */
	vec3.hermite = function (out, a, b, c, d, t) {
	  var factorTimes2 = t * t,
	      factor1 = factorTimes2 * (2 * t - 3) + 1,
	      factor2 = factorTimes2 * (t - 2) + t,
	      factor3 = factorTimes2 * (t - 1),
	      factor4 = factorTimes2 * (3 - 2 * t);
	  
	  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;
	  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;
	  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;
	  
	  return out;
	};
	
	/**
	 * Performs a bezier interpolation with two control points
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a the first operand
	 * @param {vec3} b the second operand
	 * @param {vec3} c the third operand
	 * @param {vec3} d the fourth operand
	 * @param {Number} t interpolation amount between the two inputs
	 * @returns {vec3} out
	 */
	vec3.bezier = function (out, a, b, c, d, t) {
	  var inverseFactor = 1 - t,
	      inverseFactorTimesTwo = inverseFactor * inverseFactor,
	      factorTimes2 = t * t,
	      factor1 = inverseFactorTimesTwo * inverseFactor,
	      factor2 = 3 * t * inverseFactorTimesTwo,
	      factor3 = 3 * factorTimes2 * inverseFactor,
	      factor4 = factorTimes2 * t;
	  
	  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;
	  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;
	  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;
	  
	  return out;
	};
	
	/**
	 * Generates a random vector with the given scale
	 *
	 * @param {vec3} out the receiving vector
	 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
	 * @returns {vec3} out
	 */
	vec3.random = function (out, scale) {
	    scale = scale || 1.0;
	
	    var r = glMatrix.RANDOM() * 2.0 * Math.PI;
	    var z = (glMatrix.RANDOM() * 2.0) - 1.0;
	    var zScale = Math.sqrt(1.0-z*z) * scale;
	
	    out[0] = Math.cos(r) * zScale;
	    out[1] = Math.sin(r) * zScale;
	    out[2] = z * scale;
	    return out;
	};
	
	/**
	 * Transforms the vec3 with a mat4.
	 * 4th vector component is implicitly '1'
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a the vector to transform
	 * @param {mat4} m matrix to transform with
	 * @returns {vec3} out
	 */
	vec3.transformMat4 = function(out, a, m) {
	    var x = a[0], y = a[1], z = a[2],
	        w = m[3] * x + m[7] * y + m[11] * z + m[15];
	    w = w || 1.0;
	    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;
	    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;
	    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;
	    return out;
	};
	
	/**
	 * Transforms the vec3 with a mat3.
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a the vector to transform
	 * @param {mat4} m the 3x3 matrix to transform with
	 * @returns {vec3} out
	 */
	vec3.transformMat3 = function(out, a, m) {
	    var x = a[0], y = a[1], z = a[2];
	    out[0] = x * m[0] + y * m[3] + z * m[6];
	    out[1] = x * m[1] + y * m[4] + z * m[7];
	    out[2] = x * m[2] + y * m[5] + z * m[8];
	    return out;
	};
	
	/**
	 * Transforms the vec3 with a quat
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec3} a the vector to transform
	 * @param {quat} q quaternion to transform with
	 * @returns {vec3} out
	 */
	vec3.transformQuat = function(out, a, q) {
	    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations
	
	    var x = a[0], y = a[1], z = a[2],
	        qx = q[0], qy = q[1], qz = q[2], qw = q[3],
	
	        // calculate quat * vec
	        ix = qw * x + qy * z - qz * y,
	        iy = qw * y + qz * x - qx * z,
	        iz = qw * z + qx * y - qy * x,
	        iw = -qx * x - qy * y - qz * z;
	
	    // calculate result * inverse quat
	    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;
	    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;
	    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;
	    return out;
	};
	
	/**
	 * Rotate a 3D vector around the x-axis
	 * @param {vec3} out The receiving vec3
	 * @param {vec3} a The vec3 point to rotate
	 * @param {vec3} b The origin of the rotation
	 * @param {Number} c The angle of rotation
	 * @returns {vec3} out
	 */
	vec3.rotateX = function(out, a, b, c){
	   var p = [], r=[];
		  //Translate point to the origin
		  p[0] = a[0] - b[0];
		  p[1] = a[1] - b[1];
	  	p[2] = a[2] - b[2];
	
		  //perform rotation
		  r[0] = p[0];
		  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);
		  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);
	
		  //translate to correct position
		  out[0] = r[0] + b[0];
		  out[1] = r[1] + b[1];
		  out[2] = r[2] + b[2];
	
	  	return out;
	};
	
	/**
	 * Rotate a 3D vector around the y-axis
	 * @param {vec3} out The receiving vec3
	 * @param {vec3} a The vec3 point to rotate
	 * @param {vec3} b The origin of the rotation
	 * @param {Number} c The angle of rotation
	 * @returns {vec3} out
	 */
	vec3.rotateY = function(out, a, b, c){
	  	var p = [], r=[];
	  	//Translate point to the origin
	  	p[0] = a[0] - b[0];
	  	p[1] = a[1] - b[1];
	  	p[2] = a[2] - b[2];
	  
	  	//perform rotation
	  	r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);
	  	r[1] = p[1];
	  	r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);
	  
	  	//translate to correct position
	  	out[0] = r[0] + b[0];
	  	out[1] = r[1] + b[1];
	  	out[2] = r[2] + b[2];
	  
	  	return out;
	};
	
	/**
	 * Rotate a 3D vector around the z-axis
	 * @param {vec3} out The receiving vec3
	 * @param {vec3} a The vec3 point to rotate
	 * @param {vec3} b The origin of the rotation
	 * @param {Number} c The angle of rotation
	 * @returns {vec3} out
	 */
	vec3.rotateZ = function(out, a, b, c){
	  	var p = [], r=[];
	  	//Translate point to the origin
	  	p[0] = a[0] - b[0];
	  	p[1] = a[1] - b[1];
	  	p[2] = a[2] - b[2];
	  
	  	//perform rotation
	  	r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);
	  	r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);
	  	r[2] = p[2];
	  
	  	//translate to correct position
	  	out[0] = r[0] + b[0];
	  	out[1] = r[1] + b[1];
	  	out[2] = r[2] + b[2];
	  
	  	return out;
	};
	
	/**
	 * Perform some operation over an array of vec3s.
	 *
	 * @param {Array} a the array of vectors to iterate over
	 * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed
	 * @param {Number} offset Number of elements to skip at the beginning of the array
	 * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array
	 * @param {Function} fn Function to call for each vector in the array
	 * @param {Object} [arg] additional argument to pass to fn
	 * @returns {Array} a
	 * @function
	 */
	vec3.forEach = (function() {
	    var vec = vec3.create();
	
	    return function(a, stride, offset, count, fn, arg) {
	        var i, l;
	        if(!stride) {
	            stride = 3;
	        }
	
	        if(!offset) {
	            offset = 0;
	        }
	        
	        if(count) {
	            l = Math.min((count * stride) + offset, a.length);
	        } else {
	            l = a.length;
	        }
	
	        for(i = offset; i < l; i += stride) {
	            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];
	            fn(vec, vec, arg);
	            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];
	        }
	        
	        return a;
	    };
	})();
	
	/**
	 * Get the angle between two 3D vectors
	 * @param {vec3} a The first operand
	 * @param {vec3} b The second operand
	 * @returns {Number} The angle in radians
	 */
	vec3.angle = function(a, b) {
	   
	    var tempA = vec3.fromValues(a[0], a[1], a[2]);
	    var tempB = vec3.fromValues(b[0], b[1], b[2]);
	 
	    vec3.normalize(tempA, tempA);
	    vec3.normalize(tempB, tempB);
	 
	    var cosine = vec3.dot(tempA, tempB);
	
	    if(cosine > 1.0){
	        return 0;
	    } else {
	        return Math.acos(cosine);
	    }     
	};
	
	/**
	 * Returns a string representation of a vector
	 *
	 * @param {vec3} vec vector to represent as a string
	 * @returns {String} string representation of the vector
	 */
	vec3.str = function (a) {
	    return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';
	};
	
	/**
	 * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)
	 *
	 * @param {vec3} a The first vector.
	 * @param {vec3} b The second vector.
	 * @returns {Boolean} True if the vectors are equal, false otherwise.
	 */
	vec3.exactEquals = function (a, b) {
	    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];
	};
	
	/**
	 * Returns whether or not the vectors have approximately the same elements in the same position.
	 *
	 * @param {vec3} a The first vector.
	 * @param {vec3} b The second vector.
	 * @returns {Boolean} True if the vectors are equal, false otherwise.
	 */
	vec3.equals = function (a, b) {
	    var a0 = a[0], a1 = a[1], a2 = a[2];
	    var b0 = b[0], b1 = b[1], b2 = b[2];
	    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
	            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
	            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));
	};
	
	module.exports = vec3;


/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE. */
	
	var glMatrix = __webpack_require__(230);
	
	/**
	 * @class 4 Dimensional Vector
	 * @name vec4
	 */
	var vec4 = {};
	
	/**
	 * Creates a new, empty vec4
	 *
	 * @returns {vec4} a new 4D vector
	 */
	vec4.create = function() {
	    var out = new glMatrix.ARRAY_TYPE(4);
	    out[0] = 0;
	    out[1] = 0;
	    out[2] = 0;
	    out[3] = 0;
	    return out;
	};
	
	/**
	 * Creates a new vec4 initialized with values from an existing vector
	 *
	 * @param {vec4} a vector to clone
	 * @returns {vec4} a new 4D vector
	 */
	vec4.clone = function(a) {
	    var out = new glMatrix.ARRAY_TYPE(4);
	    out[0] = a[0];
	    out[1] = a[1];
	    out[2] = a[2];
	    out[3] = a[3];
	    return out;
	};
	
	/**
	 * Creates a new vec4 initialized with the given values
	 *
	 * @param {Number} x X component
	 * @param {Number} y Y component
	 * @param {Number} z Z component
	 * @param {Number} w W component
	 * @returns {vec4} a new 4D vector
	 */
	vec4.fromValues = function(x, y, z, w) {
	    var out = new glMatrix.ARRAY_TYPE(4);
	    out[0] = x;
	    out[1] = y;
	    out[2] = z;
	    out[3] = w;
	    return out;
	};
	
	/**
	 * Copy the values from one vec4 to another
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a the source vector
	 * @returns {vec4} out
	 */
	vec4.copy = function(out, a) {
	    out[0] = a[0];
	    out[1] = a[1];
	    out[2] = a[2];
	    out[3] = a[3];
	    return out;
	};
	
	/**
	 * Set the components of a vec4 to the given values
	 *
	 * @param {vec4} out the receiving vector
	 * @param {Number} x X component
	 * @param {Number} y Y component
	 * @param {Number} z Z component
	 * @param {Number} w W component
	 * @returns {vec4} out
	 */
	vec4.set = function(out, x, y, z, w) {
	    out[0] = x;
	    out[1] = y;
	    out[2] = z;
	    out[3] = w;
	    return out;
	};
	
	/**
	 * Adds two vec4's
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a the first operand
	 * @param {vec4} b the second operand
	 * @returns {vec4} out
	 */
	vec4.add = function(out, a, b) {
	    out[0] = a[0] + b[0];
	    out[1] = a[1] + b[1];
	    out[2] = a[2] + b[2];
	    out[3] = a[3] + b[3];
	    return out;
	};
	
	/**
	 * Subtracts vector b from vector a
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a the first operand
	 * @param {vec4} b the second operand
	 * @returns {vec4} out
	 */
	vec4.subtract = function(out, a, b) {
	    out[0] = a[0] - b[0];
	    out[1] = a[1] - b[1];
	    out[2] = a[2] - b[2];
	    out[3] = a[3] - b[3];
	    return out;
	};
	
	/**
	 * Alias for {@link vec4.subtract}
	 * @function
	 */
	vec4.sub = vec4.subtract;
	
	/**
	 * Multiplies two vec4's
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a the first operand
	 * @param {vec4} b the second operand
	 * @returns {vec4} out
	 */
	vec4.multiply = function(out, a, b) {
	    out[0] = a[0] * b[0];
	    out[1] = a[1] * b[1];
	    out[2] = a[2] * b[2];
	    out[3] = a[3] * b[3];
	    return out;
	};
	
	/**
	 * Alias for {@link vec4.multiply}
	 * @function
	 */
	vec4.mul = vec4.multiply;
	
	/**
	 * Divides two vec4's
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a the first operand
	 * @param {vec4} b the second operand
	 * @returns {vec4} out
	 */
	vec4.divide = function(out, a, b) {
	    out[0] = a[0] / b[0];
	    out[1] = a[1] / b[1];
	    out[2] = a[2] / b[2];
	    out[3] = a[3] / b[3];
	    return out;
	};
	
	/**
	 * Alias for {@link vec4.divide}
	 * @function
	 */
	vec4.div = vec4.divide;
	
	/**
	 * Math.ceil the components of a vec4
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a vector to ceil
	 * @returns {vec4} out
	 */
	vec4.ceil = function (out, a) {
	    out[0] = Math.ceil(a[0]);
	    out[1] = Math.ceil(a[1]);
	    out[2] = Math.ceil(a[2]);
	    out[3] = Math.ceil(a[3]);
	    return out;
	};
	
	/**
	 * Math.floor the components of a vec4
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a vector to floor
	 * @returns {vec4} out
	 */
	vec4.floor = function (out, a) {
	    out[0] = Math.floor(a[0]);
	    out[1] = Math.floor(a[1]);
	    out[2] = Math.floor(a[2]);
	    out[3] = Math.floor(a[3]);
	    return out;
	};
	
	/**
	 * Returns the minimum of two vec4's
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a the first operand
	 * @param {vec4} b the second operand
	 * @returns {vec4} out
	 */
	vec4.min = function(out, a, b) {
	    out[0] = Math.min(a[0], b[0]);
	    out[1] = Math.min(a[1], b[1]);
	    out[2] = Math.min(a[2], b[2]);
	    out[3] = Math.min(a[3], b[3]);
	    return out;
	};
	
	/**
	 * Returns the maximum of two vec4's
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a the first operand
	 * @param {vec4} b the second operand
	 * @returns {vec4} out
	 */
	vec4.max = function(out, a, b) {
	    out[0] = Math.max(a[0], b[0]);
	    out[1] = Math.max(a[1], b[1]);
	    out[2] = Math.max(a[2], b[2]);
	    out[3] = Math.max(a[3], b[3]);
	    return out;
	};
	
	/**
	 * Math.round the components of a vec4
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a vector to round
	 * @returns {vec4} out
	 */
	vec4.round = function (out, a) {
	    out[0] = Math.round(a[0]);
	    out[1] = Math.round(a[1]);
	    out[2] = Math.round(a[2]);
	    out[3] = Math.round(a[3]);
	    return out;
	};
	
	/**
	 * Scales a vec4 by a scalar number
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a the vector to scale
	 * @param {Number} b amount to scale the vector by
	 * @returns {vec4} out
	 */
	vec4.scale = function(out, a, b) {
	    out[0] = a[0] * b;
	    out[1] = a[1] * b;
	    out[2] = a[2] * b;
	    out[3] = a[3] * b;
	    return out;
	};
	
	/**
	 * Adds two vec4's after scaling the second operand by a scalar value
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a the first operand
	 * @param {vec4} b the second operand
	 * @param {Number} scale the amount to scale b by before adding
	 * @returns {vec4} out
	 */
	vec4.scaleAndAdd = function(out, a, b, scale) {
	    out[0] = a[0] + (b[0] * scale);
	    out[1] = a[1] + (b[1] * scale);
	    out[2] = a[2] + (b[2] * scale);
	    out[3] = a[3] + (b[3] * scale);
	    return out;
	};
	
	/**
	 * Calculates the euclidian distance between two vec4's
	 *
	 * @param {vec4} a the first operand
	 * @param {vec4} b the second operand
	 * @returns {Number} distance between a and b
	 */
	vec4.distance = function(a, b) {
	    var x = b[0] - a[0],
	        y = b[1] - a[1],
	        z = b[2] - a[2],
	        w = b[3] - a[3];
	    return Math.sqrt(x*x + y*y + z*z + w*w);
	};
	
	/**
	 * Alias for {@link vec4.distance}
	 * @function
	 */
	vec4.dist = vec4.distance;
	
	/**
	 * Calculates the squared euclidian distance between two vec4's
	 *
	 * @param {vec4} a the first operand
	 * @param {vec4} b the second operand
	 * @returns {Number} squared distance between a and b
	 */
	vec4.squaredDistance = function(a, b) {
	    var x = b[0] - a[0],
	        y = b[1] - a[1],
	        z = b[2] - a[2],
	        w = b[3] - a[3];
	    return x*x + y*y + z*z + w*w;
	};
	
	/**
	 * Alias for {@link vec4.squaredDistance}
	 * @function
	 */
	vec4.sqrDist = vec4.squaredDistance;
	
	/**
	 * Calculates the length of a vec4
	 *
	 * @param {vec4} a vector to calculate length of
	 * @returns {Number} length of a
	 */
	vec4.length = function (a) {
	    var x = a[0],
	        y = a[1],
	        z = a[2],
	        w = a[3];
	    return Math.sqrt(x*x + y*y + z*z + w*w);
	};
	
	/**
	 * Alias for {@link vec4.length}
	 * @function
	 */
	vec4.len = vec4.length;
	
	/**
	 * Calculates the squared length of a vec4
	 *
	 * @param {vec4} a vector to calculate squared length of
	 * @returns {Number} squared length of a
	 */
	vec4.squaredLength = function (a) {
	    var x = a[0],
	        y = a[1],
	        z = a[2],
	        w = a[3];
	    return x*x + y*y + z*z + w*w;
	};
	
	/**
	 * Alias for {@link vec4.squaredLength}
	 * @function
	 */
	vec4.sqrLen = vec4.squaredLength;
	
	/**
	 * Negates the components of a vec4
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a vector to negate
	 * @returns {vec4} out
	 */
	vec4.negate = function(out, a) {
	    out[0] = -a[0];
	    out[1] = -a[1];
	    out[2] = -a[2];
	    out[3] = -a[3];
	    return out;
	};
	
	/**
	 * Returns the inverse of the components of a vec4
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a vector to invert
	 * @returns {vec4} out
	 */
	vec4.inverse = function(out, a) {
	  out[0] = 1.0 / a[0];
	  out[1] = 1.0 / a[1];
	  out[2] = 1.0 / a[2];
	  out[3] = 1.0 / a[3];
	  return out;
	};
	
	/**
	 * Normalize a vec4
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a vector to normalize
	 * @returns {vec4} out
	 */
	vec4.normalize = function(out, a) {
	    var x = a[0],
	        y = a[1],
	        z = a[2],
	        w = a[3];
	    var len = x*x + y*y + z*z + w*w;
	    if (len > 0) {
	        len = 1 / Math.sqrt(len);
	        out[0] = x * len;
	        out[1] = y * len;
	        out[2] = z * len;
	        out[3] = w * len;
	    }
	    return out;
	};
	
	/**
	 * Calculates the dot product of two vec4's
	 *
	 * @param {vec4} a the first operand
	 * @param {vec4} b the second operand
	 * @returns {Number} dot product of a and b
	 */
	vec4.dot = function (a, b) {
	    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
	};
	
	/**
	 * Performs a linear interpolation between two vec4's
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a the first operand
	 * @param {vec4} b the second operand
	 * @param {Number} t interpolation amount between the two inputs
	 * @returns {vec4} out
	 */
	vec4.lerp = function (out, a, b, t) {
	    var ax = a[0],
	        ay = a[1],
	        az = a[2],
	        aw = a[3];
	    out[0] = ax + t * (b[0] - ax);
	    out[1] = ay + t * (b[1] - ay);
	    out[2] = az + t * (b[2] - az);
	    out[3] = aw + t * (b[3] - aw);
	    return out;
	};
	
	/**
	 * Generates a random vector with the given scale
	 *
	 * @param {vec4} out the receiving vector
	 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
	 * @returns {vec4} out
	 */
	vec4.random = function (out, scale) {
	    scale = scale || 1.0;
	
	    //TODO: This is a pretty awful way of doing this. Find something better.
	    out[0] = glMatrix.RANDOM();
	    out[1] = glMatrix.RANDOM();
	    out[2] = glMatrix.RANDOM();
	    out[3] = glMatrix.RANDOM();
	    vec4.normalize(out, out);
	    vec4.scale(out, out, scale);
	    return out;
	};
	
	/**
	 * Transforms the vec4 with a mat4.
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a the vector to transform
	 * @param {mat4} m matrix to transform with
	 * @returns {vec4} out
	 */
	vec4.transformMat4 = function(out, a, m) {
	    var x = a[0], y = a[1], z = a[2], w = a[3];
	    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;
	    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;
	    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;
	    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;
	    return out;
	};
	
	/**
	 * Transforms the vec4 with a quat
	 *
	 * @param {vec4} out the receiving vector
	 * @param {vec4} a the vector to transform
	 * @param {quat} q quaternion to transform with
	 * @returns {vec4} out
	 */
	vec4.transformQuat = function(out, a, q) {
	    var x = a[0], y = a[1], z = a[2],
	        qx = q[0], qy = q[1], qz = q[2], qw = q[3],
	
	        // calculate quat * vec
	        ix = qw * x + qy * z - qz * y,
	        iy = qw * y + qz * x - qx * z,
	        iz = qw * z + qx * y - qy * x,
	        iw = -qx * x - qy * y - qz * z;
	
	    // calculate result * inverse quat
	    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;
	    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;
	    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;
	    out[3] = a[3];
	    return out;
	};
	
	/**
	 * Perform some operation over an array of vec4s.
	 *
	 * @param {Array} a the array of vectors to iterate over
	 * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed
	 * @param {Number} offset Number of elements to skip at the beginning of the array
	 * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array
	 * @param {Function} fn Function to call for each vector in the array
	 * @param {Object} [arg] additional argument to pass to fn
	 * @returns {Array} a
	 * @function
	 */
	vec4.forEach = (function() {
	    var vec = vec4.create();
	
	    return function(a, stride, offset, count, fn, arg) {
	        var i, l;
	        if(!stride) {
	            stride = 4;
	        }
	
	        if(!offset) {
	            offset = 0;
	        }
	        
	        if(count) {
	            l = Math.min((count * stride) + offset, a.length);
	        } else {
	            l = a.length;
	        }
	
	        for(i = offset; i < l; i += stride) {
	            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];
	            fn(vec, vec, arg);
	            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];
	        }
	        
	        return a;
	    };
	})();
	
	/**
	 * Returns a string representation of a vector
	 *
	 * @param {vec4} vec vector to represent as a string
	 * @returns {String} string representation of the vector
	 */
	vec4.str = function (a) {
	    return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';
	};
	
	/**
	 * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)
	 *
	 * @param {vec4} a The first vector.
	 * @param {vec4} b The second vector.
	 * @returns {Boolean} True if the vectors are equal, false otherwise.
	 */
	vec4.exactEquals = function (a, b) {
	    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];
	};
	
	/**
	 * Returns whether or not the vectors have approximately the same elements in the same position.
	 *
	 * @param {vec4} a The first vector.
	 * @param {vec4} b The second vector.
	 * @returns {Boolean} True if the vectors are equal, false otherwise.
	 */
	vec4.equals = function (a, b) {
	    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];
	    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
	    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
	            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
	            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
	            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));
	};
	
	module.exports = vec4;


/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE. */
	
	var glMatrix = __webpack_require__(230);
	
	/**
	 * @class 2 Dimensional Vector
	 * @name vec2
	 */
	var vec2 = {};
	
	/**
	 * Creates a new, empty vec2
	 *
	 * @returns {vec2} a new 2D vector
	 */
	vec2.create = function() {
	    var out = new glMatrix.ARRAY_TYPE(2);
	    out[0] = 0;
	    out[1] = 0;
	    return out;
	};
	
	/**
	 * Creates a new vec2 initialized with values from an existing vector
	 *
	 * @param {vec2} a vector to clone
	 * @returns {vec2} a new 2D vector
	 */
	vec2.clone = function(a) {
	    var out = new glMatrix.ARRAY_TYPE(2);
	    out[0] = a[0];
	    out[1] = a[1];
	    return out;
	};
	
	/**
	 * Creates a new vec2 initialized with the given values
	 *
	 * @param {Number} x X component
	 * @param {Number} y Y component
	 * @returns {vec2} a new 2D vector
	 */
	vec2.fromValues = function(x, y) {
	    var out = new glMatrix.ARRAY_TYPE(2);
	    out[0] = x;
	    out[1] = y;
	    return out;
	};
	
	/**
	 * Copy the values from one vec2 to another
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a the source vector
	 * @returns {vec2} out
	 */
	vec2.copy = function(out, a) {
	    out[0] = a[0];
	    out[1] = a[1];
	    return out;
	};
	
	/**
	 * Set the components of a vec2 to the given values
	 *
	 * @param {vec2} out the receiving vector
	 * @param {Number} x X component
	 * @param {Number} y Y component
	 * @returns {vec2} out
	 */
	vec2.set = function(out, x, y) {
	    out[0] = x;
	    out[1] = y;
	    return out;
	};
	
	/**
	 * Adds two vec2's
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a the first operand
	 * @param {vec2} b the second operand
	 * @returns {vec2} out
	 */
	vec2.add = function(out, a, b) {
	    out[0] = a[0] + b[0];
	    out[1] = a[1] + b[1];
	    return out;
	};
	
	/**
	 * Subtracts vector b from vector a
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a the first operand
	 * @param {vec2} b the second operand
	 * @returns {vec2} out
	 */
	vec2.subtract = function(out, a, b) {
	    out[0] = a[0] - b[0];
	    out[1] = a[1] - b[1];
	    return out;
	};
	
	/**
	 * Alias for {@link vec2.subtract}
	 * @function
	 */
	vec2.sub = vec2.subtract;
	
	/**
	 * Multiplies two vec2's
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a the first operand
	 * @param {vec2} b the second operand
	 * @returns {vec2} out
	 */
	vec2.multiply = function(out, a, b) {
	    out[0] = a[0] * b[0];
	    out[1] = a[1] * b[1];
	    return out;
	};
	
	/**
	 * Alias for {@link vec2.multiply}
	 * @function
	 */
	vec2.mul = vec2.multiply;
	
	/**
	 * Divides two vec2's
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a the first operand
	 * @param {vec2} b the second operand
	 * @returns {vec2} out
	 */
	vec2.divide = function(out, a, b) {
	    out[0] = a[0] / b[0];
	    out[1] = a[1] / b[1];
	    return out;
	};
	
	/**
	 * Alias for {@link vec2.divide}
	 * @function
	 */
	vec2.div = vec2.divide;
	
	/**
	 * Math.ceil the components of a vec2
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a vector to ceil
	 * @returns {vec2} out
	 */
	vec2.ceil = function (out, a) {
	    out[0] = Math.ceil(a[0]);
	    out[1] = Math.ceil(a[1]);
	    return out;
	};
	
	/**
	 * Math.floor the components of a vec2
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a vector to floor
	 * @returns {vec2} out
	 */
	vec2.floor = function (out, a) {
	    out[0] = Math.floor(a[0]);
	    out[1] = Math.floor(a[1]);
	    return out;
	};
	
	/**
	 * Returns the minimum of two vec2's
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a the first operand
	 * @param {vec2} b the second operand
	 * @returns {vec2} out
	 */
	vec2.min = function(out, a, b) {
	    out[0] = Math.min(a[0], b[0]);
	    out[1] = Math.min(a[1], b[1]);
	    return out;
	};
	
	/**
	 * Returns the maximum of two vec2's
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a the first operand
	 * @param {vec2} b the second operand
	 * @returns {vec2} out
	 */
	vec2.max = function(out, a, b) {
	    out[0] = Math.max(a[0], b[0]);
	    out[1] = Math.max(a[1], b[1]);
	    return out;
	};
	
	/**
	 * Math.round the components of a vec2
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a vector to round
	 * @returns {vec2} out
	 */
	vec2.round = function (out, a) {
	    out[0] = Math.round(a[0]);
	    out[1] = Math.round(a[1]);
	    return out;
	};
	
	/**
	 * Scales a vec2 by a scalar number
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a the vector to scale
	 * @param {Number} b amount to scale the vector by
	 * @returns {vec2} out
	 */
	vec2.scale = function(out, a, b) {
	    out[0] = a[0] * b;
	    out[1] = a[1] * b;
	    return out;
	};
	
	/**
	 * Adds two vec2's after scaling the second operand by a scalar value
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a the first operand
	 * @param {vec2} b the second operand
	 * @param {Number} scale the amount to scale b by before adding
	 * @returns {vec2} out
	 */
	vec2.scaleAndAdd = function(out, a, b, scale) {
	    out[0] = a[0] + (b[0] * scale);
	    out[1] = a[1] + (b[1] * scale);
	    return out;
	};
	
	/**
	 * Calculates the euclidian distance between two vec2's
	 *
	 * @param {vec2} a the first operand
	 * @param {vec2} b the second operand
	 * @returns {Number} distance between a and b
	 */
	vec2.distance = function(a, b) {
	    var x = b[0] - a[0],
	        y = b[1] - a[1];
	    return Math.sqrt(x*x + y*y);
	};
	
	/**
	 * Alias for {@link vec2.distance}
	 * @function
	 */
	vec2.dist = vec2.distance;
	
	/**
	 * Calculates the squared euclidian distance between two vec2's
	 *
	 * @param {vec2} a the first operand
	 * @param {vec2} b the second operand
	 * @returns {Number} squared distance between a and b
	 */
	vec2.squaredDistance = function(a, b) {
	    var x = b[0] - a[0],
	        y = b[1] - a[1];
	    return x*x + y*y;
	};
	
	/**
	 * Alias for {@link vec2.squaredDistance}
	 * @function
	 */
	vec2.sqrDist = vec2.squaredDistance;
	
	/**
	 * Calculates the length of a vec2
	 *
	 * @param {vec2} a vector to calculate length of
	 * @returns {Number} length of a
	 */
	vec2.length = function (a) {
	    var x = a[0],
	        y = a[1];
	    return Math.sqrt(x*x + y*y);
	};
	
	/**
	 * Alias for {@link vec2.length}
	 * @function
	 */
	vec2.len = vec2.length;
	
	/**
	 * Calculates the squared length of a vec2
	 *
	 * @param {vec2} a vector to calculate squared length of
	 * @returns {Number} squared length of a
	 */
	vec2.squaredLength = function (a) {
	    var x = a[0],
	        y = a[1];
	    return x*x + y*y;
	};
	
	/**
	 * Alias for {@link vec2.squaredLength}
	 * @function
	 */
	vec2.sqrLen = vec2.squaredLength;
	
	/**
	 * Negates the components of a vec2
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a vector to negate
	 * @returns {vec2} out
	 */
	vec2.negate = function(out, a) {
	    out[0] = -a[0];
	    out[1] = -a[1];
	    return out;
	};
	
	/**
	 * Returns the inverse of the components of a vec2
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a vector to invert
	 * @returns {vec2} out
	 */
	vec2.inverse = function(out, a) {
	  out[0] = 1.0 / a[0];
	  out[1] = 1.0 / a[1];
	  return out;
	};
	
	/**
	 * Normalize a vec2
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a vector to normalize
	 * @returns {vec2} out
	 */
	vec2.normalize = function(out, a) {
	    var x = a[0],
	        y = a[1];
	    var len = x*x + y*y;
	    if (len > 0) {
	        //TODO: evaluate use of glm_invsqrt here?
	        len = 1 / Math.sqrt(len);
	        out[0] = a[0] * len;
	        out[1] = a[1] * len;
	    }
	    return out;
	};
	
	/**
	 * Calculates the dot product of two vec2's
	 *
	 * @param {vec2} a the first operand
	 * @param {vec2} b the second operand
	 * @returns {Number} dot product of a and b
	 */
	vec2.dot = function (a, b) {
	    return a[0] * b[0] + a[1] * b[1];
	};
	
	/**
	 * Computes the cross product of two vec2's
	 * Note that the cross product must by definition produce a 3D vector
	 *
	 * @param {vec3} out the receiving vector
	 * @param {vec2} a the first operand
	 * @param {vec2} b the second operand
	 * @returns {vec3} out
	 */
	vec2.cross = function(out, a, b) {
	    var z = a[0] * b[1] - a[1] * b[0];
	    out[0] = out[1] = 0;
	    out[2] = z;
	    return out;
	};
	
	/**
	 * Performs a linear interpolation between two vec2's
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a the first operand
	 * @param {vec2} b the second operand
	 * @param {Number} t interpolation amount between the two inputs
	 * @returns {vec2} out
	 */
	vec2.lerp = function (out, a, b, t) {
	    var ax = a[0],
	        ay = a[1];
	    out[0] = ax + t * (b[0] - ax);
	    out[1] = ay + t * (b[1] - ay);
	    return out;
	};
	
	/**
	 * Generates a random vector with the given scale
	 *
	 * @param {vec2} out the receiving vector
	 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
	 * @returns {vec2} out
	 */
	vec2.random = function (out, scale) {
	    scale = scale || 1.0;
	    var r = glMatrix.RANDOM() * 2.0 * Math.PI;
	    out[0] = Math.cos(r) * scale;
	    out[1] = Math.sin(r) * scale;
	    return out;
	};
	
	/**
	 * Transforms the vec2 with a mat2
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a the vector to transform
	 * @param {mat2} m matrix to transform with
	 * @returns {vec2} out
	 */
	vec2.transformMat2 = function(out, a, m) {
	    var x = a[0],
	        y = a[1];
	    out[0] = m[0] * x + m[2] * y;
	    out[1] = m[1] * x + m[3] * y;
	    return out;
	};
	
	/**
	 * Transforms the vec2 with a mat2d
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a the vector to transform
	 * @param {mat2d} m matrix to transform with
	 * @returns {vec2} out
	 */
	vec2.transformMat2d = function(out, a, m) {
	    var x = a[0],
	        y = a[1];
	    out[0] = m[0] * x + m[2] * y + m[4];
	    out[1] = m[1] * x + m[3] * y + m[5];
	    return out;
	};
	
	/**
	 * Transforms the vec2 with a mat3
	 * 3rd vector component is implicitly '1'
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a the vector to transform
	 * @param {mat3} m matrix to transform with
	 * @returns {vec2} out
	 */
	vec2.transformMat3 = function(out, a, m) {
	    var x = a[0],
	        y = a[1];
	    out[0] = m[0] * x + m[3] * y + m[6];
	    out[1] = m[1] * x + m[4] * y + m[7];
	    return out;
	};
	
	/**
	 * Transforms the vec2 with a mat4
	 * 3rd vector component is implicitly '0'
	 * 4th vector component is implicitly '1'
	 *
	 * @param {vec2} out the receiving vector
	 * @param {vec2} a the vector to transform
	 * @param {mat4} m matrix to transform with
	 * @returns {vec2} out
	 */
	vec2.transformMat4 = function(out, a, m) {
	    var x = a[0], 
	        y = a[1];
	    out[0] = m[0] * x + m[4] * y + m[12];
	    out[1] = m[1] * x + m[5] * y + m[13];
	    return out;
	};
	
	/**
	 * Perform some operation over an array of vec2s.
	 *
	 * @param {Array} a the array of vectors to iterate over
	 * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed
	 * @param {Number} offset Number of elements to skip at the beginning of the array
	 * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array
	 * @param {Function} fn Function to call for each vector in the array
	 * @param {Object} [arg] additional argument to pass to fn
	 * @returns {Array} a
	 * @function
	 */
	vec2.forEach = (function() {
	    var vec = vec2.create();
	
	    return function(a, stride, offset, count, fn, arg) {
	        var i, l;
	        if(!stride) {
	            stride = 2;
	        }
	
	        if(!offset) {
	            offset = 0;
	        }
	        
	        if(count) {
	            l = Math.min((count * stride) + offset, a.length);
	        } else {
	            l = a.length;
	        }
	
	        for(i = offset; i < l; i += stride) {
	            vec[0] = a[i]; vec[1] = a[i+1];
	            fn(vec, vec, arg);
	            a[i] = vec[0]; a[i+1] = vec[1];
	        }
	        
	        return a;
	    };
	})();
	
	/**
	 * Returns a string representation of a vector
	 *
	 * @param {vec2} vec vector to represent as a string
	 * @returns {String} string representation of the vector
	 */
	vec2.str = function (a) {
	    return 'vec2(' + a[0] + ', ' + a[1] + ')';
	};
	
	/**
	 * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)
	 *
	 * @param {vec2} a The first vector.
	 * @param {vec2} b The second vector.
	 * @returns {Boolean} True if the vectors are equal, false otherwise.
	 */
	vec2.exactEquals = function (a, b) {
	    return a[0] === b[0] && a[1] === b[1];
	};
	
	/**
	 * Returns whether or not the vectors have approximately the same elements in the same position.
	 *
	 * @param {vec2} a The first vector.
	 * @param {vec2} b The second vector.
	 * @returns {Boolean} True if the vectors are equal, false otherwise.
	 */
	vec2.equals = function (a, b) {
	    var a0 = a[0], a1 = a[1];
	    var b0 = b[0], b1 = b[1];
	    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
	            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));
	};
	
	module.exports = vec2;


/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _desc, _value, _class;
	
	var _mathArray = __webpack_require__(240);
	
	var _mathArray2 = _interopRequireDefault(_mathArray);
	
	var _common = __webpack_require__(228);
	
	var _glMatrix = __webpack_require__(229);
	
	var _decorators = __webpack_require__(241);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
	  var desc = {};
	  Object['ke' + 'ys'](descriptor).forEach(function (key) {
	    desc[key] = descriptor[key];
	  });
	  desc.enumerable = !!desc.enumerable;
	  desc.configurable = !!desc.configurable;
	
	  if ('value' in desc || desc.initializer) {
	    desc.writable = true;
	  }
	
	  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
	    return decorator(target, property, desc) || desc;
	  }, desc);
	
	  if (context && desc.initializer !== void 0) {
	    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
	    desc.initializer = undefined;
	  }
	
	  if (desc.initializer === void 0) {
	    Object['define' + 'Property'](target, property, desc);
	    desc = null;
	  }
	
	  return desc;
	}
	
	var Vector2 = (_class = function (_MathArray) {
	  _inherits(Vector2, _MathArray);
	
	  // Creates a new, empty vec2
	  function Vector2() {
	    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	
	    _classCallCheck(this, Vector2);
	
	    var _this = _possibleConstructorReturn(this, (Vector2.__proto__ || Object.getPrototypeOf(Vector2)).call(this));
	
	    if (Array.isArray(x) && arguments.length === 1) {
	      _this.copy(x);
	    } else {
	      _this.set(x, y);
	    }
	    return _this;
	  }
	
	  _createClass(Vector2, [{
	    key: 'set',
	    value: function set(x, y) {
	      _glMatrix.vec2.set(this, x, y);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'equals',
	    value: function equals(vector) {
	      return _glMatrix.vec2.equals(this, vector);
	    }
	  }, {
	    key: 'exactEquals',
	    value: function exactEquals(vector) {
	      return _glMatrix.vec2.exactEquals(this, vector);
	    }
	
	    // Getters/setters
	    /* eslint-disable no-multi-spaces, brace-style, no-return-assign */
	
	  }, {
	    key: 'add',
	    value: function add() {
	      for (var _len = arguments.length, vectors = Array(_len), _key = 0; _key < _len; _key++) {
	        vectors[_key] = arguments[_key];
	      }
	
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = vectors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var vector = _step.value;
	
	          _glMatrix.vec2.add(this, vector);
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	
	      return this;
	    }
	  }, {
	    key: 'ELEMENTS',
	    get: function get() {
	      return 2;
	    }
	  }, {
	    key: 'x',
	    get: function get() {
	      return this[0];
	    },
	    set: function set(value) {
	      return this[0] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'y',
	    get: function get() {
	      return this[1];
	    },
	    set: function set(value) {
	      return this[1] = (0, _common.checkNumber)(value);
	    }
	    /* eslint-disable no-multi-spaces, brace-style, no-return-assign */
	
	  }]);
	
	  return Vector2;
	}(_mathArray2.default), (_applyDecoratedDescriptor(_class.prototype, 'equals', [_decorators.staticMethod], Object.getOwnPropertyDescriptor(_class.prototype, 'equals'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'exactEquals', [_decorators.staticMethod], Object.getOwnPropertyDescriptor(_class.prototype, 'exactEquals'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'add', [_decorators.staticMethod], Object.getOwnPropertyDescriptor(_class.prototype, 'add'), _class.prototype)), _class);
	exports.default = Vector2;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYXRoL3ZlY3RvcjIuanMiXSwibmFtZXMiOlsiVmVjdG9yMiIsIngiLCJ5IiwiQXJyYXkiLCJpc0FycmF5IiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiY29weSIsInNldCIsImNoZWNrIiwidmVjdG9yIiwiZXF1YWxzIiwiZXhhY3RFcXVhbHMiLCJ2ZWN0b3JzIiwiYWRkIiwidmFsdWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRXFCQSxPOzs7QUFDbkI7QUFDQSxxQkFBMEI7QUFBQSxRQUFkQyxDQUFjLHVFQUFWLENBQVU7QUFBQSxRQUFQQyxDQUFPLHVFQUFILENBQUc7O0FBQUE7O0FBQUE7O0FBRXhCLFFBQUlDLE1BQU1DLE9BQU4sQ0FBY0gsQ0FBZCxLQUFvQkksVUFBVUMsTUFBVixLQUFxQixDQUE3QyxFQUFnRDtBQUM5QyxZQUFLQyxJQUFMLENBQVVOLENBQVY7QUFDRCxLQUZELE1BRU87QUFDTCxZQUFLTyxHQUFMLENBQVNQLENBQVQsRUFBWUMsQ0FBWjtBQUNEO0FBTnVCO0FBT3pCOzs7O3dCQUVHRCxDLEVBQUdDLEMsRUFBRztBQUNSLHFCQUFLTSxHQUFMLENBQVMsSUFBVCxFQUFlUCxDQUFmLEVBQWtCQyxDQUFsQjtBQUNBLFdBQUtPLEtBQUw7QUFDQSxhQUFPLElBQVA7QUFDRDs7OzJCQUdNQyxNLEVBQVE7QUFDYixhQUFPLGVBQUtDLE1BQUwsQ0FBWSxJQUFaLEVBQWtCRCxNQUFsQixDQUFQO0FBQ0Q7OztnQ0FHV0EsTSxFQUFRO0FBQ2xCLGFBQU8sZUFBS0UsV0FBTCxDQUFpQixJQUFqQixFQUF1QkYsTUFBdkIsQ0FBUDtBQUNEOztBQUVEO0FBQ0E7Ozs7MEJBU2dCO0FBQUEsd0NBQVRHLE9BQVM7QUFBVEEsZUFBUztBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUNkLDZCQUFxQkEsT0FBckIsOEhBQThCO0FBQUEsY0FBbkJILE1BQW1COztBQUM1Qix5QkFBS0ksR0FBTCxDQUFTLElBQVQsRUFBZUosTUFBZjtBQUNEO0FBSGE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFJZCxhQUFPLElBQVA7QUFDRDs7O3dCQWJjO0FBQUUsYUFBTyxDQUFQO0FBQVc7Ozt3QkFDZjtBQUFFLGFBQU8sS0FBSyxDQUFMLENBQVA7QUFBaUIsSztzQkFDMUJLLEssRUFBTztBQUFFLGFBQU8sS0FBSyxDQUFMLElBQVUseUJBQVlBLEtBQVosQ0FBakI7QUFBc0M7Ozt3QkFDeEM7QUFBRSxhQUFPLEtBQUssQ0FBTCxDQUFQO0FBQWlCLEs7c0JBQzFCQSxLLEVBQU87QUFBRSxhQUFPLEtBQUssQ0FBTCxJQUFVLHlCQUFZQSxLQUFaLENBQWpCO0FBQXNDO0FBQ3JEOzs7Ozs7a0JBbENtQmYsTyIsImZpbGUiOiJ2ZWN0b3IyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1hdGhBcnJheSBmcm9tICcuL21hdGgtYXJyYXknO1xuaW1wb3J0IHtjaGVja051bWJlcn0gZnJvbSAnLi9jb21tb24nO1xuaW1wb3J0IHt2ZWMyfSBmcm9tICdnbC1tYXRyaXgnO1xuaW1wb3J0IHtzdGF0aWNNZXRob2R9IGZyb20gJy4vdXRpbHMvZGVjb3JhdG9ycyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZlY3RvcjIgZXh0ZW5kcyBNYXRoQXJyYXkge1xuICAvLyBDcmVhdGVzIGEgbmV3LCBlbXB0eSB2ZWMyXG4gIGNvbnN0cnVjdG9yKHggPSAwLCB5ID0gMCkge1xuICAgIHN1cGVyKCk7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoeCkgJiYgYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgdGhpcy5jb3B5KHgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNldCh4LCB5KTtcbiAgICB9XG4gIH1cblxuICBzZXQoeCwgeSkge1xuICAgIHZlYzIuc2V0KHRoaXMsIHgsIHkpO1xuICAgIHRoaXMuY2hlY2soKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIEBzdGF0aWNNZXRob2RcbiAgZXF1YWxzKHZlY3Rvcikge1xuICAgIHJldHVybiB2ZWMyLmVxdWFscyh0aGlzLCB2ZWN0b3IpO1xuICB9XG5cbiAgQHN0YXRpY01ldGhvZFxuICBleGFjdEVxdWFscyh2ZWN0b3IpIHtcbiAgICByZXR1cm4gdmVjMi5leGFjdEVxdWFscyh0aGlzLCB2ZWN0b3IpO1xuICB9XG5cbiAgLy8gR2V0dGVycy9zZXR0ZXJzXG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLW11bHRpLXNwYWNlcywgYnJhY2Utc3R5bGUsIG5vLXJldHVybi1hc3NpZ24gKi9cbiAgZ2V0IEVMRU1FTlRTKCkgeyByZXR1cm4gMjsgfVxuICBnZXQgeCgpICAgICAgeyByZXR1cm4gdGhpc1swXTsgfVxuICBzZXQgeCh2YWx1ZSkgeyByZXR1cm4gdGhpc1swXSA9IGNoZWNrTnVtYmVyKHZhbHVlKTsgfVxuICBnZXQgeSgpICAgICAgeyByZXR1cm4gdGhpc1sxXTsgfVxuICBzZXQgeSh2YWx1ZSkgeyByZXR1cm4gdGhpc1sxXSA9IGNoZWNrTnVtYmVyKHZhbHVlKTsgfVxuICAvKiBlc2xpbnQtZGlzYWJsZSBuby1tdWx0aS1zcGFjZXMsIGJyYWNlLXN0eWxlLCBuby1yZXR1cm4tYXNzaWduICovXG5cbiAgQHN0YXRpY01ldGhvZFxuICBhZGQoLi4udmVjdG9ycykge1xuICAgIGZvciAoY29uc3QgdmVjdG9yIG9mIHZlY3RvcnMpIHtcbiAgICAgIHZlYzIuYWRkKHRoaXMsIHZlY3Rvcik7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG4iXX0=

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _common = __webpack_require__(228);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _extendableBuiltin(cls) {
	  function ExtendableBuiltin() {
	    var instance = Reflect.construct(cls, Array.from(arguments));
	    Object.setPrototypeOf(instance, Object.getPrototypeOf(this));
	    return instance;
	  }
	
	  ExtendableBuiltin.prototype = Object.create(cls.prototype, {
	    constructor: {
	      value: cls,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	
	  if (Object.setPrototypeOf) {
	    Object.setPrototypeOf(ExtendableBuiltin, cls);
	  } else {
	    ExtendableBuiltin.__proto__ = cls;
	  }
	
	  return ExtendableBuiltin;
	}
	
	var MathArray = function (_extendableBuiltin2) {
	  _inherits(MathArray, _extendableBuiltin2);
	
	  function MathArray() {
	    _classCallCheck(this, MathArray);
	
	    return _possibleConstructorReturn(this, (MathArray.__proto__ || Object.getPrototypeOf(MathArray)).apply(this, arguments));
	  }
	
	  _createClass(MathArray, [{
	    key: 'clone',
	    value: function clone() {
	      var Subclass = this.constructor;
	      var clone = new Subclass().copy(this);
	      clone.check();
	      return clone;
	    }
	  }, {
	    key: 'copy',
	    value: function copy(array) {
	      for (var i = 0; i < this.ELEMENTS; ++i) {
	        this[i] = array[i];
	      }
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'set',
	    value: function set() {
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      for (var i = 0; i < this.ELEMENTS; ++i) {
	        this[i] = args[i] || 0;
	      }
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'fromArray',
	    value: function fromArray(array) {
	      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	
	      for (var i = 0; i < this.ELEMENTS; ++i) {
	        this[i] = array[i + offset];
	      }
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'toString',
	    value: function toString() {
	      var string = '';
	      for (var i = 0; i < this.ELEMENTS; ++i) {
	        string += (i > 0 ? ', ' : '') + (0, _common.formatValue)(this[i]);
	      }
	      return this.constructor.name + '(' + string + ')';
	    }
	  }, {
	    key: 'toArray',
	    value: function toArray() {
	      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	
	      for (var i = 0; i < this.ELEMENTS; ++i) {
	        array[offset + i] = this[i];
	      }
	      return array;
	    }
	  }, {
	    key: 'toFloat32Array',
	    value: function toFloat32Array() {
	      return new Float32Array(this);
	    }
	  }, {
	    key: 'equals',
	    value: function equals(array) {
	      if (this.length !== array.length) {
	        return false;
	      }
	      for (var i = 0; i < this.ELEMENTS; ++i) {
	        if (!(0, _common.equals)(this[i], array[i])) {
	          return false;
	        }
	      }
	      return true;
	    }
	  }, {
	    key: 'exactEquals',
	    value: function exactEquals(array) {
	      if (this.length !== array.length) {
	        return false;
	      }
	      for (var i = 0; i < this.ELEMENTS; ++i) {
	        if (this[i] !== array[i]) {
	          return false;
	        }
	      }
	      return true;
	    }
	  }, {
	    key: 'validate',
	    value: function validate() {
	      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this;
	
	      var valid = array.length === this.ELEMENTS;
	      for (var i = 0; i < this.ELEMENTS; ++i) {
	        valid = valid && Number.isFinite(array[i]);
	      }
	      return valid;
	    }
	  }, {
	    key: 'check',
	    value: function check() {
	      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this;
	
	      if (_common.glMatrix.debug && !this.validate(array)) {
	        throw new Error('Invalid ' + this.constructor.name);
	      }
	    }
	  }]);
	
	  return MathArray;
	}(_extendableBuiltin(Array));
	
	exports.default = MathArray;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYXRoL21hdGgtYXJyYXkuanMiXSwibmFtZXMiOlsiTWF0aEFycmF5IiwiU3ViY2xhc3MiLCJjb25zdHJ1Y3RvciIsImNsb25lIiwiY29weSIsImNoZWNrIiwiYXJyYXkiLCJpIiwiRUxFTUVOVFMiLCJhcmdzIiwib2Zmc2V0Iiwic3RyaW5nIiwibmFtZSIsIkZsb2F0MzJBcnJheSIsImxlbmd0aCIsInZhbGlkIiwiTnVtYmVyIiwiaXNGaW5pdGUiLCJkZWJ1ZyIsInZhbGlkYXRlIiwiRXJyb3IiLCJBcnJheSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVxQkEsUzs7Ozs7Ozs7Ozs7NEJBRVg7QUFDTixVQUFNQyxXQUFXLEtBQUtDLFdBQXRCO0FBQ0EsVUFBTUMsUUFBUSxJQUFJRixRQUFKLEdBQWVHLElBQWYsQ0FBb0IsSUFBcEIsQ0FBZDtBQUNBRCxZQUFNRSxLQUFOO0FBQ0EsYUFBT0YsS0FBUDtBQUNEOzs7eUJBRUlHLEssRUFBTztBQUNWLFdBQUssSUFBSUMsSUFBSSxDQUFiLEVBQWdCQSxJQUFJLEtBQUtDLFFBQXpCLEVBQW1DLEVBQUVELENBQXJDLEVBQXdDO0FBQ3RDLGFBQUtBLENBQUwsSUFBVUQsTUFBTUMsQ0FBTixDQUFWO0FBQ0Q7QUFDRCxXQUFLRixLQUFMO0FBQ0EsYUFBTyxJQUFQO0FBQ0Q7OzswQkFFWTtBQUFBLHdDQUFOSSxJQUFNO0FBQU5BLFlBQU07QUFBQTs7QUFDWCxXQUFLLElBQUlGLElBQUksQ0FBYixFQUFnQkEsSUFBSSxLQUFLQyxRQUF6QixFQUFtQyxFQUFFRCxDQUFyQyxFQUF3QztBQUN0QyxhQUFLQSxDQUFMLElBQVVFLEtBQUtGLENBQUwsS0FBVyxDQUFyQjtBQUNEO0FBQ0QsV0FBS0YsS0FBTDtBQUNBLGFBQU8sSUFBUDtBQUNEOzs7OEJBRVNDLEssRUFBbUI7QUFBQSxVQUFaSSxNQUFZLHVFQUFILENBQUc7O0FBQzNCLFdBQUssSUFBSUgsSUFBSSxDQUFiLEVBQWdCQSxJQUFJLEtBQUtDLFFBQXpCLEVBQW1DLEVBQUVELENBQXJDLEVBQXdDO0FBQ3RDLGFBQUtBLENBQUwsSUFBVUQsTUFBTUMsSUFBSUcsTUFBVixDQUFWO0FBQ0Q7QUFDRCxXQUFLTCxLQUFMO0FBQ0EsYUFBTyxJQUFQO0FBQ0Q7OzsrQkFFVTtBQUNULFVBQUlNLFNBQVMsRUFBYjtBQUNBLFdBQUssSUFBSUosSUFBSSxDQUFiLEVBQWdCQSxJQUFJLEtBQUtDLFFBQXpCLEVBQW1DLEVBQUVELENBQXJDLEVBQXdDO0FBQ3RDSSxrQkFBVSxDQUFDSixJQUFJLENBQUosR0FBUSxJQUFSLEdBQWUsRUFBaEIsSUFBc0IseUJBQVksS0FBS0EsQ0FBTCxDQUFaLENBQWhDO0FBQ0Q7QUFDRCxhQUFVLEtBQUtMLFdBQUwsQ0FBaUJVLElBQTNCLFNBQW1DRCxNQUFuQztBQUNEOzs7OEJBRStCO0FBQUEsVUFBeEJMLEtBQXdCLHVFQUFoQixFQUFnQjtBQUFBLFVBQVpJLE1BQVksdUVBQUgsQ0FBRzs7QUFDOUIsV0FBSyxJQUFJSCxJQUFJLENBQWIsRUFBZ0JBLElBQUksS0FBS0MsUUFBekIsRUFBbUMsRUFBRUQsQ0FBckMsRUFBd0M7QUFDdENELGNBQU1JLFNBQVNILENBQWYsSUFBb0IsS0FBS0EsQ0FBTCxDQUFwQjtBQUNEO0FBQ0QsYUFBT0QsS0FBUDtBQUNEOzs7cUNBRWdCO0FBQ2YsYUFBTyxJQUFJTyxZQUFKLENBQWlCLElBQWpCLENBQVA7QUFDRDs7OzJCQUVNUCxLLEVBQU87QUFDWixVQUFJLEtBQUtRLE1BQUwsS0FBZ0JSLE1BQU1RLE1BQTFCLEVBQWtDO0FBQ2hDLGVBQU8sS0FBUDtBQUNEO0FBQ0QsV0FBSyxJQUFJUCxJQUFJLENBQWIsRUFBZ0JBLElBQUksS0FBS0MsUUFBekIsRUFBbUMsRUFBRUQsQ0FBckMsRUFBd0M7QUFDdEMsWUFBSSxDQUFDLG9CQUFPLEtBQUtBLENBQUwsQ0FBUCxFQUFnQkQsTUFBTUMsQ0FBTixDQUFoQixDQUFMLEVBQWdDO0FBQzlCLGlCQUFPLEtBQVA7QUFDRDtBQUNGO0FBQ0QsYUFBTyxJQUFQO0FBQ0Q7OztnQ0FFV0QsSyxFQUFPO0FBQ2pCLFVBQUksS0FBS1EsTUFBTCxLQUFnQlIsTUFBTVEsTUFBMUIsRUFBa0M7QUFDaEMsZUFBTyxLQUFQO0FBQ0Q7QUFDRCxXQUFLLElBQUlQLElBQUksQ0FBYixFQUFnQkEsSUFBSSxLQUFLQyxRQUF6QixFQUFtQyxFQUFFRCxDQUFyQyxFQUF3QztBQUN0QyxZQUFJLEtBQUtBLENBQUwsTUFBWUQsTUFBTUMsQ0FBTixDQUFoQixFQUEwQjtBQUN4QixpQkFBTyxLQUFQO0FBQ0Q7QUFDRjtBQUNELGFBQU8sSUFBUDtBQUNEOzs7K0JBRXNCO0FBQUEsVUFBZEQsS0FBYyx1RUFBTixJQUFNOztBQUNyQixVQUFJUyxRQUFRVCxNQUFNUSxNQUFOLEtBQWlCLEtBQUtOLFFBQWxDO0FBQ0EsV0FBSyxJQUFJRCxJQUFJLENBQWIsRUFBZ0JBLElBQUksS0FBS0MsUUFBekIsRUFBbUMsRUFBRUQsQ0FBckMsRUFBd0M7QUFDdENRLGdCQUFRQSxTQUFTQyxPQUFPQyxRQUFQLENBQWdCWCxNQUFNQyxDQUFOLENBQWhCLENBQWpCO0FBQ0Q7QUFDRCxhQUFPUSxLQUFQO0FBQ0Q7Ozs0QkFFbUI7QUFBQSxVQUFkVCxLQUFjLHVFQUFOLElBQU07O0FBQ2xCLFVBQUksaUJBQVNZLEtBQVQsSUFBa0IsQ0FBQyxLQUFLQyxRQUFMLENBQWNiLEtBQWQsQ0FBdkIsRUFBNkM7QUFDM0MsY0FBTSxJQUFJYyxLQUFKLGNBQXFCLEtBQUtsQixXQUFMLENBQWlCVSxJQUF0QyxDQUFOO0FBQ0Q7QUFDRjs7OztxQkF4Rm9DUyxLOztrQkFBbEJyQixTIiwiZmlsZSI6Im1hdGgtYXJyYXkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2Zvcm1hdFZhbHVlLCBlcXVhbHMsIGdsTWF0cml4fSBmcm9tICcuL2NvbW1vbic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1hdGhBcnJheSBleHRlbmRzIEFycmF5IHtcblxuICBjbG9uZSgpIHtcbiAgICBjb25zdCBTdWJjbGFzcyA9IHRoaXMuY29uc3RydWN0b3I7XG4gICAgY29uc3QgY2xvbmUgPSBuZXcgU3ViY2xhc3MoKS5jb3B5KHRoaXMpO1xuICAgIGNsb25lLmNoZWNrKCk7XG4gICAgcmV0dXJuIGNsb25lO1xuICB9XG5cbiAgY29weShhcnJheSkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5FTEVNRU5UUzsgKytpKSB7XG4gICAgICB0aGlzW2ldID0gYXJyYXlbaV07XG4gICAgfVxuICAgIHRoaXMuY2hlY2soKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHNldCguLi5hcmdzKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLkVMRU1FTlRTOyArK2kpIHtcbiAgICAgIHRoaXNbaV0gPSBhcmdzW2ldIHx8IDA7XG4gICAgfVxuICAgIHRoaXMuY2hlY2soKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGZyb21BcnJheShhcnJheSwgb2Zmc2V0ID0gMCkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5FTEVNRU5UUzsgKytpKSB7XG4gICAgICB0aGlzW2ldID0gYXJyYXlbaSArIG9mZnNldF07XG4gICAgfVxuICAgIHRoaXMuY2hlY2soKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHRvU3RyaW5nKCkge1xuICAgIGxldCBzdHJpbmcgPSAnJztcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuRUxFTUVOVFM7ICsraSkge1xuICAgICAgc3RyaW5nICs9IChpID4gMCA/ICcsICcgOiAnJykgKyBmb3JtYXRWYWx1ZSh0aGlzW2ldKTtcbiAgICB9XG4gICAgcmV0dXJuIGAke3RoaXMuY29uc3RydWN0b3IubmFtZX0oJHtzdHJpbmd9KWA7XG4gIH1cblxuICB0b0FycmF5KGFycmF5ID0gW10sIG9mZnNldCA9IDApIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuRUxFTUVOVFM7ICsraSkge1xuICAgICAgYXJyYXlbb2Zmc2V0ICsgaV0gPSB0aGlzW2ldO1xuICAgIH1cbiAgICByZXR1cm4gYXJyYXk7XG4gIH1cblxuICB0b0Zsb2F0MzJBcnJheSgpIHtcbiAgICByZXR1cm4gbmV3IEZsb2F0MzJBcnJheSh0aGlzKTtcbiAgfVxuXG4gIGVxdWFscyhhcnJheSkge1xuICAgIGlmICh0aGlzLmxlbmd0aCAhPT0gYXJyYXkubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5FTEVNRU5UUzsgKytpKSB7XG4gICAgICBpZiAoIWVxdWFscyh0aGlzW2ldLCBhcnJheVtpXSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGV4YWN0RXF1YWxzKGFycmF5KSB7XG4gICAgaWYgKHRoaXMubGVuZ3RoICE9PSBhcnJheS5sZW5ndGgpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLkVMRU1FTlRTOyArK2kpIHtcbiAgICAgIGlmICh0aGlzW2ldICE9PSBhcnJheVtpXSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgdmFsaWRhdGUoYXJyYXkgPSB0aGlzKSB7XG4gICAgbGV0IHZhbGlkID0gYXJyYXkubGVuZ3RoID09PSB0aGlzLkVMRU1FTlRTO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5FTEVNRU5UUzsgKytpKSB7XG4gICAgICB2YWxpZCA9IHZhbGlkICYmIE51bWJlci5pc0Zpbml0ZShhcnJheVtpXSk7XG4gICAgfVxuICAgIHJldHVybiB2YWxpZDtcbiAgfVxuXG4gIGNoZWNrKGFycmF5ID0gdGhpcykge1xuICAgIGlmIChnbE1hdHJpeC5kZWJ1ZyAmJiAhdGhpcy52YWxpZGF0ZShhcnJheSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCAke3RoaXMuY29uc3RydWN0b3IubmFtZX1gKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==

/***/ },
/* 241 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.unary = unary;
	exports.staticMethod = staticMethod;
	exports.binary = binary;
	exports.spread = spread;
	
	function _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	// From https://github.com/jayphelps/core-decorators.js, MIT license
	function isDescriptor(descriptor) {
	  if (!descriptor || !descriptor.hasOwnProperty) {
	    return false;
	  }
	
	  var keys = ['value', 'initializer', 'get', 'set'];
	
	  for (var i = 0, l = keys.length; i < l; i++) {
	    if (descriptor.hasOwnProperty(keys[i])) {
	      return true;
	    }
	  }
	
	  return false;
	}
	
	// From https://github.com/jayphelps/core-decorators.js, MIT license
	function decorate(entryArgs, handleDescriptor) {
	  if (isDescriptor(entryArgs[entryArgs.length - 1])) {
	    return handleDescriptor.apply(undefined, _toConsumableArray(entryArgs).concat([[]]));
	  }
	  return function _decorate() {
	    return handleDescriptor.apply(undefined, Array.prototype.slice.call(arguments).concat([entryArgs]));
	  };
	}
	
	function unary() {
	  for (var _len = arguments.length, decoratorArgs = Array(_len), _key = 0; _key < _len; _key++) {
	    decoratorArgs[_key] = arguments[_key];
	  }
	
	  return decorate(decoratorArgs, function (target, methodKey, descriptor, _ref) {
	    var _ref2 = _toArray(_ref);
	
	    var Class = target.constructor;
	    Class[methodKey] = function () {
	      var _ref3;
	
	      return (_ref3 = new Class())[methodKey].apply(_ref3, arguments);
	    };
	    return _extends({}, descriptor, {
	      value: function unaryWrapper() {
	        return descriptor.value.apply(this, arguments);
	      }
	    });
	  });
	}
	
	function staticMethod() {
	  for (var _len2 = arguments.length, decoratorArgs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	    decoratorArgs[_key2] = arguments[_key2];
	  }
	
	  return decorate(decoratorArgs, function (target, methodKey, descriptor, _ref4) {
	    var _ref5 = _toArray(_ref4);
	
	    var Class = target.constructor;
	    Class[methodKey] = function () {
	      var _ref6;
	
	      return (_ref6 = new Class())[methodKey].apply(_ref6, arguments);
	    };
	    return _extends({}, descriptor, {
	      value: function staticMethodWrapper() {
	        return descriptor.value.apply(this, arguments);
	      }
	    });
	  });
	}
	
	function binary() {
	  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
	    args[_key3] = arguments[_key3];
	  }
	
	  return decorate(args, function (target, methodKey, descriptor, _ref7) {
	    var _ref8 = _toArray(_ref7);
	
	    var Class = target.constructor;
	    Class[methodKey] = function (a, b) {
	      return new Class().copy(a)[methodKey](b);
	    };
	
	    return _extends({}, descriptor, {
	      value: function binaryWrapper() {
	        return descriptor.value.apply(this, arguments);
	      }
	    });
	  });
	}
	
	function spread() {
	  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
	    args[_key4] = arguments[_key4];
	  }
	
	  return decorate(args, function (target, methodKey, descriptor, _ref9) {
	    var _ref10 = _toArray(_ref9);
	
	    var Class = target.constructor;
	    Class[methodKey] = function (a) {
	      for (var _len5 = arguments.length, rest = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
	        rest[_key5 - 1] = arguments[_key5];
	      }
	
	      return rest.reduce(function (acc, elt) {
	        return acc[methodKey](elt);
	      }, new Class().copy(a));
	    };
	
	    return _extends({}, descriptor, {
	      value: function spreadWrapper() {
	        return descriptor.value.apply(this, arguments);
	      }
	    });
	  });
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tYXRoL3V0aWxzL2RlY29yYXRvcnMuanMiXSwibmFtZXMiOlsidW5hcnkiLCJzdGF0aWNNZXRob2QiLCJiaW5hcnkiLCJzcHJlYWQiLCJpc0Rlc2NyaXB0b3IiLCJkZXNjcmlwdG9yIiwiaGFzT3duUHJvcGVydHkiLCJrZXlzIiwiaSIsImwiLCJsZW5ndGgiLCJkZWNvcmF0ZSIsImVudHJ5QXJncyIsImhhbmRsZURlc2NyaXB0b3IiLCJfZGVjb3JhdGUiLCJhcmd1bWVudHMiLCJkZWNvcmF0b3JBcmdzIiwidGFyZ2V0IiwibWV0aG9kS2V5IiwiQ2xhc3MiLCJjb25zdHJ1Y3RvciIsInZhbHVlIiwidW5hcnlXcmFwcGVyIiwiYXBwbHkiLCJzdGF0aWNNZXRob2RXcmFwcGVyIiwiYXJncyIsImEiLCJiIiwiY29weSIsImJpbmFyeVdyYXBwZXIiLCJyZXN0IiwicmVkdWNlIiwiYWNjIiwiZWx0Iiwic3ByZWFkV3JhcHBlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7UUEyQmdCQSxLLEdBQUFBLEs7UUFjQUMsWSxHQUFBQSxZO1FBY0FDLE0sR0FBQUEsTTtRQWVBQyxNLEdBQUFBLE07Ozs7OztBQXRFaEI7QUFDQSxTQUFTQyxZQUFULENBQXNCQyxVQUF0QixFQUFrQztBQUNoQyxNQUFJLENBQUNBLFVBQUQsSUFBZSxDQUFDQSxXQUFXQyxjQUEvQixFQUErQztBQUM3QyxXQUFPLEtBQVA7QUFDRDs7QUFFRCxNQUFNQyxPQUFPLENBQUMsT0FBRCxFQUFVLGFBQVYsRUFBeUIsS0FBekIsRUFBZ0MsS0FBaEMsQ0FBYjs7QUFFQSxPQUFLLElBQUlDLElBQUksQ0FBUixFQUFXQyxJQUFJRixLQUFLRyxNQUF6QixFQUFpQ0YsSUFBSUMsQ0FBckMsRUFBd0NELEdBQXhDLEVBQTZDO0FBQzNDLFFBQUlILFdBQVdDLGNBQVgsQ0FBMEJDLEtBQUtDLENBQUwsQ0FBMUIsQ0FBSixFQUF3QztBQUN0QyxhQUFPLElBQVA7QUFDRDtBQUNGOztBQUVELFNBQU8sS0FBUDtBQUNEOztBQUVEO0FBQ0EsU0FBU0csUUFBVCxDQUFrQkMsU0FBbEIsRUFBNkJDLGdCQUE3QixFQUErQztBQUM3QyxNQUFJVCxhQUFhUSxVQUFVQSxVQUFVRixNQUFWLEdBQW1CLENBQTdCLENBQWIsQ0FBSixFQUFtRDtBQUNqRCxXQUFPRyxxREFBb0JELFNBQXBCLFVBQStCLEVBQS9CLEdBQVA7QUFDRDtBQUNELFNBQU8sU0FBU0UsU0FBVCxHQUFxQjtBQUMxQixXQUFPRCw2REFBb0JFLFNBQXBCLFVBQStCSCxTQUEvQixHQUFQO0FBQ0QsR0FGRDtBQUdEOztBQUVNLFNBQVNaLEtBQVQsR0FBaUM7QUFBQSxvQ0FBZmdCLGFBQWU7QUFBZkEsaUJBQWU7QUFBQTs7QUFDdEMsU0FBT0wsU0FBU0ssYUFBVCxFQUNMLFVBQUNDLE1BQUQsRUFBU0MsU0FBVCxFQUFvQmIsVUFBcEIsUUFBdUM7QUFBQTs7QUFDckMsUUFBTWMsUUFBUUYsT0FBT0csV0FBckI7QUFDQUQsVUFBTUQsU0FBTixJQUFtQjtBQUFBOztBQUFBLGFBQWEsU0FBQyxJQUFJQyxLQUFKLEVBQUQsRUFBY0QsU0FBZCx5QkFBYjtBQUFBLEtBQW5CO0FBQ0Esd0JBQ0tiLFVBREw7QUFFRWdCLGFBQU8sU0FBU0MsWUFBVCxHQUF3QjtBQUM3QixlQUFPakIsV0FBV2dCLEtBQVgsQ0FBaUJFLEtBQWpCLENBQXVCLElBQXZCLEVBQTZCUixTQUE3QixDQUFQO0FBQ0Q7QUFKSDtBQU1ELEdBVkksQ0FBUDtBQVdEOztBQUVNLFNBQVNkLFlBQVQsR0FBd0M7QUFBQSxxQ0FBZmUsYUFBZTtBQUFmQSxpQkFBZTtBQUFBOztBQUM3QyxTQUFPTCxTQUFTSyxhQUFULEVBQ0wsVUFBQ0MsTUFBRCxFQUFTQyxTQUFULEVBQW9CYixVQUFwQixTQUF1QztBQUFBOztBQUNyQyxRQUFNYyxRQUFRRixPQUFPRyxXQUFyQjtBQUNBRCxVQUFNRCxTQUFOLElBQW1CO0FBQUE7O0FBQUEsYUFBYSxTQUFDLElBQUlDLEtBQUosRUFBRCxFQUFjRCxTQUFkLHlCQUFiO0FBQUEsS0FBbkI7QUFDQSx3QkFDS2IsVUFETDtBQUVFZ0IsYUFBTyxTQUFTRyxtQkFBVCxHQUErQjtBQUNwQyxlQUFPbkIsV0FBV2dCLEtBQVgsQ0FBaUJFLEtBQWpCLENBQXVCLElBQXZCLEVBQTZCUixTQUE3QixDQUFQO0FBQ0Q7QUFKSDtBQU1ELEdBVkksQ0FBUDtBQVdEOztBQUVNLFNBQVNiLE1BQVQsR0FBeUI7QUFBQSxxQ0FBTnVCLElBQU07QUFBTkEsUUFBTTtBQUFBOztBQUM5QixTQUFPZCxTQUFTYyxJQUFULEVBQ0wsVUFBQ1IsTUFBRCxFQUFTQyxTQUFULEVBQW9CYixVQUFwQixTQUF1QztBQUFBOztBQUNyQyxRQUFNYyxRQUFRRixPQUFPRyxXQUFyQjtBQUNBRCxVQUFNRCxTQUFOLElBQW1CLFVBQUNRLENBQUQsRUFBSUMsQ0FBSjtBQUFBLGFBQVUsSUFBSVIsS0FBSixHQUFZUyxJQUFaLENBQWlCRixDQUFqQixFQUFvQlIsU0FBcEIsRUFBK0JTLENBQS9CLENBQVY7QUFBQSxLQUFuQjs7QUFFQSx3QkFDS3RCLFVBREw7QUFFRWdCLGFBQU8sU0FBU1EsYUFBVCxHQUF5QjtBQUM5QixlQUFPeEIsV0FBV2dCLEtBQVgsQ0FBaUJFLEtBQWpCLENBQXVCLElBQXZCLEVBQTZCUixTQUE3QixDQUFQO0FBQ0Q7QUFKSDtBQU1ELEdBWEksQ0FBUDtBQVlEOztBQUVNLFNBQVNaLE1BQVQsR0FBeUI7QUFBQSxxQ0FBTnNCLElBQU07QUFBTkEsUUFBTTtBQUFBOztBQUM5QixTQUFPZCxTQUFTYyxJQUFULEVBQ0wsVUFBQ1IsTUFBRCxFQUFTQyxTQUFULEVBQW9CYixVQUFwQixTQUF1QztBQUFBOztBQUNyQyxRQUFNYyxRQUFRRixPQUFPRyxXQUFyQjtBQUNBRCxVQUFNRCxTQUFOLElBQW1CLFVBQUNRLENBQUQ7QUFBQSx5Q0FBT0ksSUFBUDtBQUFPQSxZQUFQO0FBQUE7O0FBQUEsYUFBZ0JBLEtBQUtDLE1BQUwsQ0FDakMsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOO0FBQUEsZUFBY0QsSUFBSWQsU0FBSixFQUFlZSxHQUFmLENBQWQ7QUFBQSxPQURpQyxFQUVqQyxJQUFJZCxLQUFKLEdBQVlTLElBQVosQ0FBaUJGLENBQWpCLENBRmlDLENBQWhCO0FBQUEsS0FBbkI7O0FBS0Esd0JBQ0tyQixVQURMO0FBRUVnQixhQUFPLFNBQVNhLGFBQVQsR0FBeUI7QUFDOUIsZUFBTzdCLFdBQVdnQixLQUFYLENBQWlCRSxLQUFqQixDQUF1QixJQUF2QixFQUE2QlIsU0FBN0IsQ0FBUDtBQUNEO0FBSkg7QUFNRCxHQWRJLENBQVA7QUFlRCIsImZpbGUiOiJkZWNvcmF0b3JzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRnJvbSBodHRwczovL2dpdGh1Yi5jb20vamF5cGhlbHBzL2NvcmUtZGVjb3JhdG9ycy5qcywgTUlUIGxpY2Vuc2VcbmZ1bmN0aW9uIGlzRGVzY3JpcHRvcihkZXNjcmlwdG9yKSB7XG4gIGlmICghZGVzY3JpcHRvciB8fCAhZGVzY3JpcHRvci5oYXNPd25Qcm9wZXJ0eSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGNvbnN0IGtleXMgPSBbJ3ZhbHVlJywgJ2luaXRpYWxpemVyJywgJ2dldCcsICdzZXQnXTtcblxuICBmb3IgKGxldCBpID0gMCwgbCA9IGtleXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgaWYgKGRlc2NyaXB0b3IuaGFzT3duUHJvcGVydHkoa2V5c1tpXSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuLy8gRnJvbSBodHRwczovL2dpdGh1Yi5jb20vamF5cGhlbHBzL2NvcmUtZGVjb3JhdG9ycy5qcywgTUlUIGxpY2Vuc2VcbmZ1bmN0aW9uIGRlY29yYXRlKGVudHJ5QXJncywgaGFuZGxlRGVzY3JpcHRvcikge1xuICBpZiAoaXNEZXNjcmlwdG9yKGVudHJ5QXJnc1tlbnRyeUFyZ3MubGVuZ3RoIC0gMV0pKSB7XG4gICAgcmV0dXJuIGhhbmRsZURlc2NyaXB0b3IoLi4uZW50cnlBcmdzLCBbXSk7XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uIF9kZWNvcmF0ZSgpIHtcbiAgICByZXR1cm4gaGFuZGxlRGVzY3JpcHRvciguLi5hcmd1bWVudHMsIGVudHJ5QXJncyk7XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1bmFyeSguLi5kZWNvcmF0b3JBcmdzKSB7XG4gIHJldHVybiBkZWNvcmF0ZShkZWNvcmF0b3JBcmdzLFxuICAgICh0YXJnZXQsIG1ldGhvZEtleSwgZGVzY3JpcHRvciwgW10pID0+IHtcbiAgICAgIGNvbnN0IENsYXNzID0gdGFyZ2V0LmNvbnN0cnVjdG9yO1xuICAgICAgQ2xhc3NbbWV0aG9kS2V5XSA9ICguLi5hcmdzKSA9PiAobmV3IENsYXNzKCkpW21ldGhvZEtleV0oLi4uYXJncyk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5kZXNjcmlwdG9yLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gdW5hcnlXcmFwcGVyKCkge1xuICAgICAgICAgIHJldHVybiBkZXNjcmlwdG9yLnZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdGF0aWNNZXRob2QoLi4uZGVjb3JhdG9yQXJncykge1xuICByZXR1cm4gZGVjb3JhdGUoZGVjb3JhdG9yQXJncyxcbiAgICAodGFyZ2V0LCBtZXRob2RLZXksIGRlc2NyaXB0b3IsIFtdKSA9PiB7XG4gICAgICBjb25zdCBDbGFzcyA9IHRhcmdldC5jb25zdHJ1Y3RvcjtcbiAgICAgIENsYXNzW21ldGhvZEtleV0gPSAoLi4uYXJncykgPT4gKG5ldyBDbGFzcygpKVttZXRob2RLZXldKC4uLmFyZ3MpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uZGVzY3JpcHRvcixcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHN0YXRpY01ldGhvZFdyYXBwZXIoKSB7XG4gICAgICAgICAgcmV0dXJuIGRlc2NyaXB0b3IudmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJpbmFyeSguLi5hcmdzKSB7XG4gIHJldHVybiBkZWNvcmF0ZShhcmdzLFxuICAgICh0YXJnZXQsIG1ldGhvZEtleSwgZGVzY3JpcHRvciwgW10pID0+IHtcbiAgICAgIGNvbnN0IENsYXNzID0gdGFyZ2V0LmNvbnN0cnVjdG9yO1xuICAgICAgQ2xhc3NbbWV0aG9kS2V5XSA9IChhLCBiKSA9PiBuZXcgQ2xhc3MoKS5jb3B5KGEpW21ldGhvZEtleV0oYik7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmRlc2NyaXB0b3IsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBiaW5hcnlXcmFwcGVyKCkge1xuICAgICAgICAgIHJldHVybiBkZXNjcmlwdG9yLnZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzcHJlYWQoLi4uYXJncykge1xuICByZXR1cm4gZGVjb3JhdGUoYXJncyxcbiAgICAodGFyZ2V0LCBtZXRob2RLZXksIGRlc2NyaXB0b3IsIFtdKSA9PiB7XG4gICAgICBjb25zdCBDbGFzcyA9IHRhcmdldC5jb25zdHJ1Y3RvcjtcbiAgICAgIENsYXNzW21ldGhvZEtleV0gPSAoYSwgLi4ucmVzdCkgPT4gcmVzdC5yZWR1Y2UoXG4gICAgICAgIChhY2MsIGVsdCkgPT4gYWNjW21ldGhvZEtleV0oZWx0KSxcbiAgICAgICAgbmV3IENsYXNzKCkuY29weShhKVxuICAgICAgKTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uZGVzY3JpcHRvcixcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHNwcmVhZFdyYXBwZXIoKSB7XG4gICAgICAgICAgcmV0dXJuIGRlc2NyaXB0b3IudmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KTtcbn1cbiJdfQ==

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _desc, _value, _class;
	
	var _mathArray = __webpack_require__(240);
	
	var _mathArray2 = _interopRequireDefault(_mathArray);
	
	var _common = __webpack_require__(228);
	
	var _glMatrix = __webpack_require__(229);
	
	var _decorators = __webpack_require__(241);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
	  var desc = {};
	  Object['ke' + 'ys'](descriptor).forEach(function (key) {
	    desc[key] = descriptor[key];
	  });
	  desc.enumerable = !!desc.enumerable;
	  desc.configurable = !!desc.configurable;
	
	  if ('value' in desc || desc.initializer) {
	    desc.writable = true;
	  }
	
	  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
	    return decorator(target, property, desc) || desc;
	  }, desc);
	
	  if (context && desc.initializer !== void 0) {
	    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
	    desc.initializer = undefined;
	  }
	
	  if (desc.initializer === void 0) {
	    Object['define' + 'Property'](target, property, desc);
	    desc = null;
	  }
	
	  return desc;
	}
	
	var Vector3 = (_class = function (_MathArray) {
	  _inherits(Vector3, _MathArray);
	
	  // Creates a new vec3, either empty, or from an array or from values
	  function Vector3() {
	    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
	
	    _classCallCheck(this, Vector3);
	
	    var _this = _possibleConstructorReturn(this, (Vector3.__proto__ || Object.getPrototypeOf(Vector3)).call(this));
	
	    if (Array.isArray(x) && arguments.length === 1) {
	      _this.copy(x);
	    } else {
	      _this.set(x, y, z);
	    }
	    return _this;
	  }
	
	  _createClass(Vector3, [{
	    key: 'set',
	    value: function set(x, y, z) {
	      _glMatrix.vec3.set(this, x, y, z);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'equals',
	    value: function equals(vector) {
	      return _glMatrix.vec3.equals(this, vector);
	    }
	  }, {
	    key: 'exactEquals',
	    value: function exactEquals(vector) {
	      return _glMatrix.vec3.exactEquals(this, vector);
	    }
	
	    // Getters/setters
	    /* eslint-disable no-multi-spaces, brace-style, no-return-assign */
	
	  }, {
	    key: 'distance',
	    value: function distance(vector) {
	      return _glMatrix.vec3.distance(vector);
	    }
	  }, {
	    key: 'dist',
	    value: function dist(vector) {
	      return _glMatrix.vec3.dist(vector);
	    }
	  }, {
	    key: 'angle',
	    value: function angle(vector) {
	      return _glMatrix.vec3.angle(vector);
	    }
	
	    // MODIFIERS
	
	  }, {
	    key: 'add',
	    value: function add() {
	      for (var _len = arguments.length, vectors = Array(_len), _key = 0; _key < _len; _key++) {
	        vectors[_key] = arguments[_key];
	      }
	
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = vectors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var vector = _step.value;
	
	          _glMatrix.vec3.add(this, vector);
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'subtract',
	    value: function subtract() {
	      for (var _len2 = arguments.length, vectors = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        vectors[_key2] = arguments[_key2];
	      }
	
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;
	
	      try {
	        for (var _iterator2 = vectors[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var vector = _step2.value;
	
	          _glMatrix.vec3.subtract(this, vector);
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'multiply',
	    value: function multiply() {
	      for (var _len3 = arguments.length, vectors = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
	        vectors[_key3] = arguments[_key3];
	      }
	
	      var _iteratorNormalCompletion3 = true;
	      var _didIteratorError3 = false;
	      var _iteratorError3 = undefined;
	
	      try {
	        for (var _iterator3 = vectors[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	          var vector = _step3.value;
	
	          _glMatrix.vec3.multiply(this, vector);
	        }
	      } catch (err) {
	        _didIteratorError3 = true;
	        _iteratorError3 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion3 && _iterator3.return) {
	            _iterator3.return();
	          }
	        } finally {
	          if (_didIteratorError3) {
	            throw _iteratorError3;
	          }
	        }
	      }
	
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'divide',
	    value: function divide() {
	      for (var _len4 = arguments.length, vectors = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
	        vectors[_key4] = arguments[_key4];
	      }
	
	      var _iteratorNormalCompletion4 = true;
	      var _didIteratorError4 = false;
	      var _iteratorError4 = undefined;
	
	      try {
	        for (var _iterator4 = vectors[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
	          var vector = _step4.value;
	
	          _glMatrix.vec3.divide(this, vector);
	        }
	      } catch (err) {
	        _didIteratorError4 = true;
	        _iteratorError4 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion4 && _iterator4.return) {
	            _iterator4.return();
	          }
	        } finally {
	          if (_didIteratorError4) {
	            throw _iteratorError4;
	          }
	        }
	      }
	
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'ceil',
	    value: function ceil() {
	      _glMatrix.vec3.ceil(this, this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'floor',
	    value: function floor() {
	      _glMatrix.vec3.floor(this, this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'min',
	    value: function min() {
	      _glMatrix.vec3.min(this, this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'max',
	    value: function max() {
	      _glMatrix.vec3.max(this, this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'scale',
	    value: function scale(_scale) {
	      _glMatrix.vec3.scale(this, this, _scale);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'scaleAndAdd',
	    value: function scaleAndAdd(vector, scale) {
	      _glMatrix.vec3.scaleAndAdd(this, this, vector, scale);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'negate',
	    value: function negate() {
	      _glMatrix.vec3.negate(this, this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'inverse',
	    value: function inverse() {
	      _glMatrix.vec3.inverse(this, this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'normalize',
	    value: function normalize() {
	      _glMatrix.vec3.normalize(this, this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'dot',
	    value: function dot(vector) {
	      _glMatrix.vec3.dot(this, this, vector);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'cross',
	    value: function cross(vector) {
	      _glMatrix.vec3.cross(this, this, vector);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'lerp',
	    value: function lerp(scale) {
	      _glMatrix.vec3.lerp(this, this, scale);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'hermite',
	    value: function hermite(scale) {
	      _glMatrix.vec3.hermite(this, this, scale);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'bezier',
	    value: function bezier(scale) {
	      _glMatrix.vec3.bezier(this, this, scale);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'random',
	    value: function random(scale) {
	      _glMatrix.vec3.cross(this, this, scale);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'rotateX',
	    value: function rotateX(origin, angle) {
	      _glMatrix.vec3.rotateX(this, this, origin, angle);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'rotateY',
	    value: function rotateY(origin, angle) {
	      _glMatrix.vec3.rotateY(this, this, origin, angle);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'rotateZ',
	    value: function rotateZ(origin, angle) {
	      _glMatrix.vec3.rotateZ(this, this, origin, angle);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'ELEMENTS',
	    get: function get() {
	      return 3;
	    }
	  }, {
	    key: 'x',
	    get: function get() {
	      return this[0];
	    },
	    set: function set(value) {
	      return this[0] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'y',
	    get: function get() {
	      return this[1];
	    },
	    set: function set(value) {
	      return this[1] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'z',
	    get: function get() {
	      return this[2];
	    },
	    set: function set(value) {
	      return this[2] = (0, _common.checkNumber)(value);
	    }
	    /* eslint-enable no-multi-spaces, brace-style, no-return-assign */
	
	  }]);
	
	  return Vector3;
	}(_mathArray2.default), (_applyDecoratedDescriptor(_class.prototype, 'equals', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'equals'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'exactEquals', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'exactEquals'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'distance', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'distance'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'dist', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'dist'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'angle', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'angle'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'add', [_decorators.spread], Object.getOwnPropertyDescriptor(_class.prototype, 'add'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'subtract', [_decorators.spread], Object.getOwnPropertyDescriptor(_class.prototype, 'subtract'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'multiply', [_decorators.spread], Object.getOwnPropertyDescriptor(_class.prototype, 'multiply'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'divide', [_decorators.spread], Object.getOwnPropertyDescriptor(_class.prototype, 'divide'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'ceil', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'ceil'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'floor', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'floor'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'min', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'min'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'max', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'max'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'scale', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'scale'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'negate', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'negate'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'inverse', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'inverse'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'normalize', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'normalize'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'dot', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'dot'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'cross', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'cross'), _class.prototype)), _class);
	exports.default = Vector3;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _desc, _value, _class;
	
	var _mathArray = __webpack_require__(240);
	
	var _mathArray2 = _interopRequireDefault(_mathArray);
	
	var _common = __webpack_require__(228);
	
	var _glMatrix = __webpack_require__(229);
	
	var _decorators = __webpack_require__(241);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
	  var desc = {};
	  Object['ke' + 'ys'](descriptor).forEach(function (key) {
	    desc[key] = descriptor[key];
	  });
	  desc.enumerable = !!desc.enumerable;
	  desc.configurable = !!desc.configurable;
	
	  if ('value' in desc || desc.initializer) {
	    desc.writable = true;
	  }
	
	  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
	    return decorator(target, property, desc) || desc;
	  }, desc);
	
	  if (context && desc.initializer !== void 0) {
	    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
	    desc.initializer = undefined;
	  }
	
	  if (desc.initializer === void 0) {
	    Object['define' + 'Property'](target, property, desc);
	    desc = null;
	  }
	
	  return desc;
	}
	
	var Vector4 = (_class = function (_MathArray) {
	  _inherits(Vector4, _MathArray);
	
	  // Creates a new, empty vec4
	  function Vector4() {
	    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
	    var w = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
	
	    _classCallCheck(this, Vector4);
	
	    var _this = _possibleConstructorReturn(this, (Vector4.__proto__ || Object.getPrototypeOf(Vector4)).call(this));
	
	    if (Array.isArray(x) && arguments.length === 1) {
	      _this.copy(x);
	    } else {
	      _this.set(x, y, z, w);
	    }
	    return _this;
	  }
	
	  _createClass(Vector4, [{
	    key: 'set',
	    value: function set(x, y, z, w) {
	      _glMatrix.vec4.set(this, x, y, z, w);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'equals',
	    value: function equals(vector) {
	      return _glMatrix.vec4.equals(this, vector);
	    }
	  }, {
	    key: 'exactEquals',
	    value: function exactEquals(vector) {
	      return _glMatrix.vec4.exactEquals(this, vector);
	    }
	
	    // Getters/setters
	    /* eslint-disable no-multi-spaces, brace-style, no-return-assign */
	
	  }, {
	    key: 'distance',
	    value: function distance(vector) {
	      return _glMatrix.vec4.distance(vector);
	    }
	  }, {
	    key: 'dist',
	    value: function dist(vector) {
	      return _glMatrix.vec4.dist(vector);
	    }
	  }, {
	    key: 'angle',
	    value: function angle(vector) {
	      return _glMatrix.vec4.angle(vector);
	    }
	  }, {
	    key: 'add',
	    value: function add() {
	      for (var _len = arguments.length, vectors = Array(_len), _key = 0; _key < _len; _key++) {
	        vectors[_key] = arguments[_key];
	      }
	
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = vectors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var vector = _step.value;
	
	          _glMatrix.vec4.add(this, vector);
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'subtract',
	    value: function subtract() {
	      for (var _len2 = arguments.length, vectors = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        vectors[_key2] = arguments[_key2];
	      }
	
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;
	
	      try {
	        for (var _iterator2 = vectors[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var vector = _step2.value;
	
	          _glMatrix.vec4.subtract(this, vector);
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'multiply',
	    value: function multiply() {
	      for (var _len3 = arguments.length, vectors = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
	        vectors[_key3] = arguments[_key3];
	      }
	
	      var _iteratorNormalCompletion3 = true;
	      var _didIteratorError3 = false;
	      var _iteratorError3 = undefined;
	
	      try {
	        for (var _iterator3 = vectors[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	          var vector = _step3.value;
	
	          _glMatrix.vec4.multiply(this, vector);
	        }
	      } catch (err) {
	        _didIteratorError3 = true;
	        _iteratorError3 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion3 && _iterator3.return) {
	            _iterator3.return();
	          }
	        } finally {
	          if (_didIteratorError3) {
	            throw _iteratorError3;
	          }
	        }
	      }
	
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'divide',
	    value: function divide() {
	      for (var _len4 = arguments.length, vectors = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
	        vectors[_key4] = arguments[_key4];
	      }
	
	      var _iteratorNormalCompletion4 = true;
	      var _didIteratorError4 = false;
	      var _iteratorError4 = undefined;
	
	      try {
	        for (var _iterator4 = vectors[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
	          var vector = _step4.value;
	
	          _glMatrix.vec4.divide(this, vector);
	        }
	      } catch (err) {
	        _didIteratorError4 = true;
	        _iteratorError4 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion4 && _iterator4.return) {
	            _iterator4.return();
	          }
	        } finally {
	          if (_didIteratorError4) {
	            throw _iteratorError4;
	          }
	        }
	      }
	
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'ceil',
	    value: function ceil() {
	      _glMatrix.vec4.ceil(this, this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'floor',
	    value: function floor() {
	      _glMatrix.vec4.floor(this, this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'min',
	    value: function min() {
	      _glMatrix.vec4.min(this, this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'max',
	    value: function max() {
	      _glMatrix.vec4.max(this, this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'scale',
	    value: function scale(_scale) {
	      _glMatrix.vec4.scale(this, this, _scale);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'scaleAndAdd',
	    value: function scaleAndAdd(vector, scale) {
	      _glMatrix.vec4.scaleAndAdd(this, this, vector, scale);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'negate',
	    value: function negate() {
	      _glMatrix.vec4.negate(this, this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'inverse',
	    value: function inverse() {
	      _glMatrix.vec4.inverse(this, this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'normalize',
	    value: function normalize() {
	      _glMatrix.vec4.normalize(this, this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'dot',
	    value: function dot(scale) {
	      _glMatrix.vec4.dot(this, this, scale);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'cross',
	    value: function cross(scale) {
	      _glMatrix.vec4.cross(this, this, scale);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'lerp',
	    value: function lerp(scale) {
	      _glMatrix.vec4.lerp(this, this, scale);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'hermite',
	    value: function hermite(scale) {
	      _glMatrix.vec4.hermite(this, this, scale);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'bezier',
	    value: function bezier(scale) {
	      _glMatrix.vec4.bezier(this, this, scale);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'random',
	    value: function random(scale) {
	      _glMatrix.vec4.random(this, this, scale);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'rotateX',
	    value: function rotateX(origin, angle) {
	      _glMatrix.vec4.rotateX(this, this, origin, angle);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'rotateY',
	    value: function rotateY(origin, angle) {
	      _glMatrix.vec4.rotateY(this, this, origin, angle);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'rotateZ',
	    value: function rotateZ(origin, angle) {
	      _glMatrix.vec4.rotateZ(this, this, origin, angle);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'ELEMENTS',
	    get: function get() {
	      return 4;
	    }
	  }, {
	    key: 'x',
	    get: function get() {
	      return this[0];
	    },
	    set: function set(value) {
	      return this[0] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'y',
	    get: function get() {
	      return this[1];
	    },
	    set: function set(value) {
	      return this[1] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'z',
	    get: function get() {
	      return this[2];
	    },
	    set: function set(value) {
	      return this[2] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'w',
	    get: function get() {
	      return this[3];
	    },
	    set: function set(value) {
	      return this[3] = (0, _common.checkNumber)(value);
	    }
	    /* eslint-enable no-multi-spaces, brace-style, no-return-assign */
	
	  }]);
	
	  return Vector4;
	}(_mathArray2.default), (_applyDecoratedDescriptor(_class.prototype, 'equals', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'equals'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'exactEquals', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'exactEquals'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'distance', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'distance'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'dist', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'dist'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'angle', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'angle'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'add', [_decorators.spread], Object.getOwnPropertyDescriptor(_class.prototype, 'add'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'subtract', [_decorators.spread], Object.getOwnPropertyDescriptor(_class.prototype, 'subtract'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'multiply', [_decorators.spread], Object.getOwnPropertyDescriptor(_class.prototype, 'multiply'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'divide', [_decorators.spread], Object.getOwnPropertyDescriptor(_class.prototype, 'divide'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'negate', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'negate'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'inverse', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'inverse'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'normalize', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'normalize'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'dot', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'dot'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'cross', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'cross'), _class.prototype)), _class);
	exports.default = Vector4;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _desc, _value, _class;
	
	var _mathArray = __webpack_require__(240);
	
	var _mathArray2 = _interopRequireDefault(_mathArray);
	
	var _common = __webpack_require__(228);
	
	var _vector = __webpack_require__(239);
	
	var _vector2 = _interopRequireDefault(_vector);
	
	var _vector3 = __webpack_require__(242);
	
	var _vector4 = _interopRequireDefault(_vector3);
	
	var _vector5 = __webpack_require__(243);
	
	var _vector6 = _interopRequireDefault(_vector5);
	
	var _decorators = __webpack_require__(241);
	
	var _glMatrix = __webpack_require__(229);
	
	var _validators = __webpack_require__(245);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
	  var desc = {};
	  Object['ke' + 'ys'](descriptor).forEach(function (key) {
	    desc[key] = descriptor[key];
	  });
	  desc.enumerable = !!desc.enumerable;
	  desc.configurable = !!desc.configurable;
	
	  if ('value' in desc || desc.initializer) {
	    desc.writable = true;
	  }
	
	  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
	    return decorator(target, property, desc) || desc;
	  }, desc);
	
	  if (context && desc.initializer !== void 0) {
	    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
	    desc.initializer = undefined;
	  }
	
	  if (desc.initializer === void 0) {
	    Object['define' + 'Property'](target, property, desc);
	    desc = null;
	  }
	
	  return desc;
	}
	
	var Matrix4 = (_class = function (_MathArray) {
	  _inherits(Matrix4, _MathArray);
	
	  function Matrix4() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _classCallCheck(this, Matrix4);
	
	    var _this = _possibleConstructorReturn(this, (Matrix4.__proto__ || Object.getPrototypeOf(Matrix4)).call(this));
	
	    if (Array.isArray(args[0]) && arguments.length === 1) {
	      _this.copy(args[0]);
	    } else {
	      _this.identity();
	    }
	    return _this;
	  }
	
	  _createClass(Matrix4, [{
	    key: 'setRowMajor',
	
	
	    /* eslint-disable max-params */
	    value: function setRowMajor() {
	      var m00 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
	      var m10 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	      var m20 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
	      var m30 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
	      var m01 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
	      var m11 = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;
	      var m21 = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;
	      var m31 = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;
	      var m02 = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 0;
	      var m12 = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 0;
	      var m22 = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : 1;
	      var m32 = arguments.length > 11 && arguments[11] !== undefined ? arguments[11] : 0;
	      var m03 = arguments.length > 12 && arguments[12] !== undefined ? arguments[12] : 0;
	      var m13 = arguments.length > 13 && arguments[13] !== undefined ? arguments[13] : 0;
	      var m23 = arguments.length > 14 && arguments[14] !== undefined ? arguments[14] : 0;
	      var m33 = arguments.length > 15 && arguments[15] !== undefined ? arguments[15] : 1;
	
	      _glMatrix.mat4.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'setColumnMajor',
	    value: function setColumnMajor() {
	      var m00 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
	      var m01 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	      var m02 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
	      var m03 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
	      var m10 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
	      var m11 = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;
	      var m12 = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;
	      var m13 = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;
	      var m20 = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 0;
	      var m21 = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 0;
	      var m22 = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : 1;
	      var m23 = arguments.length > 11 && arguments[11] !== undefined ? arguments[11] : 0;
	      var m30 = arguments.length > 12 && arguments[12] !== undefined ? arguments[12] : 0;
	      var m31 = arguments.length > 13 && arguments[13] !== undefined ? arguments[13] : 0;
	      var m32 = arguments.length > 14 && arguments[14] !== undefined ? arguments[14] : 0;
	      var m33 = arguments.length > 15 && arguments[15] !== undefined ? arguments[15] : 1;
	
	      _glMatrix.mat4.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);
	      this.check();
	      return this;
	    }
	    /* eslint-enable max-params */
	
	  }, {
	    key: 'equals',
	    value: function equals(a) {
	      return _glMatrix.mat4.equals(this, a);
	    }
	  }, {
	    key: 'exactEquals',
	    value: function exactEquals(a) {
	      return _glMatrix.mat4.exactEquals(this, a);
	    }
	  }, {
	    key: 'toString',
	    value: function toString() {
	      if (_common.glMatrix.printRowMajor) {
	        _glMatrix.mat4.str(this);
	      } else {
	        _glMatrix.mat4.str(this);
	      }
	    }
	
	    // Row major setters and getters
	    /* eslint-disable no-multi-spaces, brace-style, no-return-assign */
	
	  }, {
	    key: 'determinant',
	    value: function determinant() {
	      return _glMatrix.mat4.determinant(this);
	    }
	  }, {
	    key: 'getRotation',
	    value: function getRotation() {}
	
	    // Constructors
	
	  }, {
	    key: 'identity',
	    value: function identity() {
	      _glMatrix.mat4.identity(this);
	      this.check();
	      return this;
	    }
	
	    // Generates a frustum matrix with the given bounds
	    // left  Number  Left bound of the frustum
	    // right Number  Right bound of the frustum
	    // bottom  Number  Bottom bound of the frustum
	    // top Number  Top bound of the frustum
	    // near  Number  Near bound of the frustum
	    // far Number  Far bound of the frustum
	
	  }, {
	    key: 'frustum',
	    value: function frustum(_ref) {
	      var left = _ref.left,
	          right = _ref.right,
	          bottom = _ref.bottom,
	          top = _ref.top,
	          near = _ref.near,
	          far = _ref.far;
	
	      _glMatrix.mat4.frustum(this, left, right, bottom, top, near, far);
	      this.check();
	      return this;
	    }
	
	    // Generates a look-at matrix with the given eye position, focal point,
	    // and up axis
	    // eye vec3  Position of the viewer
	    // center  vec3  Point the viewer is looking at
	    // up  vec3  vec3 pointing up
	
	  }, {
	    key: 'lookAt',
	    value: function lookAt() {
	      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          eye = _ref2.eye,
	          _ref2$center = _ref2.center,
	          center = _ref2$center === undefined ? [0, 0, 0] : _ref2$center,
	          _ref2$up = _ref2.up,
	          up = _ref2$up === undefined ? [0, 1, 0] : _ref2$up;
	
	      _glMatrix.mat4.lookAt(this, eye, center, up);
	      this.check();
	      return this;
	    }
	
	    // Generates a orthogonal projection matrix with the given bounds
	    // left  number  Left bound of the frustum
	    // right number  Right bound of the frustum
	    // bottom  number  Bottom bound of the frustum
	    // top number  Top bound of the frustum
	    // near  number  Near bound of the frustum
	    // far number  Far bound of the frustum
	
	  }, {
	    key: 'ortho',
	    value: function ortho(_ref3) {
	      var left = _ref3.left,
	          right = _ref3.right,
	          bottom = _ref3.bottom,
	          top = _ref3.top,
	          _ref3$near = _ref3.near,
	          near = _ref3$near === undefined ? 0.1 : _ref3$near,
	          _ref3$far = _ref3.far,
	          far = _ref3$far === undefined ? 500 : _ref3$far;
	
	      _glMatrix.mat4.ortho(this, left, right, bottom, top, near, far);
	      this.check();
	      return this;
	    }
	
	    // Generates a perspective projection matrix with the given bounds
	    // fovy  number  Vertical field of view in radians
	    // aspect  number  Aspect ratio. typically viewport width/height
	    // near  number  Near bound of the frustum
	    // far number  Far bound of the frustum
	
	  }, {
	    key: 'perspective',
	    value: function perspective() {
	      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref4$fov = _ref4.fov,
	          fov = _ref4$fov === undefined ? 45 * Math.PI / 180 : _ref4$fov,
	          _ref4$aspect = _ref4.aspect,
	          aspect = _ref4$aspect === undefined ? 1 : _ref4$aspect,
	          _ref4$near = _ref4.near,
	          near = _ref4$near === undefined ? 0.1 : _ref4$near,
	          _ref4$far = _ref4.far,
	          far = _ref4$far === undefined ? 500 : _ref4$far;
	
	      if (fov > Math.PI * 2) {
	        throw Error('radians');
	      }
	      _glMatrix.mat4.perspective(this, fov, aspect, near, far);
	      this.check();
	      return this;
	    }
	
	    // Generates a perspective projection matrix with the given field of view.
	    // This is primarily useful for generating projection matrices to be used
	    // with the still experiemental WebVR API.
	    // fov Object  Object containing the following values:
	    //   upDegrees, downDegrees, leftDegrees, rightDegrees
	    // near  number  Near bound of the frustum
	    // far number  Far bound of the frustum
	
	  }, {
	    key: 'perspectiveFromFieldOfView',
	    value: function perspectiveFromFieldOfView(out, fov, near, far) {
	      _glMatrix.mat4.perspectiveFromFieldOfView(out, fov, near, far);
	      this.check();
	      return this;
	    }
	
	    // Calculates a 4x4 matrix from the given quaternion
	    // q quat  Quaternion to create matrix from
	
	  }, {
	    key: 'fromQuaternion',
	    value: function fromQuaternion(q) {
	      _glMatrix.mat4.fromQuat(this, q);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'fromQuat',
	    value: function fromQuat(q) {
	      _glMatrix.mat4.fromQuat(this, q);
	      this.check();
	      return this;
	    }
	
	    // Creates a matrix from a given angle around a given axis
	    // his is equivalent to (but much faster than): mat4.identity(dest);
	    // mat4.rotate(dest, dest, rad, axis);
	    // rad Number  the angle to rotate the matrix by
	    // axis  vec3  the axis to rotate around
	
	  }, {
	    key: 'fromRotation',
	    value: function fromRotation(rad, axis) {
	      _glMatrix.mat4.fromRotation(this, rad, axis);
	      this.check();
	      return this;
	    }
	
	    // Creates a matrix from a quaternion rotation and vector translation
	    // This is equivalent to (but much faster than): mat4.identity(dest);
	    // mat4.translate(dest, vec);
	    // var quatMat = mat4.create();
	    // quat4.toMat4(quat, quatMat);
	    // mat4.multiply(dest, quatMat);
	    // q quat4 Rotation quaternion
	    // v vec3  Translation vector
	
	  }, {
	    key: 'fromRotationTranslation',
	    value: function fromRotationTranslation(q, v) {
	      _glMatrix.mat4.fromRotationTranslation(this, q, v);
	      this.check();
	      return this;
	    }
	
	    // Creates a matrix from a quaternion rotation,
	    // vector translation and vector scale
	    // This is equivalent to (but much faster than):
	    // mat4.identity(dest);
	    // mat4.translate(dest, vec);
	    // var quatMat = mat4.create();
	    // quat4.toMat4(quat, quatMat);
	    // mat4.multiply(dest, quatMat);
	    // mat4.scale(dest, scale)
	    // q quat4 Rotation quaternion
	    // v vec3  Translation vector
	    // s vec3  Scaling vector
	
	  }, {
	    key: 'fromRotationTranslationScale',
	    value: function fromRotationTranslationScale(q, v, s) {
	      _glMatrix.mat4.fromRotationTranslationScale(this, q, v, s);
	      this.check();
	      return this;
	    }
	
	    // Creates a matrix from a quaternion rotation, vector translation and
	    // vector scale, rotating and scaling around the given origin
	    // This is equivalent to (but much faster than):
	    // mat4.identity(dest);
	    // mat4.translate(dest, vec);
	    // mat4.translate(dest, origin);
	    // var quatMat = mat4.create();
	    // quat4.toMat4(quat, quatMat);
	    // mat4.multiply(dest, quatMat);
	    // mat4.scale(dest, scale)
	    // mat4.translate(dest, negativeOrigin);
	    // q quat4 Rotation quaternion
	    // v vec3  Translation vector
	    // s vec3  Scaling vector
	    // o vec3  The origin vector around which to scale and rotate
	
	  }, {
	    key: 'fromRotationTranslationScaleOrigin',
	    value: function fromRotationTranslationScaleOrigin(q, v, s, o) {
	      _glMatrix.mat4.fromRotationTranslationScaleOrigin(this, q, v, s, o);
	      this.check();
	      return this;
	    }
	
	    // Creates a matrix from a vector scaling This is equivalent to
	    // (but much faster than):
	    // mat4.identity(dest); mat4.scale(dest, dest, vec);
	    // v vec3  Scaling vector
	
	  }, {
	    key: 'fromScaling',
	    value: function fromScaling(v) {
	      _glMatrix.mat4.fromScaling(this, v);
	      this.check();
	      return this;
	    }
	
	    // Creates a matrix from a vector translation
	    // This is equivalent to (but much faster than):
	    // mat4.identity(dest); mat4.translate(dest, dest, vec);
	    // v vec3  Translation vector
	
	  }, {
	    key: 'fromTranslation',
	    value: function fromTranslation(v) {
	      _glMatrix.mat4.fromTranslation(this, v);
	      this.check();
	      return this;
	    }
	
	    // Create a new mat4 with the given values
	    // m00 Number  Component in column 0, row 0 position (index 0)
	    // m01 Number  Component in column 0, row 1 position (index 1)
	    // m02 Number  Component in column 0, row 2 position (index 2)
	    // m03 Number  Component in column 0, row 3 position (index 3)
	    // m10 Number  Component in column 1, row 0 position (index 4)
	    // m11 Number  Component in column 1, row 1 position (index 5)
	    // m12 Number  Component in column 1, row 2 position (index 6)
	    // m13 Number  Component in column 1, row 3 position (index 7)
	    // m20 Number  Component in column 2, row 0 position (index 8)
	    // m21 Number  Component in column 2, row 1 position (index 9)
	    // m22 Number  Component in column 2, row 2 position (index 10)
	    // m23 Number  Component in column 2, row 3 position (index 11)
	    // m30 Number  Component in column 3, row 0 position (index 12)
	    // m31 Number  Component in column 3, row 1 position (index 13)
	    // m32 Number  Component in column 3, row 2 position (index 14)
	    // m33 Number  Component in column 3, row 3 position (index 15)
	    // fromValues(m00, m01, m02, m03, m10, m11, m12, m13,
	    //   m20, m21, m22, m23, m30, m31, m32, m33) {mat4}
	
	    // Creates a matrix from the given angle around the X axis
	    // This is equivalent to (but much faster than):
	    // mat4.identity(dest);
	    // mat4.rotateX(dest, dest, rad);
	    // rad Number  the angle to rotate the matrix by
	
	  }, {
	    key: 'fromXRotation',
	    value: function fromXRotation(rad) {
	      _glMatrix.mat4.fromXRotation(this, rad);
	      this.check();
	      return this;
	    }
	
	    // Creates a matrix from the given angle around the Y axis
	    // This is equivalent to (but much faster than):
	    // mat4.identity(dest);
	    // mat4.rotateY(dest, dest, rad);
	    // rad Number  the angle to rotate the matrix by
	
	  }, {
	    key: 'fromYRotation',
	    value: function fromYRotation(rad) {
	      _glMatrix.mat4.fromYRotation(this, rad);
	      this.check();
	      return this;
	    }
	
	    // Creates a matrix from the given angle around the Z axis
	    // This is equivalent to (but much faster than):
	    // mat4.identity(dest);
	    // mat4.rotateZ(dest, dest, rad);
	    // rad Number  the angle to rotate the matrix by
	
	  }, {
	    key: 'fromZRotation',
	    value: function fromZRotation(rad) {
	      _glMatrix.mat4.fromZRotation(this, rad);
	      this.check();
	      return this;
	    }
	
	    // Modifiers
	
	  }, {
	    key: 'transpose',
	    value: function transpose() {
	      _glMatrix.mat4.transpose(this, this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'invert',
	    value: function invert() {
	      _glMatrix.mat4.invert(this, this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'adjoint',
	    value: function adjoint() {
	      _glMatrix.mat4.adjoint(this, this);
	      this.check();
	      return this;
	    }
	
	    // Operations
	
	  }, {
	    key: 'add',
	    value: function add(a, b) {
	      _glMatrix.mat4.add(this, this, a);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'multiplyLeft',
	    value: function multiplyLeft(a) {
	      _glMatrix.mat4.multiply(this, a, this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'multiplyRight',
	    value: function multiplyRight(a) {
	      _glMatrix.mat4.multiply(this, this, a);
	      this.check();
	      return this;
	    }
	
	    // Rotates a matrix by the given angle around the X axis
	    // uses SIMD if available and enabled
	
	  }, {
	    key: 'rotateX',
	    value: function rotateX(radians) {
	      _glMatrix.mat4.rotateX(this, this, radians);
	      this.check();
	      return this;
	    }
	
	    // Rotates a matrix by the given angle around the Y axis.
	    // Uses SIMD if available and enabled
	
	  }, {
	    key: 'rotateY',
	    value: function rotateY(radians) {
	      _glMatrix.mat4.rotateY(this, this, radians);
	      this.check();
	      return this;
	    }
	
	    // Rotates a matrix by the given angle around the Z axis.
	    // Uses SIMD if available and enabled
	
	  }, {
	    key: 'rotateZ',
	    value: function rotateZ(radians) {
	      _glMatrix.mat4.rotateZ(this, this, radians);
	      this.check();
	      return this;
	    }
	
	    // TODO - may not be needed
	    /* eslint-disable max-statements */
	
	  }, {
	    key: 'rotateXYZ',
	    value: function rotateXYZ(_ref5) {
	      var _ref6 = _slicedToArray(_ref5, 3),
	          rx = _ref6[0],
	          ry = _ref6[1],
	          rz = _ref6[2];
	
	      var d11 = this[0];
	      var d12 = this[1];
	      var d13 = this[2];
	      var d14 = this[3];
	      var d21 = this[4];
	      var d22 = this[5];
	      var d23 = this[6];
	      var d24 = this[7];
	      var d31 = this[8];
	      var d32 = this[9];
	      var d33 = this[10];
	      var d34 = this[11];
	      var crx = Math.cos(rx);
	      var cry = Math.cos(ry);
	      var crz = Math.cos(rz);
	      var srx = Math.sin(rx);
	      var sry = Math.sin(ry);
	      var srz = Math.sin(rz);
	      var m11 = cry * crz;
	      var m21 = -crx * srz + srx * sry * crz;
	      var m31 = srx * srz + crx * sry * crz;
	      var m12 = cry * srz;
	      var m22 = crx * crz + srx * sry * srz;
	      var m32 = -srx * crz + crx * sry * srz;
	      var m13 = -sry;
	      var m23 = srx * cry;
	      var m33 = crx * cry;
	
	      this[0] = d11 * m11 + d21 * m12 + d31 * m13;
	      this[1] = d12 * m11 + d22 * m12 + d32 * m13;
	      this[2] = d13 * m11 + d23 * m12 + d33 * m13;
	      this[3] = d14 * m11 + d24 * m12 + d34 * m13;
	
	      this[4] = d11 * m21 + d21 * m22 + d31 * m23;
	      this[5] = d12 * m21 + d22 * m22 + d32 * m23;
	      this[6] = d13 * m21 + d23 * m22 + d33 * m23;
	      this[7] = d14 * m21 + d24 * m22 + d34 * m23;
	
	      this[8] = d11 * m31 + d21 * m32 + d31 * m33;
	      this[9] = d12 * m31 + d22 * m32 + d32 * m33;
	      this[10] = d13 * m31 + d23 * m32 + d33 * m33;
	      this[11] = d14 * m31 + d24 * m32 + d34 * m33;
	
	      this.check();
	      return this;
	    }
	    /* eslint-enable max-statements */
	
	  }, {
	    key: 'scale',
	    value: function scale(vec) {
	      _glMatrix.mat4.scale(this, this, vec);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'translate',
	    value: function translate(vec) {
	      _glMatrix.mat4.translate(this, this, vec);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'transformVector2',
	    value: function transformVector2(vector) {
	      var out = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _vector2.default();
	
	      _glMatrix.vec2.transformMat4(out, vector, this);
	      (0, _validators.checkVector2)(out);
	      return out;
	    }
	  }, {
	    key: 'transformVector3',
	    value: function transformVector3(vector) {
	      var out = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _vector4.default();
	
	      _glMatrix.vec3.transformMat4(out, vector, this);
	      (0, _validators.checkVector3)(out);
	      return out;
	    }
	  }, {
	    key: 'transformVector4',
	    value: function transformVector4(vector) {
	      var out = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _vector6.default();
	
	      _glMatrix.vec4.transformMat4(out, vector, this);
	      (0, _validators.checkVector4)(out);
	      return out;
	    }
	
	    // Transforms any 2, 3 or 4 element vector
	    // returns a newly minted Vector2, Vector3 or Vector4
	
	  }, {
	    key: 'transformVector',
	    value: function transformVector(vector) {
	      switch (vector.length) {
	        case 2:
	          return this.transformVector2(vector);
	        case 3:
	          return this.transformVector3(vector);
	        case 4:
	          return this.transformVector4(vector);
	        default:
	          throw new Error('Illegal vector');
	      }
	    }
	  }, {
	    key: 'ELEMENTS',
	    get: function get() {
	      return 16;
	    }
	  }, {
	    key: 'm00',
	    get: function get() {
	      return this[0];
	    },
	    set: function set(value) {
	      return this[0] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'm01',
	    get: function get() {
	      return this[4];
	    },
	    set: function set(value) {
	      return this[4] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'm02',
	    get: function get() {
	      return this[8];
	    },
	    set: function set(value) {
	      return this[8] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'm03',
	    get: function get() {
	      return this[12];
	    },
	    set: function set(value) {
	      return this[12] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'm10',
	    get: function get() {
	      return this[1];
	    },
	    set: function set(value) {
	      return this[1] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'm11',
	    get: function get() {
	      return this[5];
	    },
	    set: function set(value) {
	      return this[5] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'm12',
	    get: function get() {
	      return this[9];
	    },
	    set: function set(value) {
	      return this[9] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'm13',
	    get: function get() {
	      return this[13];
	    },
	    set: function set(value) {
	      return this[13] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'm20',
	    get: function get() {
	      return this[2];
	    },
	    set: function set(value) {
	      return this[2] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'm21',
	    get: function get() {
	      return this[6];
	    },
	    set: function set(value) {
	      return this[6] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'm22',
	    get: function get() {
	      return this[10];
	    },
	    set: function set(value) {
	      return this[10] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'm23',
	    get: function get() {
	      return this[14];
	    },
	    set: function set(value) {
	      return this[14] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'm30',
	    get: function get() {
	      return this[3];
	    },
	    set: function set(value) {
	      return this[3] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'm31',
	    get: function get() {
	      return this[7];
	    },
	    set: function set(value) {
	      return this[7] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'm32',
	    get: function get() {
	      return this[11];
	    },
	    set: function set(value) {
	      return this[11] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'm33',
	    get: function get() {
	      return this[15];
	    },
	    set: function set(value) {
	      return this[15] = (0, _common.checkNumber)(value);
	    }
	    /* eslint-enable no-multi-spaces, brace-style, no-return-assign */
	
	    // Accessors
	
	  }]);
	
	  return Matrix4;
	}(_mathArray2.default), (_applyDecoratedDescriptor(_class.prototype, 'equals', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'equals'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'exactEquals', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'exactEquals'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'toString', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'toString'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'determinant', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'determinant'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'lookAt', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'lookAt'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'ortho', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'ortho'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'perspective', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'perspective'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'perspectiveFromFieldOfView', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'perspectiveFromFieldOfView'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'transpose', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'transpose'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'invert', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'invert'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'adjoint', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'adjoint'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'add', [_decorators.spread], Object.getOwnPropertyDescriptor(_class.prototype, 'add'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'multiplyLeft', [_decorators.spread], Object.getOwnPropertyDescriptor(_class.prototype, 'multiplyLeft'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'multiplyRight', [_decorators.spread], Object.getOwnPropertyDescriptor(_class.prototype, 'multiplyRight'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'scale', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'scale'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'translate', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'translate'), _class.prototype)), _class);
	exports.default = Matrix4;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.checkArguments = checkArguments;
	exports.validateVector2 = validateVector2;
	exports.checkVector2 = checkVector2;
	exports.validateVector3 = validateVector3;
	exports.checkVector3 = checkVector3;
	exports.validateVector4 = validateVector4;
	exports.checkVector4 = checkVector4;
	exports.validateQuaternion = validateQuaternion;
	exports.checkQuaternion = checkQuaternion;
	exports.validateMatrix2 = validateMatrix2;
	exports.checkMatrix2 = checkMatrix2;
	exports.validateMatrix2d = validateMatrix2d;
	exports.checkMatrix2d = checkMatrix2d;
	exports.validateMatrix3 = validateMatrix3;
	exports.checkMatrix3 = checkMatrix3;
	exports.validateMatrix4 = validateMatrix4;
	exports.checkMatrix4 = checkMatrix4;
	
	var _glMatrix = __webpack_require__(229);
	
	function checkArguments() {
	  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	    args[_key] = arguments[_key];
	  }
	
	  for (var i = 0; i < args.length; ++i) {
	    if (args[i] === undefined) {
	      throw new Error('Invalid math argument');
	    }
	  }
	}
	
	function validateVector2(v) {
	  return v.length === 2 && Number.isFinite(v[0]) && Number.isFinite(v[1]);
	}
	
	function checkVector2(v) {
	  if (_glMatrix.glMatrix.debug && !validateVector2(v)) {
	    throw new Error('Invalid Vector2');
	  }
	}
	
	function validateVector3(v) {
	  return v.length === 3 && Number.isFinite(v[0]) && Number.isFinite(v[1]) && Number.isFinite(v[2]);
	}
	
	function checkVector3(v) {
	  if (_glMatrix.glMatrix.debug && !validateVector3(v)) {
	    throw new Error('Invalid Vector3');
	  }
	}
	
	function validateVector4(v) {
	  return v.length === 4 && Number.isFinite(v[0]) && Number.isFinite(v[1]) && Number.isFinite(v[2]) && Number.isFinite(v[3]);
	}
	
	function checkVector4(v) {
	  if (_glMatrix.glMatrix.debug && !validateVector4(v)) {
	    throw new Error('Invalid Vector4');
	  }
	}
	
	function validateQuaternion(q) {
	  return q.length === 4 && Number.isFinite(q[0]) && Number.isFinite(q[1]) && Number.isFinite(q[2]) && Number.isFinite(q[3]);
	}
	
	function checkQuaternion(q) {
	  if (_glMatrix.glMatrix.debug && !validateQuaternion(q)) {
	    throw new Error('Invalid Quaternion');
	  }
	}
	
	function validateMatrix2(m) {
	  return m.length === 4 && Number.isFinite(m[0]) && Number.isFinite(m[1]) && Number.isFinite(m[2]) && Number.isFinite(m[3]);
	}
	
	function checkMatrix2(m) {
	  if (_glMatrix.glMatrix.debug && !validateMatrix2(m)) {
	    throw new Error('Invalid Matrix2');
	  }
	}
	
	function validateMatrix2d(m) {
	  return m.length === 6 && Number.isFinite(m[0]) && Number.isFinite(m[1]) && Number.isFinite(m[2]) && Number.isFinite(m[3]) && Number.isFinite(m[4]) && Number.isFinite(m[5]);
	}
	
	function checkMatrix2d(m) {
	  if (_glMatrix.glMatrix.debug && !validateMatrix2d(m)) {
	    throw new Error('Invalid Matrix2d');
	  }
	}
	
	function validateMatrix3(m) {
	  return m.length === 9 && Number.isFinite(m[0]) && Number.isFinite(m[1]) && Number.isFinite(m[2]) && Number.isFinite(m[3]) && Number.isFinite(m[4]) && Number.isFinite(m[5]) && Number.isFinite(m[6]) && Number.isFinite(m[7]) && Number.isFinite(m[8]);
	}
	
	function checkMatrix3(m) {
	  if (_glMatrix.glMatrix.debug && !validateMatrix3(m)) {
	    throw new Error('Invalid Matrix3');
	  }
	}
	
	function validateMatrix4(m) {
	  return m.length === 16 && Number.isFinite(m[0]) && Number.isFinite(m[1]) && Number.isFinite(m[2]) && Number.isFinite(m[3]) && Number.isFinite(m[4]) && Number.isFinite(m[5]) && Number.isFinite(m[6]) && Number.isFinite(m[7]) && Number.isFinite(m[8]) && Number.isFinite(m[9]) && Number.isFinite(m[10]) && Number.isFinite(m[11]) && Number.isFinite(m[12]) && Number.isFinite(m[13]) && Number.isFinite(m[14]) && Number.isFinite(m[15]);
	}
	
	function checkMatrix4(m) {
	  if (_glMatrix.glMatrix.debug && !validateMatrix4(m)) {
	    throw new Error('Invalid Matrix4');
	  }
	}
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _desc, _value, _class;
	
	var _mathArray = __webpack_require__(240);
	
	var _mathArray2 = _interopRequireDefault(_mathArray);
	
	var _common = __webpack_require__(228);
	
	var _glMatrix = __webpack_require__(229);
	
	var _decorators = __webpack_require__(241);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
	  var desc = {};
	  Object['ke' + 'ys'](descriptor).forEach(function (key) {
	    desc[key] = descriptor[key];
	  });
	  desc.enumerable = !!desc.enumerable;
	  desc.configurable = !!desc.configurable;
	
	  if ('value' in desc || desc.initializer) {
	    desc.writable = true;
	  }
	
	  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
	    return decorator(target, property, desc) || desc;
	  }, desc);
	
	  if (context && desc.initializer !== void 0) {
	    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
	    desc.initializer = undefined;
	  }
	
	  if (desc.initializer === void 0) {
	    Object['define' + 'Property'](target, property, desc);
	    desc = null;
	  }
	
	  return desc;
	}
	
	var Quaternion = (_class = function (_MathArray) {
	  _inherits(Quaternion, _MathArray);
	
	  // Creates a new identity quat
	  function Quaternion() {
	    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
	    var w = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
	
	    _classCallCheck(this, Quaternion);
	
	    var _this = _possibleConstructorReturn(this, (Quaternion.__proto__ || Object.getPrototypeOf(Quaternion)).call(this));
	
	    if (Array.isArray(x) && arguments.length === 1) {
	      _this.copy(x);
	    } else {
	      _this.set(x, y, z, w);
	    }
	    return _this;
	  }
	
	  // Creates a quaternion from the given 3x3 rotation matrix.
	  // NOTE: The resultant quaternion is not normalized, so you should
	  // be sure to renormalize the quaternion yourself where necessary.
	
	
	  _createClass(Quaternion, [{
	    key: 'fromMatrix3',
	    value: function fromMatrix3(m) {
	      _glMatrix.quat.fromMat3(this, m);
	      this.check();
	      return this;
	    }
	
	    // Creates a new quat initialized with the given values
	
	  }, {
	    key: 'fromValues',
	    value: function fromValues(x, y, z, w) {
	      return this.set(x, y, z, w);
	    }
	
	    // Set a quat to the identity quaternion
	
	  }, {
	    key: 'identity',
	    value: function identity() {
	      _glMatrix.quat.identity(this);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'equals',
	    value: function equals(quaternion) {
	      return _glMatrix.quat.equals(this, quaternion);
	    }
	
	    // Returns whether or not the quaternions have exactly the same elements
	    // in the same position (when compared with ===)
	
	  }, {
	    key: 'exactEquals',
	    value: function exactEquals(quaternion) {
	      return _glMatrix.quat.exactEquals(this, quaternion);
	    }
	
	    // Getters/setters
	    /* eslint-disable no-multi-spaces, brace-style, no-return-assign */
	
	  }, {
	    key: 'length',
	
	    /* eslint-enable no-multi-spaces, brace-style, no-return-assign */
	
	    // Calculates the length of a quat
	    value: function length() {
	      return _glMatrix.quat.length(this);
	    }
	
	    // Calculates the squared length of a quat
	
	  }, {
	    key: 'squaredLength',
	    value: function squaredLength(a) {
	      return _glMatrix.quat.squaredLength(this);
	    }
	
	    // Calculates the dot product of two quat's
	    // @return {Number}
	
	  }, {
	    key: 'dot',
	    value: function dot(a, b) {
	      if (b !== undefined) {
	        throw new Error('Quaternion.dot only takes one argument');
	      }
	      return _glMatrix.quat.dot(this, a);
	    }
	
	    // Gets the rotation axis and angle for a given quaternion.
	    // If a quaternion is created with setAxisAngle, this method will
	    // return the same values as providied in the original parameter
	    // list OR functionally equivalent values.
	    // Example: The quaternion formed by axis [0, 0, 1] and angle -90
	    // is the same as the quaternion formed by [0, 0, 1] and 270.
	    // This method favors the latter.
	    // @return {{[x,y,z], Number}}
	
	  }, {
	    key: 'getAxisAngle',
	    value: function getAxisAngle() {
	      var axis = [];
	      var angle = _glMatrix.quat.getAxisAngle(axis, this);
	      return { axis: axis, angle: angle };
	    }
	
	    // MODIFIERS
	
	    // Sets a quaternion to represent the shortest rotation from one vector
	    // to another. Both vectors are assumed to be unit length.
	
	  }, {
	    key: 'rotationTo',
	    value: function rotationTo(vectorA, vectorB) {
	      _glMatrix.quat.rotationTo(this, vectorA, vectorB);
	      this.check();
	      return this;
	    }
	
	    // Sets the specified quaternion with values corresponding to the given axes.
	    // Each axis is a vec3 and is expected to be unit length and perpendicular
	    // to all other specified axes.
	    // setAxes() {
	    //   Number
	    // }
	
	    // Performs a spherical linear interpolation with two control points
	    // sqlerp() {
	    //   Number;
	    // }
	
	    // Adds two quat's
	
	  }, {
	    key: 'add',
	    value: function add(a, b) {
	      if (b !== undefined) {
	        throw new Error('Quaternion.add only takes one argument');
	      }
	      _glMatrix.quat.add(this, a);
	      this.check();
	      return this;
	    }
	
	    // Calculates the W component of a quat from the X, Y, and Z components.
	    // Assumes that quaternion is 1 unit in length.
	    // Any existing W component will be ignored.
	
	  }, {
	    key: 'calculateW',
	    value: function calculateW() {
	      _glMatrix.quat.calculateW(this, this);
	      this.check();
	      return this;
	    }
	
	    // Calculates the conjugate of a quat If the quaternion is normalized,
	    // this function is faster than quat.inverse and produces the same result.
	
	  }, {
	    key: 'conjugate',
	    value: function conjugate() {
	      _glMatrix.quat.conjugate(this, this);
	      this.check();
	      return this;
	    }
	
	    // Calculates the inverse of a quat
	
	  }, {
	    key: 'invert',
	    value: function invert() {
	      _glMatrix.quat.invert(this, this);
	      this.check();
	      return this;
	    }
	
	    // Performs a linear interpolation between two quat's
	
	  }, {
	    key: 'lerp',
	    value: function lerp(a, b, t) {
	      _glMatrix.quat.lerp(this, a, b, t);
	      this.check();
	      return this;
	    }
	
	    // Multiplies two quat's
	
	  }, {
	    key: 'multiply',
	    value: function multiply(a, b) {
	      if (b !== undefined) {
	        throw new Error('Quaternion.multiply only takes one argument');
	      }
	      _glMatrix.quat.multiply(this, this, b);
	      this.check();
	      return this;
	    }
	
	    // Normalize a quat
	
	  }, {
	    key: 'normalize',
	    value: function normalize() {
	      _glMatrix.quat.normalize(this, this);
	      this.check();
	      return this;
	    }
	
	    // Rotates a quaternion by the given angle about the X axis
	
	  }, {
	    key: 'rotateX',
	    value: function rotateX(rad) {
	      _glMatrix.quat.rotateX(this, this, rad);
	      this.check();
	      return this;
	    }
	
	    // Rotates a quaternion by the given angle about the Y axis
	
	  }, {
	    key: 'rotateY',
	    value: function rotateY(rad) {
	      _glMatrix.quat.rotateY(this, this, rad);
	      this.check();
	      return this;
	    }
	
	    // Rotates a quaternion by the given angle about the Z axis
	
	  }, {
	    key: 'rotateZ',
	    value: function rotateZ(rad) {
	      _glMatrix.quat.rotateZ(this, this, rad);
	      this.check();
	      return this;
	    }
	
	    // Scales a quat by a scalar number
	
	  }, {
	    key: 'scale',
	    value: function scale(b) {
	      _glMatrix.quat.scale(this, this, b);
	      this.check();
	      return this;
	    }
	
	    // Set the components of a quat to the given values
	
	  }, {
	    key: 'set',
	    value: function set(i, j, k, l) {
	      _glMatrix.quat.set(this, i, j, k, l);
	      this.check();
	      return this;
	    }
	
	    // Sets a quat from the given angle and rotation axis, then returns it.
	
	  }, {
	    key: 'setAxisAngle',
	    value: function setAxisAngle(axis, rad) {
	      _glMatrix.quat.setAxisAngle(this, axis, rad);
	      this.check();
	      return this;
	    }
	
	    // Performs a spherical linear interpolation between two quat
	
	  }, {
	    key: 'slerp',
	    value: function slerp(a, b, t) {
	      _glMatrix.quat.slerp(this, a, b, t);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'ELEMENTS',
	    get: function get() {
	      return 4;
	    }
	  }, {
	    key: 'x',
	    get: function get() {
	      return this[0];
	    },
	    set: function set(value) {
	      return this[0] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'y',
	    get: function get() {
	      return this[1];
	    },
	    set: function set(value) {
	      return this[1] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'z',
	    get: function get() {
	      return this[2];
	    },
	    set: function set(value) {
	      return this[2] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'w',
	    get: function get() {
	      return this[3];
	    },
	    set: function set(value) {
	      return this[3] = (0, _common.checkNumber)(value);
	    }
	  }]);
	
	  return Quaternion;
	}(_mathArray2.default), (_applyDecoratedDescriptor(_class.prototype, 'equals', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'equals'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'exactEquals', [_decorators.binary], Object.getOwnPropertyDescriptor(_class.prototype, 'exactEquals'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'add', [_decorators.spread], Object.getOwnPropertyDescriptor(_class.prototype, 'add'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'multiply', [_decorators.spread], Object.getOwnPropertyDescriptor(_class.prototype, 'multiply'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'normalize', [_decorators.unary], Object.getOwnPropertyDescriptor(_class.prototype, 'normalize'), _class.prototype)), _class);
	exports.default = Quaternion;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _mathArray = __webpack_require__(240);
	
	var _mathArray2 = _interopRequireDefault(_mathArray);
	
	var _common = __webpack_require__(228);
	
	var _matrix = __webpack_require__(244);
	
	var _quaternion = __webpack_require__(246);
	
	var _vector = __webpack_require__(242);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	// Internal constants
	var ERR_UNKNOWN_ORDER = 'Unknown Euler angle order';
	var ALMOST_ONE = 0.99999;
	
	function validateOrder(value) {
	  return value >= 0 && value < 6;
	}
	
	function checkOrder(value) {
	  if (value < 0 && value >= 6) {
	    throw new Error(ERR_UNKNOWN_ORDER);
	  }
	  return value;
	}
	
	var Euler = function (_MathArray) {
	  _inherits(Euler, _MathArray);
	
	  _createClass(Euler, [{
	    key: 'ELEMENTS',
	    get: function get() {
	      return 4;
	    }
	    /* eslint-enable no-multi-spaces, brace-style, no-return-assign */
	
	    /*
	     * Number|Number[], Number, Number, Number
	     */
	
	  }], [{
	    key: 'rotationOrder',
	    value: function rotationOrder(order) {
	      return Euler.RotationOrders[order];
	    }
	  }, {
	    key: 'ZYX',
	
	
	    // Constants
	    /* eslint-disable no-multi-spaces, brace-style, no-return-assign */
	    get: function get() {
	      return 0;
	    }
	  }, {
	    key: 'YXZ',
	    get: function get() {
	      return 1;
	    }
	  }, {
	    key: 'XZY',
	    get: function get() {
	      return 2;
	    }
	  }, {
	    key: 'ZXY',
	    get: function get() {
	      return 3;
	    }
	  }, {
	    key: 'YZX',
	    get: function get() {
	      return 4;
	    }
	  }, {
	    key: 'XYZ',
	    get: function get() {
	      return 5;
	    }
	  }, {
	    key: 'RollPitchYaw',
	    get: function get() {
	      return 0;
	    }
	  }, {
	    key: 'DefaultOrder',
	    get: function get() {
	      return Euler.ZYX;
	    }
	  }, {
	    key: 'RotationOrders',
	    get: function get() {
	      return ['ZYX', 'YXZ', 'XZY', 'ZXY', 'YZX', 'XYZ'];
	    }
	  }]);
	
	  function Euler() {
	    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
	    var order = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Euler.DefaultOrder;
	
	    _classCallCheck(this, Euler);
	
	    var _this = _possibleConstructorReturn(this, (Euler.__proto__ || Object.getPrototypeOf(Euler)).call(this));
	
	    if (arguments.length > 0 && Array.isArray(arguments[0])) {
	      _this.fromVector3.apply(_this, arguments);
	    } else {
	      _this.set(x, y, z, order);
	    }
	    return _this;
	  }
	
	  // If copied array does contain fourth element, preserves currently set order
	
	
	  _createClass(Euler, [{
	    key: 'copy',
	    value: function copy(array) {
	      for (var i = 0; i < 3; ++i) {
	        this[i] = array[i];
	      }
	      this[3] = Number.isFinite(array[3]) || this.order;
	      this.check();
	      return this;
	    }
	
	    // Sets the three angles, and optionally sets the rotation order
	    // If order is not specified, preserves currently set order
	
	  }, {
	    key: 'set',
	    value: function set() {
	      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	      var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
	      var order = arguments[3];
	
	      this[0] = x;
	      this[1] = y;
	      this[2] = z;
	      this[3] = Number.isFinite(order) ? order : this[3];
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'validate',
	    value: function validate() {
	      return validateOrder(this[3]) && Number.isFinite(this[0]) && Number.isFinite(this[1]) && Number.isFinite(this[2]);
	    }
	
	    // Does not copy the orientation element
	
	  }, {
	    key: 'toArray',
	    value: function toArray() {
	      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	
	      array[offset] = this[0];
	      array[offset + 1] = this[1];
	      array[offset + 2] = this[2];
	      return array;
	    }
	
	    // Copies the orientation element
	
	  }, {
	    key: 'toArray4',
	    value: function toArray4() {
	      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	
	      array[offset] = this[0];
	      array[offset + 1] = this[1];
	      array[offset + 2] = this[2];
	      array[offset + 3] = this[3];
	      return array;
	    }
	  }, {
	    key: 'toVector3',
	    value: function toVector3(optionalResult) {
	      if (optionalResult) {
	        return optionalResult.set(this[0], this[1], this[2]);
	      }
	      return new _vector.Vector3(this[0], this[1], this[2]);
	    }
	
	    /* eslint-disable no-multi-spaces, brace-style, no-return-assign */
	    // x, y, z angle notation (note: only corresponds to axis in XYZ orientation)
	
	  }, {
	    key: 'fromVector3',
	
	    /* eslint-disable no-multi-spaces, brace-style, no-return-assign */
	
	    // Constructors
	    value: function fromVector3(v, order) {
	      return this.set(v[0], v[1], v[2], Number.isFinite(order) ? order : this[3]);
	    }
	
	    // TODO - with and without 4th element
	
	  }, {
	    key: 'fromArray',
	    value: function fromArray(array) {
	      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	
	      this[0] = array[0 + offset];
	      this[1] = array[1 + offset];
	      this[2] = array[2 + offset];
	      if (array[3] !== undefined) {
	        this[3] = array[3];
	      }
	      this.check();
	      return this;
	    }
	
	    // Common ZYX rotation order
	
	  }, {
	    key: 'fromRollPitchYaw',
	    value: function fromRollPitchYaw(roll, pitch, yaw) {
	      return this.set(roll, pitch, yaw, Euler.ZYX);
	    }
	  }, {
	    key: 'fromQuaternion',
	    value: function fromQuaternion(q, order) {
	      this._fromRotationMatrix(_matrix.Matrix4.fromQuaternion(q), order);
	      this.check();
	      return this;
	    }
	  }, {
	    key: 'fromRotationMatrix',
	    value: function fromRotationMatrix(m) {
	      var order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Euler.DefaultOrder;
	
	      this._fromRotationMatrix(m, order);
	      this.check();
	      return this;
	    }
	
	    // ACCESSORS
	
	    // @return {Matrix4} a rotation matrix corresponding to rotations
	    //   per the specified euler angles
	
	  }, {
	    key: 'getRotationMatrix',
	    value: function getRotationMatrix() {
	      var m = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new _matrix.Matrix4();
	
	      this._getRotationMatrix(m);
	      return m;
	    }
	  }, {
	    key: 'getQuaternion',
	    value: function getQuaternion() {
	      var q = new _quaternion.Quaternion();
	      switch (this[4]) {
	        case Euler.XYZ:
	          return q.rotateX(this[0]).rotateY(this[1]).rotateZ(this[2]);
	        case Euler.YXZ:
	          return q.rotateY(this[0]).rotateX(this[1]).rotateZ(this[2]);
	        case Euler.ZXY:
	          return q.rotateZ(this[0]).rotateX(this[1]).rotateY(this[2]);
	        case Euler.ZYX:
	          return q.rotateZ(this[0]).rotateY(this[1]).rotateX(this[2]);
	        case Euler.YZX:
	          return q.rotateY(this[0]).rotateZ(this[1]).rotateX(this[2]);
	        case Euler.XZY:
	          return q.rotateX(this[0]).rotateZ(this[1]).rotateY(this[2]);
	        default:
	          throw new Error(ERR_UNKNOWN_ORDER);
	      }
	    }
	
	    // INTERNAL METHODS
	
	    // Concersion from Euler to rotation matrix and from matrix to Euler
	    // Adapted from three.js under MIT license
	
	    // // WARNING: this discards revolution information -bhouston
	    // reorder(newOrder) {
	    //   const q = new Quaternion().setFromEuler(this);
	    //   return this.setFromQuaternion(q, newOrder);
	
	    /* eslint-disable complexity, max-statements, one-var */
	
	  }, {
	    key: '_fromRotationMatrix',
	    value: function _fromRotationMatrix(m) {
	      var order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Euler.DefaultOrder;
	
	      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
	
	      var te = m.elements;
	      var m11 = te[0],
	          m12 = te[4],
	          m13 = te[8];
	      var m21 = te[1],
	          m22 = te[5],
	          m23 = te[9];
	      var m31 = te[2],
	          m32 = te[6],
	          m33 = te[10];
	
	      order = order || this[3];
	
	      switch (order) {
	        case Euler.XYZ:
	          this[1] = Math.asin((0, _common.clamp)(m13, -1, 1));
	
	          if (Math.abs(m13) < ALMOST_ONE) {
	            this[0] = Math.atan2(-m23, m33);
	            this[2] = Math.atan2(-m12, m11);
	          } else {
	            this[0] = Math.atan2(m32, m22);
	            this[2] = 0;
	          }
	          break;
	
	        case Euler.YXZ:
	          this[0] = Math.asin(-(0, _common.clamp)(m23, -1, 1));
	
	          if (Math.abs(m23) < ALMOST_ONE) {
	            this[1] = Math.atan2(m13, m33);
	            this[2] = Math.atan2(m21, m22);
	          } else {
	            this[1] = Math.atan2(-m31, m11);
	            this[2] = 0;
	          }
	          break;
	
	        case Euler.ZXY:
	          this[0] = Math.asin((0, _common.clamp)(m32, -1, 1));
	
	          if (Math.abs(m32) < ALMOST_ONE) {
	            this[1] = Math.atan2(-m31, m33);
	            this[2] = Math.atan2(-m12, m22);
	          } else {
	            this[1] = 0;
	            this[2] = Math.atan2(m21, m11);
	          }
	          break;
	
	        case Euler.ZYX:
	          this[1] = Math.asin(-(0, _common.clamp)(m31, -1, 1));
	
	          if (Math.abs(m31) < ALMOST_ONE) {
	            this[0] = Math.atan2(m32, m33);
	            this[2] = Math.atan2(m21, m11);
	          } else {
	            this[0] = 0;
	            this[2] = Math.atan2(-m12, m22);
	          }
	          break;
	
	        case Euler.YZX:
	          this[2] = Math.asin((0, _common.clamp)(m21, -1, 1));
	
	          if (Math.abs(m21) < ALMOST_ONE) {
	            this[0] = Math.atan2(-m23, m22);
	            this[1] = Math.atan2(-m31, m11);
	          } else {
	            this[0] = 0;
	            this[1] = Math.atan2(m13, m33);
	          }
	          break;
	
	        case Euler.XZY:
	          this[2] = Math.asin(-(0, _common.clamp)(m12, -1, 1));
	
	          if (Math.abs(m12) < ALMOST_ONE) {
	            this[0] = Math.atan2(m32, m22);
	            this[1] = Math.atan2(m13, m11);
	          } else {
	            this[0] = Math.atan2(-m23, m33);
	            this[1] = 0;
	          }
	          break;
	
	        default:
	          throw new Error(ERR_UNKNOWN_ORDER);
	      }
	
	      this[3] = order;
	
	      return this;
	    }
	  }, {
	    key: '_getRotationMatrix',
	    value: function _getRotationMatrix() {
	      var te = new _matrix.Matrix4();
	
	      var x = this.x,
	          y = this.y,
	          z = this.z;
	      var a = Math.cos(x);
	      var c = Math.cos(y);
	      var e = Math.cos(z);
	      var b = Math.sin(x);
	      var d = Math.sin(y);
	      var f = Math.sin(z);
	
	      switch (this[3]) {
	        case Euler.XYZ:
	          {
	            var ae = a * e,
	                af = a * f,
	                be = b * e,
	                bf = b * f;
	
	            te[0] = c * e;
	            te[4] = -c * f;
	            te[8] = d;
	
	            te[1] = af + be * d;
	            te[5] = ae - bf * d;
	            te[9] = -b * c;
	
	            te[2] = bf - ae * d;
	            te[6] = be + af * d;
	            te[10] = a * c;
	            break;
	          }
	
	        case Euler.YXZ:
	          {
	            var ce = c * e,
	                cf = c * f,
	                de = d * e,
	                df = d * f;
	
	            te[0] = ce + df * b;
	            te[4] = de * b - cf;
	            te[8] = a * d;
	
	            te[1] = a * f;
	            te[5] = a * e;
	            te[9] = -b;
	
	            te[2] = cf * b - de;
	            te[6] = df + ce * b;
	            te[10] = a * c;
	            break;
	          }
	
	        case Euler.ZXY:
	          {
	            var _ce = c * e,
	                _cf = c * f,
	                _de = d * e,
	                _df = d * f;
	
	            te[0] = _ce - _df * b;
	            te[4] = -a * f;
	            te[8] = _de + _cf * b;
	
	            te[1] = _cf + _de * b;
	            te[5] = a * e;
	            te[9] = _df - _ce * b;
	
	            te[2] = -a * d;
	            te[6] = b;
	            te[10] = a * c;
	            break;
	          }
	
	        case Euler.ZYX:
	          {
	            var _ae = a * e,
	                _af = a * f,
	                _be = b * e,
	                _bf = b * f;
	
	            te[0] = c * e;
	            te[4] = _be * d - _af;
	            te[8] = _ae * d + _bf;
	
	            te[1] = c * f;
	            te[5] = _bf * d + _ae;
	            te[9] = _af * d - _be;
	
	            te[2] = -d;
	            te[6] = b * c;
	            te[10] = a * c;
	            break;
	          }
	
	        case Euler.YZX:
	          {
	            var ac = a * c,
	                ad = a * d,
	                bc = b * c,
	                bd = b * d;
	
	            te[0] = c * e;
	            te[4] = bd - ac * f;
	            te[8] = bc * f + ad;
	
	            te[1] = f;
	            te[5] = a * e;
	            te[9] = -b * e;
	
	            te[2] = -d * e;
	            te[6] = ad * f + bc;
	            te[10] = ac - bd * f;
	            break;
	          }
	
	        case Euler.XZY:
	          {
	            var _ac = a * c,
	                _ad = a * d,
	                _bc = b * c,
	                _bd = b * d;
	
	            te[0] = c * e;
	            te[4] = -f;
	            te[8] = d * e;
	
	            te[1] = _ac * f + _bd;
	            te[5] = a * e;
	            te[9] = _ad * f - _bc;
	
	            te[2] = _bc * f - _ad;
	            te[6] = b * e;
	            te[10] = _bd * f + _ac;
	            break;
	          }
	
	        default:
	          throw new Error(ERR_UNKNOWN_ORDER);
	      }
	
	      // last column
	      te[3] = 0;
	      te[7] = 0;
	      te[11] = 0;
	
	      // bottom row
	      te[12] = 0;
	      te[13] = 0;
	      te[14] = 0;
	      te[15] = 1;
	
	      return this;
	    }
	    /* eslint-enable complexity, max-statements, one-var */
	
	  }, {
	    key: 'x',
	    get: function get() {
	      return this[0];
	    },
	    set: function set(value) {
	      return this[0] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'y',
	    get: function get() {
	      return this[1];
	    },
	    set: function set(value) {
	      return this[1] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'z',
	    get: function get() {
	      return this[2];
	    },
	    set: function set(value) {
	      return this[2] = (0, _common.checkNumber)(value);
	    }
	
	    // alpha, beta, gamma angle notation
	
	  }, {
	    key: 'alpha',
	    get: function get() {
	      return this[0];
	    },
	    set: function set(value) {
	      return this[0] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'beta',
	    get: function get() {
	      return this[1];
	    },
	    set: function set(value) {
	      return this[1] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'gamma',
	    get: function get() {
	      return this[2];
	    },
	    set: function set(value) {
	      return this[2] = (0, _common.checkNumber)(value);
	    }
	
	    // phi, theta, psi angle notation
	
	  }, {
	    key: 'phi',
	    get: function get() {
	      return this[0];
	    },
	    set: function set(value) {
	      return this[0] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'theta',
	    get: function get() {
	      return this[1];
	    },
	    set: function set(value) {
	      return this[1] = (0, _common.checkNumber)(value);
	    }
	  }, {
	    key: 'psi',
	    get: function get() {
	      return this[2];
	    },
	    set: function set(value) {
	      return this[2] = (0, _common.checkNumber)(value);
	    }
	
	    // rotation order, in all three angle notations
	
	  }, {
	    key: 'order',
	    get: function get() {
	      return this[3];
	    },
	    set: function set(value) {
	      return this[3] = checkOrder(value);
	    }
	  }]);
	
	  return Euler;
	}(_mathArray2.default);
	
	exports.default = Euler;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _object3d = __webpack_require__(249);
	
	Object.defineProperty(exports, 'Object3D', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_object3d).default;
	  }
	});
	
	var _group = __webpack_require__(254);
	
	Object.defineProperty(exports, 'Group', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_group).default;
	  }
	});
	
	var _scene = __webpack_require__(255);
	
	Object.defineProperty(exports, 'Scene', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_scene).default;
	  }
	});
	
	var _pick = __webpack_require__(257);
	
	Object.keys(_pick).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _pick[key];
	    }
	  });
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY2VuZWdyYXBoL2luZGV4LmpzIl0sIm5hbWVzIjpbImRlZmF1bHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OzZDQUFRQSxPOzs7Ozs7Ozs7MENBQ0FBLE87Ozs7Ozs7OzswQ0FDQUEsTzs7Ozs7O0FBQ1I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHtkZWZhdWx0IGFzIE9iamVjdDNEfSBmcm9tICcuL29iamVjdC0zZCc7XG5leHBvcnQge2RlZmF1bHQgYXMgR3JvdXB9IGZyb20gJy4vZ3JvdXAnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIFNjZW5lfSBmcm9tICcuL3NjZW5lJztcbmV4cG9ydCAqIGZyb20gJy4vcGljayc7XG4iXX0=

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _deprecated = __webpack_require__(250);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _utils = __webpack_require__(204);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Object3D = function () {
	  function Object3D(_ref) {
	    var id = _ref.id,
	        _ref$display = _ref.display,
	        display = _ref$display === undefined ? true : _ref$display;
	
	    _classCallCheck(this, Object3D);
	
	    // model position, rotation, scale and all in all matrix
	    this.position = new _deprecated.Vec3();
	    this.rotation = new _deprecated.Vec3();
	    this.scale = new _deprecated.Vec3(1, 1, 1);
	    this.matrix = new _deprecated.Mat4();
	
	    // whether to display the object at all
	    this.id = id || (0, _utils.uid)(this.constructor.name);
	    this.display = true;
	    this.userData = {};
	  }
	
	  _createClass(Object3D, [{
	    key: 'setPosition',
	    value: function setPosition(position) {
	      (0, _assert2.default)(position.length === 3, 'setPosition requires vector argument');
	      this.position = position;
	      return this;
	    }
	  }, {
	    key: 'setRotation',
	    value: function setRotation(rotation) {
	      (0, _assert2.default)(rotation.length === 3, 'setRotation requires vector argument');
	      this.rotation = rotation;
	      return this;
	    }
	  }, {
	    key: 'setScale',
	    value: function setScale(scale) {
	      (0, _assert2.default)(scale.length === 3, 'setScale requires vector argument');
	      this.scale = scale;
	      return this;
	    }
	  }, {
	    key: 'setMatrixComponents',
	    value: function setMatrixComponents(_ref2) {
	      var position = _ref2.position,
	          rotation = _ref2.rotation,
	          scale = _ref2.scale,
	          _ref2$update = _ref2.update,
	          update = _ref2$update === undefined ? true : _ref2$update;
	
	      if (position) {
	        this.setPosition(position);
	      }
	      if (rotation) {
	        this.setRotation(rotation);
	      }
	      if (scale) {
	        this.setScale(scale);
	      }
	      if (update) {
	        this.updateMatrix();
	      }
	      return this;
	    }
	  }, {
	    key: 'updateMatrix',
	    value: function updateMatrix() {
	      var pos = this.position;
	      var rot = this.rotation;
	      var scale = this.scale;
	
	      this.matrix.id();
	      this.matrix.$translate(pos[0], pos[1], pos[2]);
	      this.matrix.$rotateXYZ(rot[0], rot[1], rot[2]);
	      this.matrix.$scale(scale[0], scale[1], scale[2]);
	      return this;
	    }
	  }, {
	    key: 'update',
	    value: function update() {
	      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          position = _ref3.position,
	          rotation = _ref3.rotation,
	          scale = _ref3.scale;
	
	      if (position) {
	        this.setPosition(position);
	      }
	      if (rotation) {
	        this.setRotation(rotation);
	      }
	      if (scale) {
	        this.setScale(scale);
	      }
	      this.updateMatrix();
	      return this;
	    }
	  }, {
	    key: 'getCoordinateUniforms',
	    value: function getCoordinateUniforms(viewMatrix, modelMatrix) {
	      // TODO - solve multiple class problem
	      // assert(viewMatrix instanceof Mat4);
	      (0, _assert2.default)(viewMatrix);
	      modelMatrix = modelMatrix || this.matrix;
	      var worldMatrix = new _deprecated.Mat4().copy(viewMatrix).mulMat4(modelMatrix);
	      var worldInverse = worldMatrix.invert();
	      var worldInverseTranspose = worldInverse.transpose();
	
	      return {
	        viewMatrix: viewMatrix,
	        modelMatrix: modelMatrix,
	        objectMatrix: modelMatrix,
	        worldMatrix: worldMatrix,
	        worldInverseMatrix: worldInverse,
	        worldInverseTransposeMatrix: worldInverseTranspose
	      };
	    }
	
	    // TODO - copied code, not yet vetted
	
	  }, {
	    key: 'transform',
	    value: function transform() {
	
	      if (!this.parent) {
	        this.endPosition.setVec3(this.position);
	        this.endRotation.setVec3(this.rotation);
	        this.endScale.setVec3(this.scale);
	      } else {
	        var parent = this.parent;
	        this.endPosition.setVec3(this.position.add(parent.endPosition));
	        this.endRotation.setVec3(this.rotation.add(parent.endRotation));
	        this.endScale.setVec3(this.scale.add(parent.endScale));
	      }
	
	      var ch = this.children;
	      for (var i = 0; i < ch.length; ++i) {
	        ch[i].transform();
	      }
	
	      return this;
	    }
	  }]);
	
	  return Object3D;
	}();
	
	exports.default = Object3D;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _math = __webpack_require__(251);
	
	Object.keys(_math).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _math[key];
	    }
	  });
	});
	
	var _attributeManager = __webpack_require__(252);
	
	Object.defineProperty(exports, 'AttributeManager', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_attributeManager).default;
	  }
	});
	
	var _fbo = __webpack_require__(253);
	
	Object.defineProperty(exports, 'FramebufferObject', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_fbo).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kZXByZWNhdGVkL2luZGV4LmpzIl0sIm5hbWVzIjpbImRlZmF1bHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7O3FEQUNRQSxPOzs7Ozs7Ozs7d0NBQ0FBLE8iLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL21hdGgnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIEF0dHJpYnV0ZU1hbmFnZXJ9IGZyb20gJy4vYXR0cmlidXRlLW1hbmFnZXInO1xuZXhwb3J0IHtkZWZhdWx0IGFzIEZyYW1lYnVmZmVyT2JqZWN0fSBmcm9tICcuL2Zibyc7XG4iXX0=

/***/ },
/* 251 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _extendableBuiltin5(cls) {
	  function ExtendableBuiltin() {
	    var instance = Reflect.construct(cls, Array.from(arguments));
	    Object.setPrototypeOf(instance, Object.getPrototypeOf(this));
	    return instance;
	  }
	
	  ExtendableBuiltin.prototype = Object.create(cls.prototype, {
	    constructor: {
	      value: cls,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	
	  if (Object.setPrototypeOf) {
	    Object.setPrototypeOf(ExtendableBuiltin, cls);
	  } else {
	    ExtendableBuiltin.__proto__ = cls;
	  }
	
	  return ExtendableBuiltin;
	}
	
	function _extendableBuiltin3(cls) {
	  function ExtendableBuiltin() {
	    var instance = Reflect.construct(cls, Array.from(arguments));
	    Object.setPrototypeOf(instance, Object.getPrototypeOf(this));
	    return instance;
	  }
	
	  ExtendableBuiltin.prototype = Object.create(cls.prototype, {
	    constructor: {
	      value: cls,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	
	  if (Object.setPrototypeOf) {
	    Object.setPrototypeOf(ExtendableBuiltin, cls);
	  } else {
	    ExtendableBuiltin.__proto__ = cls;
	  }
	
	  return ExtendableBuiltin;
	}
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _extendableBuiltin(cls) {
	  function ExtendableBuiltin() {
	    var instance = Reflect.construct(cls, Array.from(arguments));
	    Object.setPrototypeOf(instance, Object.getPrototypeOf(this));
	    return instance;
	  }
	
	  ExtendableBuiltin.prototype = Object.create(cls.prototype, {
	    constructor: {
	      value: cls,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	
	  if (Object.setPrototypeOf) {
	    Object.setPrototypeOf(ExtendableBuiltin, cls);
	  } else {
	    ExtendableBuiltin.__proto__ = cls;
	  }
	
	  return ExtendableBuiltin;
	}
	
	// Vec3, Mat4 and Quat classes
	// TODO - clean up linting and remove some of these exceptions
	/* eslint-disable */
	/* eslint-disable computed-property-spacing, brace-style, max-params, one-var */
	/* eslint-disable indent, no-loop-func */
	
	var sqrt = Math.sqrt;
	var sin = Math.sin;
	var cos = Math.cos;
	var tan = Math.tan;
	var pi = Math.PI;
	var slice = Array.prototype.slice;
	
	// Vec3 Class
	
	var Vec3 = exports.Vec3 = function (_extendableBuiltin2) {
	  _inherits(Vec3, _extendableBuiltin2);
	
	  function Vec3() {
	    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
	
	    _classCallCheck(this, Vec3);
	
	    var _this = _possibleConstructorReturn(this, (Vec3.__proto__ || Object.getPrototypeOf(Vec3)).call(this, 3));
	
	    _this[0] = x;
	    _this[1] = y;
	    _this[2] = z;
	    return _this;
	  }
	
	  // fast Vec3 create.
	
	
	  _createClass(Vec3, [{
	    key: 'x',
	    get: function get() {
	      return this[0];
	    },
	    set: function set(value) {
	      return this[0] = value;
	    }
	  }, {
	    key: 'y',
	    get: function get() {
	      return this[1];
	    },
	    set: function set(value) {
	      return this[1] = value;
	    }
	  }, {
	    key: 'z',
	    get: function get() {
	      return this[2];
	    },
	    set: function set(value) {
	      return this[2] = value;
	    }
	  }], [{
	    key: 'create',
	    value: function create() {
	      return new Vec3(3);
	    }
	  }]);
	
	  return Vec3;
	}(_extendableBuiltin(Array));
	
	var generics = {
	  setVec3: function setVec3(dest, vec) {
	    dest[0] = vec[0];
	    dest[1] = vec[1];
	    dest[2] = vec[2];
	    return dest;
	  },
	  set: function set(dest, x, y, z) {
	    dest[0] = x;
	    dest[1] = y;
	    dest[2] = z;
	    return dest;
	  },
	  add: function add(dest, vec) {
	    return new Vec3(dest[0] + vec[0], dest[1] + vec[1], dest[2] + vec[2]);
	  },
	  $add: function $add(dest, vec) {
	    dest[0] += vec[0];
	    dest[1] += vec[1];
	    dest[2] += vec[2];
	    return dest;
	  },
	  add2: function add2(dest, a, b) {
	    dest[0] = a[0] + b[0];
	    dest[1] = a[1] + b[1];
	    dest[2] = a[2] + b[2];
	    return dest;
	  },
	  sub: function sub(dest, vec) {
	    return new Vec3(dest[0] - vec[0], dest[1] - vec[1], dest[2] - vec[2]);
	  },
	  $sub: function $sub(dest, vec) {
	    dest[0] -= vec[0];
	    dest[1] -= vec[1];
	    dest[2] -= vec[2];
	    return dest;
	  },
	  sub2: function sub2(dest, a, b) {
	    dest[0] = a[0] - b[0];
	    dest[1] = a[1] - b[1];
	    dest[2] = a[2] - b[2];
	    return dest;
	  },
	  scale: function scale(dest, s) {
	    return new Vec3(dest[0] * s, dest[1] * s, dest[2] * s);
	  },
	  $scale: function $scale(dest, s) {
	    dest[0] *= s;
	    dest[1] *= s;
	    dest[2] *= s;
	    return dest;
	  },
	  neg: function neg(dest) {
	    return new Vec3(-dest[0], -dest[1], -dest[2]);
	  },
	  $neg: function $neg(dest) {
	    dest[0] = -dest[0];
	    dest[1] = -dest[1];
	    dest[2] = -dest[2];
	    return dest;
	  },
	  unit: function unit(dest) {
	    var len = Vec3.norm(dest);
	
	    if (len > 0) {
	      return Vec3.scale(dest, 1 / len);
	    }
	    return Vec3.clone(dest);
	  },
	  $unit: function $unit(dest) {
	    var len = Vec3.norm(dest);
	
	    if (len > 0) {
	      return Vec3.$scale(dest, 1 / len);
	    }
	    return dest;
	  },
	  cross: function cross(dest, vec) {
	    var dx = dest[0],
	        dy = dest[1],
	        dz = dest[2],
	        vx = vec[0],
	        vy = vec[1],
	        vz = vec[2];
	
	    return new Vec3(dy * vz - dz * vy, dz * vx - dx * vz, dx * vy - dy * vx);
	  },
	  $cross: function $cross(dest, vec) {
	    var dx = dest[0],
	        dy = dest[1],
	        dz = dest[2],
	        vx = vec[0],
	        vy = vec[1],
	        vz = vec[2];
	
	    dest[0] = dy * vz - dz * vy;
	    dest[1] = dz * vx - dx * vz;
	    dest[2] = dx * vy - dy * vx;
	    return dest;
	  },
	  distTo: function distTo(dest, vec) {
	    var dx = dest[0] - vec[0],
	        dy = dest[1] - vec[1],
	        dz = dest[2] - vec[2];
	
	    return sqrt(dx * dx + dy * dy + dz * dz);
	  },
	  distToSq: function distToSq(dest, vec) {
	    var dx = dest[0] - vec[0],
	        dy = dest[1] - vec[1],
	        dz = dest[2] - vec[2];
	
	    return dx * dx + dy * dy + dz * dz;
	  },
	  norm: function norm(dest) {
	    var dx = dest[0],
	        dy = dest[1],
	        dz = dest[2];
	
	    return sqrt(dx * dx + dy * dy + dz * dz);
	  },
	  normSq: function normSq(dest) {
	    var dx = dest[0],
	        dy = dest[1],
	        dz = dest[2];
	
	    return dx * dx + dy * dy + dz * dz;
	  },
	  dot: function dot(dest, vec) {
	    return dest[0] * vec[0] + dest[1] * vec[1] + dest[2] * vec[2];
	  },
	  clone: function clone(dest) {
	    if (dest instanceof Vec3) {
	      return new Vec3(dest[0], dest[1], dest[2]);
	    }
	    return Vec3.setVec3(new Float32Array(3), dest);
	  },
	  toFloat32Array: function toFloat32Array(dest) {
	    var ans = dest.typedContainer;
	
	    if (!ans) {
	      return dest;
	    }
	
	    ans[0] = dest[0];
	    ans[1] = dest[1];
	    ans[2] = dest[2];
	
	    return ans;
	  }
	};
	
	// add generics and instance methods
	var proto = Vec3.prototype;
	for (var method in generics) {
	  Vec3[method] = generics[method];
	  proto[method] = function _(m) {
	    return function () {
	      var args = slice.call(arguments);
	      args.unshift(this);
	      return Vec3[m].apply(Vec3, args);
	    };
	  }(method);
	}
	
	// Mat4 Class
	
	var Mat4 = exports.Mat4 = function (_extendableBuiltin4) {
	  _inherits(Mat4, _extendableBuiltin4);
	
	  function Mat4(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {
	    _classCallCheck(this, Mat4);
	
	    var _this2 = _possibleConstructorReturn(this, (Mat4.__proto__ || Object.getPrototypeOf(Mat4)).call(this, 16));
	
	    _this2.length = 16;
	
	    if (typeof n11 === 'number') {
	
	      _this2.set(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44);
	    } else {
	      _this2.id();
	    }
	
	    _this2.typedContainer = new Float32Array(16);
	    return _this2;
	  }
	
	  _createClass(Mat4, [{
	    key: 'copy',
	    value: function copy(src) {
	      for (var i = 0; i < 16; ++i) {
	        this[i] = src[i];
	      }
	      return this;
	    }
	  }, {
	    key: 'n11',
	    get: function get() {
	      return this[0];
	    },
	    set: function set(val) {
	      this[0] = val;
	    }
	  }, {
	    key: 'n12',
	    get: function get() {
	      return this[4];
	    },
	    set: function set(val) {
	      this[4] = val;
	    }
	  }, {
	    key: 'n13',
	    get: function get() {
	      return this[8];
	    },
	    set: function set(val) {
	      this[8] = val;
	    }
	  }, {
	    key: 'n14',
	    get: function get() {
	      return this[12];
	    },
	    set: function set(val) {
	      this[12] = val;
	    }
	  }, {
	    key: 'n21',
	    get: function get() {
	      return this[1];
	    },
	    set: function set(val) {
	      this[1] = val;
	    }
	  }, {
	    key: 'n22',
	    get: function get() {
	      return this[5];
	    },
	    set: function set(val) {
	      this[5] = val;
	    }
	  }, {
	    key: 'n23',
	    get: function get() {
	      return this[9];
	    },
	    set: function set(val) {
	      this[9] = val;
	    }
	  }, {
	    key: 'n24',
	    get: function get() {
	      return this[13];
	    },
	    set: function set(val) {
	      this[13] = val;
	    }
	  }, {
	    key: 'n31',
	    get: function get() {
	      return this[2];
	    },
	    set: function set(val) {
	      this[2] = val;
	    }
	  }, {
	    key: 'n32',
	    get: function get() {
	      return this[6];
	    },
	    set: function set(val) {
	      this[6] = val;
	    }
	  }, {
	    key: 'n33',
	    get: function get() {
	      return this[10];
	    },
	    set: function set(val) {
	      this[10] = val;
	    }
	  }, {
	    key: 'n34',
	    get: function get() {
	      return this[14];
	    },
	    set: function set(val) {
	      this[14] = val;
	    }
	  }, {
	    key: 'n41',
	    get: function get() {
	      return this[3];
	    },
	    set: function set(val) {
	      this[3] = val;
	    }
	  }, {
	    key: 'n42',
	    get: function get() {
	      return this[7];
	    },
	    set: function set(val) {
	      this[7] = val;
	    }
	  }, {
	    key: 'n43',
	    get: function get() {
	      return this[11];
	    },
	    set: function set(val) {
	      this[11] = val;
	    }
	  }, {
	    key: 'n44',
	    get: function get() {
	      return this[15];
	    },
	    set: function set(val) {
	      this[15] = val;
	    }
	  }], [{
	    key: 'create',
	    value: function create() {
	      return new Array(16);
	    }
	  }]);
	
	  return Mat4;
	}(_extendableBuiltin3(Array));
	
	generics = {
	  id: function id(dest) {
	
	    dest[0] = 1;
	    dest[1] = 0;
	    dest[2] = 0;
	    dest[3] = 0;
	    dest[4] = 0;
	    dest[5] = 1;
	    dest[6] = 0;
	    dest[7] = 0;
	    dest[8] = 0;
	    dest[9] = 0;
	    dest[10] = 1;
	    dest[11] = 0;
	    dest[12] = 0;
	    dest[13] = 0;
	    dest[14] = 0;
	    dest[15] = 1;
	
	    return dest;
	  },
	  clone: function clone(dest) {
	    if (dest instanceof Mat4) {
	      return new Mat4(dest[0], dest[4], dest[8], dest[12], dest[1], dest[5], dest[9], dest[13], dest[2], dest[6], dest[10], dest[14], dest[3], dest[7], dest[11], dest[15]);
	    }
	    return new typedArray(dest);
	  },
	  set: function set(dest, n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {
	
	    dest[0] = n11;
	    dest[4] = n12;
	    dest[8] = n13;
	    dest[12] = n14;
	    dest[1] = n21;
	    dest[5] = n22;
	    dest[9] = n23;
	    dest[13] = n24;
	    dest[2] = n31;
	    dest[6] = n32;
	    dest[10] = n33;
	    dest[14] = n34;
	    dest[3] = n41;
	    dest[7] = n42;
	    dest[11] = n43;
	    dest[15] = n44;
	
	    return dest;
	  },
	  mulVec3: function mulVec3(dest, vec) {
	    var ans = Vec3.clone(vec);
	    return Mat4.$mulVec3(dest, ans);
	  },
	  $mulVec3: function $mulVec3(dest, vec) {
	    var vx = vec[0],
	        vy = vec[1],
	        vz = vec[2],
	        d = 1 / (dest[3] * vx + dest[7] * vy + dest[11] * vz + dest[15]);
	
	    vec[0] = (dest[0] * vx + dest[4] * vy + dest[8] * vz + dest[12]) * d;
	    vec[1] = (dest[1] * vx + dest[5] * vy + dest[9] * vz + dest[13]) * d;
	    vec[2] = (dest[2] * vx + dest[6] * vy + dest[10] * vz + dest[14]) * d;
	
	    return vec;
	  },
	  mulMat42: function mulMat42(dest, a, b) {
	    var a11 = a[0],
	        a12 = a[1],
	        a13 = a[2],
	        a14 = a[3],
	        a21 = a[4],
	        a22 = a[5],
	        a23 = a[6],
	        a24 = a[7],
	        a31 = a[8],
	        a32 = a[9],
	        a33 = a[10],
	        a34 = a[11],
	        a41 = a[12],
	        a42 = a[13],
	        a43 = a[14],
	        a44 = a[15],
	        b11 = b[0],
	        b12 = b[1],
	        b13 = b[2],
	        b14 = b[3],
	        b21 = b[4],
	        b22 = b[5],
	        b23 = b[6],
	        b24 = b[7],
	        b31 = b[8],
	        b32 = b[9],
	        b33 = b[10],
	        b34 = b[11],
	        b41 = b[12],
	        b42 = b[13],
	        b43 = b[14],
	        b44 = b[15];
	
	    dest[0] = b11 * a11 + b12 * a21 + b13 * a31 + b14 * a41;
	    dest[1] = b11 * a12 + b12 * a22 + b13 * a32 + b14 * a42;
	    dest[2] = b11 * a13 + b12 * a23 + b13 * a33 + b14 * a43;
	    dest[3] = b11 * a14 + b12 * a24 + b13 * a34 + b14 * a44;
	
	    dest[4] = b21 * a11 + b22 * a21 + b23 * a31 + b24 * a41;
	    dest[5] = b21 * a12 + b22 * a22 + b23 * a32 + b24 * a42;
	    dest[6] = b21 * a13 + b22 * a23 + b23 * a33 + b24 * a43;
	    dest[7] = b21 * a14 + b22 * a24 + b23 * a34 + b24 * a44;
	
	    dest[8] = b31 * a11 + b32 * a21 + b33 * a31 + b34 * a41;
	    dest[9] = b31 * a12 + b32 * a22 + b33 * a32 + b34 * a42;
	    dest[10] = b31 * a13 + b32 * a23 + b33 * a33 + b34 * a43;
	    dest[11] = b31 * a14 + b32 * a24 + b33 * a34 + b34 * a44;
	
	    dest[12] = b41 * a11 + b42 * a21 + b43 * a31 + b44 * a41;
	    dest[13] = b41 * a12 + b42 * a22 + b43 * a32 + b44 * a42;
	    dest[14] = b41 * a13 + b42 * a23 + b43 * a33 + b44 * a43;
	    dest[15] = b41 * a14 + b42 * a24 + b43 * a34 + b44 * a44;
	    return dest;
	  },
	  mulMat4: function mulMat4(a, b) {
	    var m = Mat4.clone(a);
	    return Mat4.mulMat42(m, a, b);
	  },
	  $mulMat4: function $mulMat4(a, b) {
	    return Mat4.mulMat42(a, a, b);
	  },
	  add: function add(dest, m) {
	    var copy = Mat4.clone(dest);
	    return Mat4.$add(copy, m);
	  },
	  $add: function $add(dest, m) {
	    dest[0] += m[0];
	    dest[1] += m[1];
	    dest[2] += m[2];
	    dest[3] += m[3];
	    dest[4] += m[4];
	    dest[5] += m[5];
	    dest[6] += m[6];
	    dest[7] += m[7];
	    dest[8] += m[8];
	    dest[9] += m[9];
	    dest[10] += m[10];
	    dest[11] += m[11];
	    dest[12] += m[12];
	    dest[13] += m[13];
	    dest[14] += m[14];
	    dest[15] += m[15];
	
	    return dest;
	  },
	  transpose: function transpose(dest) {
	    var m = Mat4.clone(dest);
	    return Mat4.$transpose(m);
	  },
	  $transpose: function $transpose(dest) {
	    var n4 = dest[4],
	        n8 = dest[8],
	        n12 = dest[12],
	        n1 = dest[1],
	        n9 = dest[9],
	        n13 = dest[13],
	        n2 = dest[2],
	        n6 = dest[6],
	        n14 = dest[14],
	        n3 = dest[3],
	        n7 = dest[7],
	        n11 = dest[11];
	
	    dest[1] = n4;
	    dest[2] = n8;
	    dest[3] = n12;
	    dest[4] = n1;
	    dest[6] = n9;
	    dest[7] = n13;
	    dest[8] = n2;
	    dest[9] = n6;
	    dest[11] = n14;
	    dest[12] = n3;
	    dest[13] = n7;
	    dest[14] = n11;
	
	    return dest;
	  },
	  rotateAxis: function rotateAxis(dest, theta, vec) {
	    var m = Mat4.clone(dest);
	    return Mat4.$rotateAxis(m, theta, vec);
	  },
	  $rotateAxis: function $rotateAxis(dest, theta, vec) {
	    var s = sin(theta),
	        c = cos(theta),
	        nc = 1 - c,
	        vx = vec[0],
	        vy = vec[1],
	        vz = vec[2],
	        m11 = vx * vx * nc + c,
	        m12 = vx * vy * nc + vz * s,
	        m13 = vx * vz * nc - vy * s,
	        m21 = vy * vx * nc - vz * s,
	        m22 = vy * vy * nc + c,
	        m23 = vy * vz * nc + vx * s,
	        m31 = vx * vz * nc + vy * s,
	        m32 = vy * vz * nc - vx * s,
	        m33 = vz * vz * nc + c,
	        d11 = dest[0],
	        d12 = dest[1],
	        d13 = dest[2],
	        d14 = dest[3],
	        d21 = dest[4],
	        d22 = dest[5],
	        d23 = dest[6],
	        d24 = dest[7],
	        d31 = dest[8],
	        d32 = dest[9],
	        d33 = dest[10],
	        d34 = dest[11],
	        d41 = dest[12],
	        d42 = dest[13],
	        d43 = dest[14],
	        d44 = dest[15];
	
	    dest[0] = d11 * m11 + d21 * m12 + d31 * m13;
	    dest[1] = d12 * m11 + d22 * m12 + d32 * m13;
	    dest[2] = d13 * m11 + d23 * m12 + d33 * m13;
	    dest[3] = d14 * m11 + d24 * m12 + d34 * m13;
	
	    dest[4] = d11 * m21 + d21 * m22 + d31 * m23;
	    dest[5] = d12 * m21 + d22 * m22 + d32 * m23;
	    dest[6] = d13 * m21 + d23 * m22 + d33 * m23;
	    dest[7] = d14 * m21 + d24 * m22 + d34 * m23;
	
	    dest[8] = d11 * m31 + d21 * m32 + d31 * m33;
	    dest[9] = d12 * m31 + d22 * m32 + d32 * m33;
	    dest[10] = d13 * m31 + d23 * m32 + d33 * m33;
	    dest[11] = d14 * m31 + d24 * m32 + d34 * m33;
	
	    return dest;
	  },
	  rotateXYZ: function rotateXYZ(dest, rx, ry, rz) {
	    var ans = Mat4.clone(dest);
	    return Mat4.$rotateXYZ(ans, rx, ry, rz);
	  },
	  $rotateXYZ: function $rotateXYZ(dest, rx, ry, rz) {
	    var d11 = dest[0],
	        d12 = dest[1],
	        d13 = dest[2],
	        d14 = dest[3],
	        d21 = dest[4],
	        d22 = dest[5],
	        d23 = dest[6],
	        d24 = dest[7],
	        d31 = dest[8],
	        d32 = dest[9],
	        d33 = dest[10],
	        d34 = dest[11],
	        crx = cos(rx),
	        cry = cos(ry),
	        crz = cos(rz),
	        srx = sin(rx),
	        sry = sin(ry),
	        srz = sin(rz),
	        m11 = cry * crz,
	        m21 = -crx * srz + srx * sry * crz,
	        m31 = srx * srz + crx * sry * crz,
	        m12 = cry * srz,
	        m22 = crx * crz + srx * sry * srz,
	        m32 = -srx * crz + crx * sry * srz,
	        m13 = -sry,
	        m23 = srx * cry,
	        m33 = crx * cry;
	
	    dest[0] = d11 * m11 + d21 * m12 + d31 * m13;
	    dest[1] = d12 * m11 + d22 * m12 + d32 * m13;
	    dest[2] = d13 * m11 + d23 * m12 + d33 * m13;
	    dest[3] = d14 * m11 + d24 * m12 + d34 * m13;
	
	    dest[4] = d11 * m21 + d21 * m22 + d31 * m23;
	    dest[5] = d12 * m21 + d22 * m22 + d32 * m23;
	    dest[6] = d13 * m21 + d23 * m22 + d33 * m23;
	    dest[7] = d14 * m21 + d24 * m22 + d34 * m23;
	
	    dest[8] = d11 * m31 + d21 * m32 + d31 * m33;
	    dest[9] = d12 * m31 + d22 * m32 + d32 * m33;
	    dest[10] = d13 * m31 + d23 * m32 + d33 * m33;
	    dest[11] = d14 * m31 + d24 * m32 + d34 * m33;
	
	    return dest;
	  },
	  translate: function translate(dest, x, y, z) {
	    var m = Mat4.clone(dest);
	    return Mat4.$translate(m, x, y, z);
	  },
	  $translate: function $translate(dest, x, y, z) {
	    dest[12] = dest[0] * x + dest[4] * y + dest[8] * z + dest[12];
	    dest[13] = dest[1] * x + dest[5] * y + dest[9] * z + dest[13];
	    dest[14] = dest[2] * x + dest[6] * y + dest[10] * z + dest[14];
	    dest[15] = dest[3] * x + dest[7] * y + dest[11] * z + dest[15];
	
	    return dest;
	  },
	  scale: function scale(dest, x, y, z) {
	    var m = Mat4.clone(dest);
	    return Mat4.$scale(m, x, y, z);
	  },
	  $scale: function $scale(dest, x, y, z) {
	    dest[0] *= x;
	    dest[1] *= x;
	    dest[2] *= x;
	    dest[3] *= x;
	    dest[4] *= y;
	    dest[5] *= y;
	    dest[6] *= y;
	    dest[7] *= y;
	    dest[8] *= z;
	    dest[9] *= z;
	    dest[10] *= z;
	    dest[11] *= z;
	
	    return dest;
	  },
	
	
	  // Method based on PreGL https:// github.com/deanm/pregl/ (c) Dean McNamee.
	  invert: function invert(dest) {
	    var m = Mat4.clone(dest);
	    return Mat4.$invert(m);
	  },
	  $invert: function $invert(dest) {
	    var x0 = dest[0],
	        x1 = dest[1],
	        x2 = dest[2],
	        x3 = dest[3],
	        x4 = dest[4],
	        x5 = dest[5],
	        x6 = dest[6],
	        x7 = dest[7],
	        x8 = dest[8],
	        x9 = dest[9],
	        x10 = dest[10],
	        x11 = dest[11],
	        x12 = dest[12],
	        x13 = dest[13],
	        x14 = dest[14],
	        x15 = dest[15];
	
	    var a0 = x0 * x5 - x1 * x4,
	        a1 = x0 * x6 - x2 * x4,
	        a2 = x0 * x7 - x3 * x4,
	        a3 = x1 * x6 - x2 * x5,
	        a4 = x1 * x7 - x3 * x5,
	        a5 = x2 * x7 - x3 * x6,
	        b0 = x8 * x13 - x9 * x12,
	        b1 = x8 * x14 - x10 * x12,
	        b2 = x8 * x15 - x11 * x12,
	        b3 = x9 * x14 - x10 * x13,
	        b4 = x9 * x15 - x11 * x13,
	        b5 = x10 * x15 - x11 * x14;
	
	    var invdet = 1 / (a0 * b5 - a1 * b4 + a2 * b3 + a3 * b2 - a4 * b1 + a5 * b0);
	
	    dest[0] = (+x5 * b5 - x6 * b4 + x7 * b3) * invdet;
	    dest[1] = (-x1 * b5 + x2 * b4 - x3 * b3) * invdet;
	    dest[2] = (+x13 * a5 - x14 * a4 + x15 * a3) * invdet;
	    dest[3] = (-x9 * a5 + x10 * a4 - x11 * a3) * invdet;
	    dest[4] = (-x4 * b5 + x6 * b2 - x7 * b1) * invdet;
	    dest[5] = (+x0 * b5 - x2 * b2 + x3 * b1) * invdet;
	    dest[6] = (-x12 * a5 + x14 * a2 - x15 * a1) * invdet;
	    dest[7] = (+x8 * a5 - x10 * a2 + x11 * a1) * invdet;
	    dest[8] = (+x4 * b4 - x5 * b2 + x7 * b0) * invdet;
	    dest[9] = (-x0 * b4 + x1 * b2 - x3 * b0) * invdet;
	    dest[10] = (+x12 * a4 - x13 * a2 + x15 * a0) * invdet;
	    dest[11] = (-x8 * a4 + x9 * a2 - x11 * a0) * invdet;
	    dest[12] = (-x4 * b3 + x5 * b1 - x6 * b0) * invdet;
	    dest[13] = (+x0 * b3 - x1 * b1 + x2 * b0) * invdet;
	    dest[14] = (-x12 * a3 + x13 * a1 - x14 * a0) * invdet;
	    dest[15] = (+x8 * a3 - x9 * a1 + x10 * a0) * invdet;
	
	    return dest;
	  },
	
	  // TODO(nico) breaking convention here...
	  // because I don't think it's useful to add
	  // two methods for each of these.
	  lookAt: function lookAt(dest, eye, center, up) {
	    var z = Vec3.sub(eye, center);
	    z.$unit();
	    var x = Vec3.cross(up, z);
	    x.$unit();
	    var y = Vec3.cross(z, x);
	    y.$unit();
	    return Mat4.set(dest, x[0], x[1], x[2], -x.dot(eye), y[0], y[1], y[2], -y.dot(eye), z[0], z[1], z[2], -z.dot(eye), 0, 0, 0, 1);
	  },
	  frustum: function frustum(dest, left, right, bottom, top, near, far) {
	    var rl = right - left,
	        tb = top - bottom,
	        fn = far - near;
	
	    dest[0] = near * 2 / rl;
	    dest[1] = 0;
	    dest[2] = 0;
	    dest[3] = 0;
	    dest[4] = 0;
	    dest[5] = near * 2 / tb;
	    dest[6] = 0;
	    dest[7] = 0;
	    dest[8] = (right + left) / rl;
	    dest[9] = (top + bottom) / tb;
	    dest[10] = -(far + near) / fn;
	    dest[11] = -1;
	    dest[12] = 0;
	    dest[13] = 0;
	    dest[14] = -(far * near * 2) / fn;
	    dest[15] = 0;
	
	    return dest;
	  },
	  perspective: function perspective(dest, fov, aspect, near, far) {
	    var ymax = near * tan(fov * pi / 360),
	        ymin = -ymax,
	        xmin = ymin * aspect,
	        xmax = ymax * aspect;
	
	    return Mat4.frustum(dest, xmin, xmax, ymin, ymax, near, far);
	  },
	  ortho: function ortho(dest, left, right, top, bottom, near, far) {
	    var te = this.elements,
	        w = right - left,
	        h = top - bottom,
	        p = far - near,
	        x = (right + left) / w,
	        y = (top + bottom) / h,
	        z = (far + near) / p;
	
	    dest[0] = 2 / w;dest[4] = 0;dest[8] = 0;dest[12] = -x;
	    dest[1] = 0;dest[5] = 2 / h;dest[9] = 0;dest[13] = -y;
	    dest[2] = 0;dest[6] = 0;dest[10] = -2 / p;dest[14] = -z;
	    dest[3] = 0;dest[7] = 0;dest[11] = 0;dest[15] = 1;
	
	    return dest;
	  },
	  toFloat32Array: function toFloat32Array(dest) {
	    var ans = dest.typedContainer;
	
	    if (!ans) {
	      return dest;
	    }
	
	    ans[0] = dest[0];
	    ans[1] = dest[1];
	    ans[2] = dest[2];
	    ans[3] = dest[3];
	    ans[4] = dest[4];
	    ans[5] = dest[5];
	    ans[6] = dest[6];
	    ans[7] = dest[7];
	    ans[8] = dest[8];
	    ans[9] = dest[9];
	    ans[10] = dest[10];
	    ans[11] = dest[11];
	    ans[12] = dest[12];
	    ans[13] = dest[13];
	    ans[14] = dest[14];
	    ans[15] = dest[15];
	
	    return ans;
	  }
	};
	
	// add generics and instance methods
	proto = Mat4.prototype;
	for (method in generics) {
	  Mat4[method] = generics[method];
	  proto[method] = function (m) {
	    return function () {
	      var args = slice.call(arguments);
	
	      args.unshift(this);
	      return Mat4[m].apply(Mat4, args);
	    };
	  }(method);
	}
	
	// Quaternion class
	
	var Quat = exports.Quat = function (_extendableBuiltin6) {
	  _inherits(Quat, _extendableBuiltin6);
	
	  function Quat(x, y, z, w) {
	    _classCallCheck(this, Quat);
	
	    var _this3 = _possibleConstructorReturn(this, (Quat.__proto__ || Object.getPrototypeOf(Quat)).call(this, 4));
	
	    _this3[0] = x || 0;
	    _this3[1] = y || 0;
	    _this3[2] = z || 0;
	    _this3[3] = w || 0;
	
	    _this3.typedContainer = new Float32Array(4);
	    return _this3;
	  }
	
	  _createClass(Quat, null, [{
	    key: 'create',
	    value: function create() {
	      return new Array(4);
	    }
	  }, {
	    key: 'fromVec3',
	    value: function fromVec3(v, r) {
	      return new Quat(v[0], v[1], v[2], r || 0);
	    }
	  }, {
	    key: 'fromMat4',
	    value: function fromMat4(m) {
	      var u;
	      var v;
	      var w;
	
	      // Choose u, v, and w such that u is the index of the biggest diagonal entry
	      // of m, and u v w is an even permutation of 0 1 and 2.
	      if (m[0] > m[5] && m[0] > m[10]) {
	        u = 0;
	        v = 1;
	        w = 2;
	      } else if (m[5] > m[0] && m[5] > m[10]) {
	        u = 1;
	        v = 2;
	        w = 0;
	      } else {
	        u = 2;
	        v = 0;
	        w = 1;
	      }
	
	      var r = sqrt(1 + m[u * 5] - m[v * 5] - m[w * 5]);
	      var q = new Quat();
	
	      q[u] = 0.5 * r;
	      q[v] = 0.5 * (m['n' + v + '' + u] + m['n' + u + '' + v]) / r;
	      q[w] = 0.5 * (m['n' + u + '' + w] + m['n' + w + '' + u]) / r;
	      q[3] = 0.5 * (m['n' + v + '' + w] - m['n' + w + '' + v]) / r;
	
	      return q;
	    }
	  }, {
	    key: 'fromXRotation',
	    value: function fromXRotation(angle) {
	      return new Quat(sin(angle / 2), 0, 0, cos(angle / 2));
	    }
	  }, {
	    key: 'fromYRotation',
	    value: function fromYRotation(angle) {
	      return new Quat(0, sin(angle / 2), 0, cos(angle / 2));
	    }
	  }, {
	    key: 'fromZRotation',
	    value: function fromZRotation(angle) {
	      return new Quat(0, 0, sin(angle / 2), cos(angle / 2));
	    }
	  }, {
	    key: 'fromAxisRotation',
	    value: function fromAxisRotation(vec, angle) {
	      var x = vec[0],
	          y = vec[1],
	          z = vec[2],
	          d = 1 / sqrt(x * x + y * y + z * z),
	          s = sin(angle / 2),
	          c = cos(angle / 2);
	
	      return new Quat(s * x * d, s * y * d, s * z * d, c);
	    }
	  }]);
	
	  return Quat;
	}(_extendableBuiltin5(Array));
	
	generics = {
	  setQuat: function setQuat(dest, q) {
	    dest[0] = q[0];
	    dest[1] = q[1];
	    dest[2] = q[2];
	    dest[3] = q[3];
	
	    return dest;
	  },
	  set: function set(dest, x, y, z, w) {
	    dest[0] = x || 0;
	    dest[1] = y || 0;
	    dest[2] = z || 0;
	    dest[3] = w || 0;
	
	    return dest;
	  },
	  clone: function clone(dest) {
	    if (dest instanceof Quat) {
	      return new Quat(dest[0], dest[1], dest[2], dest[3]);
	    }
	    return Quat.setQuat(new typedArray(4), dest);
	  },
	  neg: function neg(dest) {
	    return new Quat(-dest[0], -dest[1], -dest[2], -dest[3]);
	  },
	  $neg: function $neg(dest) {
	    dest[0] = -dest[0];
	    dest[1] = -dest[1];
	    dest[2] = -dest[2];
	    dest[3] = -dest[3];
	
	    return dest;
	  },
	  add: function add(dest, q) {
	    return new Quat(dest[0] + q[0], dest[1] + q[1], dest[2] + q[2], dest[3] + q[3]);
	  },
	  $add: function $add(dest, q) {
	    dest[0] += q[0];
	    dest[1] += q[1];
	    dest[2] += q[2];
	    dest[3] += q[3];
	
	    return dest;
	  },
	  sub: function sub(dest, q) {
	    return new Quat(dest[0] - q[0], dest[1] - q[1], dest[2] - q[2], dest[3] - q[3]);
	  },
	  $sub: function $sub(dest, q) {
	    dest[0] -= q[0];
	    dest[1] -= q[1];
	    dest[2] -= q[2];
	    dest[3] -= q[3];
	
	    return dest;
	  },
	  scale: function scale(dest, s) {
	    return new Quat(dest[0] * s, dest[1] * s, dest[2] * s, dest[3] * s);
	  },
	  $scale: function $scale(dest, s) {
	    dest[0] *= s;
	    dest[1] *= s;
	    dest[2] *= s;
	    dest[3] *= s;
	
	    return dest;
	  },
	  mulQuat: function mulQuat(dest, q) {
	    var aX = dest[0],
	        aY = dest[1],
	        aZ = dest[2],
	        aW = dest[3],
	        bX = q[0],
	        bY = q[1],
	        bZ = q[2],
	        bW = q[3];
	
	    return new Quat(aW * bX + aX * bW + aY * bZ - aZ * bY, aW * bY + aY * bW + aZ * bX - aX * bZ, aW * bZ + aZ * bW + aX * bY - aY * bX, aW * bW - aX * bX - aY * bY - aZ * bZ);
	  },
	  $mulQuat: function $mulQuat(dest, q) {
	    var aX = dest[0],
	        aY = dest[1],
	        aZ = dest[2],
	        aW = dest[3],
	        bX = q[0],
	        bY = q[1],
	        bZ = q[2],
	        bW = q[3];
	
	    dest[0] = aW * bX + aX * bW + aY * bZ - aZ * bY;
	    dest[1] = aW * bY + aY * bW + aZ * bX - aX * bZ;
	    dest[2] = aW * bZ + aZ * bW + aX * bY - aY * bX;
	    dest[3] = aW * bW - aX * bX - aY * bY - aZ * bZ;
	
	    return dest;
	  },
	  divQuat: function divQuat(dest, q) {
	    var aX = dest[0],
	        aY = dest[1],
	        aZ = dest[2],
	        aW = dest[3],
	        bX = q[0],
	        bY = q[1],
	        bZ = q[2],
	        bW = q[3];
	
	    var d = 1 / (bW * bW + bX * bX + bY * bY + bZ * bZ);
	
	    return new Quat((aX * bW - aW * bX - aY * bZ + aZ * bY) * d, (aX * bZ - aW * bY + aY * bW - aZ * bX) * d, (aY * bX + aZ * bW - aW * bZ - aX * bY) * d, (aW * bW + aX * bX + aY * bY + aZ * bZ) * d);
	  },
	  $divQuat: function $divQuat(dest, q) {
	    var aX = dest[0],
	        aY = dest[1],
	        aZ = dest[2],
	        aW = dest[3],
	        bX = q[0],
	        bY = q[1],
	        bZ = q[2],
	        bW = q[3];
	
	    var d = 1 / (bW * bW + bX * bX + bY * bY + bZ * bZ);
	
	    dest[0] = (aX * bW - aW * bX - aY * bZ + aZ * bY) * d;
	    dest[1] = (aX * bZ - aW * bY + aY * bW - aZ * bX) * d;
	    dest[2] = (aY * bX + aZ * bW - aW * bZ - aX * bY) * d;
	    dest[3] = (aW * bW + aX * bX + aY * bY + aZ * bZ) * d;
	
	    return dest;
	  },
	  invert: function invert(dest) {
	    var q0 = dest[0],
	        q1 = dest[1],
	        q2 = dest[2],
	        q3 = dest[3];
	
	    var d = 1 / (q0 * q0 + q1 * q1 + q2 * q2 + q3 * q3);
	
	    return new Quat(-q0 * d, -q1 * d, -q2 * d, q3 * d);
	  },
	  $invert: function $invert(dest) {
	    var q0 = dest[0],
	        q1 = dest[1],
	        q2 = dest[2],
	        q3 = dest[3];
	
	    var d = 1 / (q0 * q0 + q1 * q1 + q2 * q2 + q3 * q3);
	
	    dest[0] = -q0 * d;
	    dest[1] = -q1 * d;
	    dest[2] = -q2 * d;
	    dest[3] = q3 * d;
	
	    return dest;
	  },
	  norm: function norm(dest) {
	    var a = dest[0],
	        b = dest[1],
	        c = dest[2],
	        d = dest[3];
	
	    return sqrt(a * a + b * b + c * c + d * d);
	  },
	  normSq: function normSq(dest) {
	    var a = dest[0],
	        b = dest[1],
	        c = dest[2],
	        d = dest[3];
	
	    return a * a + b * b + c * c + d * d;
	  },
	  unit: function unit(dest) {
	    return Quat.scale(dest, 1 / Quat.norm(dest));
	  },
	  $unit: function $unit(dest) {
	    return Quat.$scale(dest, 1 / Quat.norm(dest));
	  },
	  conjugate: function conjugate(dest) {
	    return new Quat(-dest[0], -dest[1], -dest[2], dest[3]);
	  },
	  $conjugate: function $conjugate(dest) {
	    dest[0] = -dest[0];
	    dest[1] = -dest[1];
	    dest[2] = -dest[2];
	    return dest;
	  }
	};
	
	// add generics and instance methods
	
	proto = Quat.prototype = {};
	
	for (method in generics) {
	  Quat[method] = generics[method];
	  proto[method] = function (m) {
	    return function () {
	      var args = slice.call(arguments);
	
	      args.unshift(this);
	      return Quat[m].apply(Quat, args);
	    };
	  }(method);
	}
	
	// Add static methods
	Vec3.fromQuat = function (q) {
	  return new Vec3(q[0], q[1], q[2]);
	};
	
	Mat4.fromQuat = function (q) {
	  var a = q[3],
	      b = q[0],
	      c = q[1],
	      d = q[2];
	
	  return new Mat4(a * a + b * b - c * c - d * d, 2 * b * c - 2 * a * d, 2 * b * d + 2 * a * c, 0, 2 * b * c + 2 * a * d, a * a - b * b + c * c - d * d, 2 * c * d - 2 * a * b, 0, 2 * b * d - 2 * a * c, 2 * c * d + 2 * a * b, a * a - b * b - c * c + d * d, 0, 0, 0, 0, 1);
	};
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* eslint-disable guard-for-in */
	
	
	var _utils = __webpack_require__(204);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function noop() {}
	
	var AttributeManager = function () {
	  /**
	   * @classdesc
	   * Automated attribute generation and management. Suitable when a set of
	   * vertex shader attributes are generated by iteration over a data array,
	   * and updates to these attributes are needed either when the data itself
	   * changes, or when other data relevant to the calculations change.
	   *
	   * - First the application registers descriptions of its dynamic vertex
	   *   attributes using AttributeManager.add().
	   * - Then, when any change that affects attributes is detected by the
	   *   application, the app will call AttributeManager.invalidate().
	   * - Finally before it renders, it calls AttributeManager.update() to
	   *   ensure that attributes are automatically rebuilt if anything has been
	   *   invalidated.
	   *
	   * The application provided update functions describe how attributes
	   * should be updated from a data array and are expected to traverse
	   * that data array (or iterable) and fill in the attribute's typed array.
	   *
	   * Note that the attribute manager intentionally does not do advanced
	   * change detection, but instead makes it easy to build such detection
	   * by offering the ability to "invalidate" each attribute separately.
	   *
	   * Summary:
	   * - keeps track of valid state for each attribute
	   * - auto reallocates attributes when needed
	   * - auto updates attributes with registered updater functions
	   * - allows overriding with application supplied buffers
	   *
	   * Limitations:
	   * - There are currently no provisions for only invalidating a range of
	   *   indices in an attribute.
	   *
	   * @class
	   * @param {Object} [props]
	   * @param {String} [props.id] - identifier (for debugging)
	   */
	  function AttributeManager() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$id = _ref.id,
	        id = _ref$id === undefined ? 'attribute-manager' : _ref$id,
	        otherProps = _objectWithoutProperties(_ref, ['id']);
	
	    _classCallCheck(this, AttributeManager);
	
	    this.id = id;
	    this.attributes = {};
	    this.allocedInstances = -1;
	    this.needsRedraw = true;
	    this.userData = {};
	
	    this.onUpdateStart = noop;
	    this.onUpdateEnd = noop;
	    this.onLog = this._defaultLog;
	
	    // For debugging sanity, prevent uninitialized members
	    Object.seal(this);
	  }
	
	  /**
	   * Adds attributes
	   * Takes a map of attribute descriptor objects
	   * - keys are attribute names
	   * - values are objects with attribute fields
	   *
	   * attribute.size - number of elements per object
	   * attribute.updater - number of elements
	   * attribute.instanced=0 - is this is an instanced attribute (a.k.a. divisor)
	   * attribute.noAlloc=false - if this attribute should not be allocated
	   *
	   * @example
	   * attributeManager.add({
	   *   positions: {size: 2, update: calculatePositions}
	   *   colors: {size: 3, update: calculateColors}
	   * });
	   *
	   * @param {Object} attributes - attribute map (see above)
	   * @param {Object} updaters - separate map of update functions (deprecated)
	   */
	
	
	  _createClass(AttributeManager, [{
	    key: 'add',
	    value: function add(attributes) {
	      var updaters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      this._add(attributes, updaters);
	    }
	
	    // Marks an attribute for update
	
	  }, {
	    key: 'invalidate',
	    value: function invalidate(attributeName) {
	      var attributes = this.attributes;
	
	      var attribute = attributes[attributeName];
	      (0, _assert2.default)(attribute);
	      attribute.needsUpdate = true;
	      // For performance tuning
	      this.onLog(1, 'invalidated attribute ' + attributeName + ' for ' + this.id);
	    }
	  }, {
	    key: 'invalidateAll',
	    value: function invalidateAll() {
	      var attributes = this.attributes;
	
	      for (var attributeName in attributes) {
	        this.invalidate(attributeName);
	      }
	    }
	
	    /**
	     * Ensure all attribute buffers are updated from props or data.
	     *
	     * Note: Any preallocated buffers in "buffers" matching registered attribute
	     * names will be used. No update will happen in this case.
	     * Note: Calls onUpdateStart and onUpdateEnd log callbacks before and after.
	     *
	     * @param {Object} opts - options
	     * @param {Object} opts.data - data (iterable object)
	     * @param {Object} opts.numInstances - count of data
	     * @param {Object} opts.buffers = {} - pre-allocated buffers
	     * @param {Object} opts.props - passed to updaters
	     * @param {Object} opts.context - Used as "this" context for updaters
	     */
	
	  }, {
	    key: 'update',
	    value: function update() {
	      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          data = _ref2.data,
	          numInstances = _ref2.numInstances,
	          _ref2$buffers = _ref2.buffers,
	          buffers = _ref2$buffers === undefined ? {} : _ref2$buffers,
	          _ref2$props = _ref2.props,
	          props = _ref2$props === undefined ? {} : _ref2$props,
	          _ref2$context = _ref2.context,
	          context = _ref2$context === undefined ? {} : _ref2$context,
	          opts = _objectWithoutProperties(_ref2, ['data', 'numInstances', 'buffers', 'props', 'context']);
	
	      // First apply any application provided buffers
	      this._checkExternalBuffers(buffers, opts);
	      this._setExternalBuffers(buffers);
	
	      // Only initiate alloc/update (and logging) if actually needed
	      if (this._analyzeBuffers({ numInstances: numInstances })) {
	        this.onUpdateStart(this.id);
	        this._updateBuffers({ numInstances: numInstances, data: data, props: props, context: context });
	        this.onUpdateEnd(this.id);
	      }
	    }
	
	    /**
	     * Sets log functions to help trace or time attribute updates.
	     * Default logging uses luma logger.
	     *
	     * Note that the app may not be in control of when update is called,
	     * so hooks are provided for update start and end.
	     *
	     * @param {Object} [opts]
	     * @param {String} [opts.onLog=] - called to print
	     * @param {String} [opts.onUpdateStart=] - called before update() starts
	     * @param {String} [opts.onUpdateEnd=] - called after update() ends
	     */
	
	  }, {
	    key: 'setLogFunctions',
	    value: function setLogFunctions() {
	      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          onLog = _ref3.onLog,
	          onUpdateStart = _ref3.onUpdateStart,
	          onUpdateEnd = _ref3.onUpdateEnd;
	
	      this.onLog = onLog !== undefined ? onLog : this.onLog;
	      this.onUpdateStart = onUpdateStart !== undefined ? onUpdateStart : this.onUpdateStart;
	      this.onUpdateEnd = onUpdateEnd !== undefined ? onUpdateEnd : this.onUpdateEnd;
	    }
	
	    /**
	     * Returns all attribute descriptors
	     * Note: Format matches luma.gl Model/Program.setAttributes()
	     * @return {Object} attributes - descriptors
	     */
	
	  }, {
	    key: 'getAttributes',
	    value: function getAttributes() {
	      return this.attributes;
	    }
	
	    /**
	     * Returns changed attribute descriptors
	     * This indicates which WebGLBuggers need to be updated
	     * @return {Object} attributes - descriptors
	     */
	
	  }, {
	    key: 'getChangedAttributes',
	    value: function getChangedAttributes(_ref4) {
	      var _ref4$clearChangedFla = _ref4.clearChangedFlags,
	          clearChangedFlags = _ref4$clearChangedFla === undefined ? false : _ref4$clearChangedFla;
	      var attributes = this.attributes;
	
	      var changedAttributes = {};
	      for (var attributeName in attributes) {
	        var attribute = attributes[attributeName];
	        if (attribute.changed) {
	          attribute.changed = attribute.changed && !clearChangedFlags;
	          changedAttributes[attributeName] = attribute;
	        }
	      }
	      return changedAttributes;
	    }
	
	    /**
	     * Returns the redraw flag, optionally clearing it.
	     * Redraw flag will be set if any attributes attributes changed since
	     * flag was last cleared.
	     *
	     * @param {Object} [opts]
	     * @param {String} [opts.clearRedrawFlags=false] - whether to clear the flag
	     * @return {Boolean} - whether a redraw is needed.
	     */
	
	  }, {
	    key: 'getNeedsRedraw',
	    value: function getNeedsRedraw() {
	      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref5$clearRedrawFlag = _ref5.clearRedrawFlags,
	          clearRedrawFlags = _ref5$clearRedrawFlag === undefined ? false : _ref5$clearRedrawFlag;
	
	      var redraw = this.needsRedraw;
	      redraw = redraw || this.needsRedraw;
	      this.needsRedraw = this.needsRedraw && !clearRedrawFlags;
	      return redraw;
	    }
	
	    /**
	     * Sets the redraw flag.
	     * @param {Boolean} redraw=true
	     * @return {AttributeManager} - for chaining
	     */
	
	  }, {
	    key: 'setNeedsRedraw',
	    value: function setNeedsRedraw() {
	      var redraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
	
	      this.needsRedraw = true;
	      return this;
	    }
	
	    // DEPRECATED METHODS
	
	    /**
	     * @deprecated since version 2.5, use add() instead
	     * Adds attributes
	     * @param {Object} attributes - attribute map (see above)
	     * @param {Object} updaters - separate map of update functions (deprecated)
	     */
	
	  }, {
	    key: 'addDynamic',
	    value: function addDynamic(attributes) {
	      var updaters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      this._add(attributes, updaters);
	    }
	
	    /**
	     * @deprecated since version 2.5, use add() instead
	     * Adds attributes
	     * @param {Object} attributes - attribute map (see above)
	     * @param {Object} updaters - separate map of update functions (deprecated)
	     */
	
	  }, {
	    key: 'addInstanced',
	    value: function addInstanced(attributes) {
	      var updaters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      this._add(attributes, updaters, { instanced: 1 });
	    }
	
	    // PRIVATE METHODS
	
	    // Default logger
	
	  }, {
	    key: '_defaultLog',
	    value: function _defaultLog(level, message) {
	      _utils.log.log(level, message);
	    }
	
	    // Used to register an attribute
	
	  }, {
	    key: '_add',
	    value: function _add(attributes) {
	      var updaters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      var _extraProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	      var newAttributes = {};
	
	      for (var attributeName in attributes) {
	        // support for separate update function map
	        // For now, just copy any attributes from that map into the main map
	        // TODO - Attribute maps are a deprecated feature, remove
	        if (attributeName in updaters) {
	          attributes[attributeName] = _extends({}, attributes[attributeName], updaters[attributeName]);
	        }
	
	        var attribute = attributes[attributeName];
	
	        // Check all fields and generate helpful error messages
	        this._validate(attributeName, attribute);
	
	        // Initialize the attribute descriptor, with WebGL and metadata fields
	        var attributeData = _extends({
	          // Ensure that fields are present before Object.seal()
	          target: undefined,
	          isIndexed: false,
	
	          // Reserved for application
	          userData: {}
	
	        }, attribute, {
	
	          // State
	          isExternalBuffer: false,
	          needsAlloc: false,
	          needsUpdate: false,
	          changed: false,
	
	          // Luma fields
	          size: attribute.size,
	          value: attribute.value || null
	
	        }, _extraProps);
	        // Sanity - no app fields on our attributes. Use userData instead.
	        Object.seal(attributeData);
	
	        // Add to both attributes list (for registration with model)
	        this.attributes[attributeName] = attributeData;
	      }
	
	      Object.assign(this.attributes, newAttributes);
	    }
	  }, {
	    key: '_validate',
	    value: function _validate(attributeName, attribute) {
	      (0, _assert2.default)(typeof attribute.size === 'number', 'Attribute definition for ' + attributeName + ' missing size');
	
	      // Check the updater
	      (0, _assert2.default)(typeof attribute.update === 'function' || attribute.noAlloc, 'Attribute updater for ' + attributeName + ' missing update method');
	    }
	
	    // Checks that any attribute buffers in props are valid
	    // Note: This is just to help app catch mistakes
	
	  }, {
	    key: '_checkExternalBuffers',
	    value: function _checkExternalBuffers() {
	      var bufferMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      var attributes = this.attributes;
	
	      for (var attributeName in bufferMap) {
	        var attribute = attributes[attributeName];
	        if (!attribute && !opts.ignoreUnknownAttributes) {
	          throw new Error('Unknown attribute prop ' + attributeName);
	        }
	        // const buffer = bufferMap[attributeName];
	        // TODO - check buffer type
	      }
	    }
	
	    // Set the buffers for the supplied attributes
	    // Update attribute buffers from any attributes in props
	    // Detach any previously set buffers, marking all
	    // Attributes for auto allocation
	    /* eslint-disable max-statements */
	
	  }, {
	    key: '_setExternalBuffers',
	    value: function _setExternalBuffers(bufferMap) {
	      var attributes = this.attributes,
	          numInstances = this.numInstances;
	
	      // Copy the refs of any supplied buffers in the props
	
	      for (var attributeName in attributes) {
	        var attribute = attributes[attributeName];
	        var buffer = bufferMap[attributeName];
	        attribute.isExternalBuffer = false;
	        if (buffer) {
	          if (!(buffer instanceof Float32Array)) {
	            throw new Error('Attribute properties must be of type Float32Array');
	          }
	          if (attribute.auto && buffer.length <= numInstances * attribute.size) {
	            throw new Error('Attribute prop array must match length and size');
	          }
	
	          attribute.isExternalBuffer = true;
	          attribute.needsUpdate = false;
	          if (attribute.value !== buffer) {
	            attribute.value = buffer;
	            attribute.changed = true;
	            this.needsRedraw = true;
	          }
	        }
	      }
	    }
	    /* eslint-enable max-statements */
	
	    /* Checks that typed arrays for attributes are big enough
	     * sets alloc flag if not
	     * @return {Boolean} whether any updates are needed
	     */
	
	  }, {
	    key: '_analyzeBuffers',
	    value: function _analyzeBuffers(_ref6) {
	      var numInstances = _ref6.numInstances;
	      var attributes = this.attributes;
	
	      (0, _assert2.default)(numInstances !== undefined);
	
	      // Track whether any allocations or updates are needed
	      var needsUpdate = false;
	
	      for (var attributeName in attributes) {
	        var attribute = attributes[attributeName];
	        if (!attribute.isExternalBuffer) {
	          // Do we need to reallocate the attribute's typed array?
	          var needsAlloc = attribute.value === null || attribute.value.length / attribute.size < numInstances;
	          if (needsAlloc && attribute.update) {
	            attribute.needsAlloc = true;
	            needsUpdate = true;
	          }
	          if (attribute.needsUpdate) {
	            needsUpdate = true;
	          }
	        }
	      }
	
	      return needsUpdate;
	    }
	
	    /**
	     * @private
	     * Calls update on any buffers that need update
	     * TODO? - If app supplied all attributes, no need to iterate over data
	     *
	     * @param {Object} opts - options
	     * @param {Object} opts.data - data (iterable object)
	     * @param {Object} opts.numInstances - count of data
	     * @param {Object} opts.buffers = {} - pre-allocated buffers
	     * @param {Object} opts.props - passed to updaters
	     * @param {Object} opts.context - Used as "this" context for updaters
	     */
	    /* eslint-disable max-statements */
	
	  }, {
	    key: '_updateBuffers',
	    value: function _updateBuffers(_ref7) {
	      var numInstances = _ref7.numInstances,
	          data = _ref7.data,
	          props = _ref7.props,
	          context = _ref7.context;
	      var attributes = this.attributes;
	
	      // Allocate at least one element to ensure a valid buffer
	
	      var allocCount = Math.max(numInstances, 1);
	
	      for (var attributeName in attributes) {
	        var attribute = attributes[attributeName];
	
	        // Allocate a new typed array if needed
	        if (attribute.needsAlloc) {
	          var ArrayType = attribute.type || Float32Array;
	          attribute.value = new ArrayType(attribute.size * allocCount);
	          this.onLog(2, this.id + ':' + attributeName + ' allocated ' + allocCount);
	          attribute.needsAlloc = false;
	          attribute.needsUpdate = true;
	        }
	
	        // Call updater function if needed
	        if (attribute.needsUpdate) {
	          var update = attribute.update;
	
	          if (update) {
	            this.onLog(2, this.id + ':' + attributeName + ' updating ' + numInstances);
	            update.call(context, attribute, { data: data, props: props, numInstances: numInstances });
	          } else {
	            this.onLog(2, this.id + ':' + attributeName + ' missing update function');
	          }
	          attribute.needsUpdate = false;
	          attribute.changed = true;
	          this.needsRedraw = true;
	        }
	      }
	
	      this.allocedInstances = allocCount;
	    }
	    /* eslint-enable max-statements */
	
	  }]);
	
	  return AttributeManager;
	}();
	
	exports.default = AttributeManager;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _webgl = __webpack_require__(188);
	
	var _webglChecks = __webpack_require__(201);
	
	var _framebuffer = __webpack_require__(216);
	
	var _framebuffer2 = _interopRequireDefault(_framebuffer);
	
	var _renderbuffer = __webpack_require__(218);
	
	var _renderbuffer2 = _interopRequireDefault(_renderbuffer);
	
	var _texture2d = __webpack_require__(217);
	
	var _texture2d2 = _interopRequireDefault(_texture2d);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var FramebufferObject = function () {
	
	  /* eslint-disable max-statements */
	  function FramebufferObject(gl) {
	    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	        _ref$width = _ref.width,
	        width = _ref$width === undefined ? 1 : _ref$width,
	        _ref$height = _ref.height,
	        height = _ref$height === undefined ? 1 : _ref$height,
	        _ref$depth = _ref.depth,
	        depth = _ref$depth === undefined ? true : _ref$depth,
	        _ref$minFilter = _ref.minFilter,
	        minFilter = _ref$minFilter === undefined ? _webgl.GL.NEAREST : _ref$minFilter,
	        _ref$magFilter = _ref.magFilter,
	        magFilter = _ref$magFilter === undefined ? _webgl.GL.NEAREST : _ref$magFilter,
	        _ref$format = _ref.format,
	        format = _ref$format === undefined ? _webgl.GL.RGBA : _ref$format,
	        _ref$type = _ref.type,
	        type = _ref$type === undefined ? _webgl.GL.UNSIGNED_BYTE : _ref$type;
	
	    _classCallCheck(this, FramebufferObject);
	
	    (0, _webglChecks.assertWebGLContext)(gl);
	
	    this.gl = gl;
	    this.depth = depth;
	    this.minFilter = minFilter;
	    this.magFilter = magFilter;
	    this.format = format;
	    this.type = type;
	
	    this.resize(width, height);
	  }
	
	  _createClass(FramebufferObject, [{
	    key: 'delete',
	    value: function _delete() {}
	  }, {
	    key: 'resize',
	    value: function resize(width, height) {
	      (0, _assert2.default)(width >= 0 && height >= 0, 'Width and height need to be integers');
	      if (width === this.width && height === this.height) {
	        return;
	      }
	
	      var gl = this.gl;
	
	      // TODO - do we need to reallocate the framebuffer?
	
	      var fb = new _framebuffer2.default(gl);
	
	      var colorBuffer = new _texture2d2.default(gl, {
	        minFilter: this.minFilter,
	        magFilter: this.magFilter
	      })
	      // TODO - should be handled by Texture2D constructor?
	      .setImageData({
	        data: null,
	        width: width,
	        height: height,
	        type: this.type,
	        format: this.format
	      });
	
	      fb.attachTexture({
	        attachment: _webgl.GL.COLOR_ATTACHMENT0,
	        texture: colorBuffer
	      });
	
	      if (this.colorBuffer) {
	        this.colorBuffer.delete();
	      }
	      this.colorBuffer = colorBuffer;
	
	      // Add a depth buffer if requested
	      if (this.depth) {
	        var depthBuffer = new _renderbuffer2.default(gl).storage({
	          internalFormat: _webgl.GL.DEPTH_COMPONENT16,
	          width: width,
	          height: height
	        });
	        fb.attachRenderbuffer({
	          attachment: _webgl.GL.DEPTH_ATTACHMENT,
	          renderbuffer: depthBuffer
	        });
	
	        if (this.depthBuffer) {
	          this.depthBuffer.delete();
	        }
	        this.depthBuffer = depthBuffer;
	      }
	
	      // Checks that framebuffer was properly set up,
	      // if not, throws an explanatory error
	      fb.checkStatus();
	
	      this.width = width;
	      this.height = height;
	
	      // Immediately dispose of old buffer
	      if (this.fb) {
	        this.fb.delete();
	      }
	      this.fb = fb;
	    }
	    /* eslint-enable max-statements */
	
	  }, {
	    key: 'bind',
	    value: function bind() {
	      this.fb.bind();
	    }
	  }, {
	    key: 'unbind',
	    value: function unbind() {
	      this.fb.unbind();
	    }
	  }]);
	
	  return FramebufferObject;
	}();
	
	exports.default = FramebufferObject;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kZXByZWNhdGVkL2Ziby5qcyJdLCJuYW1lcyI6WyJGcmFtZWJ1ZmZlck9iamVjdCIsImdsIiwid2lkdGgiLCJoZWlnaHQiLCJkZXB0aCIsIm1pbkZpbHRlciIsIk5FQVJFU1QiLCJtYWdGaWx0ZXIiLCJmb3JtYXQiLCJSR0JBIiwidHlwZSIsIlVOU0lHTkVEX0JZVEUiLCJyZXNpemUiLCJmYiIsImNvbG9yQnVmZmVyIiwic2V0SW1hZ2VEYXRhIiwiZGF0YSIsImF0dGFjaFRleHR1cmUiLCJhdHRhY2htZW50IiwiQ09MT1JfQVRUQUNITUVOVDAiLCJ0ZXh0dXJlIiwiZGVsZXRlIiwiZGVwdGhCdWZmZXIiLCJzdG9yYWdlIiwiaW50ZXJuYWxGb3JtYXQiLCJERVBUSF9DT01QT05FTlQxNiIsImF0dGFjaFJlbmRlcmJ1ZmZlciIsIkRFUFRIX0FUVEFDSE1FTlQiLCJyZW5kZXJidWZmZXIiLCJjaGVja1N0YXR1cyIsImJpbmQiLCJ1bmJpbmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7OztJQUVxQkEsaUI7O0FBRW5CO0FBQ0EsNkJBQVlDLEVBQVosRUFRUTtBQUFBLG1GQUFKLEVBQUk7QUFBQSwwQkFQTkMsS0FPTTtBQUFBLFFBUE5BLEtBT00sOEJBUEUsQ0FPRjtBQUFBLDJCQU5OQyxNQU1NO0FBQUEsUUFOTkEsTUFNTSwrQkFORyxDQU1IO0FBQUEsMEJBTE5DLEtBS007QUFBQSxRQUxOQSxLQUtNLDhCQUxFLElBS0Y7QUFBQSw4QkFKTkMsU0FJTTtBQUFBLFFBSk5BLFNBSU0sa0NBSk0sVUFBR0MsT0FJVDtBQUFBLDhCQUhOQyxTQUdNO0FBQUEsUUFITkEsU0FHTSxrQ0FITSxVQUFHRCxPQUdUO0FBQUEsMkJBRk5FLE1BRU07QUFBQSxRQUZOQSxNQUVNLCtCQUZHLFVBQUdDLElBRU47QUFBQSx5QkFETkMsSUFDTTtBQUFBLFFBRE5BLElBQ00sNkJBREMsVUFBR0MsYUFDSjs7QUFBQTs7QUFDTix5Q0FBbUJWLEVBQW5COztBQUVBLFNBQUtBLEVBQUwsR0FBVUEsRUFBVjtBQUNBLFNBQUtHLEtBQUwsR0FBYUEsS0FBYjtBQUNBLFNBQUtDLFNBQUwsR0FBaUJBLFNBQWpCO0FBQ0EsU0FBS0UsU0FBTCxHQUFpQkEsU0FBakI7QUFDQSxTQUFLQyxNQUFMLEdBQWNBLE1BQWQ7QUFDQSxTQUFLRSxJQUFMLEdBQVlBLElBQVo7O0FBRUEsU0FBS0UsTUFBTCxDQUFZVixLQUFaLEVBQW1CQyxNQUFuQjtBQUNEOzs7OzhCQUVRLENBQ1I7OzsyQkFFTUQsSyxFQUFPQyxNLEVBQVE7QUFDcEIsNEJBQU9ELFNBQVMsQ0FBVCxJQUFjQyxVQUFVLENBQS9CLEVBQWtDLHNDQUFsQztBQUNBLFVBQUlELFVBQVUsS0FBS0EsS0FBZixJQUF3QkMsV0FBVyxLQUFLQSxNQUE1QyxFQUFvRDtBQUNsRDtBQUNEOztBQUptQixVQU1iRixFQU5hLEdBTVAsSUFOTyxDQU1iQSxFQU5hOztBQVFwQjs7QUFDQSxVQUFNWSxLQUFLLDBCQUFnQlosRUFBaEIsQ0FBWDs7QUFFQSxVQUFNYSxjQUFjLHdCQUFjYixFQUFkLEVBQWtCO0FBQ3BDSSxtQkFBVyxLQUFLQSxTQURvQjtBQUVwQ0UsbUJBQVcsS0FBS0E7QUFGb0IsT0FBbEI7QUFJcEI7QUFKb0IsT0FLbkJRLFlBTG1CLENBS047QUFDWkMsY0FBTSxJQURNO0FBRVpkLG9CQUZZO0FBR1pDLHNCQUhZO0FBSVpPLGNBQU0sS0FBS0EsSUFKQztBQUtaRixnQkFBUSxLQUFLQTtBQUxELE9BTE0sQ0FBcEI7O0FBYUFLLFNBQUdJLGFBQUgsQ0FBaUI7QUFDZkMsb0JBQVksVUFBR0MsaUJBREE7QUFFZkMsaUJBQVNOO0FBRk0sT0FBakI7O0FBS0EsVUFBSSxLQUFLQSxXQUFULEVBQXNCO0FBQ3BCLGFBQUtBLFdBQUwsQ0FBaUJPLE1BQWpCO0FBQ0Q7QUFDRCxXQUFLUCxXQUFMLEdBQW1CQSxXQUFuQjs7QUFFQTtBQUNBLFVBQUksS0FBS1YsS0FBVCxFQUFnQjtBQUNkLFlBQU1rQixjQUFjLDJCQUFpQnJCLEVBQWpCLEVBQXFCc0IsT0FBckIsQ0FBNkI7QUFDL0NDLDBCQUFnQixVQUFHQyxpQkFENEI7QUFFL0N2QixzQkFGK0M7QUFHL0NDO0FBSCtDLFNBQTdCLENBQXBCO0FBS0FVLFdBQUdhLGtCQUFILENBQXNCO0FBQ3BCUixzQkFBWSxVQUFHUyxnQkFESztBQUVwQkMsd0JBQWNOO0FBRk0sU0FBdEI7O0FBS0EsWUFBSSxLQUFLQSxXQUFULEVBQXNCO0FBQ3BCLGVBQUtBLFdBQUwsQ0FBaUJELE1BQWpCO0FBQ0Q7QUFDRCxhQUFLQyxXQUFMLEdBQW1CQSxXQUFuQjtBQUNEOztBQUVEO0FBQ0E7QUFDQVQsU0FBR2dCLFdBQUg7O0FBRUEsV0FBSzNCLEtBQUwsR0FBYUEsS0FBYjtBQUNBLFdBQUtDLE1BQUwsR0FBY0EsTUFBZDs7QUFFQTtBQUNBLFVBQUksS0FBS1UsRUFBVCxFQUFhO0FBQ1gsYUFBS0EsRUFBTCxDQUFRUSxNQUFSO0FBQ0Q7QUFDRCxXQUFLUixFQUFMLEdBQVVBLEVBQVY7QUFDRDtBQUNEOzs7OzJCQUVPO0FBQ0wsV0FBS0EsRUFBTCxDQUFRaUIsSUFBUjtBQUNEOzs7NkJBRVE7QUFDUCxXQUFLakIsRUFBTCxDQUFRa0IsTUFBUjtBQUNEOzs7Ozs7a0JBcEdrQi9CLGlCIiwiZmlsZSI6ImZiby5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7R0x9IGZyb20gJy4uL3dlYmdsL3dlYmdsJztcbmltcG9ydCB7YXNzZXJ0V2ViR0xDb250ZXh0fSBmcm9tICcuLi93ZWJnbC93ZWJnbC1jaGVja3MnO1xuaW1wb3J0IEZyYW1lYnVmZmVyIGZyb20gJy4uL3dlYmdsL2ZyYW1lYnVmZmVyJztcbmltcG9ydCBSZW5kZXJidWZmZXIgZnJvbSAnLi4vd2ViZ2wvcmVuZGVyYnVmZmVyJztcbmltcG9ydCBUZXh0dXJlMkQgZnJvbSAnLi4vd2ViZ2wvdGV4dHVyZS0yZCc7XG5pbXBvcnQgYXNzZXJ0IGZyb20gJ2Fzc2VydCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZyYW1lYnVmZmVyT2JqZWN0IHtcblxuICAvKiBlc2xpbnQtZGlzYWJsZSBtYXgtc3RhdGVtZW50cyAqL1xuICBjb25zdHJ1Y3RvcihnbCwge1xuICAgIHdpZHRoID0gMSxcbiAgICBoZWlnaHQgPSAxLFxuICAgIGRlcHRoID0gdHJ1ZSxcbiAgICBtaW5GaWx0ZXIgPSBHTC5ORUFSRVNULFxuICAgIG1hZ0ZpbHRlciA9IEdMLk5FQVJFU1QsXG4gICAgZm9ybWF0ID0gR0wuUkdCQSxcbiAgICB0eXBlID0gR0wuVU5TSUdORURfQllURVxuICB9ID0ge30pIHtcbiAgICBhc3NlcnRXZWJHTENvbnRleHQoZ2wpO1xuXG4gICAgdGhpcy5nbCA9IGdsO1xuICAgIHRoaXMuZGVwdGggPSBkZXB0aDtcbiAgICB0aGlzLm1pbkZpbHRlciA9IG1pbkZpbHRlcjtcbiAgICB0aGlzLm1hZ0ZpbHRlciA9IG1hZ0ZpbHRlcjtcbiAgICB0aGlzLmZvcm1hdCA9IGZvcm1hdDtcbiAgICB0aGlzLnR5cGUgPSB0eXBlO1xuXG4gICAgdGhpcy5yZXNpemUod2lkdGgsIGhlaWdodCk7XG4gIH1cblxuICBkZWxldGUoKSB7XG4gIH1cblxuICByZXNpemUod2lkdGgsIGhlaWdodCkge1xuICAgIGFzc2VydCh3aWR0aCA+PSAwICYmIGhlaWdodCA+PSAwLCAnV2lkdGggYW5kIGhlaWdodCBuZWVkIHRvIGJlIGludGVnZXJzJyk7XG4gICAgaWYgKHdpZHRoID09PSB0aGlzLndpZHRoICYmIGhlaWdodCA9PT0gdGhpcy5oZWlnaHQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCB7Z2x9ID0gdGhpcztcblxuICAgIC8vIFRPRE8gLSBkbyB3ZSBuZWVkIHRvIHJlYWxsb2NhdGUgdGhlIGZyYW1lYnVmZmVyP1xuICAgIGNvbnN0IGZiID0gbmV3IEZyYW1lYnVmZmVyKGdsKTtcblxuICAgIGNvbnN0IGNvbG9yQnVmZmVyID0gbmV3IFRleHR1cmUyRChnbCwge1xuICAgICAgbWluRmlsdGVyOiB0aGlzLm1pbkZpbHRlcixcbiAgICAgIG1hZ0ZpbHRlcjogdGhpcy5tYWdGaWx0ZXJcbiAgICB9KVxuICAgIC8vIFRPRE8gLSBzaG91bGQgYmUgaGFuZGxlZCBieSBUZXh0dXJlMkQgY29uc3RydWN0b3I/XG4gICAgLnNldEltYWdlRGF0YSh7XG4gICAgICBkYXRhOiBudWxsLFxuICAgICAgd2lkdGgsXG4gICAgICBoZWlnaHQsXG4gICAgICB0eXBlOiB0aGlzLnR5cGUsXG4gICAgICBmb3JtYXQ6IHRoaXMuZm9ybWF0XG4gICAgfSk7XG5cbiAgICBmYi5hdHRhY2hUZXh0dXJlKHtcbiAgICAgIGF0dGFjaG1lbnQ6IEdMLkNPTE9SX0FUVEFDSE1FTlQwLFxuICAgICAgdGV4dHVyZTogY29sb3JCdWZmZXJcbiAgICB9KTtcblxuICAgIGlmICh0aGlzLmNvbG9yQnVmZmVyKSB7XG4gICAgICB0aGlzLmNvbG9yQnVmZmVyLmRlbGV0ZSgpO1xuICAgIH1cbiAgICB0aGlzLmNvbG9yQnVmZmVyID0gY29sb3JCdWZmZXI7XG5cbiAgICAvLyBBZGQgYSBkZXB0aCBidWZmZXIgaWYgcmVxdWVzdGVkXG4gICAgaWYgKHRoaXMuZGVwdGgpIHtcbiAgICAgIGNvbnN0IGRlcHRoQnVmZmVyID0gbmV3IFJlbmRlcmJ1ZmZlcihnbCkuc3RvcmFnZSh7XG4gICAgICAgIGludGVybmFsRm9ybWF0OiBHTC5ERVBUSF9DT01QT05FTlQxNixcbiAgICAgICAgd2lkdGgsXG4gICAgICAgIGhlaWdodFxuICAgICAgfSk7XG4gICAgICBmYi5hdHRhY2hSZW5kZXJidWZmZXIoe1xuICAgICAgICBhdHRhY2htZW50OiBHTC5ERVBUSF9BVFRBQ0hNRU5ULFxuICAgICAgICByZW5kZXJidWZmZXI6IGRlcHRoQnVmZmVyXG4gICAgICB9KTtcblxuICAgICAgaWYgKHRoaXMuZGVwdGhCdWZmZXIpIHtcbiAgICAgICAgdGhpcy5kZXB0aEJ1ZmZlci5kZWxldGUoKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuZGVwdGhCdWZmZXIgPSBkZXB0aEJ1ZmZlcjtcbiAgICB9XG5cbiAgICAvLyBDaGVja3MgdGhhdCBmcmFtZWJ1ZmZlciB3YXMgcHJvcGVybHkgc2V0IHVwLFxuICAgIC8vIGlmIG5vdCwgdGhyb3dzIGFuIGV4cGxhbmF0b3J5IGVycm9yXG4gICAgZmIuY2hlY2tTdGF0dXMoKTtcblxuICAgIHRoaXMud2lkdGggPSB3aWR0aDtcbiAgICB0aGlzLmhlaWdodCA9IGhlaWdodDtcblxuICAgIC8vIEltbWVkaWF0ZWx5IGRpc3Bvc2Ugb2Ygb2xkIGJ1ZmZlclxuICAgIGlmICh0aGlzLmZiKSB7XG4gICAgICB0aGlzLmZiLmRlbGV0ZSgpO1xuICAgIH1cbiAgICB0aGlzLmZiID0gZmI7XG4gIH1cbiAgLyogZXNsaW50LWVuYWJsZSBtYXgtc3RhdGVtZW50cyAqL1xuXG4gIGJpbmQoKSB7XG4gICAgdGhpcy5mYi5iaW5kKCk7XG4gIH1cblxuICB1bmJpbmQoKSB7XG4gICAgdGhpcy5mYi51bmJpbmQoKTtcbiAgfVxufVxuIl19

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _object3d = __webpack_require__(249);
	
	var _object3d2 = _interopRequireDefault(_object3d);
	
	var _deprecated = __webpack_require__(250);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Group = function (_Object3D) {
	  _inherits(Group, _Object3D);
	
	  function Group(_ref) {
	    var _ref$children = _ref.children,
	        children = _ref$children === undefined ? [] : _ref$children,
	        opts = _objectWithoutProperties(_ref, ['children']);
	
	    _classCallCheck(this, Group);
	
	    children.every(function (child) {
	      return (0, _assert2.default)(child instanceof _object3d2.default);
	    });
	
	    var _this = _possibleConstructorReturn(this, (Group.__proto__ || Object.getPrototypeOf(Group)).call(this, opts));
	
	    _this.children = children;
	    return _this;
	  }
	
	  // Unpacks arrays and nested arrays of children
	
	
	  _createClass(Group, [{
	    key: 'add',
	    value: function add() {
	      for (var _len = arguments.length, children = Array(_len), _key = 0; _key < _len; _key++) {
	        children[_key] = arguments[_key];
	      }
	
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var child = _step.value;
	
	          if (Array.isArray(child)) {
	            this.add.apply(this, _toConsumableArray(child));
	          } else {
	            this.children.push(child);
	          }
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	
	      return this;
	    }
	  }, {
	    key: 'remove',
	    value: function remove(child) {
	      var children = this.children;
	      var indexOf = children.indexOf(child);
	      if (indexOf > -1) {
	        children.splice(indexOf, 1);
	      }
	      return this;
	    }
	  }, {
	    key: 'removeAll',
	    value: function removeAll() {
	      this.children = [];
	      return this;
	    }
	  }, {
	    key: 'traverse',
	    value: regeneratorRuntime.mark(function traverse() {
	      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref2$viewMatrix = _ref2.viewMatrix,
	          viewMatrix = _ref2$viewMatrix === undefined ? new _deprecated.Mat4() : _ref2$viewMatrix;
	
	      var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, child, matrix, worldMatrix;
	
	      return regeneratorRuntime.wrap(function traverse$(_context) {
	        while (1) {
	          switch (_context.prev = _context.next) {
	            case 0:
	              _iteratorNormalCompletion2 = true;
	              _didIteratorError2 = false;
	              _iteratorError2 = undefined;
	              _context.prev = 3;
	              _iterator2 = this.children[Symbol.iterator]();
	
	            case 5:
	              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
	                _context.next = 19;
	                break;
	              }
	
	              child = _step2.value;
	              matrix = child.matrix;
	              worldMatrix = viewMatrix.mulMat4(matrix);
	
	              if (!(child instanceof Group)) {
	                _context.next = 13;
	                break;
	              }
	
	              return _context.delegateYield(child.traverse({ matrix: matrix, worldMatrix: worldMatrix }), 't0', 11);
	
	            case 11:
	              _context.next = 16;
	              break;
	
	            case 13:
	              if (child.program) {
	                child.program.use();
	                child.program.setUniforms({ worldMatrix: worldMatrix });
	              }
	              _context.next = 16;
	              return child;
	
	            case 16:
	              _iteratorNormalCompletion2 = true;
	              _context.next = 5;
	              break;
	
	            case 19:
	              _context.next = 25;
	              break;
	
	            case 21:
	              _context.prev = 21;
	              _context.t1 = _context['catch'](3);
	              _didIteratorError2 = true;
	              _iteratorError2 = _context.t1;
	
	            case 25:
	              _context.prev = 25;
	              _context.prev = 26;
	
	              if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                _iterator2.return();
	              }
	
	            case 28:
	              _context.prev = 28;
	
	              if (!_didIteratorError2) {
	                _context.next = 31;
	                break;
	              }
	
	              throw _iteratorError2;
	
	            case 31:
	              return _context.finish(28);
	
	            case 32:
	              return _context.finish(25);
	
	            case 33:
	            case 'end':
	              return _context.stop();
	          }
	        }
	      }, traverse, this, [[3, 21, 25, 33], [26,, 28, 32]]);
	    })
	  }, {
	    key: 'traverseReverse',
	    value: regeneratorRuntime.mark(function traverseReverse() {
	      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref3$viewMatrix = _ref3.viewMatrix,
	          viewMatrix = _ref3$viewMatrix === undefined ? new _deprecated.Mat4() : _ref3$viewMatrix;
	
	      var i, child, matrix, worldMatrix;
	      return regeneratorRuntime.wrap(function traverseReverse$(_context2) {
	        while (1) {
	          switch (_context2.prev = _context2.next) {
	            case 0:
	              i = this.children.length - 1;
	
	            case 1:
	              if (!(i >= 0)) {
	                _context2.next = 15;
	                break;
	              }
	
	              child = this.children[i];
	              matrix = child.matrix;
	              worldMatrix = viewMatrix.mulMat4(matrix);
	
	              if (!(child instanceof Group)) {
	                _context2.next = 9;
	                break;
	              }
	
	              return _context2.delegateYield(child.traverseReverse({ matrix: matrix, worldMatrix: worldMatrix }), 't0', 7);
	
	            case 7:
	              _context2.next = 12;
	              break;
	
	            case 9:
	              if (child.program) {
	                child.program.use();
	                child.program.setUniforms({ worldMatrix: worldMatrix });
	              }
	              _context2.next = 12;
	              return child;
	
	            case 12:
	              --i;
	              _context2.next = 1;
	              break;
	
	            case 15:
	            case 'end':
	              return _context2.stop();
	          }
	        }
	      }, traverseReverse, this);
	    })
	  }]);
	
	  return Group;
	}(_object3d2.default);
	
	exports.default = Group;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY2VuZWdyYXBoL2dyb3VwLmpzIl0sIm5hbWVzIjpbIkdyb3VwIiwiY2hpbGRyZW4iLCJvcHRzIiwiZXZlcnkiLCJjaGlsZCIsIkFycmF5IiwiaXNBcnJheSIsImFkZCIsInB1c2giLCJpbmRleE9mIiwic3BsaWNlIiwidmlld01hdHJpeCIsIm1hdHJpeCIsIndvcmxkTWF0cml4IiwibXVsTWF0NCIsInRyYXZlcnNlIiwicHJvZ3JhbSIsInVzZSIsInNldFVuaWZvcm1zIiwiaSIsImxlbmd0aCIsInRyYXZlcnNlUmV2ZXJzZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztJQUVxQkEsSzs7O0FBQ25CLHVCQUFzQztBQUFBLDZCQUF6QkMsUUFBeUI7QUFBQSxRQUF6QkEsUUFBeUIsaUNBQWQsRUFBYztBQUFBLFFBQVBDLElBQU87O0FBQUE7O0FBQ3BDRCxhQUFTRSxLQUFULENBQWU7QUFBQSxhQUFTLHNCQUFPQyxtQ0FBUCxDQUFUO0FBQUEsS0FBZjs7QUFEb0MsOEdBRTlCRixJQUY4Qjs7QUFHcEMsVUFBS0QsUUFBTCxHQUFnQkEsUUFBaEI7QUFIb0M7QUFJckM7O0FBRUQ7Ozs7OzBCQUNpQjtBQUFBLHdDQUFWQSxRQUFVO0FBQVZBLGdCQUFVO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQ2YsNkJBQW9CQSxRQUFwQiw4SEFBOEI7QUFBQSxjQUFuQkcsS0FBbUI7O0FBQzVCLGNBQUlDLE1BQU1DLE9BQU4sQ0FBY0YsS0FBZCxDQUFKLEVBQTBCO0FBQ3hCLGlCQUFLRyxHQUFMLGdDQUFZSCxLQUFaO0FBQ0QsV0FGRCxNQUVPO0FBQ0wsaUJBQUtILFFBQUwsQ0FBY08sSUFBZCxDQUFtQkosS0FBbkI7QUFDRDtBQUNGO0FBUGM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFRZixhQUFPLElBQVA7QUFDRDs7OzJCQUVNQSxLLEVBQU87QUFDWixVQUFNSCxXQUFXLEtBQUtBLFFBQXRCO0FBQ0EsVUFBTVEsVUFBVVIsU0FBU1EsT0FBVCxDQUFpQkwsS0FBakIsQ0FBaEI7QUFDQSxVQUFJSyxVQUFVLENBQUMsQ0FBZixFQUFrQjtBQUNoQlIsaUJBQVNTLE1BQVQsQ0FBZ0JELE9BQWhCLEVBQXlCLENBQXpCO0FBQ0Q7QUFDRCxhQUFPLElBQVA7QUFDRDs7O2dDQUVXO0FBQ1YsV0FBS1IsUUFBTCxHQUFnQixFQUFoQjtBQUNBLGFBQU8sSUFBUDtBQUNEOzs7O3NGQUVzQyxFO21DQUEzQlUsVTtVQUFBQSxVLG9DQUFhLHNCOzs7Ozs7Ozs7Ozs7MkJBQ0gsS0FBS1YsUTs7Ozs7Ozs7QUFBZEcsbUI7QUFDRlEsb0IsR0FBVVIsSyxDQUFWUSxNO0FBQ0RDLHlCLEdBQWNGLFdBQVdHLE9BQVgsQ0FBbUJGLE1BQW5CLEM7O29CQUNoQlIsaUJBQWlCSixLOzs7Ozs0Q0FDWkksTUFBTVcsUUFBTixDQUFlLEVBQUNILGNBQUQsRUFBU0Msd0JBQVQsRUFBZixDOzs7Ozs7O0FBRVAsa0JBQUlULE1BQU1ZLE9BQVYsRUFBbUI7QUFDakJaLHNCQUFNWSxPQUFOLENBQWNDLEdBQWQ7QUFDQWIsc0JBQU1ZLE9BQU4sQ0FBY0UsV0FBZCxDQUEwQixFQUFDTCx3QkFBRCxFQUExQjtBQUNEOztxQkFDS1QsSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3NGQUtrQyxFO21DQUEzQk8sVTtVQUFBQSxVLG9DQUFhLHNCOzs7Ozs7O0FBQ3JCUSxlLEdBQUksS0FBS2xCLFFBQUwsQ0FBY21CLE1BQWQsR0FBdUIsQzs7O29CQUFHRCxLQUFLLEM7Ozs7O0FBQ3BDZixtQixHQUFRLEtBQUtILFFBQUwsQ0FBY2tCLENBQWQsQztBQUNQUCxvQixHQUFVUixLLENBQVZRLE07QUFDREMseUIsR0FBY0YsV0FBV0csT0FBWCxDQUFtQkYsTUFBbkIsQzs7b0JBQ2hCUixpQkFBaUJKLEs7Ozs7OzZDQUNaSSxNQUFNaUIsZUFBTixDQUFzQixFQUFDVCxjQUFELEVBQVNDLHdCQUFULEVBQXRCLEM7Ozs7Ozs7QUFFUCxrQkFBSVQsTUFBTVksT0FBVixFQUFtQjtBQUNqQlosc0JBQU1ZLE9BQU4sQ0FBY0MsR0FBZDtBQUNBYixzQkFBTVksT0FBTixDQUFjRSxXQUFkLENBQTBCLEVBQUNMLHdCQUFELEVBQTFCO0FBQ0Q7O3FCQUNLVCxLOzs7QUFYcUMsZ0JBQUVlLEM7Ozs7Ozs7Ozs7Ozs7Ozs7a0JBbERoQ25CLEsiLCJmaWxlIjoiZ3JvdXAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgT2JqZWN0M0QgZnJvbSAnLi9vYmplY3QtM2QnO1xuaW1wb3J0IHtNYXQ0fSBmcm9tICcuLi9kZXByZWNhdGVkJztcbmltcG9ydCBhc3NlcnQgZnJvbSAnYXNzZXJ0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR3JvdXAgZXh0ZW5kcyBPYmplY3QzRCB7XG4gIGNvbnN0cnVjdG9yKHtjaGlsZHJlbiA9IFtdLCAuLi5vcHRzfSkge1xuICAgIGNoaWxkcmVuLmV2ZXJ5KGNoaWxkID0+IGFzc2VydChjaGlsZCBpbnN0YW5jZW9mIE9iamVjdDNEKSk7XG4gICAgc3VwZXIob3B0cyk7XG4gICAgdGhpcy5jaGlsZHJlbiA9IGNoaWxkcmVuO1xuICB9XG5cbiAgLy8gVW5wYWNrcyBhcnJheXMgYW5kIG5lc3RlZCBhcnJheXMgb2YgY2hpbGRyZW5cbiAgYWRkKC4uLmNoaWxkcmVuKSB7XG4gICAgZm9yIChjb25zdCBjaGlsZCBvZiBjaGlsZHJlbikge1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7XG4gICAgICAgIHRoaXMuYWRkKC4uLmNoaWxkKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuY2hpbGRyZW4ucHVzaChjaGlsZCk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgcmVtb3ZlKGNoaWxkKSB7XG4gICAgY29uc3QgY2hpbGRyZW4gPSB0aGlzLmNoaWxkcmVuO1xuICAgIGNvbnN0IGluZGV4T2YgPSBjaGlsZHJlbi5pbmRleE9mKGNoaWxkKTtcbiAgICBpZiAoaW5kZXhPZiA+IC0xKSB7XG4gICAgICBjaGlsZHJlbi5zcGxpY2UoaW5kZXhPZiwgMSk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgcmVtb3ZlQWxsKCkge1xuICAgIHRoaXMuY2hpbGRyZW4gPSBbXTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gICogdHJhdmVyc2Uoe3ZpZXdNYXRyaXggPSBuZXcgTWF0NCgpfSA9IHt9KSB7XG4gICAgZm9yIChjb25zdCBjaGlsZCBvZiB0aGlzLmNoaWxkcmVuKSB7XG4gICAgICBjb25zdCB7bWF0cml4fSA9IGNoaWxkO1xuICAgICAgY29uc3Qgd29ybGRNYXRyaXggPSB2aWV3TWF0cml4Lm11bE1hdDQobWF0cml4KTtcbiAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEdyb3VwKSB7XG4gICAgICAgIHlpZWxkKiBjaGlsZC50cmF2ZXJzZSh7bWF0cml4LCB3b3JsZE1hdHJpeH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGNoaWxkLnByb2dyYW0pIHtcbiAgICAgICAgICBjaGlsZC5wcm9ncmFtLnVzZSgpO1xuICAgICAgICAgIGNoaWxkLnByb2dyYW0uc2V0VW5pZm9ybXMoe3dvcmxkTWF0cml4fSk7XG4gICAgICAgIH1cbiAgICAgICAgeWllbGQgY2hpbGQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgKiB0cmF2ZXJzZVJldmVyc2Uoe3ZpZXdNYXRyaXggPSBuZXcgTWF0NCgpfSA9IHt9KSB7XG4gICAgZm9yIChsZXQgaSA9IHRoaXMuY2hpbGRyZW4ubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgIGNvbnN0IGNoaWxkID0gdGhpcy5jaGlsZHJlbltpXTtcbiAgICAgIGNvbnN0IHttYXRyaXh9ID0gY2hpbGQ7XG4gICAgICBjb25zdCB3b3JsZE1hdHJpeCA9IHZpZXdNYXRyaXgubXVsTWF0NChtYXRyaXgpO1xuICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3JvdXApIHtcbiAgICAgICAgeWllbGQqIGNoaWxkLnRyYXZlcnNlUmV2ZXJzZSh7bWF0cml4LCB3b3JsZE1hdHJpeH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGNoaWxkLnByb2dyYW0pIHtcbiAgICAgICAgICBjaGlsZC5wcm9ncmFtLnVzZSgpO1xuICAgICAgICAgIGNoaWxkLnByb2dyYW0uc2V0VW5pZm9ybXMoe3dvcmxkTWF0cml4fSk7XG4gICAgICAgIH1cbiAgICAgICAgeWllbGQgY2hpbGQ7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0=

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _config = __webpack_require__(256);
	
	var config = _interopRequireWildcard(_config);
	
	var _math = __webpack_require__(227);
	
	var _utils = __webpack_require__(204);
	
	var _group = __webpack_require__(254);
	
	var _group2 = _interopRequireDefault(_group);
	
	var _pick = __webpack_require__(257);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Scene Object management and rendering
	/* eslint-disable max-statements, no-try-catch */
	
	var INVALID_ARGUMENT = 'LumaGL.Scene invalid argument';
	
	var DEFAULT_SCENE_OPTS = {
	  lights: {
	    enable: false,
	    // ambient light
	    ambient: { r: 0.2, g: 0.2, b: 0.2 },
	    // directional light
	    directional: {
	      direction: { x: 1, y: 1, z: 1 },
	      color: { r: 0, g: 0, b: 0 }
	    }
	    // point light
	    // points: []
	  },
	  effects: {
	    fog: false
	    // { near, far, color }
	  },
	  clearColor: true,
	  clearDepth: true,
	  backgroundColor: { r: 0, g: 0, b: 0, a: 1 },
	  backgroundDepth: 1
	};
	
	// Scene class
	
	var Scene = function (_Group) {
	  _inherits(Scene, _Group);
	
	  function Scene(gl, opts) {
	    _classCallCheck(this, Scene);
	
	    (0, _assert2.default)(gl, INVALID_ARGUMENT);
	
	    opts = (0, _utils.merge)(DEFAULT_SCENE_OPTS, opts);
	
	    var _this = _possibleConstructorReturn(this, (Scene.__proto__ || Object.getPrototypeOf(Scene)).call(this, opts));
	
	    _this.gl = gl;
	    _this.config = opts;
	    _this.needsRedraw = false;
	    Object.seal(_this);
	    return _this;
	  }
	
	  _createClass(Scene, [{
	    key: 'setNeedsRedraw',
	    value: function setNeedsRedraw() {
	      var redraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
	
	      this.needsRedraw = redraw;
	      return this;
	    }
	  }, {
	    key: 'getNeedsRedraw',
	    value: function getNeedsRedraw() {
	      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref$clearRedrawFlags = _ref.clearRedrawFlags,
	          clearRedrawFlags = _ref$clearRedrawFlags === undefined ? false : _ref$clearRedrawFlags;
	
	      var redraw = false;
	      redraw = redraw || this.needsRedraw;
	      this.needsRedraw = this.needsRedraw && !clearRedrawFlags;
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = this.traverse()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var model = _step.value;
	
	          redraw = redraw || model.getNeedsRedraw({ clearRedrawFlags: clearRedrawFlags });
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	
	      return redraw;
	    }
	  }, {
	    key: 'clear',
	    value: function clear() {
	      var gl = this.gl;
	
	      if (this.config.clearColor) {
	        var bg = this.config.backgroundColor;
	        gl.clearColor(bg.r, bg.g, bg.b, bg.a);
	      }
	      if (this.config.clearDepth) {
	        gl.clearDepth(this.config.backgroundDepth);
	      }
	      if (this.config.clearColor && this.config.clearDepth) {
	        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);
	      } else if (this.config.clearColor) {
	        gl.clear(gl.COLOR_BUFFER_BIT);
	      } else if (this.config.clearDepth) {
	        gl.clear(gl.DEPTH_BUFFER_BIT);
	      }
	      return this;
	    }
	
	    // Renders all objects in the scene.
	
	  }, {
	    key: 'render',
	    value: function render() {
	      var uniforms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      this.clear();
	      // Go through each model and render it.
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;
	
	      try {
	        for (var _iterator2 = this.traverse()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var model = _step2.value;
	
	          if (model.display) {
	            this.renderObject({ model: model, uniforms: uniforms });
	          }
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	
	      return this;
	    }
	  }, {
	    key: 'renderObject',
	    value: function renderObject(_ref2) {
	      var model = _ref2.model,
	          uniforms = _ref2.uniforms;
	
	      // Setup lighting and scene effects like fog, etc.
	      model.render(_extends({}, this.getSceneUniforms(), uniforms));
	      return this;
	    }
	  }, {
	    key: 'pickModels',
	    value: function pickModels() {
	      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          x = _ref3.x,
	          y = _ref3.y,
	          _ref3$uniforms = _ref3.uniforms,
	          uniforms = _ref3$uniforms === undefined ? {} : _ref3$uniforms,
	          opts = _objectWithoutProperties(_ref3, ['x', 'y', 'uniforms']);
	
	      return (0, _pick.pickModels)(this.gl, _extends({
	        group: this,
	        x: x, y: y,
	        uniforms: _extends({}, uniforms)
	      }, opts));
	    }
	
	    // Setup the lighting system: ambient, directional, point lights.
	
	  }, {
	    key: 'getSceneUniforms',
	    value: function getSceneUniforms() {
	      // Setup Lighting
	      var _config$lights = this.config.lights,
	          enable = _config$lights.enable,
	          ambient = _config$lights.ambient,
	          directional = _config$lights.directional,
	          points = _config$lights.points;
	
	      // Set light uniforms. Ambient and directional lights.
	
	      return _extends({}, this.getEffectsUniforms(), {
	        enableLights: enable
	      }, enable && ambient ? this.getAmbientUniforms(ambient) : {}, enable && directional ? this.getDirectionalUniforms(directional) : {}, enable && points ? this.getPointUniforms(points) : {});
	    }
	  }, {
	    key: 'getAmbientUniforms',
	    value: function getAmbientUniforms(ambient) {
	      return {
	        ambientColor: [ambient.r, ambient.g, ambient.b]
	      };
	    }
	  }, {
	    key: 'getDirectionalUniforms',
	    value: function getDirectionalUniforms(directional) {
	      var color = directional.color,
	          direction = directional.direction;
	
	      // Normalize lighting direction vector
	
	      var dir = new _math.Vector3(direction.x, direction.y, direction.z).normalize().scale(-1, -1, -1);
	
	      return {
	        directionalColor: [color.r, color.g, color.b],
	        lightingDirection: [dir.x, dir.y, dir.z]
	      };
	    }
	  }, {
	    key: 'getPointUniforms',
	    value: function getPointUniforms(points) {
	      points = points instanceof Array ? points : [points];
	      var numberPoints = points.length;
	      var uniforms = { numberPoints: numberPoints };
	
	      var pointLocations = [];
	      var pointColors = [];
	      var enableSpecular = [];
	      var pointSpecularColors = [];
	      var _iteratorNormalCompletion3 = true;
	      var _didIteratorError3 = false;
	      var _iteratorError3 = undefined;
	
	      try {
	        for (var _iterator3 = points[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	          var point = _step3.value;
	          var position = point.position,
	              color = point.color,
	              diffuse = point.diffuse,
	              specular = point.specular;
	
	          var pointColor = color || diffuse;
	
	          pointLocations.push(position.x, position.y, position.z);
	          pointColors.push(pointColor.r, pointColor.g, pointColor.b);
	
	          // Add specular color
	          enableSpecular.push(Number(Boolean(specular)));
	          if (specular) {
	            pointSpecularColors.push(specular.r, specular.g, specular.b);
	          } else {
	            pointSpecularColors.push(0, 0, 0);
	          }
	        }
	      } catch (err) {
	        _didIteratorError3 = true;
	        _iteratorError3 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion3 && _iterator3.return) {
	            _iterator3.return();
	          }
	        } finally {
	          if (_didIteratorError3) {
	            throw _iteratorError3;
	          }
	        }
	      }
	
	      if (pointLocations.length) {
	        Object.assign(uniforms, {
	          pointLocation: pointLocations,
	          pointColor: pointColors,
	          enableSpecular: enableSpecular,
	          pointSpecularColor: pointSpecularColors
	        });
	      }
	
	      return uniforms;
	    }
	
	    // Setup effects like fog, etc.
	
	  }, {
	    key: 'getEffectsUniforms',
	    value: function getEffectsUniforms() {
	      var fog = this.config.effects.fog;
	
	
	      if (fog) {
	        var _fog$color = fog.color,
	            color = _fog$color === undefined ? { r: 0.5, g: 0.5, b: 0.5 } : _fog$color;
	
	        return {
	          hasFog: true,
	          fogNear: fog.near,
	          fogFar: fog.far,
	          fogColor: [color.r, color.g, color.b]
	        };
	      }
	      return { hasFog: false };
	    }
	  }]);
	
	  return Scene;
	}(_group2.default);
	
	exports.default = Scene;
	
	
	Scene.MAX_TEXTURES = config.MAX_TEXTURES;
	Scene.MAX_POINT_LIGHTS = config.MAX_POINT_LIGHTS;
	Scene.PICKING_RES = config.PICKING_RES;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY2VuZWdyYXBoL3NjZW5lLmpzIl0sIm5hbWVzIjpbImNvbmZpZyIsIklOVkFMSURfQVJHVU1FTlQiLCJERUZBVUxUX1NDRU5FX09QVFMiLCJsaWdodHMiLCJlbmFibGUiLCJhbWJpZW50IiwiciIsImciLCJiIiwiZGlyZWN0aW9uYWwiLCJkaXJlY3Rpb24iLCJ4IiwieSIsInoiLCJjb2xvciIsImVmZmVjdHMiLCJmb2ciLCJjbGVhckNvbG9yIiwiY2xlYXJEZXB0aCIsImJhY2tncm91bmRDb2xvciIsImEiLCJiYWNrZ3JvdW5kRGVwdGgiLCJTY2VuZSIsImdsIiwib3B0cyIsIm5lZWRzUmVkcmF3IiwiT2JqZWN0Iiwic2VhbCIsInJlZHJhdyIsImNsZWFyUmVkcmF3RmxhZ3MiLCJ0cmF2ZXJzZSIsIm1vZGVsIiwiZ2V0TmVlZHNSZWRyYXciLCJiZyIsImNsZWFyIiwiQ09MT1JfQlVGRkVSX0JJVCIsIkRFUFRIX0JVRkZFUl9CSVQiLCJ1bmlmb3JtcyIsImRpc3BsYXkiLCJyZW5kZXJPYmplY3QiLCJyZW5kZXIiLCJnZXRTY2VuZVVuaWZvcm1zIiwiZ3JvdXAiLCJwb2ludHMiLCJnZXRFZmZlY3RzVW5pZm9ybXMiLCJlbmFibGVMaWdodHMiLCJnZXRBbWJpZW50VW5pZm9ybXMiLCJnZXREaXJlY3Rpb25hbFVuaWZvcm1zIiwiZ2V0UG9pbnRVbmlmb3JtcyIsImFtYmllbnRDb2xvciIsImRpciIsIm5vcm1hbGl6ZSIsInNjYWxlIiwiZGlyZWN0aW9uYWxDb2xvciIsImxpZ2h0aW5nRGlyZWN0aW9uIiwiQXJyYXkiLCJudW1iZXJQb2ludHMiLCJsZW5ndGgiLCJwb2ludExvY2F0aW9ucyIsInBvaW50Q29sb3JzIiwiZW5hYmxlU3BlY3VsYXIiLCJwb2ludFNwZWN1bGFyQ29sb3JzIiwicG9pbnQiLCJwb3NpdGlvbiIsImRpZmZ1c2UiLCJzcGVjdWxhciIsInBvaW50Q29sb3IiLCJwdXNoIiwiTnVtYmVyIiwiQm9vbGVhbiIsImFzc2lnbiIsInBvaW50TG9jYXRpb24iLCJwb2ludFNwZWN1bGFyQ29sb3IiLCJoYXNGb2ciLCJmb2dOZWFyIiwibmVhciIsImZvZ0ZhciIsImZhciIsImZvZ0NvbG9yIiwiTUFYX1RFWFRVUkVTIiwiTUFYX1BPSU5UX0xJR0hUUyIsIlBJQ0tJTkdfUkVTIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUdBOztJQUFZQSxNOztBQUNaOztBQUNBOztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7OytlQVJBO0FBQ0E7O0FBU0EsSUFBTUMsbUJBQW1CLCtCQUF6Qjs7QUFFQSxJQUFNQyxxQkFBcUI7QUFDekJDLFVBQVE7QUFDTkMsWUFBUSxLQURGO0FBRU47QUFDQUMsYUFBUyxFQUFDQyxHQUFHLEdBQUosRUFBU0MsR0FBRyxHQUFaLEVBQWlCQyxHQUFHLEdBQXBCLEVBSEg7QUFJTjtBQUNBQyxpQkFBYTtBQUNYQyxpQkFBVyxFQUFDQyxHQUFHLENBQUosRUFBT0MsR0FBRyxDQUFWLEVBQWFDLEdBQUcsQ0FBaEIsRUFEQTtBQUVYQyxhQUFPLEVBQUNSLEdBQUcsQ0FBSixFQUFPQyxHQUFHLENBQVYsRUFBYUMsR0FBRyxDQUFoQjtBQUZJO0FBSWI7QUFDQTtBQVZNLEdBRGlCO0FBYXpCTyxXQUFTO0FBQ1BDLFNBQUs7QUFDTDtBQUZPLEdBYmdCO0FBaUJ6QkMsY0FBWSxJQWpCYTtBQWtCekJDLGNBQVksSUFsQmE7QUFtQnpCQyxtQkFBaUIsRUFBQ2IsR0FBRyxDQUFKLEVBQU9DLEdBQUcsQ0FBVixFQUFhQyxHQUFHLENBQWhCLEVBQW1CWSxHQUFHLENBQXRCLEVBbkJRO0FBb0J6QkMsbUJBQWlCO0FBcEJRLENBQTNCOztBQXVCQTs7SUFDcUJDLEs7OztBQUVuQixpQkFBWUMsRUFBWixFQUFnQkMsSUFBaEIsRUFBc0I7QUFBQTs7QUFDcEIsMEJBQU9ELEVBQVAsRUFBV3RCLGdCQUFYOztBQUVBdUIsV0FBTyxrQkFBTXRCLGtCQUFOLEVBQTBCc0IsSUFBMUIsQ0FBUDs7QUFIb0IsOEdBS2RBLElBTGM7O0FBT3BCLFVBQUtELEVBQUwsR0FBVUEsRUFBVjtBQUNBLFVBQUt2QixNQUFMLEdBQWN3QixJQUFkO0FBQ0EsVUFBS0MsV0FBTCxHQUFtQixLQUFuQjtBQUNBQyxXQUFPQyxJQUFQO0FBVm9CO0FBV3JCOzs7O3FDQUU2QjtBQUFBLFVBQWZDLE1BQWUsdUVBQU4sSUFBTTs7QUFDNUIsV0FBS0gsV0FBTCxHQUFtQkcsTUFBbkI7QUFDQSxhQUFPLElBQVA7QUFDRDs7O3FDQUUrQztBQUFBLHFGQUFKLEVBQUk7QUFBQSx1Q0FBaENDLGdCQUFnQztBQUFBLFVBQWhDQSxnQkFBZ0MseUNBQWIsS0FBYTs7QUFDOUMsVUFBSUQsU0FBUyxLQUFiO0FBQ0FBLGVBQVNBLFVBQVUsS0FBS0gsV0FBeEI7QUFDQSxXQUFLQSxXQUFMLEdBQW1CLEtBQUtBLFdBQUwsSUFBb0IsQ0FBQ0ksZ0JBQXhDO0FBSDhDO0FBQUE7QUFBQTs7QUFBQTtBQUk5Qyw2QkFBb0IsS0FBS0MsUUFBTCxFQUFwQiw4SEFBcUM7QUFBQSxjQUExQkMsS0FBMEI7O0FBQ25DSCxtQkFBU0EsVUFBVUcsTUFBTUMsY0FBTixDQUFxQixFQUFDSCxrQ0FBRCxFQUFyQixDQUFuQjtBQUNEO0FBTjZDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBTzlDLGFBQU9ELE1BQVA7QUFDRDs7OzRCQUVPO0FBQUEsVUFDQ0wsRUFERCxHQUNPLElBRFAsQ0FDQ0EsRUFERDs7QUFFTixVQUFJLEtBQUt2QixNQUFMLENBQVlpQixVQUFoQixFQUE0QjtBQUMxQixZQUFNZ0IsS0FBSyxLQUFLakMsTUFBTCxDQUFZbUIsZUFBdkI7QUFDQUksV0FBR04sVUFBSCxDQUFjZ0IsR0FBRzNCLENBQWpCLEVBQW9CMkIsR0FBRzFCLENBQXZCLEVBQTBCMEIsR0FBR3pCLENBQTdCLEVBQWdDeUIsR0FBR2IsQ0FBbkM7QUFDRDtBQUNELFVBQUksS0FBS3BCLE1BQUwsQ0FBWWtCLFVBQWhCLEVBQTRCO0FBQzFCSyxXQUFHTCxVQUFILENBQWMsS0FBS2xCLE1BQUwsQ0FBWXFCLGVBQTFCO0FBQ0Q7QUFDRCxVQUFJLEtBQUtyQixNQUFMLENBQVlpQixVQUFaLElBQTBCLEtBQUtqQixNQUFMLENBQVlrQixVQUExQyxFQUFzRDtBQUNwREssV0FBR1csS0FBSCxDQUFTWCxHQUFHWSxnQkFBSCxHQUFzQlosR0FBR2EsZ0JBQWxDO0FBQ0QsT0FGRCxNQUVPLElBQUksS0FBS3BDLE1BQUwsQ0FBWWlCLFVBQWhCLEVBQTRCO0FBQ2pDTSxXQUFHVyxLQUFILENBQVNYLEdBQUdZLGdCQUFaO0FBQ0QsT0FGTSxNQUVBLElBQUksS0FBS25DLE1BQUwsQ0FBWWtCLFVBQWhCLEVBQTRCO0FBQ2pDSyxXQUFHVyxLQUFILENBQVNYLEdBQUdhLGdCQUFaO0FBQ0Q7QUFDRCxhQUFPLElBQVA7QUFDRDs7QUFFRDs7Ozs2QkFDc0I7QUFBQSxVQUFmQyxRQUFlLHVFQUFKLEVBQUk7O0FBQ3BCLFdBQUtILEtBQUw7QUFDQTtBQUZvQjtBQUFBO0FBQUE7O0FBQUE7QUFHcEIsOEJBQW9CLEtBQUtKLFFBQUwsRUFBcEIsbUlBQXFDO0FBQUEsY0FBMUJDLEtBQTBCOztBQUNuQyxjQUFJQSxNQUFNTyxPQUFWLEVBQW1CO0FBQ2pCLGlCQUFLQyxZQUFMLENBQWtCLEVBQUNSLFlBQUQsRUFBUU0sa0JBQVIsRUFBbEI7QUFDRDtBQUNGO0FBUG1CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBUXBCLGFBQU8sSUFBUDtBQUNEOzs7d0NBRStCO0FBQUEsVUFBbEJOLEtBQWtCLFNBQWxCQSxLQUFrQjtBQUFBLFVBQVhNLFFBQVcsU0FBWEEsUUFBVzs7QUFDOUI7QUFDQU4sWUFBTVMsTUFBTixjQUFpQixLQUFLQyxnQkFBTCxFQUFqQixFQUE2Q0osUUFBN0M7QUFDQSxhQUFPLElBQVA7QUFDRDs7O2lDQUUrQztBQUFBLHNGQUFKLEVBQUk7QUFBQSxVQUFwQzFCLENBQW9DLFNBQXBDQSxDQUFvQztBQUFBLFVBQWpDQyxDQUFpQyxTQUFqQ0EsQ0FBaUM7QUFBQSxpQ0FBOUJ5QixRQUE4QjtBQUFBLFVBQTlCQSxRQUE4QixrQ0FBbkIsRUFBbUI7QUFBQSxVQUFaYixJQUFZOztBQUM5QyxhQUFPLHNCQUFXLEtBQUtELEVBQWhCO0FBQ0xtQixlQUFPLElBREY7QUFFTC9CLFlBRkssRUFFRkMsSUFGRTtBQUdMeUIsK0JBQWNBLFFBQWQ7QUFISyxTQUlGYixJQUpFLEVBQVA7QUFNRDs7QUFFRDs7Ozt1Q0FDbUI7QUFDakI7QUFEaUIsMkJBRThCLEtBQUt4QixNQUFMLENBQVlHLE1BRjFDO0FBQUEsVUFFVkMsTUFGVSxrQkFFVkEsTUFGVTtBQUFBLFVBRUZDLE9BRkUsa0JBRUZBLE9BRkU7QUFBQSxVQUVPSSxXQUZQLGtCQUVPQSxXQUZQO0FBQUEsVUFFb0JrQyxNQUZwQixrQkFFb0JBLE1BRnBCOztBQUlqQjs7QUFDQSwwQkFDSyxLQUFLQyxrQkFBTCxFQURMO0FBRUVDLHNCQUFjekM7QUFGaEIsU0FHTUEsVUFBVUMsT0FBVixHQUFvQixLQUFLeUMsa0JBQUwsQ0FBd0J6QyxPQUF4QixDQUFwQixHQUF1RCxFQUg3RCxFQUlNRCxVQUFVSyxXQUFWLEdBQXdCLEtBQUtzQyxzQkFBTCxDQUE0QnRDLFdBQTVCLENBQXhCLEdBQW1FLEVBSnpFLEVBS01MLFVBQVV1QyxNQUFWLEdBQW1CLEtBQUtLLGdCQUFMLENBQXNCTCxNQUF0QixDQUFuQixHQUFtRCxFQUx6RDtBQU9EOzs7dUNBRWtCdEMsTyxFQUFTO0FBQzFCLGFBQU87QUFDTDRDLHNCQUFjLENBQUM1QyxRQUFRQyxDQUFULEVBQVlELFFBQVFFLENBQXBCLEVBQXVCRixRQUFRRyxDQUEvQjtBQURULE9BQVA7QUFHRDs7OzJDQUVzQkMsVyxFQUFhO0FBQUEsVUFDM0JLLEtBRDJCLEdBQ1BMLFdBRE8sQ0FDM0JLLEtBRDJCO0FBQUEsVUFDcEJKLFNBRG9CLEdBQ1BELFdBRE8sQ0FDcEJDLFNBRG9COztBQUdsQzs7QUFDQSxVQUFNd0MsTUFBTSxrQkFBWXhDLFVBQVVDLENBQXRCLEVBQXlCRCxVQUFVRSxDQUFuQyxFQUFzQ0YsVUFBVUcsQ0FBaEQsRUFDVHNDLFNBRFMsR0FFVEMsS0FGUyxDQUVILENBQUMsQ0FGRSxFQUVDLENBQUMsQ0FGRixFQUVLLENBQUMsQ0FGTixDQUFaOztBQUlBLGFBQU87QUFDTEMsMEJBQWtCLENBQUN2QyxNQUFNUixDQUFQLEVBQVVRLE1BQU1QLENBQWhCLEVBQW1CTyxNQUFNTixDQUF6QixDQURiO0FBRUw4QywyQkFBbUIsQ0FBQ0osSUFBSXZDLENBQUwsRUFBUXVDLElBQUl0QyxDQUFaLEVBQWVzQyxJQUFJckMsQ0FBbkI7QUFGZCxPQUFQO0FBSUQ7OztxQ0FFZ0I4QixNLEVBQVE7QUFDdkJBLGVBQVNBLGtCQUFrQlksS0FBbEIsR0FBMEJaLE1BQTFCLEdBQW1DLENBQUNBLE1BQUQsQ0FBNUM7QUFDQSxVQUFNYSxlQUFlYixPQUFPYyxNQUE1QjtBQUNBLFVBQU1wQixXQUFXLEVBQUNtQiwwQkFBRCxFQUFqQjs7QUFFQSxVQUFNRSxpQkFBaUIsRUFBdkI7QUFDQSxVQUFNQyxjQUFjLEVBQXBCO0FBQ0EsVUFBTUMsaUJBQWlCLEVBQXZCO0FBQ0EsVUFBTUMsc0JBQXNCLEVBQTVCO0FBUnVCO0FBQUE7QUFBQTs7QUFBQTtBQVN2Qiw4QkFBb0JsQixNQUFwQixtSUFBNEI7QUFBQSxjQUFqQm1CLEtBQWlCO0FBQUEsY0FDbkJDLFFBRG1CLEdBQ21CRCxLQURuQixDQUNuQkMsUUFEbUI7QUFBQSxjQUNUakQsS0FEUyxHQUNtQmdELEtBRG5CLENBQ1RoRCxLQURTO0FBQUEsY0FDRmtELE9BREUsR0FDbUJGLEtBRG5CLENBQ0ZFLE9BREU7QUFBQSxjQUNPQyxRQURQLEdBQ21CSCxLQURuQixDQUNPRyxRQURQOztBQUUxQixjQUFNQyxhQUFhcEQsU0FBU2tELE9BQTVCOztBQUVBTix5QkFBZVMsSUFBZixDQUFvQkosU0FBU3BELENBQTdCLEVBQWdDb0QsU0FBU25ELENBQXpDLEVBQTRDbUQsU0FBU2xELENBQXJEO0FBQ0E4QyxzQkFBWVEsSUFBWixDQUFpQkQsV0FBVzVELENBQTVCLEVBQStCNEQsV0FBVzNELENBQTFDLEVBQTZDMkQsV0FBVzFELENBQXhEOztBQUVBO0FBQ0FvRCx5QkFBZU8sSUFBZixDQUFvQkMsT0FBT0MsUUFBUUosUUFBUixDQUFQLENBQXBCO0FBQ0EsY0FBSUEsUUFBSixFQUFjO0FBQ1pKLGdDQUFvQk0sSUFBcEIsQ0FBeUJGLFNBQVMzRCxDQUFsQyxFQUFxQzJELFNBQVMxRCxDQUE5QyxFQUFpRDBELFNBQVN6RCxDQUExRDtBQUNELFdBRkQsTUFFTztBQUNMcUQsZ0NBQW9CTSxJQUFwQixDQUF5QixDQUF6QixFQUE0QixDQUE1QixFQUErQixDQUEvQjtBQUNEO0FBQ0Y7QUF2QnNCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBeUJ2QixVQUFJVCxlQUFlRCxNQUFuQixFQUEyQjtBQUN6Qi9CLGVBQU80QyxNQUFQLENBQWNqQyxRQUFkLEVBQXdCO0FBQ3RCa0MseUJBQWViLGNBRE87QUFFdEJRLHNCQUFZUCxXQUZVO0FBR3RCQyx3Q0FIc0I7QUFJdEJZLDhCQUFvQlg7QUFKRSxTQUF4QjtBQU1EOztBQUVELGFBQU94QixRQUFQO0FBQ0Q7O0FBRUQ7Ozs7eUNBQ3FCO0FBQUEsVUFDWnJCLEdBRFksR0FDTCxLQUFLaEIsTUFBTCxDQUFZZSxPQURQLENBQ1pDLEdBRFk7OztBQUduQixVQUFJQSxHQUFKLEVBQVM7QUFBQSx5QkFDb0NBLEdBRHBDLENBQ0FGLEtBREE7QUFBQSxZQUNBQSxLQURBLDhCQUNRLEVBQUNSLEdBQUcsR0FBSixFQUFTQyxHQUFHLEdBQVosRUFBaUJDLEdBQUcsR0FBcEIsRUFEUjs7QUFFUCxlQUFPO0FBQ0xpRSxrQkFBUSxJQURIO0FBRUxDLG1CQUFTMUQsSUFBSTJELElBRlI7QUFHTEMsa0JBQVE1RCxJQUFJNkQsR0FIUDtBQUlMQyxvQkFBVSxDQUFDaEUsTUFBTVIsQ0FBUCxFQUFVUSxNQUFNUCxDQUFoQixFQUFtQk8sTUFBTU4sQ0FBekI7QUFKTCxTQUFQO0FBTUQ7QUFDRCxhQUFPLEVBQUNpRSxRQUFRLEtBQVQsRUFBUDtBQUNEOzs7Ozs7a0JBbEtrQm5ELEs7OztBQXFLckJBLE1BQU15RCxZQUFOLEdBQXFCL0UsT0FBTytFLFlBQTVCO0FBQ0F6RCxNQUFNMEQsZ0JBQU4sR0FBeUJoRixPQUFPZ0YsZ0JBQWhDO0FBQ0ExRCxNQUFNMkQsV0FBTixHQUFvQmpGLE9BQU9pRixXQUEzQiIsImZpbGUiOiJzY2VuZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNjZW5lIE9iamVjdCBtYW5hZ2VtZW50IGFuZCByZW5kZXJpbmdcbi8qIGVzbGludC1kaXNhYmxlIG1heC1zdGF0ZW1lbnRzLCBuby10cnktY2F0Y2ggKi9cblxuaW1wb3J0ICogYXMgY29uZmlnIGZyb20gJy4uL2NvcmUvY29uZmlnJztcbmltcG9ydCB7VmVjdG9yM30gZnJvbSAnLi4vbWF0aCc7XG5pbXBvcnQge21lcmdlfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgR3JvdXAgZnJvbSAnLi9ncm91cCc7XG5pbXBvcnQge3BpY2tNb2RlbHN9IGZyb20gJy4vcGljayc7XG5pbXBvcnQgYXNzZXJ0IGZyb20gJ2Fzc2VydCc7XG5cbmNvbnN0IElOVkFMSURfQVJHVU1FTlQgPSAnTHVtYUdMLlNjZW5lIGludmFsaWQgYXJndW1lbnQnO1xuXG5jb25zdCBERUZBVUxUX1NDRU5FX09QVFMgPSB7XG4gIGxpZ2h0czoge1xuICAgIGVuYWJsZTogZmFsc2UsXG4gICAgLy8gYW1iaWVudCBsaWdodFxuICAgIGFtYmllbnQ6IHtyOiAwLjIsIGc6IDAuMiwgYjogMC4yfSxcbiAgICAvLyBkaXJlY3Rpb25hbCBsaWdodFxuICAgIGRpcmVjdGlvbmFsOiB7XG4gICAgICBkaXJlY3Rpb246IHt4OiAxLCB5OiAxLCB6OiAxfSxcbiAgICAgIGNvbG9yOiB7cjogMCwgZzogMCwgYjogMH1cbiAgICB9XG4gICAgLy8gcG9pbnQgbGlnaHRcbiAgICAvLyBwb2ludHM6IFtdXG4gIH0sXG4gIGVmZmVjdHM6IHtcbiAgICBmb2c6IGZhbHNlXG4gICAgLy8geyBuZWFyLCBmYXIsIGNvbG9yIH1cbiAgfSxcbiAgY2xlYXJDb2xvcjogdHJ1ZSxcbiAgY2xlYXJEZXB0aDogdHJ1ZSxcbiAgYmFja2dyb3VuZENvbG9yOiB7cjogMCwgZzogMCwgYjogMCwgYTogMX0sXG4gIGJhY2tncm91bmREZXB0aDogMVxufTtcblxuLy8gU2NlbmUgY2xhc3NcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNjZW5lIGV4dGVuZHMgR3JvdXAge1xuXG4gIGNvbnN0cnVjdG9yKGdsLCBvcHRzKSB7XG4gICAgYXNzZXJ0KGdsLCBJTlZBTElEX0FSR1VNRU5UKTtcblxuICAgIG9wdHMgPSBtZXJnZShERUZBVUxUX1NDRU5FX09QVFMsIG9wdHMpO1xuXG4gICAgc3VwZXIob3B0cyk7XG5cbiAgICB0aGlzLmdsID0gZ2w7XG4gICAgdGhpcy5jb25maWcgPSBvcHRzO1xuICAgIHRoaXMubmVlZHNSZWRyYXcgPSBmYWxzZTtcbiAgICBPYmplY3Quc2VhbCh0aGlzKTtcbiAgfVxuXG4gIHNldE5lZWRzUmVkcmF3KHJlZHJhdyA9IHRydWUpIHtcbiAgICB0aGlzLm5lZWRzUmVkcmF3ID0gcmVkcmF3O1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZ2V0TmVlZHNSZWRyYXcoe2NsZWFyUmVkcmF3RmxhZ3MgPSBmYWxzZX0gPSB7fSkge1xuICAgIGxldCByZWRyYXcgPSBmYWxzZTtcbiAgICByZWRyYXcgPSByZWRyYXcgfHwgdGhpcy5uZWVkc1JlZHJhdztcbiAgICB0aGlzLm5lZWRzUmVkcmF3ID0gdGhpcy5uZWVkc1JlZHJhdyAmJiAhY2xlYXJSZWRyYXdGbGFncztcbiAgICBmb3IgKGNvbnN0IG1vZGVsIG9mIHRoaXMudHJhdmVyc2UoKSkge1xuICAgICAgcmVkcmF3ID0gcmVkcmF3IHx8IG1vZGVsLmdldE5lZWRzUmVkcmF3KHtjbGVhclJlZHJhd0ZsYWdzfSk7XG4gICAgfVxuICAgIHJldHVybiByZWRyYXc7XG4gIH1cblxuICBjbGVhcigpIHtcbiAgICBjb25zdCB7Z2x9ID0gdGhpcztcbiAgICBpZiAodGhpcy5jb25maWcuY2xlYXJDb2xvcikge1xuICAgICAgY29uc3QgYmcgPSB0aGlzLmNvbmZpZy5iYWNrZ3JvdW5kQ29sb3I7XG4gICAgICBnbC5jbGVhckNvbG9yKGJnLnIsIGJnLmcsIGJnLmIsIGJnLmEpO1xuICAgIH1cbiAgICBpZiAodGhpcy5jb25maWcuY2xlYXJEZXB0aCkge1xuICAgICAgZ2wuY2xlYXJEZXB0aCh0aGlzLmNvbmZpZy5iYWNrZ3JvdW5kRGVwdGgpO1xuICAgIH1cbiAgICBpZiAodGhpcy5jb25maWcuY2xlYXJDb2xvciAmJiB0aGlzLmNvbmZpZy5jbGVhckRlcHRoKSB7XG4gICAgICBnbC5jbGVhcihnbC5DT0xPUl9CVUZGRVJfQklUIHwgZ2wuREVQVEhfQlVGRkVSX0JJVCk7XG4gICAgfSBlbHNlIGlmICh0aGlzLmNvbmZpZy5jbGVhckNvbG9yKSB7XG4gICAgICBnbC5jbGVhcihnbC5DT0xPUl9CVUZGRVJfQklUKTtcbiAgICB9IGVsc2UgaWYgKHRoaXMuY29uZmlnLmNsZWFyRGVwdGgpIHtcbiAgICAgIGdsLmNsZWFyKGdsLkRFUFRIX0JVRkZFUl9CSVQpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8vIFJlbmRlcnMgYWxsIG9iamVjdHMgaW4gdGhlIHNjZW5lLlxuICByZW5kZXIodW5pZm9ybXMgPSB7fSkge1xuICAgIHRoaXMuY2xlYXIoKTtcbiAgICAvLyBHbyB0aHJvdWdoIGVhY2ggbW9kZWwgYW5kIHJlbmRlciBpdC5cbiAgICBmb3IgKGNvbnN0IG1vZGVsIG9mIHRoaXMudHJhdmVyc2UoKSkge1xuICAgICAgaWYgKG1vZGVsLmRpc3BsYXkpIHtcbiAgICAgICAgdGhpcy5yZW5kZXJPYmplY3Qoe21vZGVsLCB1bmlmb3Jtc30pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHJlbmRlck9iamVjdCh7bW9kZWwsIHVuaWZvcm1zfSkge1xuICAgIC8vIFNldHVwIGxpZ2h0aW5nIGFuZCBzY2VuZSBlZmZlY3RzIGxpa2UgZm9nLCBldGMuXG4gICAgbW9kZWwucmVuZGVyKHsuLi50aGlzLmdldFNjZW5lVW5pZm9ybXMoKSwgLi4udW5pZm9ybXN9KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHBpY2tNb2RlbHMoe3gsIHksIHVuaWZvcm1zID0ge30sIC4uLm9wdHN9ID0ge30pIHtcbiAgICByZXR1cm4gcGlja01vZGVscyh0aGlzLmdsLCB7XG4gICAgICBncm91cDogdGhpcyxcbiAgICAgIHgsIHksXG4gICAgICB1bmlmb3Jtczogey4uLnVuaWZvcm1zfSxcbiAgICAgIC4uLm9wdHNcbiAgICB9KTtcbiAgfVxuXG4gIC8vIFNldHVwIHRoZSBsaWdodGluZyBzeXN0ZW06IGFtYmllbnQsIGRpcmVjdGlvbmFsLCBwb2ludCBsaWdodHMuXG4gIGdldFNjZW5lVW5pZm9ybXMoKSB7XG4gICAgLy8gU2V0dXAgTGlnaHRpbmdcbiAgICBjb25zdCB7ZW5hYmxlLCBhbWJpZW50LCBkaXJlY3Rpb25hbCwgcG9pbnRzfSA9IHRoaXMuY29uZmlnLmxpZ2h0cztcblxuICAgIC8vIFNldCBsaWdodCB1bmlmb3Jtcy4gQW1iaWVudCBhbmQgZGlyZWN0aW9uYWwgbGlnaHRzLlxuICAgIHJldHVybiB7XG4gICAgICAuLi50aGlzLmdldEVmZmVjdHNVbmlmb3JtcygpLFxuICAgICAgZW5hYmxlTGlnaHRzOiBlbmFibGUsXG4gICAgICAuLi4oZW5hYmxlICYmIGFtYmllbnQgPyB0aGlzLmdldEFtYmllbnRVbmlmb3JtcyhhbWJpZW50KSA6IHt9KSxcbiAgICAgIC4uLihlbmFibGUgJiYgZGlyZWN0aW9uYWwgPyB0aGlzLmdldERpcmVjdGlvbmFsVW5pZm9ybXMoZGlyZWN0aW9uYWwpIDoge30pLFxuICAgICAgLi4uKGVuYWJsZSAmJiBwb2ludHMgPyB0aGlzLmdldFBvaW50VW5pZm9ybXMocG9pbnRzKSA6IHt9KVxuICAgIH07XG4gIH1cblxuICBnZXRBbWJpZW50VW5pZm9ybXMoYW1iaWVudCkge1xuICAgIHJldHVybiB7XG4gICAgICBhbWJpZW50Q29sb3I6IFthbWJpZW50LnIsIGFtYmllbnQuZywgYW1iaWVudC5iXVxuICAgIH07XG4gIH1cblxuICBnZXREaXJlY3Rpb25hbFVuaWZvcm1zKGRpcmVjdGlvbmFsKSB7XG4gICAgY29uc3Qge2NvbG9yLCBkaXJlY3Rpb259ID0gZGlyZWN0aW9uYWw7XG5cbiAgICAvLyBOb3JtYWxpemUgbGlnaHRpbmcgZGlyZWN0aW9uIHZlY3RvclxuICAgIGNvbnN0IGRpciA9IG5ldyBWZWN0b3IzKGRpcmVjdGlvbi54LCBkaXJlY3Rpb24ueSwgZGlyZWN0aW9uLnopXG4gICAgICAubm9ybWFsaXplKClcbiAgICAgIC5zY2FsZSgtMSwgLTEsIC0xKTtcblxuICAgIHJldHVybiB7XG4gICAgICBkaXJlY3Rpb25hbENvbG9yOiBbY29sb3IuciwgY29sb3IuZywgY29sb3IuYl0sXG4gICAgICBsaWdodGluZ0RpcmVjdGlvbjogW2Rpci54LCBkaXIueSwgZGlyLnpdXG4gICAgfTtcbiAgfVxuXG4gIGdldFBvaW50VW5pZm9ybXMocG9pbnRzKSB7XG4gICAgcG9pbnRzID0gcG9pbnRzIGluc3RhbmNlb2YgQXJyYXkgPyBwb2ludHMgOiBbcG9pbnRzXTtcbiAgICBjb25zdCBudW1iZXJQb2ludHMgPSBwb2ludHMubGVuZ3RoO1xuICAgIGNvbnN0IHVuaWZvcm1zID0ge251bWJlclBvaW50c307XG5cbiAgICBjb25zdCBwb2ludExvY2F0aW9ucyA9IFtdO1xuICAgIGNvbnN0IHBvaW50Q29sb3JzID0gW107XG4gICAgY29uc3QgZW5hYmxlU3BlY3VsYXIgPSBbXTtcbiAgICBjb25zdCBwb2ludFNwZWN1bGFyQ29sb3JzID0gW107XG4gICAgZm9yIChjb25zdCBwb2ludCBvZiBwb2ludHMpIHtcbiAgICAgIGNvbnN0IHtwb3NpdGlvbiwgY29sb3IsIGRpZmZ1c2UsIHNwZWN1bGFyfSA9IHBvaW50O1xuICAgICAgY29uc3QgcG9pbnRDb2xvciA9IGNvbG9yIHx8IGRpZmZ1c2U7XG5cbiAgICAgIHBvaW50TG9jYXRpb25zLnB1c2gocG9zaXRpb24ueCwgcG9zaXRpb24ueSwgcG9zaXRpb24ueik7XG4gICAgICBwb2ludENvbG9ycy5wdXNoKHBvaW50Q29sb3IuciwgcG9pbnRDb2xvci5nLCBwb2ludENvbG9yLmIpO1xuXG4gICAgICAvLyBBZGQgc3BlY3VsYXIgY29sb3JcbiAgICAgIGVuYWJsZVNwZWN1bGFyLnB1c2goTnVtYmVyKEJvb2xlYW4oc3BlY3VsYXIpKSk7XG4gICAgICBpZiAoc3BlY3VsYXIpIHtcbiAgICAgICAgcG9pbnRTcGVjdWxhckNvbG9ycy5wdXNoKHNwZWN1bGFyLnIsIHNwZWN1bGFyLmcsIHNwZWN1bGFyLmIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcG9pbnRTcGVjdWxhckNvbG9ycy5wdXNoKDAsIDAsIDApO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChwb2ludExvY2F0aW9ucy5sZW5ndGgpIHtcbiAgICAgIE9iamVjdC5hc3NpZ24odW5pZm9ybXMsIHtcbiAgICAgICAgcG9pbnRMb2NhdGlvbjogcG9pbnRMb2NhdGlvbnMsXG4gICAgICAgIHBvaW50Q29sb3I6IHBvaW50Q29sb3JzLFxuICAgICAgICBlbmFibGVTcGVjdWxhcixcbiAgICAgICAgcG9pbnRTcGVjdWxhckNvbG9yOiBwb2ludFNwZWN1bGFyQ29sb3JzXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gdW5pZm9ybXM7XG4gIH1cblxuICAvLyBTZXR1cCBlZmZlY3RzIGxpa2UgZm9nLCBldGMuXG4gIGdldEVmZmVjdHNVbmlmb3JtcygpIHtcbiAgICBjb25zdCB7Zm9nfSA9IHRoaXMuY29uZmlnLmVmZmVjdHM7XG5cbiAgICBpZiAoZm9nKSB7XG4gICAgICBjb25zdCB7Y29sb3IgPSB7cjogMC41LCBnOiAwLjUsIGI6IDAuNX19ID0gZm9nO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaGFzRm9nOiB0cnVlLFxuICAgICAgICBmb2dOZWFyOiBmb2cubmVhcixcbiAgICAgICAgZm9nRmFyOiBmb2cuZmFyLFxuICAgICAgICBmb2dDb2xvcjogW2NvbG9yLnIsIGNvbG9yLmcsIGNvbG9yLmJdXG4gICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge2hhc0ZvZzogZmFsc2V9O1xuICB9XG59XG5cblNjZW5lLk1BWF9URVhUVVJFUyA9IGNvbmZpZy5NQVhfVEVYVFVSRVM7XG5TY2VuZS5NQVhfUE9JTlRfTElHSFRTID0gY29uZmlnLk1BWF9QT0lOVF9MSUdIVFM7XG5TY2VuZS5QSUNLSU5HX1JFUyA9IGNvbmZpZy5QSUNLSU5HX1JFUztcbiJdfQ==

/***/ },
/* 256 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var MAX_TEXTURES = exports.MAX_TEXTURES = 10;
	var MAX_POINT_LIGHTS = exports.MAX_POINT_LIGHTS = 4;
	var PICKING_RES = exports.PICKING_RES = 4;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb3JlL2NvbmZpZy5qcyJdLCJuYW1lcyI6WyJNQVhfVEVYVFVSRVMiLCJNQVhfUE9JTlRfTElHSFRTIiwiUElDS0lOR19SRVMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sSUFBTUEsc0NBQWUsRUFBckI7QUFDQSxJQUFNQyw4Q0FBbUIsQ0FBekI7QUFDQSxJQUFNQyxvQ0FBYyxDQUFwQiIsImZpbGUiOiJjb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgTUFYX1RFWFRVUkVTID0gMTA7XG5leHBvcnQgY29uc3QgTUFYX1BPSU5UX0xJR0hUUyA9IDQ7XG5leHBvcnQgY29uc3QgUElDS0lOR19SRVMgPSA0O1xuIl19

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.pickModels = pickModels;
	
	var _webgl = __webpack_require__(187);
	
	var _webglChecks = __webpack_require__(201);
	
	var _group = __webpack_require__(254);
	
	var _group2 = _interopRequireDefault(_group);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// TODO - this is the new picking for deck.gl
	/* eslint-disable max-statements, no-try-catch */
	/* global window */
	var ILLEGAL_ARG = 'Illegal argument to pick';
	
	function pickModels(gl, _ref) {
	  var group = _ref.group,
	      uniforms = _ref.uniforms,
	      x = _ref.x,
	      y = _ref.y,
	      _ref$pickingFBO = _ref.pickingFBO,
	      pickingFBO = _ref$pickingFBO === undefined ? null : _ref$pickingFBO,
	      _ref$pickingProgram = _ref.pickingProgram,
	      pickingProgram = _ref$pickingProgram === undefined ? null : _ref$pickingProgram,
	      _ref$pickingColors = _ref.pickingColors,
	      pickingColors = _ref$pickingColors === undefined ? null : _ref$pickingColors;
	
	  (0, _webglChecks.assertWebGLContext)(gl);
	  (0, _assert2.default)(group instanceof _group2.default, ILLEGAL_ARG);
	
	  var dpr = typeof window !== 'undefined' ? window.devicePixelRatio : 1;
	  var deviceX = x * dpr;
	  var deviceY = gl.canvas.height - y * dpr;
	
	  // Set up a frame buffer if needed
	  // TODO - cache picking fbo (needs to be resized)?
	  pickingFBO = pickingFBO || new _webgl.Framebuffer(gl, {
	    width: gl.canvas.width,
	    height: gl.canvas.height
	  });
	
	  // Make sure we clear scissor test and fbo bindings in case of exceptions
	  return (0, _webgl.glContextWithState)(gl, {
	    frameBuffer: pickingFBO,
	    // We are only interested in one pixel, no need to render anything else
	    scissorTest: { x: deviceX, y: deviceY, w: 1, h: 1 }
	  }, function () {
	    var _iteratorNormalCompletion = true;
	    var _didIteratorError = false;
	    var _iteratorError = undefined;
	
	    try {
	      for (var _iterator = group.traverseReverse()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	        var model = _step.value;
	
	        if (model.isPickable()) {
	
	          // Clear the frame buffer, render and sample
	          gl.clear(_webgl.GL.COLOR_BUFFER_BIT | _webgl.GL.DEPTH_BUFFER_BIT);
	
	          model.setUniforms({
	            renderPickingBuffer: 1,
	            enablePicking: true
	          });
	
	          model.render(uniforms);
	
	          model.setUniforms({
	            renderPickingBuffer: false,
	            enablePicking: false
	          });
	
	          // Read color in the central pixel, to be mapped with picking colors
	          var color = new Uint8Array(4);
	          gl.readPixels(deviceX, deviceY, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, color);
	
	          var isPicked = color[0] !== 0 || color[1] !== 0 || color[2] !== 0 || color[3] !== 0;
	
	          // Add the information to the stack
	          if (isPicked) {
	            return {
	              model: model,
	              color: color,
	              x: x,
	              y: y,
	              deviceX: deviceX,
	              deviceY: deviceY
	            };
	          }
	        }
	      }
	    } catch (err) {
	      _didIteratorError = true;
	      _iteratorError = err;
	    } finally {
	      try {
	        if (!_iteratorNormalCompletion && _iterator.return) {
	          _iterator.return();
	        }
	      } finally {
	        if (_didIteratorError) {
	          throw _iteratorError;
	        }
	      }
	    }
	
	    return null;
	  });
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY2VuZWdyYXBoL3BpY2suanMiXSwibmFtZXMiOlsicGlja01vZGVscyIsIklMTEVHQUxfQVJHIiwiZ2wiLCJncm91cCIsInVuaWZvcm1zIiwieCIsInkiLCJwaWNraW5nRkJPIiwicGlja2luZ1Byb2dyYW0iLCJwaWNraW5nQ29sb3JzIiwiZHByIiwid2luZG93IiwiZGV2aWNlUGl4ZWxSYXRpbyIsImRldmljZVgiLCJkZXZpY2VZIiwiY2FudmFzIiwiaGVpZ2h0Iiwid2lkdGgiLCJmcmFtZUJ1ZmZlciIsInNjaXNzb3JUZXN0IiwidyIsImgiLCJ0cmF2ZXJzZVJldmVyc2UiLCJtb2RlbCIsImlzUGlja2FibGUiLCJjbGVhciIsIkNPTE9SX0JVRkZFUl9CSVQiLCJERVBUSF9CVUZGRVJfQklUIiwic2V0VW5pZm9ybXMiLCJyZW5kZXJQaWNraW5nQnVmZmVyIiwiZW5hYmxlUGlja2luZyIsInJlbmRlciIsImNvbG9yIiwiVWludDhBcnJheSIsInJlYWRQaXhlbHMiLCJSR0JBIiwiVU5TSUdORURfQllURSIsImlzUGlja2VkIl0sIm1hcHBpbmdzIjoiOzs7OztRQVVnQkEsVSxHQUFBQSxVOztBQVBoQjs7QUFDQTs7QUFDQTs7OztBQUNBOzs7Ozs7QUFOQTtBQUNBO0FBQ0E7QUFNQSxJQUFNQyxjQUFjLDBCQUFwQjs7QUFFTyxTQUFTRCxVQUFULENBQW9CRSxFQUFwQixRQVFKO0FBQUEsTUFQREMsS0FPQyxRQVBEQSxLQU9DO0FBQUEsTUFOREMsUUFNQyxRQU5EQSxRQU1DO0FBQUEsTUFMREMsQ0FLQyxRQUxEQSxDQUtDO0FBQUEsTUFKREMsQ0FJQyxRQUpEQSxDQUlDO0FBQUEsNkJBSERDLFVBR0M7QUFBQSxNQUhEQSxVQUdDLG1DQUhZLElBR1o7QUFBQSxpQ0FGREMsY0FFQztBQUFBLE1BRkRBLGNBRUMsdUNBRmdCLElBRWhCO0FBQUEsZ0NBRERDLGFBQ0M7QUFBQSxNQUREQSxhQUNDLHNDQURlLElBQ2Y7O0FBQ0QsdUNBQW1CUCxFQUFuQjtBQUNBLHdCQUFPQyxnQ0FBUCxFQUErQkYsV0FBL0I7O0FBRUEsTUFBTVMsTUFBTSxPQUFPQyxNQUFQLEtBQWtCLFdBQWxCLEdBQWdDQSxPQUFPQyxnQkFBdkMsR0FBMEQsQ0FBdEU7QUFDQSxNQUFNQyxVQUFVUixJQUFJSyxHQUFwQjtBQUNBLE1BQU1JLFVBQVVaLEdBQUdhLE1BQUgsQ0FBVUMsTUFBVixHQUFtQlYsSUFBSUksR0FBdkM7O0FBRUE7QUFDQTtBQUNBSCxlQUFhQSxjQUFjLHVCQUFnQkwsRUFBaEIsRUFBb0I7QUFDN0NlLFdBQU9mLEdBQUdhLE1BQUgsQ0FBVUUsS0FENEI7QUFFN0NELFlBQVFkLEdBQUdhLE1BQUgsQ0FBVUM7QUFGMkIsR0FBcEIsQ0FBM0I7O0FBS0E7QUFDQSxTQUFPLCtCQUFtQmQsRUFBbkIsRUFBdUI7QUFDNUJnQixpQkFBYVgsVUFEZTtBQUU1QjtBQUNBWSxpQkFBYSxFQUFDZCxHQUFHUSxPQUFKLEVBQWFQLEdBQUdRLE9BQWhCLEVBQXlCTSxHQUFHLENBQTVCLEVBQStCQyxHQUFHLENBQWxDO0FBSGUsR0FBdkIsRUFJSixZQUFNO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQ1AsMkJBQW9CbEIsTUFBTW1CLGVBQU4sRUFBcEIsOEhBQTZDO0FBQUEsWUFBbENDLEtBQWtDOztBQUMzQyxZQUFJQSxNQUFNQyxVQUFOLEVBQUosRUFBd0I7O0FBRXRCO0FBQ0F0QixhQUFHdUIsS0FBSCxDQUFTLFVBQUdDLGdCQUFILEdBQXNCLFVBQUdDLGdCQUFsQzs7QUFFQUosZ0JBQU1LLFdBQU4sQ0FBa0I7QUFDaEJDLGlDQUFxQixDQURMO0FBRWhCQywyQkFBZTtBQUZDLFdBQWxCOztBQUtBUCxnQkFBTVEsTUFBTixDQUFhM0IsUUFBYjs7QUFFQW1CLGdCQUFNSyxXQUFOLENBQWtCO0FBQ2hCQyxpQ0FBcUIsS0FETDtBQUVoQkMsMkJBQWU7QUFGQyxXQUFsQjs7QUFLQTtBQUNBLGNBQU1FLFFBQVEsSUFBSUMsVUFBSixDQUFlLENBQWYsQ0FBZDtBQUNBL0IsYUFBR2dDLFVBQUgsQ0FDRXJCLE9BREYsRUFDV0MsT0FEWCxFQUNvQixDQURwQixFQUN1QixDQUR2QixFQUMwQlosR0FBR2lDLElBRDdCLEVBQ21DakMsR0FBR2tDLGFBRHRDLEVBQ3FESixLQURyRDs7QUFJQSxjQUFNSyxXQUNKTCxNQUFNLENBQU4sTUFBYSxDQUFiLElBQWtCQSxNQUFNLENBQU4sTUFBYSxDQUEvQixJQUFvQ0EsTUFBTSxDQUFOLE1BQWEsQ0FBakQsSUFBc0RBLE1BQU0sQ0FBTixNQUFhLENBRHJFOztBQUdBO0FBQ0EsY0FBSUssUUFBSixFQUFjO0FBQ1osbUJBQU87QUFDTGQsMEJBREs7QUFFTFMsMEJBRks7QUFHTDNCLGtCQUhLO0FBSUxDLGtCQUpLO0FBS0xPLDhCQUxLO0FBTUxDO0FBTkssYUFBUDtBQVFEO0FBQ0Y7QUFDRjtBQXhDTTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQTBDUCxXQUFPLElBQVA7QUFDRCxHQS9DTSxDQUFQO0FBZ0REIiwiZmlsZSI6InBpY2suanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUT0RPIC0gdGhpcyBpcyB0aGUgbmV3IHBpY2tpbmcgZm9yIGRlY2suZ2xcbi8qIGVzbGludC1kaXNhYmxlIG1heC1zdGF0ZW1lbnRzLCBuby10cnktY2F0Y2ggKi9cbi8qIGdsb2JhbCB3aW5kb3cgKi9cbmltcG9ydCB7R0wsIGdsQ29udGV4dFdpdGhTdGF0ZSwgRnJhbWVidWZmZXJ9IGZyb20gJy4uL3dlYmdsJztcbmltcG9ydCB7YXNzZXJ0V2ViR0xDb250ZXh0fSBmcm9tICcuLi93ZWJnbC93ZWJnbC1jaGVja3MnO1xuaW1wb3J0IEdyb3VwIGZyb20gJy4vZ3JvdXAnO1xuaW1wb3J0IGFzc2VydCBmcm9tICdhc3NlcnQnO1xuXG5jb25zdCBJTExFR0FMX0FSRyA9ICdJbGxlZ2FsIGFyZ3VtZW50IHRvIHBpY2snO1xuXG5leHBvcnQgZnVuY3Rpb24gcGlja01vZGVscyhnbCwge1xuICBncm91cCxcbiAgdW5pZm9ybXMsXG4gIHgsXG4gIHksXG4gIHBpY2tpbmdGQk8gPSBudWxsLFxuICBwaWNraW5nUHJvZ3JhbSA9IG51bGwsXG4gIHBpY2tpbmdDb2xvcnMgPSBudWxsXG59KSB7XG4gIGFzc2VydFdlYkdMQ29udGV4dChnbCk7XG4gIGFzc2VydChncm91cCBpbnN0YW5jZW9mIEdyb3VwLCBJTExFR0FMX0FSRyk7XG5cbiAgY29uc3QgZHByID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyA6IDE7XG4gIGNvbnN0IGRldmljZVggPSB4ICogZHByO1xuICBjb25zdCBkZXZpY2VZID0gZ2wuY2FudmFzLmhlaWdodCAtIHkgKiBkcHI7XG5cbiAgLy8gU2V0IHVwIGEgZnJhbWUgYnVmZmVyIGlmIG5lZWRlZFxuICAvLyBUT0RPIC0gY2FjaGUgcGlja2luZyBmYm8gKG5lZWRzIHRvIGJlIHJlc2l6ZWQpP1xuICBwaWNraW5nRkJPID0gcGlja2luZ0ZCTyB8fCBuZXcgRnJhbWVidWZmZXIoZ2wsIHtcbiAgICB3aWR0aDogZ2wuY2FudmFzLndpZHRoLFxuICAgIGhlaWdodDogZ2wuY2FudmFzLmhlaWdodFxuICB9KTtcblxuICAvLyBNYWtlIHN1cmUgd2UgY2xlYXIgc2Npc3NvciB0ZXN0IGFuZCBmYm8gYmluZGluZ3MgaW4gY2FzZSBvZiBleGNlcHRpb25zXG4gIHJldHVybiBnbENvbnRleHRXaXRoU3RhdGUoZ2wsIHtcbiAgICBmcmFtZUJ1ZmZlcjogcGlja2luZ0ZCTyxcbiAgICAvLyBXZSBhcmUgb25seSBpbnRlcmVzdGVkIGluIG9uZSBwaXhlbCwgbm8gbmVlZCB0byByZW5kZXIgYW55dGhpbmcgZWxzZVxuICAgIHNjaXNzb3JUZXN0OiB7eDogZGV2aWNlWCwgeTogZGV2aWNlWSwgdzogMSwgaDogMX1cbiAgfSwgKCkgPT4ge1xuICAgIGZvciAoY29uc3QgbW9kZWwgb2YgZ3JvdXAudHJhdmVyc2VSZXZlcnNlKCkpIHtcbiAgICAgIGlmIChtb2RlbC5pc1BpY2thYmxlKCkpIHtcblxuICAgICAgICAvLyBDbGVhciB0aGUgZnJhbWUgYnVmZmVyLCByZW5kZXIgYW5kIHNhbXBsZVxuICAgICAgICBnbC5jbGVhcihHTC5DT0xPUl9CVUZGRVJfQklUIHwgR0wuREVQVEhfQlVGRkVSX0JJVCk7XG5cbiAgICAgICAgbW9kZWwuc2V0VW5pZm9ybXMoe1xuICAgICAgICAgIHJlbmRlclBpY2tpbmdCdWZmZXI6IDEsXG4gICAgICAgICAgZW5hYmxlUGlja2luZzogdHJ1ZVxuICAgICAgICB9KTtcblxuICAgICAgICBtb2RlbC5yZW5kZXIodW5pZm9ybXMpO1xuXG4gICAgICAgIG1vZGVsLnNldFVuaWZvcm1zKHtcbiAgICAgICAgICByZW5kZXJQaWNraW5nQnVmZmVyOiBmYWxzZSxcbiAgICAgICAgICBlbmFibGVQaWNraW5nOiBmYWxzZVxuICAgICAgICB9KTtcblxuICAgICAgICAvLyBSZWFkIGNvbG9yIGluIHRoZSBjZW50cmFsIHBpeGVsLCB0byBiZSBtYXBwZWQgd2l0aCBwaWNraW5nIGNvbG9yc1xuICAgICAgICBjb25zdCBjb2xvciA9IG5ldyBVaW50OEFycmF5KDQpO1xuICAgICAgICBnbC5yZWFkUGl4ZWxzKFxuICAgICAgICAgIGRldmljZVgsIGRldmljZVksIDEsIDEsIGdsLlJHQkEsIGdsLlVOU0lHTkVEX0JZVEUsIGNvbG9yXG4gICAgICAgICk7XG5cbiAgICAgICAgY29uc3QgaXNQaWNrZWQgPVxuICAgICAgICAgIGNvbG9yWzBdICE9PSAwIHx8IGNvbG9yWzFdICE9PSAwIHx8IGNvbG9yWzJdICE9PSAwIHx8IGNvbG9yWzNdICE9PSAwO1xuXG4gICAgICAgIC8vIEFkZCB0aGUgaW5mb3JtYXRpb24gdG8gdGhlIHN0YWNrXG4gICAgICAgIGlmIChpc1BpY2tlZCkge1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBtb2RlbCxcbiAgICAgICAgICAgIGNvbG9yLFxuICAgICAgICAgICAgeCxcbiAgICAgICAgICAgIHksXG4gICAgICAgICAgICBkZXZpY2VYLFxuICAgICAgICAgICAgZGV2aWNlWVxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfSk7XG59XG4iXX0=

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _geometry = __webpack_require__(259);
	
	Object.defineProperty(exports, 'Geometry', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_geometry).default;
	  }
	});
	
	var _model = __webpack_require__(260);
	
	Object.defineProperty(exports, 'Model', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_model).default;
	  }
	});
	
	var _animationFrame = __webpack_require__(261);
	
	Object.defineProperty(exports, 'AnimationFrame', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_animationFrame).default;
	  }
	});
	Object.keys(_animationFrame).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _animationFrame[key];
	    }
	  });
	});
	
	var _camera = __webpack_require__(262);
	
	Object.keys(_camera).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _camera[key];
	    }
	  });
	});
	
	var _event = __webpack_require__(263);
	
	Object.keys(_event).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _event[key];
	    }
	  });
	});
	Object.defineProperty(exports, 'FrameAnimator', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_animationFrame).default;
	  }
	});
	Object.defineProperty(exports, 'Renderer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_animationFrame).default;
	  }
	});
	Object.defineProperty(exports, 'Animation', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_animationFrame).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb3JlL2luZGV4LmpzIl0sIm5hbWVzIjpbImRlZmF1bHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OzZDQUFRQSxPOzs7Ozs7Ozs7MENBQ0FBLE87Ozs7Ozs7OzttREFDQUEsTzs7O0FBQ1I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7O21EQUdRQSxPOzs7Ozs7bURBQ0FBLE87Ozs7OzttREFDQUEsTyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7ZGVmYXVsdCBhcyBHZW9tZXRyeX0gZnJvbSAnLi9nZW9tZXRyeSc7XG5leHBvcnQge2RlZmF1bHQgYXMgTW9kZWx9IGZyb20gJy4vbW9kZWwnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIEFuaW1hdGlvbkZyYW1lfSBmcm9tICcuL2FuaW1hdGlvbi1mcmFtZSc7XG5leHBvcnQgKiBmcm9tICcuL2FuaW1hdGlvbi1mcmFtZSc7XG5leHBvcnQgKiBmcm9tICcuL2NhbWVyYSc7XG5leHBvcnQgKiBmcm9tICcuL2V2ZW50JztcblxuLy8gZGVwcmVjYXRlZFxuZXhwb3J0IHtkZWZhdWx0IGFzIEZyYW1lQW5pbWF0b3J9IGZyb20gJy4vYW5pbWF0aW9uLWZyYW1lJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBSZW5kZXJlcn0gZnJvbSAnLi9hbmltYXRpb24tZnJhbWUnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIEFuaW1hdGlvbn0gZnJvbSAnLi9hbmltYXRpb24tZnJhbWUnO1xuIl19

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _utils = __webpack_require__(204);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ILLEGAL_ARG = 'Geometry: Illegal argument';
	
	var Geometry = function () {
	  function Geometry() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        id = _ref.id,
	        _ref$drawMode = _ref.drawMode,
	        drawMode = _ref$drawMode === undefined ? 'TRIANGLES' : _ref$drawMode,
	        _ref$vertexCount = _ref.vertexCount,
	        vertexCount = _ref$vertexCount === undefined ? undefined : _ref$vertexCount,
	        attributes = _ref.attributes,
	        attrs = _objectWithoutProperties(_ref, ['id', 'drawMode', 'vertexCount', 'attributes']);
	
	    _classCallCheck(this, Geometry);
	
	    (0, _assert2.default)(drawMode, ILLEGAL_ARG);
	
	    this.id = id || (0, _utils.uid)(this.constructor.name);
	    this.drawMode = drawMode;
	    this.vertexCount = vertexCount;
	    this.attributes = {};
	    this.needsRedraw = true;
	    this.userData = {};
	    Object.seal(this);
	
	    if (attributes) {
	      this.setAttributes(attributes);
	    } else {
	      this.setAttributes(attrs);
	    }
	  }
	
	  _createClass(Geometry, [{
	    key: 'setNeedsRedraw',
	    value: function setNeedsRedraw() {
	      var redraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
	
	      this.needsRedraw = redraw;
	      return this;
	    }
	  }, {
	    key: 'getNeedsRedraw',
	    value: function getNeedsRedraw() {
	      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref2$clearRedrawFlag = _ref2.clearRedrawFlags,
	          clearRedrawFlags = _ref2$clearRedrawFlag === undefined ? false : _ref2$clearRedrawFlag;
	
	      var redraw = false;
	      redraw = redraw || this.needsRedraw;
	      this.needsRedraw = this.needsRedraw && !clearRedrawFlags;
	      return redraw;
	    }
	  }, {
	    key: 'setVertexCount',
	    value: function setVertexCount(vertexCount) {
	      this.vertexCount = vertexCount;
	    }
	  }, {
	    key: 'getVertexCount',
	    value: function getVertexCount() {
	      if (this.vertexCount !== undefined) {
	        return this.vertexCount;
	      } else if (this.attributes.indices) {
	        return this.attributes.indices.value.length;
	      } else if (this.attributes.vertices) {
	        return this.attributes.vertices.value.length / 3;
	      } else if (this.attributes.positions) {
	        return this.attributes.positions.value.length / 3;
	      }
	      return false;
	    }
	  }, {
	    key: 'hasAttribute',
	    value: function hasAttribute(attributeName) {
	      return Boolean(this.attributes[attributeName]);
	    }
	  }, {
	    key: 'getAttribute',
	    value: function getAttribute(attributeName) {
	      var attribute = this.attributes[attributeName];
	      (0, _assert2.default)(attribute);
	      return attribute.value;
	    }
	  }, {
	    key: 'getArray',
	    value: function getArray(attributeName) {
	      var attribute = this.attributes[attributeName];
	      (0, _assert2.default)(attribute);
	      return attribute.value;
	    }
	  }, {
	    key: 'getAttributes',
	    value: function getAttributes() {
	      return this.attributes;
	    }
	
	    // Attribute
	    // value: typed array
	    // type: indices, vertices, uvs
	    // size: elements per vertex
	    // target: WebGL buffer type (string or constant)
	
	  }, {
	    key: 'setAttributes',
	    value: function setAttributes(attributes) {
	      for (var attributeName in attributes) {
	        var attribute = attributes[attributeName];
	
	        // Wrap "unwrapped" arrays and try to autodetect their type
	        attribute = ArrayBuffer.isView(attribute) ? { value: attribute } : attribute;
	
	        (0, _assert2.default)(ArrayBuffer.isView(attribute.value), this._print(attributeName) + ': must be a typed array or an object' + 'with value as typed array');
	
	        this._autoDetectAttribute(attributeName, attribute);
	
	        this.attributes[attributeName] = _extends({}, attribute, {
	          instanced: attribute.instanced || 0
	        });
	      }
	      this.setNeedsRedraw();
	      return this;
	    }
	
	    // Check for well known attribute names
	    /* eslint-disable default-case, complexity */
	
	  }, {
	    key: '_autoDetectAttribute',
	    value: function _autoDetectAttribute(attributeName, attribute) {
	      var category = void 0;
	      switch (attributeName) {
	        case 'indices':
	          category = category || 'indices';
	          break;
	        case 'texCoords':
	        case 'texCoord1':
	        case 'texCoord2':
	        case 'texCoord3':
	          category = 'uvs';
	          break;
	        case 'vertices':
	        case 'positions':
	        case 'normals':
	        case 'pickingColors':
	          category = 'vectors';
	          break;
	      }
	
	      // Check for categorys
	      switch (category) {
	        case 'vectors':
	          attribute.size = attribute.size || 3;
	          break;
	        case 'uvs':
	          attribute.size = attribute.size || 2;
	          break;
	        case 'indices':
	          attribute.size = attribute.size || 1;
	          attribute.isIndexed = attribute.isIndexed || true;
	          (0, _assert2.default)(attribute.value instanceof Uint16Array || attribute.value instanceof Uint32Array, 'attribute array for "indices" must be of integer type');
	          break;
	      }
	
	      (0, _assert2.default)(attribute.size, 'attribute ' + attributeName + ' needs size');
	    }
	    /* eslint-enable default-case, complexity */
	
	  }, {
	    key: '_print',
	    value: function _print(attributeName) {
	      return 'Geometry ' + this.id + ' attribute ' + attributeName;
	    }
	  }]);
	
	  return Geometry;
	}();
	
	exports.default = Geometry;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.Material = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _webgl = __webpack_require__(187);
	
	var _object3d = __webpack_require__(249);
	
	var _object3d2 = _interopRequireDefault(_object3d);
	
	var _utils = __webpack_require__(204);
	
	var _geometry = __webpack_require__(259);
	
	var _geometry2 = _interopRequireDefault(_geometry);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } } // A scenegraph object node
	/* eslint-disable guard-for-in */
	
	// Define some locals
	
	
	var MSG_INSTANCED_PARAM_DEPRECATED = 'Warning: Model constructor: parameter "instanced" renamed to "isInstanced".\nThis will become a hard error in a future version of luma.gl.';
	
	var MSG_TEXTURES_PARAM_REMOVED = 'Model: parameter "textures" removed. Use uniforms to set textures';
	
	// TODO - experimental, not yet used
	
	var Material = exports.Material = function Material() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      _ref$shininess = _ref.shininess,
	      shininess = _ref$shininess === undefined ? 0 : _ref$shininess,
	      _ref$reflection = _ref.reflection,
	      reflection = _ref$reflection === undefined ? 0 : _ref$reflection,
	      _ref$refraction = _ref.refraction,
	      refraction = _ref$refraction === undefined ? 0 : _ref$refraction;
	
	  _classCallCheck(this, Material);
	
	  this.shininess = shininess;
	  this.reflection = reflection;
	  this.refraction = refraction;
	};
	
	// Model abstract O3D Class
	
	
	var Model = function (_Object3D) {
	  _inherits(Model, _Object3D);
	
	  function Model(gl) {
	    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    _classCallCheck(this, Model);
	
	    opts = gl instanceof _webgl.WebGLRenderingContext ? _extends({}, opts, { gl: gl }) : gl;
	
	    var _this = _possibleConstructorReturn(this, (Model.__proto__ || Object.getPrototypeOf(Model)).call(this, opts));
	
	    _this.init(opts);
	    return _this;
	  }
	
	  /* eslint-disable max-statements  */
	  /* eslint-disable complexity  */
	
	
	  _createClass(Model, [{
	    key: 'init',
	    value: function init() {
	      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          program = _ref2.program,
	          _ref2$gl = _ref2.gl,
	          gl = _ref2$gl === undefined ? null : _ref2$gl,
	          _ref2$vs = _ref2.vs,
	          vs = _ref2$vs === undefined ? null : _ref2$vs,
	          _ref2$fs = _ref2.fs,
	          fs = _ref2$fs === undefined ? null : _ref2$fs,
	          geometry = _ref2.geometry,
	          _ref2$material = _ref2.material,
	          material = _ref2$material === undefined ? null : _ref2$material,
	          textures = _ref2.textures,
	          _ref2$isInstanced = _ref2.isInstanced,
	          isInstanced = _ref2$isInstanced === undefined ? false : _ref2$isInstanced,
	          _ref2$instanceCount = _ref2.instanceCount,
	          instanceCount = _ref2$instanceCount === undefined ? 0 : _ref2$instanceCount,
	          _ref2$vertexCount = _ref2.vertexCount,
	          vertexCount = _ref2$vertexCount === undefined ? undefined : _ref2$vertexCount,
	          _ref2$pickable = _ref2.pickable,
	          pickable = _ref2$pickable === undefined ? true : _ref2$pickable,
	          _ref2$pick = _ref2.pick,
	          pick = _ref2$pick === undefined ? null : _ref2$pick,
	          _ref2$uniforms = _ref2.uniforms,
	          uniforms = _ref2$uniforms === undefined ? {} : _ref2$uniforms,
	          _ref2$attributes = _ref2.attributes,
	          attributes = _ref2$attributes === undefined ? {} : _ref2$attributes,
	          _ref2$render = _ref2.render,
	          render = _ref2$render === undefined ? null : _ref2$render,
	          _ref2$onBeforeRender = _ref2.onBeforeRender,
	          onBeforeRender = _ref2$onBeforeRender === undefined ? function () {} : _ref2$onBeforeRender,
	          _ref2$onAfterRender = _ref2.onAfterRender,
	          onAfterRender = _ref2$onAfterRender === undefined ? function () {} : _ref2$onAfterRender,
	          opts = _objectWithoutProperties(_ref2, ['program', 'gl', 'vs', 'fs', 'geometry', 'material', 'textures', 'isInstanced', 'instanceCount', 'vertexCount', 'pickable', 'pick', 'uniforms', 'attributes', 'render', 'onBeforeRender', 'onAfterRender']);
	
	      // assert(program || program instanceof Program);
	      (0, _assert2.default)(geometry instanceof _geometry2.default, 'Model needs a geometry');
	
	      // set a custom program per o3d
	      this.program = program || new _webgl.Program(gl, { vs: vs, fs: fs });
	      (0, _assert2.default)(this.program instanceof _webgl.Program, 'Model needs a program');
	
	      if (opts.instanced) {
	        /* global console */
	        /* eslint-disable no-console */
	        console.warn(MSG_INSTANCED_PARAM_DEPRECATED);
	        isInstanced = isInstanced || opts.instanced;
	      }
	
	      if (textures) {
	        throw new Error(MSG_TEXTURES_PARAM_REMOVED);
	      }
	
	      // TODO - remove?
	      this.buffers = {};
	      this.userData = {};
	      this.drawParams = {};
	      this.dynamic = false;
	      this.needsRedraw = true;
	
	      this.material = material;
	
	      // Attributes and buffers
	      this.setGeometry(geometry);
	      this.attributes = {};
	      this.setAttributes(attributes);
	
	      this.uniforms = {};
	      this.setUniforms(_extends({}, this.program.defaultUniforms, uniforms));
	
	      // instanced rendering
	      this.isInstanced = isInstanced;
	      this.instanceCount = instanceCount;
	      this.vertexCount = vertexCount;
	
	      // picking options
	      this.pickable = Boolean(pickable);
	      this.pick = pick || function () {
	        return false;
	      };
	
	      this.onBeforeRender = onBeforeRender;
	      this.onAfterRender = onAfterRender;
	    }
	    /* eslint-enable max-statements */
	    /* eslint-enable complexity */
	
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      // TODO
	    }
	  }, {
	    key: 'setNeedsRedraw',
	    value: function setNeedsRedraw() {
	      var redraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
	
	      this.needsRedraw = redraw;
	      return this;
	    }
	  }, {
	    key: 'getNeedsRedraw',
	    value: function getNeedsRedraw() {
	      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref3$clearRedrawFlag = _ref3.clearRedrawFlags,
	          clearRedrawFlags = _ref3$clearRedrawFlag === undefined ? false : _ref3$clearRedrawFlag;
	
	      var redraw = false;
	      redraw = redraw || this.needsRedraw;
	      this.needsRedraw = this.needsRedraw && !clearRedrawFlags;
	      redraw = redraw || this.geometry.getNeedsRedraw({ clearRedrawFlags: clearRedrawFlags });
	      return redraw;
	    }
	  }, {
	    key: 'setInstanceCount',
	    value: function setInstanceCount(instanceCount) {
	      (0, _assert2.default)(instanceCount !== undefined);
	      this.instanceCount = instanceCount;
	      return this;
	    }
	  }, {
	    key: 'getInstanceCount',
	    value: function getInstanceCount() {
	      return this.instanceCount;
	    }
	  }, {
	    key: 'setVertexCount',
	    value: function setVertexCount(vertexCount) {
	      this.vertexCount = vertexCount;
	      return this;
	    }
	  }, {
	    key: 'getVertexCount',
	    value: function getVertexCount() {
	      return this.vertexCount === undefined ? this.geometry.getVertexCount() : this.vertexCount;
	    }
	  }, {
	    key: 'isPickable',
	    value: function isPickable() {
	      return this.pickable;
	    }
	  }, {
	    key: 'setPickable',
	    value: function setPickable() {
	      var pickable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
	
	      this.pickable = Boolean(pickable);
	      return this;
	    }
	  }, {
	    key: 'getProgram',
	    value: function getProgram() {
	      return this.program;
	    }
	  }, {
	    key: 'getGeometry',
	    value: function getGeometry() {
	      return this.geometry;
	    }
	  }, {
	    key: 'setGeometry',
	    value: function setGeometry(geometry) {
	      this.geometry = geometry;
	      this._createBuffersFromAttributeDescriptors(this.geometry.getAttributes());
	      this.setNeedsRedraw();
	      return this;
	    }
	  }, {
	    key: 'getAttributes',
	    value: function getAttributes() {
	      return this.attributes;
	    }
	  }, {
	    key: 'setAttributes',
	    value: function setAttributes() {
	      var attributes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      Object.assign(this.attributes, attributes);
	      this._createBuffersFromAttributeDescriptors(attributes);
	      this.setNeedsRedraw();
	      return this;
	    }
	  }, {
	    key: 'getUniforms',
	    value: function getUniforms() {
	      return this.uniforms;
	    }
	  }, {
	    key: 'setUniforms',
	    value: function setUniforms() {
	      var uniforms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      (0, _webgl.checkUniformValues)(uniforms, this.id);
	      Object.assign(this.uniforms, uniforms);
	      this.setNeedsRedraw();
	      return this;
	    }
	  }, {
	    key: 'draw',
	    value: function draw() {
	      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref4$uniforms = _ref4.uniforms,
	          uniforms = _ref4$uniforms === undefined ? {} : _ref4$uniforms,
	          _ref4$attributes = _ref4.attributes,
	          attributes = _ref4$attributes === undefined ? {} : _ref4$attributes,
	          _ref4$settings = _ref4.settings,
	          settings = _ref4$settings === undefined ? {} : _ref4$settings;
	
	      return this.render(uniforms);
	    }
	
	    // TODO - uniform names are too strongly linked camera <=> default shaders
	    // At least all special handling is collected here.
	
	  }, {
	    key: 'addViewUniforms',
	    value: function addViewUniforms(uniforms) {
	      // TODO - special treatment of these parameters should be removed
	      var camera = uniforms.camera,
	          viewMatrix = uniforms.viewMatrix,
	          modelMatrix = uniforms.modelMatrix,
	          otherUniforms = _objectWithoutProperties(uniforms, ['camera', 'viewMatrix', 'modelMatrix']);
	      // Camera exposes uniforms that can be used directly in shaders
	
	
	      var cameraUniforms = camera ? camera.getUniforms() : {};
	
	      var viewUniforms = viewMatrix ? this.getCoordinateUniforms(viewMatrix, modelMatrix) : {};
	
	      return _extends({}, cameraUniforms, viewUniforms, otherUniforms);
	    }
	
	    /*
	     * @param {Camera} opt.camera=
	     * @param {Camera} opt.viewMatrix=
	     */
	    /* eslint-disable max-statements */
	
	  }, {
	    key: 'render',
	    value: function render() {
	      var uniforms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      var resolvedUniforms = this.addViewUniforms(uniforms);
	
	      this.setUniforms(resolvedUniforms);
	
	      _utils.log.log(2, '>>> RENDERING MODEL ' + this.id, this);
	
	      this.setProgramState();
	
	      this._logAttributesAndUniforms(3, resolvedUniforms);
	
	      this.onBeforeRender();
	
	      var drawParams = this.drawParams;
	      if (drawParams.isInstanced && !this.isInstanced) {
	        _utils.log.warn(0, 'Found instanced attributes on non-instanced model');
	      }
	      var isIndexed = drawParams.isIndexed,
	          indexType = drawParams.indexType;
	      var geometry = this.geometry,
	          isInstanced = this.isInstanced,
	          instanceCount = this.instanceCount;
	
	      (0, _webgl.draw)(this.program.gl, {
	        drawMode: geometry.drawMode,
	        vertexCount: this.getVertexCount(),
	        isIndexed: isIndexed,
	        indexType: indexType,
	        isInstanced: isInstanced,
	        instanceCount: instanceCount
	      });
	
	      this.onAfterRender();
	
	      this.unsetProgramState();
	
	      this.setNeedsRedraw(false);
	
	      _utils.log.log(2, '<<< RENDERING MODEL ' + this.id + ' - complete');
	
	      return this;
	    }
	  }, {
	    key: 'setProgramState',
	    value: function setProgramState() {
	      var program = this.program;
	
	      program.use();
	      this.drawParams = {};
	      program.setBuffers(this.buffers, { drawParams: this.drawParams });
	      program.setUniforms(this.uniforms);
	      return this;
	    }
	  }, {
	    key: 'unsetProgramState',
	    value: function unsetProgramState() {
	      // Ensures all vertex attributes are disabled and ELEMENT_ARRAY_BUFFER
	      // is unbound
	      this.program.unsetBuffers();
	      return this;
	    }
	
	    // Makes sure buffers are created for all attributes
	    // and that the program is updated with those buffers
	    // TODO - do we need the separation between "attributes" and "buffers"
	    // couldn't apps just create buffers directly?
	
	  }, {
	    key: '_createBuffersFromAttributeDescriptors',
	    value: function _createBuffersFromAttributeDescriptors(attributes) {
	      var gl = this.program.gl;
	
	
	      for (var attributeName in attributes) {
	        var attribute = attributes[attributeName];
	
	        if (attribute instanceof _webgl.Buffer) {
	          this.buffers[attributeName] = attribute;
	        } else {
	          // Autocreate a buffer
	          this.buffers[attributeName] = this.buffers[attributeName] || new _webgl.Buffer(gl);
	
	          var buffer = this.buffers[attributeName];
	          buffer.setData(_extends({}, attribute, {
	            data: attribute.value,
	            target: attribute.isIndexed ? _webgl.GL.ELEMENT_ARRAY_BUFFER : _webgl.GL.ARRAY_BUFFER
	          }));
	        }
	      }
	
	      return this;
	    }
	  }, {
	    key: '_logAttributesAndUniforms',
	    value: function _logAttributesAndUniforms() {
	      var priority = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;
	      var uniforms = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      if (_utils.log.priority >= priority) {
	        var attributeTable = this._getAttributesTable({
	          header: 'Attributes ' + this.id,
	          program: this.program,
	          attributes: _extends({}, this.geometry.attributes, this.attributes)
	        });
	        _utils.log.table(priority, attributeTable);
	
	        var _getUniformsTable = (0, _webgl.getUniformsTable)({
	          header: 'Uniforms ' + this.id,
	          program: this.program,
	          uniforms: _extends({}, this.uniforms, uniforms)
	        }),
	            table = _getUniformsTable.table,
	            unusedTable = _getUniformsTable.unusedTable,
	            unusedCount = _getUniformsTable.unusedCount;
	
	        _utils.log.table(priority, table);
	        _utils.log.log(priority, (unusedCount || 'No') + ' unused uniforms ', unusedTable);
	      }
	    }
	
	    // Todo move to attributes manager
	
	  }, {
	    key: '_getAttributesTable',
	    value: function _getAttributesTable() {
	      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          attributes = _ref5.attributes,
	          _ref5$header = _ref5.header,
	          header = _ref5$header === undefined ? 'Attributes' : _ref5$header,
	          instanced = _ref5.instanced,
	          program = _ref5.program;
	
	      (0, _assert2.default)(program);
	      var attributeLocations = program._attributeLocations;
	      var table = _defineProperty({}, header, {});
	
	      // Add used attributes
	      for (var attributeName in attributeLocations) {
	        var attribute = attributes[attributeName];
	        var location = attributeLocations[attributeName];
	        table[attributeName] = this._getAttributeEntry(attribute, location);
	      }
	
	      // Add any unused attributes
	      for (var _attributeName in attributes) {
	        var _attribute = attributes[_attributeName];
	        if (!table[_attributeName]) {
	          table[_attributeName] = this._getAttributeEntry(_attribute, null);
	        }
	      }
	
	      return table;
	    }
	  }, {
	    key: '_getAttributeEntry',
	    value: function _getAttributeEntry(attribute, location) {
	      var round = function round(num) {
	        return Math.round(num * 10) / 10;
	      };
	
	      var type = 'NOT PROVIDED';
	      var instanced = 0;
	      var size = 'N/A';
	      var verts = 'N/A';
	      var bytes = 'N/A';
	      var value = 'N/A';
	
	      if (attribute && location === null) {
	        location = attribute.isIndexed ? 'ELEMENT_ARRAY_BUFFER' : 'NOT USED';
	      }
	
	      if (attribute instanceof _webgl.Buffer) {
	        var buffer = attribute;
	        type = buffer.layout.type;
	        instanced = buffer.layout.instanced;
	        size = buffer.layout.size;
	        verts = round(buffer.data.length / buffer.layout.size);
	        bytes = buffer.data.length * buffer.data.BYTES_PER_ELEMENT;
	      } else if (attribute) {
	        type = attribute.value.constructor.name;
	        instanced = attribute.instanced;
	        size = attribute.size;
	        verts = round(attribute.value.length / attribute.size);
	        bytes = attribute.value.length * attribute.value.BYTES_PER_ELEMENT;
	        value = attribute.value;
	      }
	
	      // Generate a type name by dropping Array from Float32Array etc.
	      type = String(type).replace('Array', '');
	      // Look for 'nt' to detect integer types, e.g. Int32Array, Uint32Array
	      var isInteger = type.indexOf('nt') !== -1;
	
	      location = '' + location + (instanced ? ' [instanced]' : '');
	
	      return {
	        Location: location,
	        'Type Size x Verts = Bytes': type + ' ' + size + ' x ' + verts + ' = ' + bytes,
	        Value: (0, _utils.formatValue)(value, { size: size, isInteger: isInteger })
	      };
	    }
	
	    // DEPRECATED / REMOVED
	
	  }, {
	    key: 'setTextures',
	    value: function setTextures() {
	      var textures = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	
	      throw new Error('model.setTextures replaced: setUniforms({sampler2D: new Texture2D})');
	    }
	  }, {
	    key: 'hash',
	    get: function get() {
	      return this.id + ' ' + this.$pickingIndex;
	    }
	  }]);
	
	  return Model;
	}(_object3d2.default);
	
	exports.default = Model;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.cancelAnimationFrame = exports.requestAnimationFrame = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _desc, _value, _class; /* global window, setTimeout, clearTimeout */
	
	
	var _autobindDecorator = __webpack_require__(183);
	
	var _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);
	
	var _utils = __webpack_require__(204);
	
	var _webglChecks = __webpack_require__(201);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
	  var desc = {};
	  Object['ke' + 'ys'](descriptor).forEach(function (key) {
	    desc[key] = descriptor[key];
	  });
	  desc.enumerable = !!desc.enumerable;
	  desc.configurable = !!desc.configurable;
	
	  if ('value' in desc || desc.initializer) {
	    desc.writable = true;
	  }
	
	  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
	    return decorator(target, property, desc) || desc;
	  }, desc);
	
	  if (context && desc.initializer !== void 0) {
	    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
	    desc.initializer = undefined;
	  }
	
	  if (desc.initializer === void 0) {
	    Object['define' + 'Property'](target, property, desc);
	    desc = null;
	  }
	
	  return desc;
	}
	
	// Node.js polyfills for requestAnimationFrame and cancelAnimationFrame
	var requestAnimationFrame = exports.requestAnimationFrame = function requestAnimationFrame(callback) {
	  return _utils.isBrowser ? window.requestAnimationFrame(callback) : setTimeout(callback, 1000 / 60);
	};
	
	var cancelAnimationFrame = exports.cancelAnimationFrame = function cancelAnimationFrame(timerId) {
	  return _utils.isBrowser ? window.cancelAnimationFrame(timerId) : clearTimeout(timerId);
	};
	
	var AnimationFrame = (_class = function () {
	  /*
	   * @param {HTMLCanvasElement} canvas - if provided, with and height will be
	   *   passed to context
	   */
	  function AnimationFrame() {
	    var _this = this;
	
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$gl = _ref.gl,
	        gl = _ref$gl === undefined ? null : _ref$gl,
	        _ref$canvas = _ref.canvas,
	        canvas = _ref$canvas === undefined ? null : _ref$canvas,
	        _ref$width = _ref.width,
	        width = _ref$width === undefined ? null : _ref$width,
	        _ref$height = _ref.height,
	        height = _ref$height === undefined ? null : _ref$height,
	        _ref$autoResizeViewpo = _ref.autoResizeViewport,
	        autoResizeViewport = _ref$autoResizeViewpo === undefined ? true : _ref$autoResizeViewpo,
	        _ref$autoResizeCanvas = _ref.autoResizeCanvas,
	        autoResizeCanvas = _ref$autoResizeCanvas === undefined ? true : _ref$autoResizeCanvas,
	        _ref$autoResizeDrawin = _ref.autoResizeDrawingBuffer,
	        autoResizeDrawingBuffer = _ref$autoResizeDrawin === undefined ? true : _ref$autoResizeDrawin,
	        _ref$useDevicePixelRa = _ref.useDevicePixelRatio,
	        useDevicePixelRatio = _ref$useDevicePixelRa === undefined ? true : _ref$useDevicePixelRa,
	        glOpts = _objectWithoutProperties(_ref, ['gl', 'canvas', 'width', 'height', 'autoResizeViewport', 'autoResizeCanvas', 'autoResizeDrawingBuffer', 'useDevicePixelRatio']);
	
	    _classCallCheck(this, AnimationFrame);
	
	    this.update({
	      autoResizeViewport: autoResizeViewport,
	      autoResizeCanvas: autoResizeCanvas,
	      autoResizeDrawingBuffer: autoResizeDrawingBuffer,
	      useDevicePixelRatio: useDevicePixelRatio
	    });
	
	    this.width = width;
	    this.height = height;
	
	    // Don't do a
	    this._startPromise = _utils.pageLoadPromise.then(function (page) {
	      _this.gl = gl;
	      return page;
	    });
	  }
	
	  _createClass(AnimationFrame, [{
	    key: 'update',
	    value: function update(_ref2) {
	      var _ref2$autoResizeDrawi = _ref2.autoResizeDrawingBuffer,
	          autoResizeDrawingBuffer = _ref2$autoResizeDrawi === undefined ? true : _ref2$autoResizeDrawi,
	          _ref2$autoResizeCanva = _ref2.autoResizeCanvas,
	          autoResizeCanvas = _ref2$autoResizeCanva === undefined ? true : _ref2$autoResizeCanva,
	          _ref2$autoResizeViewp = _ref2.autoResizeViewport,
	          autoResizeViewport = _ref2$autoResizeViewp === undefined ? true : _ref2$autoResizeViewp,
	          _ref2$useDevicePixelR = _ref2.useDevicePixelRatio,
	          useDevicePixelRatio = _ref2$useDevicePixelR === undefined ? true : _ref2$useDevicePixelR;
	
	      this.autoResizeViewport = autoResizeViewport;
	      this.autoResizeCanvas = autoResizeCanvas;
	      this.autoResizeDrawingBuffer = autoResizeDrawingBuffer;
	      this.useDevicePixelRatio = useDevicePixelRatio;
	      return this;
	    }
	  }, {
	    key: 'context',
	    value: function context(onCreateContext) {
	      var _this2 = this;
	
	      if (this.gl) {
	        throw new Error('AnimationFrame.context - context already provided');
	      }
	      this._startPromise = this._startPromise.then(function () {
	        _this2.gl = onCreateContext();
	        if (!(0, _webglChecks.isWebGLContext)(_this2.gl)) {
	          throw new Error('AnimationFrame.context - illegal context returned');
	        }
	      });
	      return this;
	    }
	  }, {
	    key: 'init',
	    value: function init(onInit) {
	      var _this3 = this;
	
	      this._startPromise = this._startPromise.then(function () {
	        if (!_this3.gl) {
	          throw new Error('AnimationFrame.context - no context provided');
	        }
	        _this3._initializeContext();
	        return onInit(_this3._context) || {};
	      });
	
	      return this;
	    }
	  }, {
	    key: 'setupFrame',
	    value: function setupFrame(onSetupFrame) {
	      this._onSetupFrame = onSetupFrame;
	      return this;
	    }
	
	    /**
	     * Starts a global render loop with the given frame function
	     * @param {Function} onRenderFrame - application frame renderer function
	     *  expected to take a context parameter
	     * @param {Object} context - contains frame specific info
	     *  (E.g. tick, width, height, etc)
	     * @return {Renderer} - returns self for chaining
	     */
	
	  }, {
	    key: 'frame',
	    value: function frame(onRenderFrame) {
	      this._onRenderFrame = onRenderFrame;
	      this._restartFrame();
	      return this;
	    }
	
	    /**
	     * Starts a render loop if not already running
	     */
	
	  }, {
	    key: 'start',
	    value: function start() {
	      var _this4 = this;
	
	      this._startPromise.then(function () {
	        if (!_this4._animationFrameId) {
	          _this4._animationFrameId = requestAnimationFrame(_this4._frame);
	        }
	      });
	      return this;
	    }
	
	    /**
	     * Stops a render loop if already running
	     */
	
	  }, {
	    key: 'stop',
	    value: function stop() {
	      if (this._animationFrameId) {
	        cancelAnimationFrame(this._animationFrameId);
	        this._animationFrameId = null;
	      }
	      return this;
	    }
	
	    /**
	     * Resize canvas in "CSS coordinates" (may be different from device coords)
	     * NOTE: No effect on headless contexts
	     * @param {Number} width - new width of canvas in CSS coordinates
	     * @param {Number} height - new height of canvas in CSS coordinates
	     * @return {Renderer} - returns self for chaining
	     */
	
	  }, {
	    key: 'resizeCanvas',
	    value: function resizeCanvas(width, height) {
	      this._resizeCanvas(width, height);
	      return this;
	    }
	
	    // PRIVATE METHODS
	
	  }, {
	    key: '_initializeContext',
	    value: function _initializeContext() {
	      this._context = {
	        gl: this.gl,
	        canvas: this.gl.canvas,
	        stop: this.stop,
	        tick: 0,
	        tock: 0
	      };
	      this._updateContext();
	    }
	  }, {
	    key: '_updateContext',
	    value: function _updateContext() {
	      // Context width and height represent drawing buffer width and height
	      var canvas = this._context.canvas;
	
	      this._context.width = canvas.width;
	      this._context.height = canvas.height;
	      this._context.aspect = canvas.width / canvas.height;
	    }
	  }, {
	    key: '_restartFrame',
	    value: function _restartFrame() {
	      var _this5 = this;
	
	      this.stop();
	      // Wait for start promise before rendering frame
	      this._startPromise.then(function () {
	        var appContext = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	        _this5._initializeContext();
	
	        if ((typeof appContext === 'undefined' ? 'undefined' : _typeof(appContext)) === 'object' && appContext !== null) {
	          _this5._context = _extends({}, appContext, _this5._context);
	        }
	        _this5.start();
	      });
	    }
	
	    /**
	     * @private
	     * Handles a render loop frame- updates context and calls the application
	     * callback
	     */
	
	  }, {
	    key: '_frame',
	    value: function _frame() {
	      var canvas = this._context.canvas;
	
	
	      if (this._onSetupFrame) {
	        this._onSetupFrame(this._context);
	      } else {
	        this._resizeCanvasDrawingBuffer(canvas);
	        // Default viewport setup
	        if (this.autoResizeViewport) {
	          this.gl.viewport(0, 0, canvas.width, canvas.height);
	        }
	      }
	
	      this._updateContext();
	      this._onRenderFrame(this._context);
	
	      // Increment tick
	      this._context.tick++;
	
	      // Request another render frame (now )
	      this._animationFrameId = requestAnimationFrame(this._frame);
	    }
	
	    /**
	     * Resize canvas in "CSS coordinates" (may be different from device coords)
	     * NOTE: No effect on headless contexts
	     * @param {Number} width - new width of canvas in CSS coordinates
	     * @param {Number} height - new height of canvas in CSS coordinates
	     * @return {Renderer} - returns self for chaining
	     */
	
	  }, {
	    key: '_resizeCanvas',
	    value: function _resizeCanvas(width, height) {
	      var canvas = this._context.canvas;
	
	      if (canvas) {
	        if (this.autoResizeDrawingBuffer) {
	          var cssToDevicePixels = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;
	
	          // Lookup the size the browser is displaying the canvas in CSS pixels
	          // and compute a size needed to make our drawingbuffer match it in
	          // device pixels.
	          var displayWidth = Math.floor(width * cssToDevicePixels);
	          var displayHeight = Math.floor(height * cssToDevicePixels);
	
	          // Check if the canvas is not the same size.
	          if (canvas.width !== displayWidth || canvas.height !== displayHeight) {
	            // Make the canvas the same size
	            canvas.width = displayWidth;
	            canvas.height = displayHeight;
	          }
	        }
	
	        canvas.style.width = width + 'px';
	        canvas.style.height = height + 'px';
	      }
	      return this;
	    }
	
	    // Resize the render buffer of the canvas to match canvas client size
	    // multiplying with dpr (Optionally can be turned off)
	    // http://webgl2fundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html
	
	  }, {
	    key: '_resizeCanvasDrawingBuffer',
	    value: function _resizeCanvasDrawingBuffer() {
	      if (this.autoResizeDrawingBuffer) {
	        var canvas = this._context.canvas;
	
	        var cssToDevicePixels = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;
	
	        // Lookup the size the browser is displaying the canvas in CSS pixels
	        // and compute a size needed to make our drawingbuffer match it in
	        // device pixels.
	        var oldWidth = window.innerWidth;
	        var oldHeight = window.innerHeight;
	        var displayWidth = Math.floor(oldWidth * cssToDevicePixels);
	        var displayHeight = Math.floor(oldHeight * cssToDevicePixels);
	
	        // Check if the canvas is not the same size.
	        if (oldWidth !== displayWidth || oldHeight !== displayHeight) {
	          // Make the canvas the same size
	          canvas.width = displayWidth;
	          canvas.height = displayHeight;
	          canvas.style.width = oldWidth;
	          canvas.style.height = oldHeight;
	        }
	      }
	    }
	
	    /**
	     * Resize canvas drawing buffer
	     * NOTE: The drawing buffer will be scaled to the viewport
	     * for best visual results, usually set to either:
	     *  canvas CSS width x CSS height
	     *  canvas CSS width * devicePixelRatio x CSS height * devicePixelRatio
	     * TODO - add separate call for headless contexts
	     * @param {Number} width - new width of canvas in CSS coordinates
	     * @param {Number} height - new height of canvas in CSS coordinates
	     * @return {Renderer} - returns self for chaining
	     */
	
	  }, {
	    key: '_resizeDrawingBuffer',
	    value: function _resizeDrawingBuffer(width, height) {
	      var canvas = this._context.canvas;
	
	      if (canvas) {
	        canvas.width = width;
	        canvas.height = height;
	        this.autoResizeDrawingBuffer = false;
	      }
	      return this;
	    }
	  }]);
	
	  return AnimationFrame;
	}(), (_applyDecoratedDescriptor(_class.prototype, 'context', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'context'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'init', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'init'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'setupFrame', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'setupFrame'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'frame', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'frame'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'start', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'start'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'stop', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'stop'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, '_frame', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, '_frame'), _class.prototype)), _class);
	exports.default = AnimationFrame;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.OrthoCamera = exports.PerspectiveCamera = exports.Camera = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // camera.js
	// Provides a Camera with ModelView and Projection matrices
	
	var _deprecated = __webpack_require__(250);
	
	var _utils = __webpack_require__(204);
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Camera = exports.Camera = function () {
	  function Camera() {
	    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    _classCallCheck(this, Camera);
	
	    opts = (0, _utils.merge)({
	      fov: 45,
	      near: 0.1,
	      far: 500,
	      aspect: 1,
	      position: new _deprecated.Vec3(0, 0, 0),
	      target: new _deprecated.Vec3(0, 0, -1),
	      up: new _deprecated.Vec3(0, 1, 0)
	    }, opts);
	    this.fov = opts.fov;
	    this.near = opts.near;
	    this.far = opts.far;
	    this.aspect = opts.aspect;
	    this.position = opts.position;
	    this.target = opts.target;
	    this.up = opts.up;
	    this.view = new _deprecated.Mat4();
	    this.uniforms = {};
	
	    this.projection = new _deprecated.Mat4();
	    Object.seal(this);
	
	    this.update();
	  }
	
	  _createClass(Camera, [{
	    key: 'project',
	    value: function project() {
	      return null;
	    }
	  }, {
	    key: 'unproject',
	    value: function unproject() {
	      return null;
	    }
	  }, {
	    key: 'getUniforms',
	    value: function getUniforms() {
	      return this.uniforms;
	    }
	  }, {
	    key: '_updateUniforms',
	    value: function _updateUniforms() {
	      var viewProjection = this.view.mulMat4(this.projection);
	      var viewProjectionInverse = viewProjection.invert();
	      this.uniforms = {
	        cameraPosition: this.position,
	        projectionMatrix: this.projection,
	        viewMatrix: this.view,
	        viewProjectionMatrix: viewProjection,
	        viewInverseMatrix: this.view.invert(),
	        viewProjectionInverseMatrix: viewProjectionInverse
	      };
	    }
	  }]);
	
	  return Camera;
	}();
	
	var PerspectiveCamera = exports.PerspectiveCamera = function (_Camera) {
	  _inherits(PerspectiveCamera, _Camera);
	
	  function PerspectiveCamera() {
	    _classCallCheck(this, PerspectiveCamera);
	
	    return _possibleConstructorReturn(this, (PerspectiveCamera.__proto__ || Object.getPrototypeOf(PerspectiveCamera)).apply(this, arguments));
	  }
	
	  _createClass(PerspectiveCamera, [{
	    key: 'update',
	    value: function update() {
	      this.projection = new _deprecated.Mat4().perspective(this.fov, this.aspect, this.near, this.far);
	      this.view.lookAt(this.position, this.target, this.up);
	      this._updateUniforms();
	    }
	  }]);
	
	  return PerspectiveCamera;
	}(Camera);
	
	var OrthoCamera = exports.OrthoCamera = function () {
	  function OrthoCamera() {
	    _classCallCheck(this, OrthoCamera);
	  }
	
	  _createClass(OrthoCamera, [{
	    key: 'update',
	    value: function update() {
	      var ymax = this.near * Math.tan(this.fov * Math.PI / 360);
	      var ymin = -ymax;
	      var xmin = ymin * this.aspect;
	      var xmax = ymax * this.aspect;
	      this.projection = new _deprecated.Mat4().ortho(xmin, xmax, ymin, ymax, this.near, this.far);
	      this.view.lookAt(this.position, this.target, this.up);
	      this._updateUniforms();
	    }
	  }]);
	
	  return OrthoCamera;
	}();
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb3JlL2NhbWVyYS5qcyJdLCJuYW1lcyI6WyJDYW1lcmEiLCJvcHRzIiwiZm92IiwibmVhciIsImZhciIsImFzcGVjdCIsInBvc2l0aW9uIiwidGFyZ2V0IiwidXAiLCJ2aWV3IiwidW5pZm9ybXMiLCJwcm9qZWN0aW9uIiwiT2JqZWN0Iiwic2VhbCIsInVwZGF0ZSIsInZpZXdQcm9qZWN0aW9uIiwibXVsTWF0NCIsInZpZXdQcm9qZWN0aW9uSW52ZXJzZSIsImludmVydCIsImNhbWVyYVBvc2l0aW9uIiwicHJvamVjdGlvbk1hdHJpeCIsInZpZXdNYXRyaXgiLCJ2aWV3UHJvamVjdGlvbk1hdHJpeCIsInZpZXdJbnZlcnNlTWF0cml4Iiwidmlld1Byb2plY3Rpb25JbnZlcnNlTWF0cml4IiwiUGVyc3BlY3RpdmVDYW1lcmEiLCJwZXJzcGVjdGl2ZSIsImxvb2tBdCIsIl91cGRhdGVVbmlmb3JtcyIsIk9ydGhvQ2FtZXJhIiwieW1heCIsIk1hdGgiLCJ0YW4iLCJQSSIsInltaW4iLCJ4bWluIiwieG1heCIsIm9ydGhvIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O3FqQkFBQTtBQUNBOztBQUVBOztBQUNBOzs7Ozs7OztJQUVhQSxNLFdBQUFBLE07QUFFWCxvQkFBdUI7QUFBQSxRQUFYQyxJQUFXLHVFQUFKLEVBQUk7O0FBQUE7O0FBQ3JCQSxXQUFPLGtCQUFNO0FBQ1hDLFdBQUssRUFETTtBQUVYQyxZQUFNLEdBRks7QUFHWEMsV0FBSyxHQUhNO0FBSVhDLGNBQVEsQ0FKRztBQUtYQyxnQkFBVSxxQkFBUyxDQUFULEVBQVksQ0FBWixFQUFlLENBQWYsQ0FMQztBQU1YQyxjQUFRLHFCQUFTLENBQVQsRUFBWSxDQUFaLEVBQWUsQ0FBQyxDQUFoQixDQU5HO0FBT1hDLFVBQUkscUJBQVMsQ0FBVCxFQUFZLENBQVosRUFBZSxDQUFmO0FBUE8sS0FBTixFQVFKUCxJQVJJLENBQVA7QUFTQSxTQUFLQyxHQUFMLEdBQVdELEtBQUtDLEdBQWhCO0FBQ0EsU0FBS0MsSUFBTCxHQUFZRixLQUFLRSxJQUFqQjtBQUNBLFNBQUtDLEdBQUwsR0FBV0gsS0FBS0csR0FBaEI7QUFDQSxTQUFLQyxNQUFMLEdBQWNKLEtBQUtJLE1BQW5CO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQkwsS0FBS0ssUUFBckI7QUFDQSxTQUFLQyxNQUFMLEdBQWNOLEtBQUtNLE1BQW5CO0FBQ0EsU0FBS0MsRUFBTCxHQUFVUCxLQUFLTyxFQUFmO0FBQ0EsU0FBS0MsSUFBTCxHQUFZLHNCQUFaO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQixFQUFoQjs7QUFFQSxTQUFLQyxVQUFMLEdBQWtCLHNCQUFsQjtBQUNBQyxXQUFPQyxJQUFQLENBQVksSUFBWjs7QUFFQSxTQUFLQyxNQUFMO0FBQ0Q7Ozs7OEJBRVM7QUFDUixhQUFPLElBQVA7QUFDRDs7O2dDQUVXO0FBQ1YsYUFBTyxJQUFQO0FBQ0Q7OztrQ0FFYTtBQUNaLGFBQU8sS0FBS0osUUFBWjtBQUNEOzs7c0NBRWlCO0FBQ2hCLFVBQU1LLGlCQUFpQixLQUFLTixJQUFMLENBQVVPLE9BQVYsQ0FBa0IsS0FBS0wsVUFBdkIsQ0FBdkI7QUFDQSxVQUFNTSx3QkFBd0JGLGVBQWVHLE1BQWYsRUFBOUI7QUFDQSxXQUFLUixRQUFMLEdBQWdCO0FBQ2RTLHdCQUFnQixLQUFLYixRQURQO0FBRWRjLDBCQUFrQixLQUFLVCxVQUZUO0FBR2RVLG9CQUFZLEtBQUtaLElBSEg7QUFJZGEsOEJBQXNCUCxjQUpSO0FBS2RRLDJCQUFtQixLQUFLZCxJQUFMLENBQVVTLE1BQVYsRUFMTDtBQU1kTSxxQ0FBNkJQO0FBTmYsT0FBaEI7QUFRRDs7Ozs7O0lBSVVRLGlCLFdBQUFBLGlCOzs7Ozs7Ozs7Ozs2QkFFRjtBQUNQLFdBQUtkLFVBQUwsR0FDRSx1QkFBV2UsV0FBWCxDQUF1QixLQUFLeEIsR0FBNUIsRUFBaUMsS0FBS0csTUFBdEMsRUFBOEMsS0FBS0YsSUFBbkQsRUFBeUQsS0FBS0MsR0FBOUQsQ0FERjtBQUVBLFdBQUtLLElBQUwsQ0FBVWtCLE1BQVYsQ0FBaUIsS0FBS3JCLFFBQXRCLEVBQWdDLEtBQUtDLE1BQXJDLEVBQTZDLEtBQUtDLEVBQWxEO0FBQ0EsV0FBS29CLGVBQUw7QUFDRDs7OztFQVBvQzVCLE07O0lBVzFCNkIsVyxXQUFBQSxXOzs7Ozs7OzZCQUVGO0FBQ1AsVUFBTUMsT0FBTyxLQUFLM0IsSUFBTCxHQUFZNEIsS0FBS0MsR0FBTCxDQUFTLEtBQUs5QixHQUFMLEdBQVc2QixLQUFLRSxFQUFoQixHQUFxQixHQUE5QixDQUF6QjtBQUNBLFVBQU1DLE9BQU8sQ0FBQ0osSUFBZDtBQUNBLFVBQU1LLE9BQU9ELE9BQU8sS0FBSzdCLE1BQXpCO0FBQ0EsVUFBTStCLE9BQU9OLE9BQU8sS0FBS3pCLE1BQXpCO0FBQ0EsV0FBS00sVUFBTCxHQUNFLHVCQUFXMEIsS0FBWCxDQUFpQkYsSUFBakIsRUFBdUJDLElBQXZCLEVBQTZCRixJQUE3QixFQUFtQ0osSUFBbkMsRUFBeUMsS0FBSzNCLElBQTlDLEVBQW9ELEtBQUtDLEdBQXpELENBREY7QUFFQSxXQUFLSyxJQUFMLENBQVVrQixNQUFWLENBQWlCLEtBQUtyQixRQUF0QixFQUFnQyxLQUFLQyxNQUFyQyxFQUE2QyxLQUFLQyxFQUFsRDtBQUNBLFdBQUtvQixlQUFMO0FBQ0QiLCJmaWxlIjoiY2FtZXJhLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gY2FtZXJhLmpzXG4vLyBQcm92aWRlcyBhIENhbWVyYSB3aXRoIE1vZGVsVmlldyBhbmQgUHJvamVjdGlvbiBtYXRyaWNlc1xuXG5pbXBvcnQge1ZlYzMsIE1hdDR9IGZyb20gJy4uL2RlcHJlY2F0ZWQnO1xuaW1wb3J0IHttZXJnZX0gZnJvbSAnLi4vdXRpbHMnO1xuXG5leHBvcnQgY2xhc3MgQ2FtZXJhIHtcblxuICBjb25zdHJ1Y3RvcihvcHRzID0ge30pIHtcbiAgICBvcHRzID0gbWVyZ2Uoe1xuICAgICAgZm92OiA0NSxcbiAgICAgIG5lYXI6IDAuMSxcbiAgICAgIGZhcjogNTAwLFxuICAgICAgYXNwZWN0OiAxLFxuICAgICAgcG9zaXRpb246IG5ldyBWZWMzKDAsIDAsIDApLFxuICAgICAgdGFyZ2V0OiBuZXcgVmVjMygwLCAwLCAtMSksXG4gICAgICB1cDogbmV3IFZlYzMoMCwgMSwgMClcbiAgICB9LCBvcHRzKTtcbiAgICB0aGlzLmZvdiA9IG9wdHMuZm92O1xuICAgIHRoaXMubmVhciA9IG9wdHMubmVhcjtcbiAgICB0aGlzLmZhciA9IG9wdHMuZmFyO1xuICAgIHRoaXMuYXNwZWN0ID0gb3B0cy5hc3BlY3Q7XG4gICAgdGhpcy5wb3NpdGlvbiA9IG9wdHMucG9zaXRpb247XG4gICAgdGhpcy50YXJnZXQgPSBvcHRzLnRhcmdldDtcbiAgICB0aGlzLnVwID0gb3B0cy51cDtcbiAgICB0aGlzLnZpZXcgPSBuZXcgTWF0NCgpO1xuICAgIHRoaXMudW5pZm9ybXMgPSB7fTtcblxuICAgIHRoaXMucHJvamVjdGlvbiA9IG5ldyBNYXQ0KCk7XG4gICAgT2JqZWN0LnNlYWwodGhpcyk7XG5cbiAgICB0aGlzLnVwZGF0ZSgpO1xuICB9XG5cbiAgcHJvamVjdCgpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHVucHJvamVjdCgpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGdldFVuaWZvcm1zKCkge1xuICAgIHJldHVybiB0aGlzLnVuaWZvcm1zO1xuICB9XG5cbiAgX3VwZGF0ZVVuaWZvcm1zKCkge1xuICAgIGNvbnN0IHZpZXdQcm9qZWN0aW9uID0gdGhpcy52aWV3Lm11bE1hdDQodGhpcy5wcm9qZWN0aW9uKTtcbiAgICBjb25zdCB2aWV3UHJvamVjdGlvbkludmVyc2UgPSB2aWV3UHJvamVjdGlvbi5pbnZlcnQoKTtcbiAgICB0aGlzLnVuaWZvcm1zID0ge1xuICAgICAgY2FtZXJhUG9zaXRpb246IHRoaXMucG9zaXRpb24sXG4gICAgICBwcm9qZWN0aW9uTWF0cml4OiB0aGlzLnByb2plY3Rpb24sXG4gICAgICB2aWV3TWF0cml4OiB0aGlzLnZpZXcsXG4gICAgICB2aWV3UHJvamVjdGlvbk1hdHJpeDogdmlld1Byb2plY3Rpb24sXG4gICAgICB2aWV3SW52ZXJzZU1hdHJpeDogdGhpcy52aWV3LmludmVydCgpLFxuICAgICAgdmlld1Byb2plY3Rpb25JbnZlcnNlTWF0cml4OiB2aWV3UHJvamVjdGlvbkludmVyc2VcbiAgICB9O1xuICB9XG5cbn1cblxuZXhwb3J0IGNsYXNzIFBlcnNwZWN0aXZlQ2FtZXJhIGV4dGVuZHMgQ2FtZXJhIHtcblxuICB1cGRhdGUoKSB7XG4gICAgdGhpcy5wcm9qZWN0aW9uID1cbiAgICAgIG5ldyBNYXQ0KCkucGVyc3BlY3RpdmUodGhpcy5mb3YsIHRoaXMuYXNwZWN0LCB0aGlzLm5lYXIsIHRoaXMuZmFyKTtcbiAgICB0aGlzLnZpZXcubG9va0F0KHRoaXMucG9zaXRpb24sIHRoaXMudGFyZ2V0LCB0aGlzLnVwKTtcbiAgICB0aGlzLl91cGRhdGVVbmlmb3JtcygpO1xuICB9XG5cbn1cblxuZXhwb3J0IGNsYXNzIE9ydGhvQ2FtZXJhIHtcblxuICB1cGRhdGUoKSB7XG4gICAgY29uc3QgeW1heCA9IHRoaXMubmVhciAqIE1hdGgudGFuKHRoaXMuZm92ICogTWF0aC5QSSAvIDM2MCk7XG4gICAgY29uc3QgeW1pbiA9IC15bWF4O1xuICAgIGNvbnN0IHhtaW4gPSB5bWluICogdGhpcy5hc3BlY3Q7XG4gICAgY29uc3QgeG1heCA9IHltYXggKiB0aGlzLmFzcGVjdDtcbiAgICB0aGlzLnByb2plY3Rpb24gPVxuICAgICAgbmV3IE1hdDQoKS5vcnRobyh4bWluLCB4bWF4LCB5bWluLCB5bWF4LCB0aGlzLm5lYXIsIHRoaXMuZmFyKTtcbiAgICB0aGlzLnZpZXcubG9va0F0KHRoaXMucG9zaXRpb24sIHRoaXMudGFyZ2V0LCB0aGlzLnVwKTtcbiAgICB0aGlzLl91cGRhdGVVbmlmb3JtcygpO1xuICB9XG5cbn1cbiJdfQ==

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Keys = exports.EventsProxy = exports.stop = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // event.js
	// Handle keyboard/mouse/touch events in the Canvas
	// TODO - this will not work under node
	
	/* eslint-disable dot-notation, max-statements, no-loop-func */
	/* global window, document */
	
	
	exports.get = get;
	exports.getWheel = getWheel;
	exports.getKey = getKey;
	exports.isRightClick = isRightClick;
	exports.getPos = getPos;
	exports.addEvents = addEvents;
	
	var _utils = __webpack_require__(204);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var KEYS = {
	  enter: 13,
	  up: 38,
	  down: 40,
	  left: 37,
	  right: 39,
	  esc: 27,
	  space: 32,
	  backspace: 8,
	  tab: 9,
	  delete: 46
	};
	
	// returns an O3D object or false otherwise.
	function toO3D(n) {
	  return n !== true ? n : false;
	}
	
	// Returns an element position
	function _getPos(elem) {
	  var bbox = elem.getBoundingClientRect();
	  return {
	    x: bbox.left,
	    y: bbox.top,
	    bbox: bbox
	  };
	}
	
	// event object wrapper
	function get(e, win) {
	  win = win || window;
	  return e || win.event;
	}
	
	function getWheel(e) {
	  return e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;
	}
	
	function getKey(e) {
	  var code = e.which || e.keyCode;
	  var key = keyOf(code);
	  // onkeydown
	  var fKey = code - 111;
	  if (fKey > 0 && fKey < 13) {
	    key = 'f' + fKey;
	  }
	  key = key || String.fromCharCode(code).toLowerCase();
	
	  return {
	    code: code,
	    key: key,
	    shift: e.shiftKey,
	    control: e.ctrlKey,
	    alt: e.altKey,
	    meta: e.metaKey
	  };
	}
	
	function isRightClick(e) {
	  return e.which === 3 || e.button === 2;
	}
	
	function getPos(e, win) {
	  // get mouse position
	  win = win || window;
	  e = e || win.event;
	  var doc = win.document;
	  doc = doc.documentElement || doc.body;
	  // TODO(nico): make touch event handling better
	  if (e.touches && e.touches.length) {
	    var touchesPos = [];
	    var l = e.touches.length;
	    var evt = void 0;
	    for (var i = 0; i < l; ++i) {
	      evt = e.touches[i];
	      touchesPos.push({
	        x: evt.pageX || evt.clientX + doc.scrollLeft,
	        y: evt.pageY || evt.clientY + doc.scrollTop
	      });
	    }
	    return touchesPos;
	  }
	  var page = {
	    x: e.pageX || e.clientX + doc.scrollLeft,
	    y: e.pageY || e.clientY + doc.scrollTop
	  };
	  return [page];
	}
	
	function _stop(e) {
	  if (e.stopPropagation) {
	    e.stopPropagation();
	  }
	  e.cancelBubble = true;
	  if (e.preventDefault) {
	    e.preventDefault();
	  } else {
	    e.returnValue = false;
	  }
	}
	
	exports.stop = _stop;
	
	var EventsProxy = exports.EventsProxy = function () {
	  function EventsProxy(domElem, opt) {
	    _classCallCheck(this, EventsProxy);
	
	    this.scene = opt.scene;
	    this.domElem = domElem;
	    this.pos = _getPos(domElem);
	    this.opt = this.callbacks = opt;
	
	    this.size = {
	      width: domElem.width || domElem.offsetWidth,
	      height: domElem.height || domElem.offsetHeight
	    };
	
	    this.attachEvents();
	  }
	
	  _createClass(EventsProxy, [{
	    key: 'attachEvents',
	    value: function attachEvents() {
	      var _this = this;
	
	      var domElem = this.domElem;
	      var opt = this.opt;
	
	      if (opt.disableContextMenu) {
	        domElem.oncontextmenu = function () {
	          return false;
	        };
	      }
	
	      if (opt.enableMouse) {
	        ['mouseup', 'mousedown', 'mousemove', 'mouseover', 'mouseout'].forEach(function (action) {
	          domElem.addEventListener(action, function (e, win) {
	            _this[action](_this.eventInfo(action, e, win));
	          }, false);
	        });
	
	        // "well, this is embarrassing..."
	        var type = '';
	        if (!document.getBoxObjectFor && window.mozInnerScreenX === null) {
	          type = 'mousewheel';
	        } else {
	          type = 'DOMMouseScroll';
	        }
	        domElem.addEventListener(type, function (e, win) {
	          _this['mousewheel'](_this.eventInfo('mousewheel', e, win));
	        }, false);
	      }
	
	      if (opt.enableTouch) {
	        ['touchstart', 'touchmove', 'touchend'].forEach(function (action) {
	          domElem.addEventListener(action, function (e, win) {
	            _this[action](_this.eventInfo(action, e, win));
	          }, false);
	        });
	      }
	
	      if (opt.enableKeyboard) {
	        ['keydown', 'keyup'].forEach(function (action) {
	          document.addEventListener(action, function (e, win) {
	            _this[action](_this.eventInfo(action, e, win));
	          }, false);
	        });
	      }
	    }
	  }, {
	    key: 'eventInfo',
	    value: function eventInfo(type, e, win) {
	      var domElem = this.domElem;
	      var scene = this.scene;
	      var opt = this.opt;
	      var size = this.getSize();
	      var relative = opt.relative;
	      var centerOrigin = opt.centerOrigin;
	      var pos = opt.cachePosition && this.pos || _getPos(domElem);
	      var ge = get(e, win);
	      var epos = getPos(e, win);
	      var origPos = { x: epos[0].x, y: epos[0].y };
	      var evt = {};
	      var x = void 0;
	      var y = void 0;
	
	      // get Position
	      for (var i = 0, l = epos.length; i < l; ++i) {
	        x = epos[i].x;
	        y = epos[i].y;
	        if (relative) {
	          x -= pos.x;y -= pos.y;
	          if (centerOrigin) {
	            x -= size.width / 2;
	            y -= size.height / 2;
	            // y axis now points to the top of the screen
	            y *= -1;
	          }
	        }
	        epos[i].x = x;
	        epos[i].y = y;
	      }
	
	      switch (type) {
	        case 'mousewheel':
	          evt.wheel = getWheel(ge);
	          break;
	        case 'keydown':
	        case 'keyup':
	          Object.assign(evt, getKey(ge));
	          break;
	        case 'mouseup':
	          evt.isRightClick = isRightClick(ge);
	          break;
	        default:
	          break;
	      }
	
	      var cacheTarget = void 0;
	
	      Object.assign(evt, {
	        x: epos[0].x,
	        y: epos[0].y,
	        posArray: epos,
	
	        cache: false,
	        // stop event propagation
	        stop: function stop() {
	          _stop(ge);
	        },
	
	        // get the target element of the event
	        getTarget: function getTarget() {
	          if (cacheTarget) {
	            return cacheTarget;
	          }
	          return cacheTarget = opt.picking && scene.pick(origPos.x - pos.x, origPos.y - pos.y) || true;
	        }
	      });
	      // wrap native event
	      evt.event = ge;
	
	      return evt;
	    }
	  }, {
	    key: 'getSize',
	    value: function getSize() {
	      if (this.cacheSize) {
	        return this.size;
	      }
	      var domElem = this.domElem;
	      return {
	        width: domElem.width || domElem.offsetWidth,
	        height: domElem.height || domElem.offsetHeight
	      };
	    }
	  }, {
	    key: 'mouseup',
	    value: function mouseup(e) {
	      if (!this.moved) {
	        if (e.isRightClick) {
	          this.callbacks.onRightClick(e, this.hovered);
	        } else {
	          this.callbacks.onClick(e, toO3D(this.pressed));
	        }
	      }
	      if (this.pressed) {
	        if (this.moved) {
	          this.callbacks.onDragEnd(e, toO3D(this.pressed));
	        } else {
	          this.callbacks.onDragCancel(e, toO3D(this.pressed));
	        }
	        this.pressed = this.moved = false;
	      }
	    }
	  }, {
	    key: 'mouseout',
	    value: function mouseout(e) {
	      // mouseout canvas
	      var rt = e.relatedTarget;
	      var domElem = this.domElem;
	      while (rt && rt.parentNode) {
	        if (domElem === rt.parentNode) {
	          return;
	        }
	        rt = rt.parentNode;
	      }
	      if (this.hovered) {
	        this.callbacks.onMouseLeave(e, this.hovered);
	        this.hovered = false;
	      }
	      if (this.pressed && this.moved) {
	        this.callbacks.onDragEnd(e);
	        this.pressed = this.moved = false;
	      }
	    }
	  }, {
	    key: 'mouseover',
	    value: function mouseover(e) {}
	  }, {
	    key: 'mousemove',
	    value: function mousemove(e) {
	      if (this.pressed) {
	        this.moved = true;
	        this.callbacks.onDragMove(e, toO3D(this.pressed));
	        return;
	      }
	      if (this.hovered) {
	        var target = toO3D(e.getTarget());
	        if (!target || target.hash !== this.hash) {
	          this.callbacks.onMouseLeave(e, this.hovered);
	          this.hovered = target;
	          this.hash = target;
	          if (target) {
	            this.hash = target.hash;
	            this.callbacks.onMouseEnter(e, this.hovered);
	          }
	        } else {
	          this.callbacks.onMouseMove(e, this.hovered);
	        }
	      } else {
	        this.hovered = toO3D(e.getTarget());
	        this.hash = this.hovered;
	        if (this.hovered) {
	          this.hash = this.hovered.hash;
	          this.callbacks.onMouseEnter(e, this.hovered);
	        }
	      }
	      if (!this.opt.picking) {
	        this.callbacks.onMouseMove(e);
	      }
	    }
	  }, {
	    key: 'mousewheel',
	    value: function mousewheel(e) {
	      this.callbacks.onMouseWheel(e);
	    }
	  }, {
	    key: 'mousedown',
	    value: function mousedown(e) {
	      this.pressed = e.getTarget();
	      this.callbacks.onDragStart(e, toO3D(this.pressed));
	    }
	  }, {
	    key: 'touchstart',
	    value: function touchstart(e) {
	      this.touched = e.getTarget();
	      this.touchedLastPosition = { x: e.x, y: e.y };
	      this.callbacks.onTouchStart(e, toO3D(this.touched));
	    }
	  }, {
	    key: 'touchmove',
	    value: function touchmove(e) {
	      if (this.touched) {
	        this.touchMoved = true;
	        this.callbacks.onTouchMove(e, toO3D(this.touched));
	      }
	    }
	  }, {
	    key: 'touchend',
	    value: function touchend(e) {
	      if (this.touched) {
	        if (this.touchMoved) {
	          this.callbacks.onTouchEnd(e, toO3D(this.touched));
	        } else {
	          e.x = isNaN(e.x) ? this.touchedLastPosition.x : e.x;
	          e.y = isNaN(e.y) ? this.touchedLastPosition.y : e.y;
	          this.callbacks.onTap(e, toO3D(this.touched));
	          this.callbacks.onTouchCancel(e, toO3D(this.touched));
	        }
	        this.touched = this.touchMoved = false;
	      }
	    }
	  }, {
	    key: 'keydown',
	    value: function keydown(e) {
	      this.callbacks.onKeyDown(e);
	    }
	  }, {
	    key: 'keyup',
	    value: function keyup(e) {
	      this.callbacks.onKeyUp(e);
	    }
	  }]);
	
	  return EventsProxy;
	}();
	
	Object.assign(EventsProxy.prototype, {
	  hovered: false,
	  pressed: false,
	  touched: false,
	  touchedLastPosition: { x: 0, y: 0 },
	  touchMoved: false,
	  moved: false
	});
	
	function addEvents(domElement) {
	  var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	  opt = _extends({
	    cachePosition: true,
	    cacheSize: true,
	    relative: true,
	    centerOrigin: true,
	    disableContextMenu: true,
	    bind: false,
	    picking: false,
	
	    enableTouch: true,
	    enableMouse: true,
	    enableKeyboard: true,
	
	    onClick: _utils.noop,
	    onRightClick: _utils.noop,
	    onDragStart: _utils.noop,
	    onDragMove: _utils.noop,
	    onDragEnd: _utils.noop,
	    onDragCancel: _utils.noop,
	    onTouchStart: _utils.noop,
	    onTouchMove: _utils.noop,
	    onTouchEnd: _utils.noop,
	    onTouchCancel: _utils.noop,
	    onTap: _utils.noop,
	    onMouseMove: _utils.noop,
	    onMouseEnter: _utils.noop,
	    onMouseLeave: _utils.noop,
	    onMouseWheel: _utils.noop,
	    onKeyDown: _utils.noop,
	    onKeyUp: _utils.noop
	  }, opt);
	
	  var bind = opt.bind;
	  if (bind) {
	    for (var name in opt) {
	      if (name.match(/^on[a-zA-Z0-9]+$/)) {
	        (function (fname, fn) {
	          opt[fname] = function f() {
	            fn.apply(bind, Array.prototype.slice.call(arguments));
	          };
	        })(name, opt[name]);
	      }
	    }
	  }
	
	  return new EventsProxy(domElement, opt);
	}
	
	var Keys = exports.Keys = KEYS;
	
	function keyOf(code) {
	  var keyMap = Keys;
	  for (var name in keyMap) {
	    if (keyMap[name] === code) {
	      return name;
	    }
	  }
	  return null;
	}
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _cone = __webpack_require__(265);
	
	Object.defineProperty(exports, 'Cone', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_cone).default;
	  }
	});
	Object.defineProperty(exports, 'ConeGeometry', {
	  enumerable: true,
	  get: function get() {
	    return _cone.ConeGeometry;
	  }
	});
	
	var _cube = __webpack_require__(267);
	
	Object.defineProperty(exports, 'Cube', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_cube).default;
	  }
	});
	Object.defineProperty(exports, 'CubeGeometry', {
	  enumerable: true,
	  get: function get() {
	    return _cube.CubeGeometry;
	  }
	});
	
	var _cylinder = __webpack_require__(268);
	
	Object.defineProperty(exports, 'Cylinder', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_cylinder).default;
	  }
	});
	Object.defineProperty(exports, 'CylinderGeometry', {
	  enumerable: true,
	  get: function get() {
	    return _cylinder.CylinderGeometry;
	  }
	});
	
	var _icoSphere = __webpack_require__(269);
	
	Object.defineProperty(exports, 'IcoSphere', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_icoSphere).default;
	  }
	});
	Object.defineProperty(exports, 'IcoSphereGeometry', {
	  enumerable: true,
	  get: function get() {
	    return _icoSphere.IcoSphereGeometry;
	  }
	});
	
	var _plane = __webpack_require__(270);
	
	Object.defineProperty(exports, 'Plane', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_plane).default;
	  }
	});
	Object.defineProperty(exports, 'PlaneGeometry', {
	  enumerable: true,
	  get: function get() {
	    return _plane.PlaneGeometry;
	  }
	});
	
	var _sphere = __webpack_require__(271);
	
	Object.defineProperty(exports, 'Sphere', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_sphere).default;
	  }
	});
	Object.defineProperty(exports, 'SphereGeometry', {
	  enumerable: true,
	  get: function get() {
	    return _sphere.SphereGeometry;
	  }
	});
	Object.defineProperty(exports, 'TruncatedCone', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_cone).default;
	  }
	});
	Object.defineProperty(exports, 'TruncatedConeGeometry', {
	  enumerable: true,
	  get: function get() {
	    return _cone.TruncatedConeGeometry;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9nZW9tZXRyeS9pbmRleC5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0IiwiQ29uZUdlb21ldHJ5IiwiQ3ViZUdlb21ldHJ5IiwiQ3lsaW5kZXJHZW9tZXRyeSIsIkljb1NwaGVyZUdlb21ldHJ5IiwiUGxhbmVHZW9tZXRyeSIsIlNwaGVyZUdlb21ldHJ5IiwiVHJ1bmNhdGVkQ29uZUdlb21ldHJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozt5Q0FBUUEsTzs7Ozs7O2lCQUFpQkMsWTs7Ozs7Ozs7O3lDQUNqQkQsTzs7Ozs7O2lCQUFpQkUsWTs7Ozs7Ozs7OzZDQUNqQkYsTzs7Ozs7O3FCQUFxQkcsZ0I7Ozs7Ozs7Ozs4Q0FDckJILE87Ozs7OztzQkFBc0JJLGlCOzs7Ozs7Ozs7MENBQ3RCSixPOzs7Ozs7a0JBQWtCSyxhOzs7Ozs7Ozs7MkNBQ2xCTCxPOzs7Ozs7bUJBQW1CTSxjOzs7Ozs7eUNBQ25CTixPOzs7Ozs7aUJBQTBCTyxxQiIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7ZGVmYXVsdCBhcyBDb25lLCBDb25lR2VvbWV0cnl9IGZyb20gJy4vY29uZSc7XG5leHBvcnQge2RlZmF1bHQgYXMgQ3ViZSwgQ3ViZUdlb21ldHJ5fSBmcm9tICcuL2N1YmUnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIEN5bGluZGVyLCBDeWxpbmRlckdlb21ldHJ5fSBmcm9tICcuL2N5bGluZGVyJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBJY29TcGhlcmUsIEljb1NwaGVyZUdlb21ldHJ5fSBmcm9tICcuL2ljby1zcGhlcmUnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIFBsYW5lLCBQbGFuZUdlb21ldHJ5fSBmcm9tICcuL3BsYW5lJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBTcGhlcmUsIFNwaGVyZUdlb21ldHJ5fSBmcm9tICcuL3NwaGVyZSc7XG5leHBvcnQge2RlZmF1bHQgYXMgVHJ1bmNhdGVkQ29uZSwgVHJ1bmNhdGVkQ29uZUdlb21ldHJ5fSBmcm9tICcuL2NvbmUnO1xuIl19

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.ConeGeometry = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _truncatedCone = __webpack_require__(266);
	
	var _model = __webpack_require__(260);
	
	var _model2 = _interopRequireDefault(_model);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ConeGeometry = exports.ConeGeometry = function (_TruncatedConeGeometr) {
	  _inherits(ConeGeometry, _TruncatedConeGeometr);
	
	  function ConeGeometry() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$radius = _ref.radius,
	        radius = _ref$radius === undefined ? 1 : _ref$radius,
	        _ref$cap = _ref.cap,
	        cap = _ref$cap === undefined ? true : _ref$cap,
	        opts = _objectWithoutProperties(_ref, ['radius', 'cap']);
	
	    _classCallCheck(this, ConeGeometry);
	
	    return _possibleConstructorReturn(this, (ConeGeometry.__proto__ || Object.getPrototypeOf(ConeGeometry)).call(this, _extends({}, opts, {
	      topRadius: 0,
	      topCap: Boolean(cap),
	      bottomCap: Boolean(cap),
	      bottomRadius: radius
	    })));
	  }
	
	  return ConeGeometry;
	}(_truncatedCone.TruncatedConeGeometry);
	
	var Cone = function (_Model) {
	  _inherits(Cone, _Model);
	
	  function Cone() {
	    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    _classCallCheck(this, Cone);
	
	    return _possibleConstructorReturn(this, (Cone.__proto__ || Object.getPrototypeOf(Cone)).call(this, _extends({
	      geometry: new ConeGeometry(opts)
	    }, opts)));
	  }
	
	  return Cone;
	}(_model2.default);
	
	exports.default = Cone;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9nZW9tZXRyeS9jb25lLmpzIl0sIm5hbWVzIjpbIkNvbmVHZW9tZXRyeSIsInJhZGl1cyIsImNhcCIsIm9wdHMiLCJ0b3BSYWRpdXMiLCJ0b3BDYXAiLCJCb29sZWFuIiwiYm90dG9tQ2FwIiwiYm90dG9tUmFkaXVzIiwiQ29uZSIsImdlb21ldHJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7SUFFYUEsWSxXQUFBQSxZOzs7QUFDWCwwQkFBb0Q7QUFBQSxtRkFBSixFQUFJO0FBQUEsMkJBQXZDQyxNQUF1QztBQUFBLFFBQXZDQSxNQUF1QywrQkFBOUIsQ0FBOEI7QUFBQSx3QkFBM0JDLEdBQTJCO0FBQUEsUUFBM0JBLEdBQTJCLDRCQUFyQixJQUFxQjtBQUFBLFFBQVpDLElBQVk7O0FBQUE7O0FBQUEsb0lBRTdDQSxJQUY2QztBQUdoREMsaUJBQVcsQ0FIcUM7QUFJaERDLGNBQVFDLFFBQVFKLEdBQVIsQ0FKd0M7QUFLaERLLGlCQUFXRCxRQUFRSixHQUFSLENBTHFDO0FBTWhETSxvQkFBY1A7QUFOa0M7QUFRbkQ7Ozs7O0lBR2tCUSxJOzs7QUFDbkIsa0JBQXVCO0FBQUEsUUFBWE4sSUFBVyx1RUFBSixFQUFJOztBQUFBOztBQUFBO0FBRW5CTyxnQkFBVSxJQUFJVixZQUFKLENBQWlCRyxJQUFqQjtBQUZTLE9BR2hCQSxJQUhnQjtBQUt0Qjs7Ozs7a0JBTmtCTSxJIiwiZmlsZSI6ImNvbmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1RydW5jYXRlZENvbmVHZW9tZXRyeX0gZnJvbSAnLi90cnVuY2F0ZWQtY29uZSc7XG5pbXBvcnQgTW9kZWwgZnJvbSAnLi4vY29yZS9tb2RlbCc7XG5cbmV4cG9ydCBjbGFzcyBDb25lR2VvbWV0cnkgZXh0ZW5kcyBUcnVuY2F0ZWRDb25lR2VvbWV0cnkge1xuICBjb25zdHJ1Y3Rvcih7cmFkaXVzID0gMSwgY2FwID0gdHJ1ZSwgLi4ub3B0c30gPSB7fSkge1xuICAgIHN1cGVyKHtcbiAgICAgIC4uLm9wdHMsXG4gICAgICB0b3BSYWRpdXM6IDAsXG4gICAgICB0b3BDYXA6IEJvb2xlYW4oY2FwKSxcbiAgICAgIGJvdHRvbUNhcDogQm9vbGVhbihjYXApLFxuICAgICAgYm90dG9tUmFkaXVzOiByYWRpdXNcbiAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb25lIGV4dGVuZHMgTW9kZWwge1xuICBjb25zdHJ1Y3RvcihvcHRzID0ge30pIHtcbiAgICBzdXBlcih7XG4gICAgICBnZW9tZXRyeTogbmV3IENvbmVHZW9tZXRyeShvcHRzKSxcbiAgICAgIC4uLm9wdHNcbiAgICB9KTtcbiAgfVxufVxuIl19

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.TruncatedConeGeometry = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _geometry = __webpack_require__(259);
	
	var _geometry2 = _interopRequireDefault(_geometry);
	
	var _model = __webpack_require__(260);
	
	var _model2 = _interopRequireDefault(_model);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TruncatedConeGeometry = exports.TruncatedConeGeometry = function (_Geometry) {
	  _inherits(TruncatedConeGeometry, _Geometry);
	
	  // Primitives inspired by TDL http://code.google.com/p/webglsamples/,
	  // copyright 2011 Google Inc. new BSD License
	  // (http://www.opensource.org/licenses/bsd-license.php).
	  /* eslint-disable max-statements, complexity */
	  function TruncatedConeGeometry() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$bottomRadius = _ref.bottomRadius,
	        bottomRadius = _ref$bottomRadius === undefined ? 0 : _ref$bottomRadius,
	        _ref$topRadius = _ref.topRadius,
	        topRadius = _ref$topRadius === undefined ? 0 : _ref$topRadius,
	        _ref$height = _ref.height,
	        height = _ref$height === undefined ? 1 : _ref$height,
	        _ref$nradial = _ref.nradial,
	        nradial = _ref$nradial === undefined ? 10 : _ref$nradial,
	        _ref$nvertical = _ref.nvertical,
	        nvertical = _ref$nvertical === undefined ? 10 : _ref$nvertical,
	        _ref$topCap = _ref.topCap,
	        topCap = _ref$topCap === undefined ? false : _ref$topCap,
	        _ref$bottomCap = _ref.bottomCap,
	        bottomCap = _ref$bottomCap === undefined ? false : _ref$bottomCap,
	        opts = _objectWithoutProperties(_ref, ['bottomRadius', 'topRadius', 'height', 'nradial', 'nvertical', 'topCap', 'bottomCap']);
	
	    _classCallCheck(this, TruncatedConeGeometry);
	
	    var extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);
	    var numVertices = (nradial + 1) * (nvertical + 1 + extra);
	
	    var slant = Math.atan2(bottomRadius - topRadius, height);
	    var msin = Math.sin;
	    var mcos = Math.cos;
	    var mpi = Math.PI;
	    var cosSlant = mcos(slant);
	    var sinSlant = msin(slant);
	    var start = topCap ? -2 : 0;
	    var end = nvertical + (bottomCap ? 2 : 0);
	    var vertsAroundEdge = nradial + 1;
	
	    var positions = new Float32Array(numVertices * 3);
	    var normals = new Float32Array(numVertices * 3);
	    var texCoords = new Float32Array(numVertices * 2);
	    var indices = new Uint16Array(nradial * (nvertical + extra) * 6);
	
	    var i3 = 0;
	    var i2 = 0;
	    for (var i = start; i <= end; i++) {
	      var v = i / nvertical;
	      var y = height * v;
	      var ringRadius = void 0;
	
	      if (i < 0) {
	        y = 0;
	        v = 1;
	        ringRadius = bottomRadius;
	      } else if (i > nvertical) {
	        y = height;
	        v = 1;
	        ringRadius = topRadius;
	      } else {
	        ringRadius = bottomRadius + (topRadius - bottomRadius) * (i / nvertical);
	      }
	      if (i === -2 || i === nvertical + 2) {
	        ringRadius = 0;
	        v = 0;
	      }
	      y -= height / 2;
	      for (var j = 0; j < vertsAroundEdge; j++) {
	        var sin = msin(j * mpi * 2 / nradial);
	        var cos = mcos(j * mpi * 2 / nradial);
	
	        positions[i3 + 0] = sin * ringRadius;
	        positions[i3 + 1] = y;
	        positions[i3 + 2] = cos * ringRadius;
	
	        normals[i3 + 0] = i < 0 || i > nvertical ? 0 : sin * cosSlant;
	        normals[i3 + 1] = i < 0 ? -1 : i > nvertical ? 1 : sinSlant;
	        normals[i3 + 2] = i < 0 || i > nvertical ? 0 : cos * cosSlant;
	
	        texCoords[i2 + 0] = j / nradial;
	        texCoords[i2 + 1] = v;
	
	        i2 += 2;
	        i3 += 3;
	      }
	    }
	
	    for (var _i = 0; _i < nvertical + extra; _i++) {
	      for (var _j = 0; _j < nradial; _j++) {
	        var index = (_i * nradial + _j) * 6;
	        indices[index + 0] = vertsAroundEdge * (_i + 0) + 0 + _j;
	        indices[index + 1] = vertsAroundEdge * (_i + 0) + 1 + _j;
	        indices[index + 2] = vertsAroundEdge * (_i + 1) + 1 + _j;
	        indices[index + 3] = vertsAroundEdge * (_i + 0) + 0 + _j;
	        indices[index + 4] = vertsAroundEdge * (_i + 1) + 1 + _j;
	        indices[index + 5] = vertsAroundEdge * (_i + 1) + 0 + _j;
	      }
	    }
	
	    return _possibleConstructorReturn(this, (TruncatedConeGeometry.__proto__ || Object.getPrototypeOf(TruncatedConeGeometry)).call(this, _extends({}, opts, {
	      attributes: {
	        positions: positions,
	        normals: normals,
	        texCoords: texCoords,
	        indices: indices
	      }
	    })));
	  }
	
	  return TruncatedConeGeometry;
	}(_geometry2.default);
	
	var TruncatedCone = function (_Model) {
	  _inherits(TruncatedCone, _Model);
	
	  function TruncatedCone(opts) {
	    _classCallCheck(this, TruncatedCone);
	
	    return _possibleConstructorReturn(this, (TruncatedCone.__proto__ || Object.getPrototypeOf(TruncatedCone)).call(this, _extends({}, opts, {
	      geometry: new TruncatedConeGeometry(opts)
	    })));
	  }
	
	  return TruncatedCone;
	}(_model2.default);
	
	exports.default = TruncatedCone;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.CubeGeometry = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _geometry = __webpack_require__(259);
	
	var _geometry2 = _interopRequireDefault(_geometry);
	
	var _model = __webpack_require__(260);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _utils = __webpack_require__(204);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/* eslint-disable no-multi-spaces, indent */
	var CUBE_INDICES = [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23];
	
	var CUBE_POSITIONS = [-1, -1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, 1, -1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, -1, 1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, 1, -1];
	
	var CUBE_NORMALS = [
	// Front face
	0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,
	
	// Back face
	0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0,
	
	// Top face
	0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,
	
	// Bottom face
	0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0,
	
	// Right face
	1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0,
	
	// Left face
	-1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0];
	
	var CUBE_TEX_COORDS = [
	// Front face
	0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0,
	
	// Back face
	1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0,
	
	// Top face
	0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0,
	
	// Bottom face
	1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,
	
	// Right face
	1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0,
	
	// Left face
	0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0];
	/* eslint-enable no-multi-spaces, indent */
	
	var CubeGeometry = exports.CubeGeometry = function (_Geometry) {
	  _inherits(CubeGeometry, _Geometry);
	
	  function CubeGeometry() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$id = _ref.id,
	        id = _ref$id === undefined ? (0, _utils.uid)('cube-geometry') : _ref$id,
	        opts = _objectWithoutProperties(_ref, ['id']);
	
	    _classCallCheck(this, CubeGeometry);
	
	    return _possibleConstructorReturn(this, (CubeGeometry.__proto__ || Object.getPrototypeOf(CubeGeometry)).call(this, _extends({}, opts, {
	      id: id,
	      attributes: {
	        indices: new Uint16Array(CUBE_INDICES),
	        positions: new Float32Array(CUBE_POSITIONS),
	        normals: new Float32Array(CUBE_NORMALS),
	        texCoords: new Float32Array(CUBE_TEX_COORDS)
	      }
	    })));
	  }
	
	  return CubeGeometry;
	}(_geometry2.default);
	
	var Cube = function (_Model) {
	  _inherits(Cube, _Model);
	
	  function Cube() {
	    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref2$id = _ref2.id,
	        id = _ref2$id === undefined ? (0, _utils.uid)('cube') : _ref2$id,
	        opts = _objectWithoutProperties(_ref2, ['id']);
	
	    _classCallCheck(this, Cube);
	
	    return _possibleConstructorReturn(this, (Cube.__proto__ || Object.getPrototypeOf(Cube)).call(this, _extends({}, opts, {
	      id: id,
	      geometry: new CubeGeometry(opts)
	    })));
	  }
	
	  return Cube;
	}(_model2.default);
	
	exports.default = Cube;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.CylinderGeometry = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _truncatedCone = __webpack_require__(266);
	
	var _model = __webpack_require__(260);
	
	var _model2 = _interopRequireDefault(_model);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var CylinderGeometry = exports.CylinderGeometry = function (_TruncatedConeGeometr) {
	  _inherits(CylinderGeometry, _TruncatedConeGeometr);
	
	  function CylinderGeometry() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$radius = _ref.radius,
	        radius = _ref$radius === undefined ? 1 : _ref$radius,
	        opts = _objectWithoutProperties(_ref, ['radius']);
	
	    _classCallCheck(this, CylinderGeometry);
	
	    return _possibleConstructorReturn(this, (CylinderGeometry.__proto__ || Object.getPrototypeOf(CylinderGeometry)).call(this, _extends({}, opts, {
	      bottomRadius: radius,
	      topRadius: radius
	    })));
	  }
	
	  return CylinderGeometry;
	}(_truncatedCone.TruncatedConeGeometry);
	
	var Cylinder = function (_Model) {
	  _inherits(Cylinder, _Model);
	
	  function Cylinder(opts) {
	    _classCallCheck(this, Cylinder);
	
	    return _possibleConstructorReturn(this, (Cylinder.__proto__ || Object.getPrototypeOf(Cylinder)).call(this, _extends({}, opts, {
	      geometry: new CylinderGeometry(opts)
	    })));
	  }
	
	  return Cylinder;
	}(_model2.default);
	
	exports.default = Cylinder;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9nZW9tZXRyeS9jeWxpbmRlci5qcyJdLCJuYW1lcyI6WyJDeWxpbmRlckdlb21ldHJ5IiwicmFkaXVzIiwib3B0cyIsImJvdHRvbVJhZGl1cyIsInRvcFJhZGl1cyIsIkN5bGluZGVyIiwiZ2VvbWV0cnkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7OztJQUVhQSxnQixXQUFBQSxnQjs7O0FBQ1gsOEJBQXdDO0FBQUEsbUZBQUosRUFBSTtBQUFBLDJCQUEzQkMsTUFBMkI7QUFBQSxRQUEzQkEsTUFBMkIsK0JBQWxCLENBQWtCO0FBQUEsUUFBWkMsSUFBWTs7QUFBQTs7QUFBQSw0SUFFakNBLElBRmlDO0FBR3BDQyxvQkFBY0YsTUFIc0I7QUFJcENHLGlCQUFXSDtBQUp5QjtBQU12Qzs7Ozs7SUFHa0JJLFE7OztBQUNuQixvQkFBWUgsSUFBWixFQUFrQjtBQUFBOztBQUFBLDRIQUVYQSxJQUZXO0FBR2RJLGdCQUFVLElBQUlOLGdCQUFKLENBQXFCRSxJQUFyQjtBQUhJO0FBS2pCOzs7OztrQkFOa0JHLFEiLCJmaWxlIjoiY3lsaW5kZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1RydW5jYXRlZENvbmVHZW9tZXRyeX0gZnJvbSAnLi90cnVuY2F0ZWQtY29uZSc7XG5pbXBvcnQgTW9kZWwgZnJvbSAnLi4vY29yZS9tb2RlbCc7XG5cbmV4cG9ydCBjbGFzcyBDeWxpbmRlckdlb21ldHJ5IGV4dGVuZHMgVHJ1bmNhdGVkQ29uZUdlb21ldHJ5IHtcbiAgY29uc3RydWN0b3Ioe3JhZGl1cyA9IDEsIC4uLm9wdHN9ID0ge30pIHtcbiAgICBzdXBlcih7XG4gICAgICAuLi5vcHRzLFxuICAgICAgYm90dG9tUmFkaXVzOiByYWRpdXMsXG4gICAgICB0b3BSYWRpdXM6IHJhZGl1c1xuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEN5bGluZGVyIGV4dGVuZHMgTW9kZWwge1xuICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgc3VwZXIoe1xuICAgICAgLi4ub3B0cyxcbiAgICAgIGdlb21ldHJ5OiBuZXcgQ3lsaW5kZXJHZW9tZXRyeShvcHRzKVxuICAgIH0pO1xuICB9XG59XG4iXX0=

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.IcoSphereGeometry = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _math = __webpack_require__(227);
	
	var _geometry = __webpack_require__(259);
	
	var _geometry2 = _interopRequireDefault(_geometry);
	
	var _model = __webpack_require__(260);
	
	var _model2 = _interopRequireDefault(_model);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	/* eslint-disable comma-spacing, max-statements, complexity */
	
	function noop() {}
	
	var ICO_POSITIONS = [-1, 0, 0, 0, 1, 0, 0, 0, -1, 0, 0, 1, 0, -1, 0, 1, 0, 0];
	var ICO_INDICES = [3, 4, 5, 3, 5, 1, 3, 1, 0, 3, 0, 4, 4, 0, 2, 4, 2, 5, 2, 0, 1, 5, 2, 1];
	
	var IcoSphereGeometry = exports.IcoSphereGeometry = function (_Geometry) {
	  _inherits(IcoSphereGeometry, _Geometry);
	
	  function IcoSphereGeometry() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$iterations = _ref.iterations,
	        iterations = _ref$iterations === undefined ? 0 : _ref$iterations,
	        _ref$onAddVertex = _ref.onAddVertex,
	        onAddVertex = _ref$onAddVertex === undefined ? noop : _ref$onAddVertex,
	        opts = _objectWithoutProperties(_ref, ['iterations', 'onAddVertex']);
	
	    _classCallCheck(this, IcoSphereGeometry);
	
	    var PI = Math.PI;
	    var PI2 = PI * 2;
	
	    var positions = [].concat(ICO_POSITIONS);
	    var indices = [].concat(ICO_INDICES);
	
	    positions.push();
	    indices.push();
	
	    var getMiddlePoint = function () {
	      var pointMemo = {};
	
	      return function (i1, i2) {
	        i1 *= 3;
	        i2 *= 3;
	        var mini = i1 < i2 ? i1 : i2;
	        var maxi = i1 > i2 ? i1 : i2;
	        var key = mini + '|' + maxi;
	
	        if (key in pointMemo) {
	          return pointMemo[key];
	        }
	
	        var x1 = positions[i1];
	        var y1 = positions[i1 + 1];
	        var z1 = positions[i1 + 2];
	        var x2 = positions[i2];
	        var y2 = positions[i2 + 1];
	        var z2 = positions[i2 + 2];
	        var xm = (x1 + x2) / 2;
	        var ym = (y1 + y2) / 2;
	        var zm = (z1 + z2) / 2;
	        var len = Math.sqrt(xm * xm + ym * ym + zm * zm);
	
	        xm /= len;
	        ym /= len;
	        zm /= len;
	
	        positions.push(xm, ym, zm);
	
	        return pointMemo[key] = positions.length / 3 - 1;
	      };
	    }();
	
	    for (var i = 0; i < iterations; i++) {
	      var indices2 = [];
	      for (var j = 0; j < indices.length; j += 3) {
	        var a = getMiddlePoint(indices[j + 0], indices[j + 1]);
	        var b = getMiddlePoint(indices[j + 1], indices[j + 2]);
	        var c = getMiddlePoint(indices[j + 2], indices[j + 0]);
	
	        indices2.push(c, indices[j + 0], a, a, indices[j + 1], b, b, indices[j + 2], c, a, b, c);
	      }
	      indices = indices2;
	    }
	
	    // Calculate texCoords and normals
	    var normals = new Array(indices.length * 3);
	    var texCoords = new Array(indices.length * 2);
	
	    var l = indices.length;
	    for (var _i = l - 3; _i >= 0; _i -= 3) {
	      var i1 = indices[_i + 0];
	      var i2 = indices[_i + 1];
	      var i3 = indices[_i + 2];
	      var in1 = i1 * 3;
	      var in2 = i2 * 3;
	      var in3 = i3 * 3;
	      var iu1 = i1 * 2;
	      var iu2 = i2 * 2;
	      var iu3 = i3 * 2;
	      var x1 = positions[in1 + 0];
	      var y1 = positions[in1 + 1];
	      var z1 = positions[in1 + 2];
	      var theta1 = Math.acos(z1 / Math.sqrt(x1 * x1 + y1 * y1 + z1 * z1));
	      var phi1 = Math.atan2(y1, x1) + PI;
	      var v1 = theta1 / PI;
	      var u1 = 1 - phi1 / PI2;
	      var x2 = positions[in2 + 0];
	      var y2 = positions[in2 + 1];
	      var z2 = positions[in2 + 2];
	      var theta2 = Math.acos(z2 / Math.sqrt(x2 * x2 + y2 * y2 + z2 * z2));
	      var phi2 = Math.atan2(y2, x2) + PI;
	      var v2 = theta2 / PI;
	      var u2 = 1 - phi2 / PI2;
	      var x3 = positions[in3 + 0];
	      var y3 = positions[in3 + 1];
	      var z3 = positions[in3 + 2];
	      var theta3 = Math.acos(z3 / Math.sqrt(x3 * x3 + y3 * y3 + z3 * z3));
	      var phi3 = Math.atan2(y3, x3) + PI;
	      var v3 = theta3 / PI;
	      var u3 = 1 - phi3 / PI2;
	      var vec1 = [x3 - x2, y3 - y2, z3 - z2];
	      var vec2 = [x1 - x2, y1 - y2, z1 - z2];
	      var normal = _math.Vector3.cross(vec1, vec2).normalize();
	      var newIndex = void 0;
	
	      if ((u1 === 0 || u2 === 0 || u3 === 0) && (u1 === 0 || u1 > 0.5) && (u2 === 0 || u2 > 0.5) && (u3 === 0 || u3 > 0.5)) {
	
	        positions.push(positions[in1 + 0], positions[in1 + 1], positions[in1 + 2]);
	        newIndex = positions.length / 3 - 1;
	        indices.push(newIndex);
	        texCoords[newIndex * 2 + 0] = 1;
	        texCoords[newIndex * 2 + 1] = v1;
	        normals[newIndex * 3 + 0] = normal.x;
	        normals[newIndex * 3 + 1] = normal.y;
	        normals[newIndex * 3 + 2] = normal.z;
	
	        positions.push(positions[in2 + 0], positions[in2 + 1], positions[in2 + 2]);
	        newIndex = positions.length / 3 - 1;
	        indices.push(newIndex);
	        texCoords[newIndex * 2 + 0] = 1;
	        texCoords[newIndex * 2 + 1] = v2;
	        normals[newIndex * 3 + 0] = normal.x;
	        normals[newIndex * 3 + 1] = normal.y;
	        normals[newIndex * 3 + 2] = normal.z;
	
	        positions.push(positions[in3 + 0], positions[in3 + 1], positions[in3 + 2]);
	        newIndex = positions.length / 3 - 1;
	        indices.push(newIndex);
	        texCoords[newIndex * 2 + 0] = 1;
	        texCoords[newIndex * 2 + 1] = v3;
	        normals[newIndex * 3 + 0] = normal.x;
	        normals[newIndex * 3 + 1] = normal.y;
	        normals[newIndex * 3 + 2] = normal.z;
	      }
	
	      normals[in1 + 0] = normals[in2 + 0] = normals[in3 + 0] = normal.x;
	      normals[in1 + 1] = normals[in2 + 1] = normals[in3 + 1] = normal.y;
	      normals[in1 + 2] = normals[in2 + 2] = normals[in3 + 2] = normal.z;
	
	      texCoords[iu1 + 0] = u1;
	      texCoords[iu1 + 1] = v1;
	
	      texCoords[iu2 + 0] = u2;
	      texCoords[iu2 + 1] = v2;
	
	      texCoords[iu3 + 0] = u3;
	      texCoords[iu3 + 1] = v3;
	    }
	
	    return _possibleConstructorReturn(this, (IcoSphereGeometry.__proto__ || Object.getPrototypeOf(IcoSphereGeometry)).call(this, _extends({}, opts, {
	      attributes: {
	        positions: new Float32Array(positions),
	        normals: new Float32Array(normals),
	        texCoords: new Float32Array(texCoords),
	        indices: new Uint16Array(indices)
	      }
	    })));
	  }
	
	  return IcoSphereGeometry;
	}(_geometry2.default);
	
	var IcoSphere = function (_Model) {
	  _inherits(IcoSphere, _Model);
	
	  function IcoSphere() {
	    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    _classCallCheck(this, IcoSphere);
	
	    return _possibleConstructorReturn(this, (IcoSphere.__proto__ || Object.getPrototypeOf(IcoSphere)).call(this, _extends({}, opts, {
	      geometry: new IcoSphereGeometry(opts)
	    })));
	  }
	
	  return IcoSphere;
	}(_model2.default);
	
	exports.default = IcoSphere;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.PlaneGeometry = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _geometry = __webpack_require__(259);
	
	var _geometry2 = _interopRequireDefault(_geometry);
	
	var _model = __webpack_require__(260);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _utils = __webpack_require__(204);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var PlaneGeometry = exports.PlaneGeometry = function (_Geometry) {
	  _inherits(PlaneGeometry, _Geometry);
	
	  // Primitives inspired by TDL http://code.google.com/p/webglsamples/,
	  // copyright 2011 Google Inc. new BSD License
	  // (http://www.opensource.org/licenses/bsd-license.php).
	  /* eslint-disable max-statements, complexity */
	  /* eslint-disable complexity, max-statements */
	  function PlaneGeometry() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$type = _ref.type,
	        type = _ref$type === undefined ? 'x,y' : _ref$type,
	        _ref$offset = _ref.offset,
	        offset = _ref$offset === undefined ? 0 : _ref$offset,
	        _ref$flipCull = _ref.flipCull,
	        flipCull = _ref$flipCull === undefined ? false : _ref$flipCull,
	        _ref$unpack = _ref.unpack,
	        unpack = _ref$unpack === undefined ? false : _ref$unpack,
	        _ref$id = _ref.id,
	        id = _ref$id === undefined ? (0, _utils.uid)('plane-geometry') : _ref$id,
	        opts = _objectWithoutProperties(_ref, ['type', 'offset', 'flipCull', 'unpack', 'id']);
	
	    _classCallCheck(this, PlaneGeometry);
	
	    var coords = type.split(',');
	    // width, height
	    var c1len = opts[coords[0] + 'len'];
	    var c2len = opts[coords[1] + 'len'];
	    // subdivisionsWidth, subdivisionsDepth
	    var subdivisions1 = opts['n' + coords[0]] || 1;
	    var subdivisions2 = opts['n' + coords[1]] || 1;
	    var numVertices = (subdivisions1 + 1) * (subdivisions2 + 1);
	
	    var positions = new Float32Array(numVertices * 3);
	    var normals = new Float32Array(numVertices * 3);
	    var texCoords = new Float32Array(numVertices * 2);
	
	    if (flipCull) {
	      c1len = -c1len;
	    }
	
	    var i2 = 0;
	    var i3 = 0;
	    for (var z = 0; z <= subdivisions2; z++) {
	      for (var x = 0; x <= subdivisions1; x++) {
	        var u = x / subdivisions1;
	        var v = z / subdivisions2;
	        texCoords[i2 + 0] = flipCull ? 1 - u : u;
	        texCoords[i2 + 1] = v;
	
	        switch (type) {
	          case 'x,y':
	            positions[i3 + 0] = c1len * u - c1len * 0.5;
	            positions[i3 + 1] = c2len * v - c2len * 0.5;
	            positions[i3 + 2] = offset;
	
	            normals[i3 + 0] = 0;
	            normals[i3 + 1] = 0;
	            normals[i3 + 2] = flipCull ? 1 : -1;
	            break;
	
	          case 'x,z':
	            positions[i3 + 0] = c1len * u - c1len * 0.5;
	            positions[i3 + 1] = offset;
	            positions[i3 + 2] = c2len * v - c2len * 0.5;
	
	            normals[i3 + 0] = 0;
	            normals[i3 + 1] = flipCull ? 1 : -1;
	            normals[i3 + 2] = 0;
	            break;
	
	          case 'y,z':
	            positions[i3 + 0] = offset;
	            positions[i3 + 1] = c1len * u - c1len * 0.5;
	            positions[i3 + 2] = c2len * v - c2len * 0.5;
	
	            normals[i3 + 0] = flipCull ? 1 : -1;
	            normals[i3 + 1] = 0;
	            normals[i3 + 2] = 0;
	            break;
	
	          default:
	            break;
	        }
	
	        i2 += 2;
	        i3 += 3;
	      }
	    }
	
	    var numVertsAcross = subdivisions1 + 1;
	    var indices = new Uint16Array(subdivisions1 * subdivisions2 * 6);
	
	    for (var _z = 0; _z < subdivisions2; _z++) {
	      for (var _x2 = 0; _x2 < subdivisions1; _x2++) {
	        var index = (_z * subdivisions1 + _x2) * 6;
	        // Make triangle 1 of quad.
	        indices[index + 0] = (_z + 0) * numVertsAcross + _x2;
	        indices[index + 1] = (_z + 1) * numVertsAcross + _x2;
	        indices[index + 2] = (_z + 0) * numVertsAcross + _x2 + 1;
	
	        // Make triangle 2 of quad.
	        indices[index + 3] = (_z + 1) * numVertsAcross + _x2;
	        indices[index + 4] = (_z + 1) * numVertsAcross + _x2 + 1;
	        indices[index + 5] = (_z + 0) * numVertsAcross + _x2 + 1;
	      }
	    }
	
	    // Optionally, unpack indexed geometry
	    if (unpack) {
	      var positions2 = new Float32Array(indices.length * 3);
	      var normals2 = new Float32Array(indices.length * 3);
	      var texCoords2 = new Float32Array(indices.length * 2);
	
	      for (var _x3 = 0; _x3 < indices.length; ++_x3) {
	        var _index = indices[_x3];
	        positions2[_x3 * 3 + 0] = positions[_index * 3 + 0];
	        positions2[_x3 * 3 + 1] = positions[_index * 3 + 1];
	        positions2[_x3 * 3 + 2] = positions[_index * 3 + 2];
	        normals2[_x3 * 3 + 0] = normals[_index * 3 + 0];
	        normals2[_x3 * 3 + 1] = normals[_index * 3 + 1];
	        normals2[_x3 * 3 + 2] = normals[_index * 3 + 2];
	        texCoords2[_x3 * 2 + 0] = texCoords[_index * 2 + 0];
	        texCoords2[_x3 * 2 + 1] = texCoords[_index * 2 + 1];
	      }
	
	      positions = positions2;
	      normals = normals2;
	      texCoords = texCoords2;
	      indices = undefined;
	    }
	
	    return _possibleConstructorReturn(this, (PlaneGeometry.__proto__ || Object.getPrototypeOf(PlaneGeometry)).call(this, _extends({}, opts, {
	      id: id,
	      attributes: _extends({
	        positions: positions,
	        normals: normals,
	        texCoords: texCoords
	      }, indices ? { indices: indices } : {})
	    })));
	  }
	
	  return PlaneGeometry;
	}(_geometry2.default);
	
	var Plane = function (_Model) {
	  _inherits(Plane, _Model);
	
	  function Plane(_ref2) {
	    var _ref2$id = _ref2.id,
	        id = _ref2$id === undefined ? (0, _utils.uid)('plane') : _ref2$id,
	        opts = _objectWithoutProperties(_ref2, ['id']);
	
	    _classCallCheck(this, Plane);
	
	    return _possibleConstructorReturn(this, (Plane.__proto__ || Object.getPrototypeOf(Plane)).call(this, _extends({}, opts, {
	      id: id,
	      geometry: new PlaneGeometry(opts)
	    })));
	  }
	
	  return Plane;
	}(_model2.default);
	
	exports.default = Plane;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.SphereGeometry = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _geometry = __webpack_require__(259);
	
	var _geometry2 = _interopRequireDefault(_geometry);
	
	var _model = __webpack_require__(260);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _utils = __webpack_require__(204);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var SphereGeometry = exports.SphereGeometry = function (_Geometry) {
	  _inherits(SphereGeometry, _Geometry);
	
	  // Primitives inspired by TDL http://code.google.com/p/webglsamples/,
	  // copyright 2011 Google Inc. new BSD License
	  // (http://www.opensource.org/licenses/bsd-license.php).
	  /* eslint-disable max-statements, complexity */
	  function SphereGeometry() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$nlat = _ref.nlat,
	        nlat = _ref$nlat === undefined ? 10 : _ref$nlat,
	        _ref$nlong = _ref.nlong,
	        nlong = _ref$nlong === undefined ? 10 : _ref$nlong,
	        _ref$radius = _ref.radius,
	        radius = _ref$radius === undefined ? 1 : _ref$radius,
	        _ref$id = _ref.id,
	        id = _ref$id === undefined ? (0, _utils.uid)('sphere-geometry') : _ref$id,
	        opts = _objectWithoutProperties(_ref, ['nlat', 'nlong', 'radius', 'id']);
	
	    _classCallCheck(this, SphereGeometry);
	
	    var startLat = 0;
	    var endLat = Math.PI;
	    var latRange = endLat - startLat;
	    var startLong = 0;
	    var endLong = 2 * Math.PI;
	    var longRange = endLong - startLong;
	    var numVertices = (nlat + 1) * (nlong + 1);
	
	    if (typeof radius === 'number') {
	      (function () {
	        var value = radius;
	        radius = function radius(n1, n2, n3, u, v) {
	          return value;
	        };
	      })();
	    }
	
	    var positions = new Float32Array(numVertices * 3);
	    var normals = new Float32Array(numVertices * 3);
	    var texCoords = new Float32Array(numVertices * 2);
	    var indices = new Uint16Array(nlat * nlong * 6);
	
	    // Create positions, normals and texCoords
	    for (var y = 0; y <= nlat; y++) {
	      for (var x = 0; x <= nlong; x++) {
	
	        var u = x / nlong;
	        var v = y / nlat;
	
	        var index = x + y * (nlong + 1);
	        var i2 = index * 2;
	        var i3 = index * 3;
	
	        var theta = longRange * u;
	        var phi = latRange * v;
	        var sinTheta = Math.sin(theta);
	        var cosTheta = Math.cos(theta);
	        var sinPhi = Math.sin(phi);
	        var cosPhi = Math.cos(phi);
	        var ux = cosTheta * sinPhi;
	        var uy = cosPhi;
	        var uz = sinTheta * sinPhi;
	
	        var r = radius(ux, uy, uz, u, v);
	
	        positions[i3 + 0] = r * ux;
	        positions[i3 + 1] = r * uy;
	        positions[i3 + 2] = r * uz;
	
	        normals[i3 + 0] = ux;
	        normals[i3 + 1] = uy;
	        normals[i3 + 2] = uz;
	
	        texCoords[i2 + 0] = u;
	        texCoords[i2 + 1] = v;
	      }
	    }
	
	    // Create indices
	    var numVertsAround = nlat + 1;
	    for (var _x2 = 0; _x2 < nlat; _x2++) {
	      for (var _y = 0; _y < nlong; _y++) {
	        var _index = (_x2 * nlong + _y) * 6;
	
	        indices[_index + 0] = _y * numVertsAround + _x2;
	        indices[_index + 1] = _y * numVertsAround + _x2 + 1;
	        indices[_index + 2] = (_y + 1) * numVertsAround + _x2;
	
	        indices[_index + 3] = (_y + 1) * numVertsAround + _x2;
	        indices[_index + 4] = _y * numVertsAround + _x2 + 1;
	        indices[_index + 5] = (_y + 1) * numVertsAround + _x2 + 1;
	      }
	    }
	
	    return _possibleConstructorReturn(this, (SphereGeometry.__proto__ || Object.getPrototypeOf(SphereGeometry)).call(this, _extends({}, opts, {
	      id: id,
	      attributes: {
	        positions: positions,
	        indices: indices,
	        normals: normals,
	        texCoords: texCoords
	      }
	    })));
	  }
	
	  return SphereGeometry;
	}(_geometry2.default);
	
	var Sphere = function (_Model) {
	  _inherits(Sphere, _Model);
	
	  function Sphere() {
	    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref2$id = _ref2.id,
	        id = _ref2$id === undefined ? (0, _utils.uid)('sphere') : _ref2$id,
	        opts = _objectWithoutProperties(_ref2, ['id']);
	
	    _classCallCheck(this, Sphere);
	
	    return _possibleConstructorReturn(this, (Sphere.__proto__ || Object.getPrototypeOf(Sphere)).call(this, _extends({}, opts, {
	      id: id,
	      geometry: new SphereGeometry(opts)
	    })));
	  }
	
	  return Sphere;
	}(_model2.default);
	
	exports.default = Sphere;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _clipSpaceQuad = __webpack_require__(273);
	
	Object.defineProperty(exports, 'ClipSpaceQuad', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_clipSpaceQuad).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvaW5kZXguanMiXSwibmFtZXMiOlsiZGVmYXVsdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7a0RBQVFBLE8iLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge2RlZmF1bHQgYXMgQ2xpcFNwYWNlUXVhZH0gZnJvbSAnLi9jbGlwLXNwYWNlLXF1YWQnO1xuIl19

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _core = __webpack_require__(258);
	
	var _webgl = __webpack_require__(187);
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // ClipSpaceQuad
	
	
	var CLIPSPACE_QUAD_VERTEX_SHADER = 'attribute vec2 aClipSpacePosition;\nattribute vec2 aTexCoord;\nattribute vec2 aCoordinate;\n\nvarying vec2 position;\nvarying vec2 coordinate;\nvarying vec2 uv;\n\nvoid main(void) {\n  gl_Position = vec4(aClipSpacePosition, 0., 1.);\n  position = aClipSpacePosition;\n  coordinate = aCoordinate;\n  uv = aTexCoord;\n}\n';
	
	/* eslint-disable indent, no-multi-spaces */
	var POSITIONS = [-1, -1, 1, -1, -1, 1, 1, 1
	// -1, -1,
	//  1, -1,
	//  1,  1,
	// -1, -1,
	//  1,  1,
	// -1,  1
	];
	
	var TEX_COORDS = POSITIONS.map(function (coord) {
	  return coord === -1 ? 0 : coord;
	});
	/* eslint-enable indent, no-multi-spaces */
	
	var ClipSpaceQuad = function (_Model) {
	  _inherits(ClipSpaceQuad, _Model);
	
	  function ClipSpaceQuad(_ref) {
	    var gl = _ref.gl,
	        opts = _objectWithoutProperties(_ref, ['gl']);
	
	    _classCallCheck(this, ClipSpaceQuad);
	
	    var _this = _possibleConstructorReturn(this, (ClipSpaceQuad.__proto__ || Object.getPrototypeOf(ClipSpaceQuad)).call(this, _extends({
	      gl: gl
	    }, opts, {
	      vs: CLIPSPACE_QUAD_VERTEX_SHADER,
	      geometry: new _core.Geometry({
	        drawMode: _webgl.GL.TRIANGLE_STRIP,
	        attributes: {
	          aClipSpacePosition: {
	            value: new Float32Array(POSITIONS),
	            size: 2
	          },
	          aTexCoord: {
	            value: new Float32Array(TEX_COORDS),
	            size: 2
	          },
	          aCoordinate: {
	            value: new Float32Array(TEX_COORDS),
	            size: 2
	          }
	        }
	      })
	    })));
	
	    _this.setVertexCount(4);
	    return _this;
	  }
	
	  return ClipSpaceQuad;
	}(_core.Model);
	
	exports.default = ClipSpaceQuad;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvY2xpcC1zcGFjZS1xdWFkLmpzIl0sIm5hbWVzIjpbIkNMSVBTUEFDRV9RVUFEX1ZFUlRFWF9TSEFERVIiLCJQT1NJVElPTlMiLCJURVhfQ09PUkRTIiwibWFwIiwiY29vcmQiLCJDbGlwU3BhY2VRdWFkIiwiZ2wiLCJvcHRzIiwidnMiLCJnZW9tZXRyeSIsImRyYXdNb2RlIiwiVFJJQU5HTEVfU1RSSVAiLCJhdHRyaWJ1dGVzIiwiYUNsaXBTcGFjZVBvc2l0aW9uIiwidmFsdWUiLCJGbG9hdDMyQXJyYXkiLCJzaXplIiwiYVRleENvb3JkIiwiYUNvb3JkaW5hdGUiLCJzZXRWZXJ0ZXhDb3VudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQ0E7O0FBQ0E7Ozs7Ozs7OytlQUZBOzs7QUFJQSxJQUFNQSxnV0FBTjs7QUFpQkE7QUFDQSxJQUFNQyxZQUFZLENBQ2hCLENBQUMsQ0FEZSxFQUNaLENBQUMsQ0FEVyxFQUVmLENBRmUsRUFFWixDQUFDLENBRlcsRUFHaEIsQ0FBQyxDQUhlLEVBR1gsQ0FIVyxFQUlmLENBSmUsRUFJWDtBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVZnQixDQUFsQjs7QUFhQSxJQUFNQyxhQUFhRCxVQUFVRSxHQUFWLENBQWM7QUFBQSxTQUFTQyxVQUFVLENBQUMsQ0FBWCxHQUFlLENBQWYsR0FBbUJBLEtBQTVCO0FBQUEsQ0FBZCxDQUFuQjtBQUNBOztJQUVxQkMsYTs7O0FBQ25CLCtCQUEyQjtBQUFBLFFBQWRDLEVBQWMsUUFBZEEsRUFBYztBQUFBLFFBQVBDLElBQU87O0FBQUE7O0FBQUE7QUFFdkJEO0FBRnVCLE9BR3BCQyxJQUhvQjtBQUl2QkMsVUFBSVIsNEJBSm1CO0FBS3ZCUyxnQkFBVSxtQkFBYTtBQUNyQkMsa0JBQVUsVUFBR0MsY0FEUTtBQUVyQkMsb0JBQVk7QUFDVkMsOEJBQW9CO0FBQ2xCQyxtQkFBTyxJQUFJQyxZQUFKLENBQWlCZCxTQUFqQixDQURXO0FBRWxCZSxrQkFBTTtBQUZZLFdBRFY7QUFLVkMscUJBQVc7QUFDVEgsbUJBQU8sSUFBSUMsWUFBSixDQUFpQmIsVUFBakIsQ0FERTtBQUVUYyxrQkFBTTtBQUZHLFdBTEQ7QUFTVkUsdUJBQWE7QUFDWEosbUJBQU8sSUFBSUMsWUFBSixDQUFpQmIsVUFBakIsQ0FESTtBQUVYYyxrQkFBTTtBQUZLO0FBVEg7QUFGUyxPQUFiO0FBTGE7O0FBdUJ6QixVQUFLRyxjQUFMLENBQW9CLENBQXBCO0FBdkJ5QjtBQXdCMUI7Ozs7O2tCQXpCa0JkLGEiLCJmaWxlIjoiY2xpcC1zcGFjZS1xdWFkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ2xpcFNwYWNlUXVhZFxuaW1wb3J0IHtNb2RlbCwgR2VvbWV0cnl9IGZyb20gJy4uL2NvcmUnO1xuaW1wb3J0IHtHTH0gZnJvbSAnLi4vd2ViZ2wnO1xuXG5jb25zdCBDTElQU1BBQ0VfUVVBRF9WRVJURVhfU0hBREVSID0gYFxcXG5hdHRyaWJ1dGUgdmVjMiBhQ2xpcFNwYWNlUG9zaXRpb247XG5hdHRyaWJ1dGUgdmVjMiBhVGV4Q29vcmQ7XG5hdHRyaWJ1dGUgdmVjMiBhQ29vcmRpbmF0ZTtcblxudmFyeWluZyB2ZWMyIHBvc2l0aW9uO1xudmFyeWluZyB2ZWMyIGNvb3JkaW5hdGU7XG52YXJ5aW5nIHZlYzIgdXY7XG5cbnZvaWQgbWFpbih2b2lkKSB7XG4gIGdsX1Bvc2l0aW9uID0gdmVjNChhQ2xpcFNwYWNlUG9zaXRpb24sIDAuLCAxLik7XG4gIHBvc2l0aW9uID0gYUNsaXBTcGFjZVBvc2l0aW9uO1xuICBjb29yZGluYXRlID0gYUNvb3JkaW5hdGU7XG4gIHV2ID0gYVRleENvb3JkO1xufVxuYDtcblxuLyogZXNsaW50LWRpc2FibGUgaW5kZW50LCBuby1tdWx0aS1zcGFjZXMgKi9cbmNvbnN0IFBPU0lUSU9OUyA9IFtcbiAgLTEsIC0xLFxuICAgMSwgLTEsXG4gIC0xLCAgMSxcbiAgIDEsICAxXG4gIC8vIC0xLCAtMSxcbiAgLy8gIDEsIC0xLFxuICAvLyAgMSwgIDEsXG4gIC8vIC0xLCAtMSxcbiAgLy8gIDEsICAxLFxuICAvLyAtMSwgIDFcbl07XG5cbmNvbnN0IFRFWF9DT09SRFMgPSBQT1NJVElPTlMubWFwKGNvb3JkID0+IGNvb3JkID09PSAtMSA/IDAgOiBjb29yZCk7XG4vKiBlc2xpbnQtZW5hYmxlIGluZGVudCwgbm8tbXVsdGktc3BhY2VzICovXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENsaXBTcGFjZVF1YWQgZXh0ZW5kcyBNb2RlbCB7XG4gIGNvbnN0cnVjdG9yKHtnbCwgLi4ub3B0c30pIHtcbiAgICBzdXBlcih7XG4gICAgICBnbCxcbiAgICAgIC4uLm9wdHMsXG4gICAgICB2czogQ0xJUFNQQUNFX1FVQURfVkVSVEVYX1NIQURFUixcbiAgICAgIGdlb21ldHJ5OiBuZXcgR2VvbWV0cnkoe1xuICAgICAgICBkcmF3TW9kZTogR0wuVFJJQU5HTEVfU1RSSVAsXG4gICAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICBhQ2xpcFNwYWNlUG9zaXRpb246IHtcbiAgICAgICAgICAgIHZhbHVlOiBuZXcgRmxvYXQzMkFycmF5KFBPU0lUSU9OUyksXG4gICAgICAgICAgICBzaXplOiAyXG4gICAgICAgICAgfSxcbiAgICAgICAgICBhVGV4Q29vcmQ6IHtcbiAgICAgICAgICAgIHZhbHVlOiBuZXcgRmxvYXQzMkFycmF5KFRFWF9DT09SRFMpLFxuICAgICAgICAgICAgc2l6ZTogMlxuICAgICAgICAgIH0sXG4gICAgICAgICAgYUNvb3JkaW5hdGU6IHtcbiAgICAgICAgICAgIHZhbHVlOiBuZXcgRmxvYXQzMkFycmF5KFRFWF9DT09SRFMpLFxuICAgICAgICAgICAgc2l6ZTogMlxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9KTtcbiAgICB0aGlzLnNldFZlcnRleENvdW50KDQpO1xuICB9XG59XG4iXX0=

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // Timer based animation
	// TODO clean up linting
	/* eslint-disable */
	/* global setTimeout */
	
	
	var _utils = __webpack_require__(204);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Queue = [];
	
	var Fx = function () {
	  function Fx() {
	    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    _classCallCheck(this, Fx);
	
	    this.opt = (0, _utils.merge)({
	      delay: 0,
	      duration: 1000,
	      transition: function transition(x) {
	        return x;
	      },
	      onCompute: _utils.noop,
	      onComplete: _utils.noop
	    }, options);
	  }
	
	  _createClass(Fx, [{
	    key: 'start',
	    value: function start(options) {
	      this.opt = (0, _utils.merge)(this.opt, options || {});
	      this.time = Date.now();
	      this.animating = true;
	      Queue.push(this);
	    }
	
	    // perform a step in the animation
	
	  }, {
	    key: 'step',
	    value: function step() {
	      // if not animating, then return
	      if (!this.animating) {
	        return;
	      }
	      var currentTime = Date.now(),
	          time = this.time,
	          opt = this.opt,
	          delay = opt.delay,
	          duration = opt.duration,
	          delta = 0;
	      // hold animation for the delay
	      if (currentTime < time + delay) {
	        opt.onCompute.call(this, delta);
	        return;
	      }
	      // if in our time window, then execute animation
	      if (currentTime < time + delay + duration) {
	        delta = opt.transition((currentTime - time - delay) / duration);
	        opt.onCompute.call(this, delta);
	      } else {
	        this.animating = false;
	        opt.onCompute.call(this, 1);
	        opt.onComplete.call(this);
	      }
	    }
	  }], [{
	    key: 'compute',
	    value: function compute(from, to, delta) {
	      return from + (to - from) * delta;
	    }
	  }]);
	
	  return Fx;
	}();
	
	exports.default = Fx;
	
	
	Fx.Queue = Queue;
	
	// Easing equations
	Fx.Transition = {
	  linear: function linear(p) {
	    return p;
	  }
	};
	
	var Trans = Fx.Transition;
	
	Fx.prototype.time = null;
	
	function makeTrans(transition, params) {
	  params = (0, _utils.splat)(params);
	  return Object.assign(transition, {
	    easeIn: function easeIn(pos) {
	      return transition(pos, params);
	    },
	    easeOut: function easeOut(pos) {
	      return 1 - transition(1 - pos, params);
	    },
	    easeInOut: function easeInOut(pos) {
	      return pos <= 0.5 ? transition(2 * pos, params) / 2 : (2 - transition(2 * (1 - pos), params)) / 2;
	    }
	  });
	}
	
	var transitions = {
	  Pow: function Pow(p, x) {
	    return Math.pow(p, x[0] || 6);
	  },
	  Expo: function Expo(p) {
	    return Math.pow(2, 8 * (p - 1));
	  },
	  Circ: function Circ(p) {
	    return 1 - Math.sin(Math.acos(p));
	  },
	  Sine: function Sine(p) {
	    return 1 - Math.sin((1 - p) * Math.PI / 2);
	  },
	  Back: function Back(p, x) {
	    x = x[0] || 1.618;
	    return Math.pow(p, 2) * ((x + 1) * p - x);
	  },
	  Bounce: function Bounce(p) {
	    var value;
	    for (var a = 0, b = 1; 1; a += b, b /= 2) {
	      if (p >= (7 - 4 * a) / 11) {
	        value = b * b - Math.pow((11 - 6 * a - 11 * p) / 4, 2);
	        break;
	      }
	    }
	    return value;
	  },
	  Elastic: function Elastic(p, x) {
	    return Math.pow(2, 10 * --p) * Math.cos(20 * p * Math.PI * (x[0] || 1) / 3);
	  }
	};
	
	for (var t in transitions) {
	  Trans[t] = makeTrans(transitions[t]);
	}
	
	['Quad', 'Cubic', 'Quart', 'Quint'].forEach(function (elem, i) {
	  Trans[elem] = makeTrans(function (p) {
	    return Math.pow(p, [i + 2]);
	  });
	});
	
	// animationTime - function branching
	
	// rye: TODO- refactor global definition when we define the two
	//           (browserify/<script>) build paths.
	var global;
	try {
	  global = window;
	} catch (e) {
	  global = null;
	}
	
	var checkFxQueue = function checkFxQueue() {
	  var oldQueue = Queue;
	  Queue = [];
	  if (oldQueue.length) {
	    for (var i = 0, l = oldQueue.length, fx; i < l; i++) {
	      fx = oldQueue[i];
	      fx.step();
	      if (fx.animating) {
	        Queue.push(fx);
	      }
	    }
	    Fx.Queue = Queue;
	  }
	};
	
	if (global) {
	  var found = false;
	  ['webkitAnimationTime', 'mozAnimationTime', 'animationTime', 'webkitAnimationStartTime', 'mozAnimationStartTime', 'animationStartTime'].forEach(function (impl) {
	    if (impl in global) {
	      Fx.animationTime = function () {
	        return global[impl];
	      };
	      found = true;
	    }
	  });
	  if (!found) {
	    Fx.animationTime = Date.now;
	  }
	  // requestAnimationFrame - function branching
	  found = false;
	  ['webkitRequestAnimationFrame', 'mozRequestAnimationFrame', 'requestAnimationFrame'].forEach(function (impl) {
	    if (impl in global) {
	      Fx.requestAnimationFrame = function (callback) {
	        global[impl](function () {
	          checkFxQueue();
	          callback();
	        });
	      };
	      found = true;
	    }
	  });
	  if (!found) {
	    Fx.requestAnimationFrame = function (callback) {
	      setTimeout(function () {
	        checkFxQueue();
	        callback();
	      }, 1000 / 60);
	    };
	  }
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hZGRvbnMvZnguanMiXSwibmFtZXMiOlsiUXVldWUiLCJGeCIsIm9wdGlvbnMiLCJvcHQiLCJkZWxheSIsImR1cmF0aW9uIiwidHJhbnNpdGlvbiIsIngiLCJvbkNvbXB1dGUiLCJvbkNvbXBsZXRlIiwidGltZSIsIkRhdGUiLCJub3ciLCJhbmltYXRpbmciLCJwdXNoIiwiY3VycmVudFRpbWUiLCJkZWx0YSIsImNhbGwiLCJmcm9tIiwidG8iLCJUcmFuc2l0aW9uIiwibGluZWFyIiwicCIsIlRyYW5zIiwicHJvdG90eXBlIiwibWFrZVRyYW5zIiwicGFyYW1zIiwiT2JqZWN0IiwiYXNzaWduIiwiZWFzZUluIiwicG9zIiwiZWFzZU91dCIsImVhc2VJbk91dCIsInRyYW5zaXRpb25zIiwiUG93IiwiTWF0aCIsInBvdyIsIkV4cG8iLCJDaXJjIiwic2luIiwiYWNvcyIsIlNpbmUiLCJQSSIsIkJhY2siLCJCb3VuY2UiLCJ2YWx1ZSIsImEiLCJiIiwiRWxhc3RpYyIsImNvcyIsInQiLCJmb3JFYWNoIiwiZWxlbSIsImkiLCJnbG9iYWwiLCJ3aW5kb3ciLCJlIiwiY2hlY2tGeFF1ZXVlIiwib2xkUXVldWUiLCJsZW5ndGgiLCJsIiwiZngiLCJzdGVwIiwiZm91bmQiLCJpbXBsIiwiYW5pbWF0aW9uVGltZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbGxiYWNrIiwic2V0VGltZW91dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztxakJBQUE7QUFDQTtBQUNBO0FBQ0E7OztBQUNBOzs7O0FBRUEsSUFBSUEsUUFBUSxFQUFaOztJQUVxQkMsRTtBQUNuQixnQkFBMEI7QUFBQSxRQUFkQyxPQUFjLHVFQUFKLEVBQUk7O0FBQUE7O0FBQ3hCLFNBQUtDLEdBQUwsR0FBVyxrQkFBTTtBQUNmQyxhQUFPLENBRFE7QUFFZkMsZ0JBQVUsSUFGSztBQUdmQyxrQkFBWTtBQUFBLGVBQUtDLENBQUw7QUFBQSxPQUhHO0FBSWZDLDRCQUplO0FBS2ZDO0FBTGUsS0FBTixFQU1SUCxPQU5RLENBQVg7QUFPRDs7OzswQkFFS0EsTyxFQUFTO0FBQ2IsV0FBS0MsR0FBTCxHQUFXLGtCQUFNLEtBQUtBLEdBQVgsRUFBZ0JELFdBQVcsRUFBM0IsQ0FBWDtBQUNBLFdBQUtRLElBQUwsR0FBWUMsS0FBS0MsR0FBTCxFQUFaO0FBQ0EsV0FBS0MsU0FBTCxHQUFpQixJQUFqQjtBQUNBYixZQUFNYyxJQUFOLENBQVcsSUFBWDtBQUNEOztBQUVEOzs7OzJCQUNPO0FBQ0w7QUFDQSxVQUFJLENBQUMsS0FBS0QsU0FBVixFQUFxQjtBQUNuQjtBQUNEO0FBQ0QsVUFBSUUsY0FBY0osS0FBS0MsR0FBTCxFQUFsQjtBQUFBLFVBQ0VGLE9BQU8sS0FBS0EsSUFEZDtBQUFBLFVBRUVQLE1BQU0sS0FBS0EsR0FGYjtBQUFBLFVBR0VDLFFBQVFELElBQUlDLEtBSGQ7QUFBQSxVQUlFQyxXQUFXRixJQUFJRSxRQUpqQjtBQUFBLFVBS0VXLFFBQVEsQ0FMVjtBQU1BO0FBQ0EsVUFBSUQsY0FBY0wsT0FBT04sS0FBekIsRUFBZ0M7QUFDOUJELFlBQUlLLFNBQUosQ0FBY1MsSUFBZCxDQUFtQixJQUFuQixFQUF5QkQsS0FBekI7QUFDQTtBQUNEO0FBQ0Q7QUFDQSxVQUFJRCxjQUFjTCxPQUFPTixLQUFQLEdBQWVDLFFBQWpDLEVBQTJDO0FBQ3pDVyxnQkFBUWIsSUFBSUcsVUFBSixDQUFlLENBQUNTLGNBQWNMLElBQWQsR0FBcUJOLEtBQXRCLElBQStCQyxRQUE5QyxDQUFSO0FBQ0FGLFlBQUlLLFNBQUosQ0FBY1MsSUFBZCxDQUFtQixJQUFuQixFQUF5QkQsS0FBekI7QUFDRCxPQUhELE1BR087QUFDTCxhQUFLSCxTQUFMLEdBQWlCLEtBQWpCO0FBQ0FWLFlBQUlLLFNBQUosQ0FBY1MsSUFBZCxDQUFtQixJQUFuQixFQUF5QixDQUF6QjtBQUNBZCxZQUFJTSxVQUFKLENBQWVRLElBQWYsQ0FBb0IsSUFBcEI7QUFDRDtBQUNGOzs7NEJBRWNDLEksRUFBTUMsRSxFQUFJSCxLLEVBQU87QUFDOUIsYUFBT0UsT0FBTyxDQUFDQyxLQUFLRCxJQUFOLElBQWNGLEtBQTVCO0FBQ0Q7Ozs7OztrQkFoRGtCZixFOzs7QUFtRHJCQSxHQUFHRCxLQUFILEdBQVdBLEtBQVg7O0FBRUE7QUFDQUMsR0FBR21CLFVBQUgsR0FBZ0I7QUFDZEMsUUFEYyxrQkFDUEMsQ0FETyxFQUNKO0FBQ1IsV0FBT0EsQ0FBUDtBQUNEO0FBSGEsQ0FBaEI7O0FBTUEsSUFBSUMsUUFBUXRCLEdBQUdtQixVQUFmOztBQUVBbkIsR0FBR3VCLFNBQUgsQ0FBYWQsSUFBYixHQUFvQixJQUFwQjs7QUFFQSxTQUFTZSxTQUFULENBQW1CbkIsVUFBbkIsRUFBK0JvQixNQUEvQixFQUF1QztBQUNyQ0EsV0FBUyxrQkFBTUEsTUFBTixDQUFUO0FBQ0EsU0FBT0MsT0FBT0MsTUFBUCxDQUFjdEIsVUFBZCxFQUEwQjtBQUMvQnVCLFVBRCtCLGtCQUN4QkMsR0FEd0IsRUFDbkI7QUFDVixhQUFPeEIsV0FBV3dCLEdBQVgsRUFBZ0JKLE1BQWhCLENBQVA7QUFDRCxLQUg4QjtBQUkvQkssV0FKK0IsbUJBSXZCRCxHQUp1QixFQUlsQjtBQUNYLGFBQU8sSUFBSXhCLFdBQVcsSUFBSXdCLEdBQWYsRUFBb0JKLE1BQXBCLENBQVg7QUFDRCxLQU44QjtBQU8vQk0sYUFQK0IscUJBT3JCRixHQVBxQixFQU9oQjtBQUNiLGFBQVFBLE9BQU8sR0FBUixHQUFleEIsV0FBVyxJQUFJd0IsR0FBZixFQUFvQkosTUFBcEIsSUFBOEIsQ0FBN0MsR0FDTCxDQUFDLElBQUlwQixXQUFXLEtBQUssSUFBSXdCLEdBQVQsQ0FBWCxFQUEwQkosTUFBMUIsQ0FBTCxJQUEwQyxDQUQ1QztBQUVEO0FBVjhCLEdBQTFCLENBQVA7QUFZRDs7QUFFRCxJQUFJTyxjQUFjO0FBRWhCQyxLQUZnQixlQUVaWixDQUZZLEVBRVRmLENBRlMsRUFFTjtBQUNSLFdBQU80QixLQUFLQyxHQUFMLENBQVNkLENBQVQsRUFBWWYsRUFBRSxDQUFGLEtBQVEsQ0FBcEIsQ0FBUDtBQUNELEdBSmU7QUFNaEI4QixNQU5nQixnQkFNWGYsQ0FOVyxFQU1SO0FBQ04sV0FBT2EsS0FBS0MsR0FBTCxDQUFTLENBQVQsRUFBWSxLQUFLZCxJQUFJLENBQVQsQ0FBWixDQUFQO0FBQ0QsR0FSZTtBQVVoQmdCLE1BVmdCLGdCQVVYaEIsQ0FWVyxFQVVSO0FBQ04sV0FBTyxJQUFJYSxLQUFLSSxHQUFMLENBQVNKLEtBQUtLLElBQUwsQ0FBVWxCLENBQVYsQ0FBVCxDQUFYO0FBQ0QsR0FaZTtBQWNoQm1CLE1BZGdCLGdCQWNYbkIsQ0FkVyxFQWNSO0FBQ04sV0FBTyxJQUFJYSxLQUFLSSxHQUFMLENBQVMsQ0FBQyxJQUFJakIsQ0FBTCxJQUFVYSxLQUFLTyxFQUFmLEdBQW9CLENBQTdCLENBQVg7QUFDRCxHQWhCZTtBQWtCaEJDLE1BbEJnQixnQkFrQlhyQixDQWxCVyxFQWtCUmYsQ0FsQlEsRUFrQkw7QUFDVEEsUUFBSUEsRUFBRSxDQUFGLEtBQVEsS0FBWjtBQUNBLFdBQU80QixLQUFLQyxHQUFMLENBQVNkLENBQVQsRUFBWSxDQUFaLEtBQWtCLENBQUNmLElBQUksQ0FBTCxJQUFVZSxDQUFWLEdBQWNmLENBQWhDLENBQVA7QUFDRCxHQXJCZTtBQXVCaEJxQyxRQXZCZ0Isa0JBdUJUdEIsQ0F2QlMsRUF1Qk47QUFDUixRQUFJdUIsS0FBSjtBQUNBLFNBQUssSUFBSUMsSUFBSSxDQUFSLEVBQVdDLElBQUksQ0FBcEIsRUFBdUIsQ0FBdkIsRUFBMEJELEtBQUtDLENBQUwsRUFBUUEsS0FBSyxDQUF2QyxFQUEwQztBQUN4QyxVQUFJekIsS0FBSyxDQUFDLElBQUksSUFBSXdCLENBQVQsSUFBYyxFQUF2QixFQUEyQjtBQUN6QkQsZ0JBQVFFLElBQUlBLENBQUosR0FBUVosS0FBS0MsR0FBTCxDQUFTLENBQUMsS0FBSyxJQUFJVSxDQUFULEdBQWEsS0FBS3hCLENBQW5CLElBQXdCLENBQWpDLEVBQW9DLENBQXBDLENBQWhCO0FBQ0E7QUFDRDtBQUNGO0FBQ0QsV0FBT3VCLEtBQVA7QUFDRCxHQWhDZTtBQWtDaEJHLFNBbENnQixtQkFrQ1IxQixDQWxDUSxFQWtDTGYsQ0FsQ0ssRUFrQ0Y7QUFDWixXQUFPNEIsS0FBS0MsR0FBTCxDQUFTLENBQVQsRUFBWSxLQUFLLEVBQUVkLENBQW5CLElBQXdCYSxLQUFLYyxHQUFMLENBQVMsS0FBSzNCLENBQUwsR0FBU2EsS0FBS08sRUFBZCxJQUFvQm5DLEVBQUUsQ0FBRixLQUFRLENBQTVCLElBQWlDLENBQTFDLENBQS9CO0FBQ0Q7QUFwQ2UsQ0FBbEI7O0FBd0NBLEtBQUssSUFBTTJDLENBQVgsSUFBZ0JqQixXQUFoQixFQUE2QjtBQUMzQlYsUUFBTTJCLENBQU4sSUFBV3pCLFVBQVVRLFlBQVlpQixDQUFaLENBQVYsQ0FBWDtBQUNEOztBQUVELENBQUMsTUFBRCxFQUFTLE9BQVQsRUFBa0IsT0FBbEIsRUFBMkIsT0FBM0IsRUFBb0NDLE9BQXBDLENBQTRDLFVBQVNDLElBQVQsRUFBZUMsQ0FBZixFQUFrQjtBQUM1RDlCLFFBQU02QixJQUFOLElBQWMzQixVQUFVLFVBQVNILENBQVQsRUFBWTtBQUNsQyxXQUFPYSxLQUFLQyxHQUFMLENBQVNkLENBQVQsRUFBWSxDQUNqQitCLElBQUksQ0FEYSxDQUFaLENBQVA7QUFHRCxHQUphLENBQWQ7QUFLRCxDQU5EOztBQVFBOztBQUVBO0FBQ0E7QUFDQSxJQUFJQyxNQUFKO0FBQ0EsSUFBSTtBQUNGQSxXQUFTQyxNQUFUO0FBQ0QsQ0FGRCxDQUVFLE9BQU9DLENBQVAsRUFBVTtBQUNWRixXQUFTLElBQVQ7QUFDRDs7QUFFRCxJQUFJRyxlQUFlLFNBQWZBLFlBQWUsR0FBVztBQUM1QixNQUFJQyxXQUFXMUQsS0FBZjtBQUNBQSxVQUFRLEVBQVI7QUFDQSxNQUFJMEQsU0FBU0MsTUFBYixFQUFxQjtBQUNuQixTQUFLLElBQUlOLElBQUksQ0FBUixFQUFXTyxJQUFJRixTQUFTQyxNQUF4QixFQUFnQ0UsRUFBckMsRUFBeUNSLElBQUlPLENBQTdDLEVBQWdEUCxHQUFoRCxFQUFxRDtBQUNuRFEsV0FBS0gsU0FBU0wsQ0FBVCxDQUFMO0FBQ0FRLFNBQUdDLElBQUg7QUFDQSxVQUFJRCxHQUFHaEQsU0FBUCxFQUFrQjtBQUNoQmIsY0FBTWMsSUFBTixDQUFXK0MsRUFBWDtBQUNEO0FBQ0Y7QUFDRDVELE9BQUdELEtBQUgsR0FBV0EsS0FBWDtBQUNEO0FBQ0YsQ0FiRDs7QUFlQSxJQUFJc0QsTUFBSixFQUFZO0FBQ1YsTUFBSVMsUUFBUSxLQUFaO0FBQ0EsR0FBQyxxQkFBRCxFQUF3QixrQkFBeEIsRUFBNEMsZUFBNUMsRUFDQywwQkFERCxFQUM2Qix1QkFEN0IsRUFDc0Qsb0JBRHRELEVBRUdaLE9BRkgsQ0FFVyxnQkFBUTtBQUNmLFFBQUlhLFFBQVFWLE1BQVosRUFBb0I7QUFDbEJyRCxTQUFHZ0UsYUFBSCxHQUFtQixZQUFXO0FBQzVCLGVBQU9YLE9BQU9VLElBQVAsQ0FBUDtBQUNELE9BRkQ7QUFHQUQsY0FBUSxJQUFSO0FBQ0Q7QUFDRixHQVRIO0FBVUEsTUFBSSxDQUFDQSxLQUFMLEVBQVk7QUFDVjlELE9BQUdnRSxhQUFILEdBQW1CdEQsS0FBS0MsR0FBeEI7QUFDRDtBQUNEO0FBQ0FtRCxVQUFRLEtBQVI7QUFDQSxHQUFDLDZCQUFELEVBQWdDLDBCQUFoQyxFQUNDLHVCQURELEVBRUdaLE9BRkgsQ0FFVyxVQUFTYSxJQUFULEVBQWU7QUFDdEIsUUFBSUEsUUFBUVYsTUFBWixFQUFvQjtBQUNsQnJELFNBQUdpRSxxQkFBSCxHQUEyQixVQUFTQyxRQUFULEVBQW1CO0FBQzVDYixlQUFPVSxJQUFQLEVBQWEsWUFBVztBQUN0QlA7QUFDQVU7QUFDRCxTQUhEO0FBSUQsT0FMRDtBQU1BSixjQUFRLElBQVI7QUFDRDtBQUNGLEdBWkg7QUFhQSxNQUFJLENBQUNBLEtBQUwsRUFBWTtBQUNWOUQsT0FBR2lFLHFCQUFILEdBQTJCLFVBQVNDLFFBQVQsRUFBbUI7QUFDNUNDLGlCQUFXLFlBQVc7QUFDcEJYO0FBQ0FVO0FBQ0QsT0FIRCxFQUdHLE9BQU8sRUFIVjtBQUlELEtBTEQ7QUFNRDtBQUNGIiwiZmlsZSI6ImZ4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGltZXIgYmFzZWQgYW5pbWF0aW9uXG4vLyBUT0RPIGNsZWFuIHVwIGxpbnRpbmdcbi8qIGVzbGludC1kaXNhYmxlICovXG4vKiBnbG9iYWwgc2V0VGltZW91dCAqL1xuaW1wb3J0IHttZXJnZSwgbm9vcCwgc3BsYXR9IGZyb20gJy4uL3V0aWxzJztcblxudmFyIFF1ZXVlID0gW107XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZ4IHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucyA9IHt9KSB7XG4gICAgdGhpcy5vcHQgPSBtZXJnZSh7XG4gICAgICBkZWxheTogMCxcbiAgICAgIGR1cmF0aW9uOiAxMDAwLFxuICAgICAgdHJhbnNpdGlvbjogeCA9PiB4LFxuICAgICAgb25Db21wdXRlOiBub29wLFxuICAgICAgb25Db21wbGV0ZTogbm9vcFxuICAgIH0sIG9wdGlvbnMpO1xuICB9XG5cbiAgc3RhcnQob3B0aW9ucykge1xuICAgIHRoaXMub3B0ID0gbWVyZ2UodGhpcy5vcHQsIG9wdGlvbnMgfHwge30pO1xuICAgIHRoaXMudGltZSA9IERhdGUubm93KCk7XG4gICAgdGhpcy5hbmltYXRpbmcgPSB0cnVlO1xuICAgIFF1ZXVlLnB1c2godGhpcyk7XG4gIH1cblxuICAvLyBwZXJmb3JtIGEgc3RlcCBpbiB0aGUgYW5pbWF0aW9uXG4gIHN0ZXAoKSB7XG4gICAgLy8gaWYgbm90IGFuaW1hdGluZywgdGhlbiByZXR1cm5cbiAgICBpZiAoIXRoaXMuYW5pbWF0aW5nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBjdXJyZW50VGltZSA9IERhdGUubm93KCksXG4gICAgICB0aW1lID0gdGhpcy50aW1lLFxuICAgICAgb3B0ID0gdGhpcy5vcHQsXG4gICAgICBkZWxheSA9IG9wdC5kZWxheSxcbiAgICAgIGR1cmF0aW9uID0gb3B0LmR1cmF0aW9uLFxuICAgICAgZGVsdGEgPSAwO1xuICAgIC8vIGhvbGQgYW5pbWF0aW9uIGZvciB0aGUgZGVsYXlcbiAgICBpZiAoY3VycmVudFRpbWUgPCB0aW1lICsgZGVsYXkpIHtcbiAgICAgIG9wdC5vbkNvbXB1dGUuY2FsbCh0aGlzLCBkZWx0YSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIGlmIGluIG91ciB0aW1lIHdpbmRvdywgdGhlbiBleGVjdXRlIGFuaW1hdGlvblxuICAgIGlmIChjdXJyZW50VGltZSA8IHRpbWUgKyBkZWxheSArIGR1cmF0aW9uKSB7XG4gICAgICBkZWx0YSA9IG9wdC50cmFuc2l0aW9uKChjdXJyZW50VGltZSAtIHRpbWUgLSBkZWxheSkgLyBkdXJhdGlvbik7XG4gICAgICBvcHQub25Db21wdXRlLmNhbGwodGhpcywgZGVsdGEpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmFuaW1hdGluZyA9IGZhbHNlO1xuICAgICAgb3B0Lm9uQ29tcHV0ZS5jYWxsKHRoaXMsIDEpO1xuICAgICAgb3B0Lm9uQ29tcGxldGUuY2FsbCh0aGlzKTtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgY29tcHV0ZShmcm9tLCB0bywgZGVsdGEpIHtcbiAgICByZXR1cm4gZnJvbSArICh0byAtIGZyb20pICogZGVsdGE7XG4gIH1cbn1cblxuRnguUXVldWUgPSBRdWV1ZTtcblxuLy8gRWFzaW5nIGVxdWF0aW9uc1xuRnguVHJhbnNpdGlvbiA9IHtcbiAgbGluZWFyKHApIHtcbiAgICByZXR1cm4gcDtcbiAgfVxufTtcblxudmFyIFRyYW5zID0gRnguVHJhbnNpdGlvbjtcblxuRngucHJvdG90eXBlLnRpbWUgPSBudWxsO1xuXG5mdW5jdGlvbiBtYWtlVHJhbnModHJhbnNpdGlvbiwgcGFyYW1zKSB7XG4gIHBhcmFtcyA9IHNwbGF0KHBhcmFtcyk7XG4gIHJldHVybiBPYmplY3QuYXNzaWduKHRyYW5zaXRpb24sIHtcbiAgICBlYXNlSW4ocG9zKSB7XG4gICAgICByZXR1cm4gdHJhbnNpdGlvbihwb3MsIHBhcmFtcyk7XG4gICAgfSxcbiAgICBlYXNlT3V0KHBvcykge1xuICAgICAgcmV0dXJuIDEgLSB0cmFuc2l0aW9uKDEgLSBwb3MsIHBhcmFtcyk7XG4gICAgfSxcbiAgICBlYXNlSW5PdXQocG9zKSB7XG4gICAgICByZXR1cm4gKHBvcyA8PSAwLjUpID8gdHJhbnNpdGlvbigyICogcG9zLCBwYXJhbXMpIC8gMiA6XG4gICAgICAgICgyIC0gdHJhbnNpdGlvbigyICogKDEgLSBwb3MpLCBwYXJhbXMpKSAvIDI7XG4gICAgfVxuICB9KTtcbn1cblxudmFyIHRyYW5zaXRpb25zID0ge1xuXG4gIFBvdyhwLCB4KSB7XG4gICAgcmV0dXJuIE1hdGgucG93KHAsIHhbMF0gfHwgNik7XG4gIH0sXG5cbiAgRXhwbyhwKSB7XG4gICAgcmV0dXJuIE1hdGgucG93KDIsIDggKiAocCAtIDEpKTtcbiAgfSxcblxuICBDaXJjKHApIHtcbiAgICByZXR1cm4gMSAtIE1hdGguc2luKE1hdGguYWNvcyhwKSk7XG4gIH0sXG5cbiAgU2luZShwKSB7XG4gICAgcmV0dXJuIDEgLSBNYXRoLnNpbigoMSAtIHApICogTWF0aC5QSSAvIDIpO1xuICB9LFxuXG4gIEJhY2socCwgeCkge1xuICAgIHggPSB4WzBdIHx8IDEuNjE4O1xuICAgIHJldHVybiBNYXRoLnBvdyhwLCAyKSAqICgoeCArIDEpICogcCAtIHgpO1xuICB9LFxuXG4gIEJvdW5jZShwKSB7XG4gICAgdmFyIHZhbHVlO1xuICAgIGZvciAobGV0IGEgPSAwLCBiID0gMTsgMTsgYSArPSBiLCBiIC89IDIpIHtcbiAgICAgIGlmIChwID49ICg3IC0gNCAqIGEpIC8gMTEpIHtcbiAgICAgICAgdmFsdWUgPSBiICogYiAtIE1hdGgucG93KCgxMSAtIDYgKiBhIC0gMTEgKiBwKSAvIDQsIDIpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9LFxuXG4gIEVsYXN0aWMocCwgeCkge1xuICAgIHJldHVybiBNYXRoLnBvdygyLCAxMCAqIC0tcCkgKiBNYXRoLmNvcygyMCAqIHAgKiBNYXRoLlBJICogKHhbMF0gfHwgMSkgLyAzKTtcbiAgfVxuXG59O1xuXG5mb3IgKGNvbnN0IHQgaW4gdHJhbnNpdGlvbnMpIHtcbiAgVHJhbnNbdF0gPSBtYWtlVHJhbnModHJhbnNpdGlvbnNbdF0pO1xufVxuXG5bJ1F1YWQnLCAnQ3ViaWMnLCAnUXVhcnQnLCAnUXVpbnQnXS5mb3JFYWNoKGZ1bmN0aW9uKGVsZW0sIGkpIHtcbiAgVHJhbnNbZWxlbV0gPSBtYWtlVHJhbnMoZnVuY3Rpb24ocCkge1xuICAgIHJldHVybiBNYXRoLnBvdyhwLCBbXG4gICAgICBpICsgMlxuICAgIF0pO1xuICB9KTtcbn0pO1xuXG4vLyBhbmltYXRpb25UaW1lIC0gZnVuY3Rpb24gYnJhbmNoaW5nXG5cbi8vIHJ5ZTogVE9ETy0gcmVmYWN0b3IgZ2xvYmFsIGRlZmluaXRpb24gd2hlbiB3ZSBkZWZpbmUgdGhlIHR3b1xuLy8gICAgICAgICAgIChicm93c2VyaWZ5LzxzY3JpcHQ+KSBidWlsZCBwYXRocy5cbnZhciBnbG9iYWw7XG50cnkge1xuICBnbG9iYWwgPSB3aW5kb3c7XG59IGNhdGNoIChlKSB7XG4gIGdsb2JhbCA9IG51bGw7XG59XG5cbnZhciBjaGVja0Z4UXVldWUgPSBmdW5jdGlvbigpIHtcbiAgdmFyIG9sZFF1ZXVlID0gUXVldWU7XG4gIFF1ZXVlID0gW107XG4gIGlmIChvbGRRdWV1ZS5sZW5ndGgpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbCA9IG9sZFF1ZXVlLmxlbmd0aCwgZng7IGkgPCBsOyBpKyspIHtcbiAgICAgIGZ4ID0gb2xkUXVldWVbaV07XG4gICAgICBmeC5zdGVwKCk7XG4gICAgICBpZiAoZnguYW5pbWF0aW5nKSB7XG4gICAgICAgIFF1ZXVlLnB1c2goZngpO1xuICAgICAgfVxuICAgIH1cbiAgICBGeC5RdWV1ZSA9IFF1ZXVlO1xuICB9XG59O1xuXG5pZiAoZ2xvYmFsKSB7XG4gIHZhciBmb3VuZCA9IGZhbHNlO1xuICBbJ3dlYmtpdEFuaW1hdGlvblRpbWUnLCAnbW96QW5pbWF0aW9uVGltZScsICdhbmltYXRpb25UaW1lJyxcbiAgICd3ZWJraXRBbmltYXRpb25TdGFydFRpbWUnLCAnbW96QW5pbWF0aW9uU3RhcnRUaW1lJywgJ2FuaW1hdGlvblN0YXJ0VGltZSddXG4gICAgLmZvckVhY2goaW1wbCA9PiB7XG4gICAgICBpZiAoaW1wbCBpbiBnbG9iYWwpIHtcbiAgICAgICAgRnguYW5pbWF0aW9uVGltZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiBnbG9iYWxbaW1wbF07XG4gICAgICAgIH07XG4gICAgICAgIGZvdW5kID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9KTtcbiAgaWYgKCFmb3VuZCkge1xuICAgIEZ4LmFuaW1hdGlvblRpbWUgPSBEYXRlLm5vdztcbiAgfVxuICAvLyByZXF1ZXN0QW5pbWF0aW9uRnJhbWUgLSBmdW5jdGlvbiBicmFuY2hpbmdcbiAgZm91bmQgPSBmYWxzZTtcbiAgWyd3ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWUnLCAnbW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lJyxcbiAgICdyZXF1ZXN0QW5pbWF0aW9uRnJhbWUnXVxuICAgIC5mb3JFYWNoKGZ1bmN0aW9uKGltcGwpIHtcbiAgICAgIGlmIChpbXBsIGluIGdsb2JhbCkge1xuICAgICAgICBGeC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPSBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAgICAgIGdsb2JhbFtpbXBsXShmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGNoZWNrRnhRdWV1ZSgpO1xuICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgZm91bmQgPSB0cnVlO1xuICAgICAgfVxuICAgIH0pO1xuICBpZiAoIWZvdW5kKSB7XG4gICAgRngucmVxdWVzdEFuaW1hdGlvbkZyYW1lID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIGNoZWNrRnhRdWV1ZSgpO1xuICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgfSwgMTAwMCAvIDYwKTtcbiAgICB9O1xuICB9XG59XG4iXX0=

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _shaderCache = __webpack_require__(276);
	
	Object.defineProperty(exports, 'ShaderCache', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_shaderCache).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9leHBlcmltZW50YWwvaW5kZXguanMiXSwibmFtZXMiOlsiZGVmYXVsdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Z0RBQVFBLE8iLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge2RlZmF1bHQgYXMgU2hhZGVyQ2FjaGV9IGZyb20gJy4vc2hhZGVyLWNhY2hlJztcbiJdfQ==

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _webgl = __webpack_require__(187);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ERR_SOURCE = 'ShaderCache expects source strings';
	var ERR_CONTEXT = 'ShaderCache does not support caching across multiple contexts';
	
	var ShaderCache = function () {
	
	  /**
	   * A cache of compiled shaders, keyed by shader source strings.
	   * Compilation of long shaders can be time consuming.
	   * By using this class, the application can ensure that each shader
	   * is only compiled once.
	   */
	  function ShaderCache() {
	    _classCallCheck(this, ShaderCache);
	
	    this.vertexShaders = {};
	    this.fragmentShaders = {};
	  }
	
	  /**
	   * Deletes shader references
	   * @return {ShaderCache} - returns this for chaining
	   */
	
	
	  _createClass(ShaderCache, [{
	    key: 'delete',
	    value: function _delete() {
	      // TODO - requires reference counting to avoid deleting shaders in use
	      return this;
	    }
	
	    /**
	     * Returns a compiled `VertexShader` object corresponding to the supplied
	     * GLSL source code string, if possible from cache.
	     *
	     * @param {WebGLRenderingContext} gl - gl context
	     * @param {String} source - Source code for shader
	     * @return {VertexShader} - a compiled vertex shader
	     */
	
	  }, {
	    key: 'getVertexShader',
	    value: function getVertexShader(gl, source) {
	      (0, _assert2.default)(typeof source === 'string', ERR_SOURCE);
	
	      var shader = this.vertexShaders[source];
	      (0, _assert2.default)(!shader || shader.gl === gl, ERR_CONTEXT);
	
	      if (!shader) {
	        shader = new _webgl.VertexShader(gl, source);
	        this.vertexShaders[source] = shader;
	      }
	      return shader;
	    }
	
	    /**
	     * Returns a compiled `VertexShader` object corresponding to the supplied
	     * GLSL source code string, if possible from cache.
	     *
	     * @param {WebGLRenderingContext} gl - gl context
	     * @param {String} source - Source code for shader
	     * @return {FragmentShader} - a compiled fragment shader, possibly from chache
	     */
	
	  }, {
	    key: 'getFragmentShader',
	    value: function getFragmentShader(gl, source) {
	      (0, _assert2.default)(typeof source === 'string', ERR_SOURCE);
	
	      var shader = this.fragmentShaders[source];
	      (0, _assert2.default)(!shader || shader.gl === gl, ERR_CONTEXT);
	
	      if (!shader) {
	        shader = new _webgl.FragmentShader(gl, source);
	        this.fragmentShaders[source] = shader;
	      }
	      return shader;
	    }
	  }]);
	
	  return ShaderCache;
	}();
	
	exports.default = ShaderCache;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9leHBlcmltZW50YWwvc2hhZGVyLWNhY2hlLmpzIl0sIm5hbWVzIjpbIkVSUl9TT1VSQ0UiLCJFUlJfQ09OVEVYVCIsIlNoYWRlckNhY2hlIiwidmVydGV4U2hhZGVycyIsImZyYWdtZW50U2hhZGVycyIsImdsIiwic291cmNlIiwic2hhZGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7QUFFQSxJQUFNQSxhQUFhLG9DQUFuQjtBQUNBLElBQU1DLGNBQWMsK0RBQXBCOztJQUVxQkMsVzs7QUFFbkI7Ozs7OztBQU1BLHlCQUFjO0FBQUE7O0FBQ1osU0FBS0MsYUFBTCxHQUFxQixFQUFyQjtBQUNBLFNBQUtDLGVBQUwsR0FBdUIsRUFBdkI7QUFDRDs7QUFFRDs7Ozs7Ozs7OEJBSVM7QUFDUDtBQUNBLGFBQU8sSUFBUDtBQUNEOztBQUVEOzs7Ozs7Ozs7OztvQ0FRZ0JDLEUsRUFBSUMsTSxFQUFRO0FBQzFCLDRCQUFPLE9BQU9BLE1BQVAsS0FBa0IsUUFBekIsRUFBbUNOLFVBQW5DOztBQUVBLFVBQUlPLFNBQVMsS0FBS0osYUFBTCxDQUFtQkcsTUFBbkIsQ0FBYjtBQUNBLDRCQUFPLENBQUNDLE1BQUQsSUFBV0EsT0FBT0YsRUFBUCxLQUFjQSxFQUFoQyxFQUFvQ0osV0FBcEM7O0FBRUEsVUFBSSxDQUFDTSxNQUFMLEVBQWE7QUFDWEEsaUJBQVMsd0JBQWlCRixFQUFqQixFQUFxQkMsTUFBckIsQ0FBVDtBQUNBLGFBQUtILGFBQUwsQ0FBbUJHLE1BQW5CLElBQTZCQyxNQUE3QjtBQUNEO0FBQ0QsYUFBT0EsTUFBUDtBQUNEOztBQUVEOzs7Ozs7Ozs7OztzQ0FRa0JGLEUsRUFBSUMsTSxFQUFRO0FBQzVCLDRCQUFPLE9BQU9BLE1BQVAsS0FBa0IsUUFBekIsRUFBbUNOLFVBQW5DOztBQUVBLFVBQUlPLFNBQVMsS0FBS0gsZUFBTCxDQUFxQkUsTUFBckIsQ0FBYjtBQUNBLDRCQUFPLENBQUNDLE1BQUQsSUFBV0EsT0FBT0YsRUFBUCxLQUFjQSxFQUFoQyxFQUFvQ0osV0FBcEM7O0FBRUEsVUFBSSxDQUFDTSxNQUFMLEVBQWE7QUFDWEEsaUJBQVMsMEJBQW1CRixFQUFuQixFQUF1QkMsTUFBdkIsQ0FBVDtBQUNBLGFBQUtGLGVBQUwsQ0FBcUJFLE1BQXJCLElBQStCQyxNQUEvQjtBQUNEO0FBQ0QsYUFBT0EsTUFBUDtBQUNEOzs7Ozs7a0JBOURrQkwsVyIsImZpbGUiOiJzaGFkZXItY2FjaGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1ZlcnRleFNoYWRlciwgRnJhZ21lbnRTaGFkZXJ9IGZyb20gJy4uL3dlYmdsJztcbmltcG9ydCBhc3NlcnQgZnJvbSAnYXNzZXJ0JztcblxuY29uc3QgRVJSX1NPVVJDRSA9ICdTaGFkZXJDYWNoZSBleHBlY3RzIHNvdXJjZSBzdHJpbmdzJztcbmNvbnN0IEVSUl9DT05URVhUID0gJ1NoYWRlckNhY2hlIGRvZXMgbm90IHN1cHBvcnQgY2FjaGluZyBhY3Jvc3MgbXVsdGlwbGUgY29udGV4dHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTaGFkZXJDYWNoZSB7XG5cbiAgLyoqXG4gICAqIEEgY2FjaGUgb2YgY29tcGlsZWQgc2hhZGVycywga2V5ZWQgYnkgc2hhZGVyIHNvdXJjZSBzdHJpbmdzLlxuICAgKiBDb21waWxhdGlvbiBvZiBsb25nIHNoYWRlcnMgY2FuIGJlIHRpbWUgY29uc3VtaW5nLlxuICAgKiBCeSB1c2luZyB0aGlzIGNsYXNzLCB0aGUgYXBwbGljYXRpb24gY2FuIGVuc3VyZSB0aGF0IGVhY2ggc2hhZGVyXG4gICAqIGlzIG9ubHkgY29tcGlsZWQgb25jZS5cbiAgICovXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMudmVydGV4U2hhZGVycyA9IHt9O1xuICAgIHRoaXMuZnJhZ21lbnRTaGFkZXJzID0ge307XG4gIH1cblxuICAvKipcbiAgICogRGVsZXRlcyBzaGFkZXIgcmVmZXJlbmNlc1xuICAgKiBAcmV0dXJuIHtTaGFkZXJDYWNoZX0gLSByZXR1cm5zIHRoaXMgZm9yIGNoYWluaW5nXG4gICAqL1xuICBkZWxldGUoKSB7XG4gICAgLy8gVE9ETyAtIHJlcXVpcmVzIHJlZmVyZW5jZSBjb3VudGluZyB0byBhdm9pZCBkZWxldGluZyBzaGFkZXJzIGluIHVzZVxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSBjb21waWxlZCBgVmVydGV4U2hhZGVyYCBvYmplY3QgY29ycmVzcG9uZGluZyB0byB0aGUgc3VwcGxpZWRcbiAgICogR0xTTCBzb3VyY2UgY29kZSBzdHJpbmcsIGlmIHBvc3NpYmxlIGZyb20gY2FjaGUuXG4gICAqXG4gICAqIEBwYXJhbSB7V2ViR0xSZW5kZXJpbmdDb250ZXh0fSBnbCAtIGdsIGNvbnRleHRcbiAgICogQHBhcmFtIHtTdHJpbmd9IHNvdXJjZSAtIFNvdXJjZSBjb2RlIGZvciBzaGFkZXJcbiAgICogQHJldHVybiB7VmVydGV4U2hhZGVyfSAtIGEgY29tcGlsZWQgdmVydGV4IHNoYWRlclxuICAgKi9cbiAgZ2V0VmVydGV4U2hhZGVyKGdsLCBzb3VyY2UpIHtcbiAgICBhc3NlcnQodHlwZW9mIHNvdXJjZSA9PT0gJ3N0cmluZycsIEVSUl9TT1VSQ0UpO1xuXG4gICAgbGV0IHNoYWRlciA9IHRoaXMudmVydGV4U2hhZGVyc1tzb3VyY2VdO1xuICAgIGFzc2VydCghc2hhZGVyIHx8IHNoYWRlci5nbCA9PT0gZ2wsIEVSUl9DT05URVhUKTtcblxuICAgIGlmICghc2hhZGVyKSB7XG4gICAgICBzaGFkZXIgPSBuZXcgVmVydGV4U2hhZGVyKGdsLCBzb3VyY2UpO1xuICAgICAgdGhpcy52ZXJ0ZXhTaGFkZXJzW3NvdXJjZV0gPSBzaGFkZXI7XG4gICAgfVxuICAgIHJldHVybiBzaGFkZXI7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBhIGNvbXBpbGVkIGBWZXJ0ZXhTaGFkZXJgIG9iamVjdCBjb3JyZXNwb25kaW5nIHRvIHRoZSBzdXBwbGllZFxuICAgKiBHTFNMIHNvdXJjZSBjb2RlIHN0cmluZywgaWYgcG9zc2libGUgZnJvbSBjYWNoZS5cbiAgICpcbiAgICogQHBhcmFtIHtXZWJHTFJlbmRlcmluZ0NvbnRleHR9IGdsIC0gZ2wgY29udGV4dFxuICAgKiBAcGFyYW0ge1N0cmluZ30gc291cmNlIC0gU291cmNlIGNvZGUgZm9yIHNoYWRlclxuICAgKiBAcmV0dXJuIHtGcmFnbWVudFNoYWRlcn0gLSBhIGNvbXBpbGVkIGZyYWdtZW50IHNoYWRlciwgcG9zc2libHkgZnJvbSBjaGFjaGVcbiAgICovXG4gIGdldEZyYWdtZW50U2hhZGVyKGdsLCBzb3VyY2UpIHtcbiAgICBhc3NlcnQodHlwZW9mIHNvdXJjZSA9PT0gJ3N0cmluZycsIEVSUl9TT1VSQ0UpO1xuXG4gICAgbGV0IHNoYWRlciA9IHRoaXMuZnJhZ21lbnRTaGFkZXJzW3NvdXJjZV07XG4gICAgYXNzZXJ0KCFzaGFkZXIgfHwgc2hhZGVyLmdsID09PSBnbCwgRVJSX0NPTlRFWFQpO1xuXG4gICAgaWYgKCFzaGFkZXIpIHtcbiAgICAgIHNoYWRlciA9IG5ldyBGcmFnbWVudFNoYWRlcihnbCwgc291cmNlKTtcbiAgICAgIHRoaXMuZnJhZ21lbnRTaGFkZXJzW3NvdXJjZV0gPSBzaGFkZXI7XG4gICAgfVxuICAgIHJldHVybiBzaGFkZXI7XG4gIH1cbn1cbiJdfQ==

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _platform = __webpack_require__(278);
	
	Object.keys(_platform).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _platform[key];
	    }
	  });
	});
	
	var _loadFiles = __webpack_require__(395);
	
	Object.keys(_loadFiles).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _loadFiles[key];
	    }
	  });
	});
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pby9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7OztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENhbGwgYSByZXF1aXJlIGJhc2VkIGhlbHBlciB0byBzZWxlY3QgcGxhdGZvcm0gdG8gZXhwb3J0XG5leHBvcnQgKiBmcm9tICcuL3BsYXRmb3JtJztcbmV4cG9ydCAqIGZyb20gJy4vbG9hZC1maWxlcyc7XG4iXX0=

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _utils = __webpack_require__(204);
	
	module.exports = _utils.isBrowser ? __webpack_require__(279) : __webpack_require__(315); // Use require instead of import/export to dynamically export the right set
	// of functions
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pby9wbGF0Zm9ybS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJtYXBwaW5ncyI6Ijs7QUFFQTs7QUFFQUEsT0FBT0MsT0FBUCxHQUFpQixtQkFBWUMsUUFBUSxXQUFSLENBQVosR0FBbUNBLFFBQVEsUUFBUixDQUFwRCxDLENBSkE7QUFDQSIsImZpbGUiOiJwbGF0Zm9ybS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFVzZSByZXF1aXJlIGluc3RlYWQgb2YgaW1wb3J0L2V4cG9ydCB0byBkeW5hbWljYWxseSBleHBvcnQgdGhlIHJpZ2h0IHNldFxuLy8gb2YgZnVuY3Rpb25zXG5pbXBvcnQge2lzQnJvd3Nlcn0gZnJvbSAnLi4vdXRpbHMnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGlzQnJvd3NlciA/IHJlcXVpcmUoJy4vYnJvd3NlcicpIDogcmVxdWlyZSgnLi9ub2RlJyk7XG4iXX0=

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.browserFs = exports.loadFile = undefined;
	
	var _browserRequest = __webpack_require__(280);
	
	Object.defineProperty(exports, 'loadFile', {
	  enumerable: true,
	  get: function get() {
	    return _browserRequest.loadFile;
	  }
	});
	
	var _browserImageIo = __webpack_require__(281);
	
	Object.keys(_browserImageIo).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _browserImageIo[key];
	    }
	  });
	});
	
	var _browserFs = __webpack_require__(310);
	
	var browserFs = _interopRequireWildcard(_browserFs);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	exports.browserFs = browserFs;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9pby9icm93c2VyL2luZGV4LmpzIl0sIm5hbWVzIjpbImxvYWRGaWxlIiwiYnJvd3NlckZzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7MkJBQVFBLFE7Ozs7OztBQUtSO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFIQTs7SUFBWUMsUzs7OztRQUNKQSxTLEdBQUFBLFMiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge2xvYWRGaWxlfSBmcm9tICcuL2Jyb3dzZXItcmVxdWVzdCc7XG5cbmltcG9ydCAqIGFzIGJyb3dzZXJGcyBmcm9tICcuL2Jyb3dzZXItZnMnO1xuZXhwb3J0IHticm93c2VyRnN9O1xuXG5leHBvcnQgKiBmcm9tICcuL2Jyb3dzZXItaW1hZ2UtaW8nO1xuIl19

/***/ },
/* 280 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	exports.loadFile = loadFile;
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	// Supports loading (requesting) assets with XHR (XmlHttpRequest)
	/* eslint-disable guard-for-in, complexity, no-try-catch */
	
	/* global XMLHttpRequest */
	function noop() {}
	
	var XHR_STATES = {
	  UNINITIALIZED: 0,
	  LOADING: 1,
	  LOADED: 2,
	  INTERACTIVE: 3,
	  COMPLETED: 4
	};
	
	var XHR = function () {
	  function XHR(_ref) {
	    var url = _ref.url,
	        _ref$path = _ref.path,
	        path = _ref$path === undefined ? null : _ref$path,
	        _ref$method = _ref.method,
	        method = _ref$method === undefined ? 'GET' : _ref$method,
	        _ref$async = _ref.async,
	        async = _ref$async === undefined ? true : _ref$async,
	        _ref$noCache = _ref.noCache,
	        noCache = _ref$noCache === undefined ? false : _ref$noCache,
	        _ref$sendAsBinary = _ref.sendAsBinary,
	        sendAsBinary = _ref$sendAsBinary === undefined ? false : _ref$sendAsBinary,
	        _ref$responseType = _ref.responseType,
	        responseType = _ref$responseType === undefined ? false : _ref$responseType,
	        _ref$onProgress = _ref.onProgress,
	        onProgress = _ref$onProgress === undefined ? noop : _ref$onProgress,
	        _ref$onSuccess = _ref.onSuccess,
	        onSuccess = _ref$onSuccess === undefined ? noop : _ref$onSuccess,
	        _ref$onError = _ref.onError,
	        onError = _ref$onError === undefined ? noop : _ref$onError,
	        _ref$onAbort = _ref.onAbort,
	        onAbort = _ref$onAbort === undefined ? noop : _ref$onAbort,
	        _ref$onComplete = _ref.onComplete,
	        onComplete = _ref$onComplete === undefined ? noop : _ref$onComplete,
	        opt = _objectWithoutProperties(_ref, ['url', 'path', 'method', 'async', 'noCache', 'sendAsBinary', 'responseType', 'onProgress', 'onSuccess', 'onError', 'onAbort', 'onComplete']);
	
	    _classCallCheck(this, XHR);
	
	    this.url = path ? path.join(path, url) : url;
	    this.method = method;
	    this.async = async;
	    this.noCache = noCache;
	    this.sendAsBinary = sendAsBinary;
	    this.responseType = responseType;
	
	    this.req = new XMLHttpRequest();
	
	    this.req.onload = function (e) {
	      return onComplete(e);
	    };
	    this.req.onerror = function (e) {
	      return onError(e);
	    };
	    this.req.onabort = function (e) {
	      return onAbort(e);
	    };
	    this.req.onprogress = function (e) {
	      if (e.lengthComputable) {
	        onProgress(e, Math.round(e.loaded / e.total * 100));
	      } else {
	        onProgress(e, -1);
	      }
	    };
	  }
	
	  _createClass(XHR, [{
	    key: 'setRequestHeader',
	    value: function setRequestHeader(header, value) {
	      this.req.setRequestHeader(header, value);
	      return this;
	    }
	
	    /* eslint-disable max-statements */
	
	  }, {
	    key: 'sendAsync',
	    value: function sendAsync() {
	      var _this = this;
	
	      var body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.body || null;
	
	      return new Promise(function (resolve, reject) {
	        try {
	          (function () {
	            var req = _this.req,
	                method = _this.method,
	                async = _this.async,
	                noCache = _this.noCache,
	                sendAsBinary = _this.sendAsBinary,
	                responseType = _this.responseType;
	
	
	            var url = noCache ? _this.url + (_this.url.indexOf('?') >= 0 ? '&' : '?') + Date.now() : _this.url;
	
	            req.open(method, url, async);
	
	            if (responseType) {
	              req.responseType = responseType;
	            }
	
	            if (async) {
	              req.onreadystatechange = function (e) {
	                if (req.readyState === XHR_STATES.COMPLETED) {
	                  if (req.status === 200) {
	                    resolve(req.responseType ? req.response : req.responseText);
	                  } else {
	                    reject(new Error(req.status + ': ' + url));
	                  }
	                }
	              };
	            }
	
	            if (sendAsBinary) {
	              req.sendAsBinary(body);
	            } else {
	              req.send(body);
	            }
	
	            if (!async) {
	              if (req.status === 200) {
	                resolve(req.responseType ? req.response : req.responseText);
	              } else {
	                reject(new Error(req.status + ': ' + url));
	              }
	            }
	          })();
	        } catch (error) {
	          reject(error);
	        }
	      });
	    }
	    /* eslint-enable max-statements */
	
	  }]);
	
	  return XHR;
	}();
	
	function loadFile(opts) {
	  var xhr = new XHR(opts);
	  return xhr.sendAsync();
	}
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, Buffer) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.compressImage = compressImage;
	exports.loadImage = loadImage;
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _through = __webpack_require__(286);
	
	var _through2 = _interopRequireDefault(_through);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/*
	 * Returns data bytes representing a compressed image in PNG or JPG format,
	 * This data can be saved using file system (f) methods or
	 * used in a request.
	 * @param {Image}  image - Image or Canvas
	 * @param {String} opt.type='png' - png, jpg or image/png, image/jpg are valid
	 * @param {String} opt.dataURI= - Whether to include a data URI header
	 */
	// Image loading/saving for browser
	/* global document, HTMLCanvasElement, Image */
	
	/* global process, Buffer */
	function compressImage(image, type) {
	  if (image instanceof HTMLCanvasElement) {
	    var _canvas = image;
	    return _canvas.toDataURL(type);
	  }
	
	  (0, _assert2.default)(image instanceof Image, 'getImageData accepts image or canvas');
	  var canvas = document.createElement('canvas');
	  canvas.width = image.width;
	  canvas.height = image.height;
	  canvas.getContext('2d').drawImage(image, 0, 0);
	
	  // Get raw image data
	  var data = canvas.toDataURL(type || 'png').replace(/^data:image\/(png|jpg);base64,/, '');
	
	  // Dump data into stream and return
	  var result = (0, _through2.default)();
	  process.nextTick(function () {
	    return result.end(new Buffer(data, 'base64'));
	  });
	  return result;
	}
	
	/*
	 * Loads images asynchronously
	 * returns a promise tracking the load
	 */
	function loadImage(url) {
	  return new Promise(function (resolve, reject) {
	    try {
	      (function () {
	        var image = new Image();
	        image.onload = function () {
	          return resolve(image);
	        };
	        image.onerror = function () {
	          return reject(new Error('Could not load image ' + url + '.'));
	        };
	        image.src = url;
	      })();
	    } catch (error) {
	      reject(error);
	    }
	  });
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9pby9icm93c2VyL2Jyb3dzZXItaW1hZ2UtaW8uanMiXSwibmFtZXMiOlsiY29tcHJlc3NJbWFnZSIsImxvYWRJbWFnZSIsImltYWdlIiwidHlwZSIsIkhUTUxDYW52YXNFbGVtZW50IiwiY2FudmFzIiwidG9EYXRhVVJMIiwiSW1hZ2UiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJ3aWR0aCIsImhlaWdodCIsImdldENvbnRleHQiLCJkcmF3SW1hZ2UiLCJkYXRhIiwicmVwbGFjZSIsInJlc3VsdCIsInByb2Nlc3MiLCJuZXh0VGljayIsImVuZCIsIkJ1ZmZlciIsInVybCIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0Iiwib25sb2FkIiwib25lcnJvciIsIkVycm9yIiwic3JjIiwiZXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7O1FBZWdCQSxhLEdBQUFBLGE7UUEyQkFDLFMsR0FBQUEsUzs7QUF0Q2hCOzs7O0FBQ0E7Ozs7OztBQUVBOzs7Ozs7OztBQVBBO0FBQ0E7O0FBRUE7QUFZTyxTQUFTRCxhQUFULENBQXVCRSxLQUF2QixFQUE4QkMsSUFBOUIsRUFBb0M7QUFDekMsTUFBSUQsaUJBQWlCRSxpQkFBckIsRUFBd0M7QUFDdEMsUUFBTUMsVUFBU0gsS0FBZjtBQUNBLFdBQU9HLFFBQU9DLFNBQVAsQ0FBaUJILElBQWpCLENBQVA7QUFDRDs7QUFFRCx3QkFBT0QsaUJBQWlCSyxLQUF4QixFQUErQixzQ0FBL0I7QUFDQSxNQUFNRixTQUFTRyxTQUFTQyxhQUFULENBQXVCLFFBQXZCLENBQWY7QUFDQUosU0FBT0ssS0FBUCxHQUFlUixNQUFNUSxLQUFyQjtBQUNBTCxTQUFPTSxNQUFQLEdBQWdCVCxNQUFNUyxNQUF0QjtBQUNBTixTQUFPTyxVQUFQLENBQWtCLElBQWxCLEVBQXdCQyxTQUF4QixDQUFrQ1gsS0FBbEMsRUFBeUMsQ0FBekMsRUFBNEMsQ0FBNUM7O0FBRUE7QUFDQSxNQUFNWSxPQUNKVCxPQUFPQyxTQUFQLENBQWlCSCxRQUFRLEtBQXpCLEVBQ0dZLE9BREgsQ0FDVyxnQ0FEWCxFQUM2QyxFQUQ3QyxDQURGOztBQUlBO0FBQ0EsTUFBTUMsU0FBUyx3QkFBZjtBQUNBQyxVQUFRQyxRQUFSLENBQWlCO0FBQUEsV0FBTUYsT0FBT0csR0FBUCxDQUFXLElBQUlDLE1BQUosQ0FBV04sSUFBWCxFQUFpQixRQUFqQixDQUFYLENBQU47QUFBQSxHQUFqQjtBQUNBLFNBQU9FLE1BQVA7QUFDRDs7QUFFRDs7OztBQUlPLFNBQVNmLFNBQVQsQ0FBbUJvQixHQUFuQixFQUF3QjtBQUM3QixTQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDdEMsUUFBSTtBQUFBO0FBQ0YsWUFBTXRCLFFBQVEsSUFBSUssS0FBSixFQUFkO0FBQ0FMLGNBQU11QixNQUFOLEdBQWU7QUFBQSxpQkFBTUYsUUFBUXJCLEtBQVIsQ0FBTjtBQUFBLFNBQWY7QUFDQUEsY0FBTXdCLE9BQU4sR0FBZ0I7QUFBQSxpQkFBTUYsT0FBTyxJQUFJRyxLQUFKLDJCQUFrQ04sR0FBbEMsT0FBUCxDQUFOO0FBQUEsU0FBaEI7QUFDQW5CLGNBQU0wQixHQUFOLEdBQVlQLEdBQVo7QUFKRTtBQUtILEtBTEQsQ0FLRSxPQUFPUSxLQUFQLEVBQWM7QUFDZEwsYUFBT0ssS0FBUDtBQUNEO0FBQ0YsR0FUTSxDQUFQO0FBVUQiLCJmaWxlIjoiYnJvd3Nlci1pbWFnZS1pby5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEltYWdlIGxvYWRpbmcvc2F2aW5nIGZvciBicm93c2VyXG4vKiBnbG9iYWwgZG9jdW1lbnQsIEhUTUxDYW52YXNFbGVtZW50LCBJbWFnZSAqL1xuXG4vKiBnbG9iYWwgcHJvY2VzcywgQnVmZmVyICovXG5pbXBvcnQgYXNzZXJ0IGZyb20gJ2Fzc2VydCc7XG5pbXBvcnQgdGhyb3VnaCBmcm9tICd0aHJvdWdoJztcblxuLypcbiAqIFJldHVybnMgZGF0YSBieXRlcyByZXByZXNlbnRpbmcgYSBjb21wcmVzc2VkIGltYWdlIGluIFBORyBvciBKUEcgZm9ybWF0LFxuICogVGhpcyBkYXRhIGNhbiBiZSBzYXZlZCB1c2luZyBmaWxlIHN5c3RlbSAoZikgbWV0aG9kcyBvclxuICogdXNlZCBpbiBhIHJlcXVlc3QuXG4gKiBAcGFyYW0ge0ltYWdlfSAgaW1hZ2UgLSBJbWFnZSBvciBDYW52YXNcbiAqIEBwYXJhbSB7U3RyaW5nfSBvcHQudHlwZT0ncG5nJyAtIHBuZywganBnIG9yIGltYWdlL3BuZywgaW1hZ2UvanBnIGFyZSB2YWxpZFxuICogQHBhcmFtIHtTdHJpbmd9IG9wdC5kYXRhVVJJPSAtIFdoZXRoZXIgdG8gaW5jbHVkZSBhIGRhdGEgVVJJIGhlYWRlclxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tcHJlc3NJbWFnZShpbWFnZSwgdHlwZSkge1xuICBpZiAoaW1hZ2UgaW5zdGFuY2VvZiBIVE1MQ2FudmFzRWxlbWVudCkge1xuICAgIGNvbnN0IGNhbnZhcyA9IGltYWdlO1xuICAgIHJldHVybiBjYW52YXMudG9EYXRhVVJMKHR5cGUpO1xuICB9XG5cbiAgYXNzZXJ0KGltYWdlIGluc3RhbmNlb2YgSW1hZ2UsICdnZXRJbWFnZURhdGEgYWNjZXB0cyBpbWFnZSBvciBjYW52YXMnKTtcbiAgY29uc3QgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XG4gIGNhbnZhcy53aWR0aCA9IGltYWdlLndpZHRoO1xuICBjYW52YXMuaGVpZ2h0ID0gaW1hZ2UuaGVpZ2h0O1xuICBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKS5kcmF3SW1hZ2UoaW1hZ2UsIDAsIDApO1xuXG4gIC8vIEdldCByYXcgaW1hZ2UgZGF0YVxuICBjb25zdCBkYXRhID1cbiAgICBjYW52YXMudG9EYXRhVVJMKHR5cGUgfHwgJ3BuZycpXG4gICAgICAucmVwbGFjZSgvXmRhdGE6aW1hZ2VcXC8ocG5nfGpwZyk7YmFzZTY0LC8sICcnKTtcblxuICAvLyBEdW1wIGRhdGEgaW50byBzdHJlYW0gYW5kIHJldHVyblxuICBjb25zdCByZXN1bHQgPSB0aHJvdWdoKCk7XG4gIHByb2Nlc3MubmV4dFRpY2soKCkgPT4gcmVzdWx0LmVuZChuZXcgQnVmZmVyKGRhdGEsICdiYXNlNjQnKSkpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKlxuICogTG9hZHMgaW1hZ2VzIGFzeW5jaHJvbm91c2x5XG4gKiByZXR1cm5zIGEgcHJvbWlzZSB0cmFja2luZyB0aGUgbG9hZFxuICovXG5leHBvcnQgZnVuY3Rpb24gbG9hZEltYWdlKHVybCkge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBpbWFnZSA9IG5ldyBJbWFnZSgpO1xuICAgICAgaW1hZ2Uub25sb2FkID0gKCkgPT4gcmVzb2x2ZShpbWFnZSk7XG4gICAgICBpbWFnZS5vbmVycm9yID0gKCkgPT4gcmVqZWN0KG5ldyBFcnJvcihgQ291bGQgbm90IGxvYWQgaW1hZ2UgJHt1cmx9LmApKTtcbiAgICAgIGltYWdlLnNyYyA9IHVybDtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICB9XG4gIH0pO1xufVxuIl19
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6), __webpack_require__(282).Buffer))

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */
	
	'use strict'
	
	var base64 = __webpack_require__(283)
	var ieee754 = __webpack_require__(284)
	var isArray = __webpack_require__(285)
	
	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50
	
	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.
	
	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()
	
	/*
	 * Export kMaxLength after typed array support is determined.
	 */
	exports.kMaxLength = kMaxLength()
	
	function typedArraySupport () {
	  try {
	    var arr = new Uint8Array(1)
	    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
	    return arr.foo() === 42 && // typed array instances can be augmented
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}
	
	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}
	
	function createBuffer (that, length) {
	  if (kMaxLength() < length) {
	    throw new RangeError('Invalid typed array length')
	  }
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = new Uint8Array(length)
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    if (that === null) {
	      that = new Buffer(length)
	    }
	    that.length = length
	  }
	
	  return that
	}
	
	/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */
	
	function Buffer (arg, encodingOrOffset, length) {
	  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
	    return new Buffer(arg, encodingOrOffset, length)
	  }
	
	  // Common case.
	  if (typeof arg === 'number') {
	    if (typeof encodingOrOffset === 'string') {
	      throw new Error(
	        'If encoding is specified then the first argument must be a string'
	      )
	    }
	    return allocUnsafe(this, arg)
	  }
	  return from(this, arg, encodingOrOffset, length)
	}
	
	Buffer.poolSize = 8192 // not used by this implementation
	
	// TODO: Legacy, not needed anymore. Remove in next major version.
	Buffer._augment = function (arr) {
	  arr.__proto__ = Buffer.prototype
	  return arr
	}
	
	function from (that, value, encodingOrOffset, length) {
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number')
	  }
	
	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    return fromArrayBuffer(that, value, encodingOrOffset, length)
	  }
	
	  if (typeof value === 'string') {
	    return fromString(that, value, encodingOrOffset)
	  }
	
	  return fromObject(that, value)
	}
	
	/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/
	Buffer.from = function (value, encodingOrOffset, length) {
	  return from(null, value, encodingOrOffset, length)
	}
	
	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	  if (typeof Symbol !== 'undefined' && Symbol.species &&
	      Buffer[Symbol.species] === Buffer) {
	    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
	    Object.defineProperty(Buffer, Symbol.species, {
	      value: null,
	      configurable: true
	    })
	  }
	}
	
	function assertSize (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('"size" argument must be a number')
	  } else if (size < 0) {
	    throw new RangeError('"size" argument must not be negative')
	  }
	}
	
	function alloc (that, size, fill, encoding) {
	  assertSize(size)
	  if (size <= 0) {
	    return createBuffer(that, size)
	  }
	  if (fill !== undefined) {
	    // Only pay attention to encoding if it's a string. This
	    // prevents accidentally sending in a number that would
	    // be interpretted as a start offset.
	    return typeof encoding === 'string'
	      ? createBuffer(that, size).fill(fill, encoding)
	      : createBuffer(that, size).fill(fill)
	  }
	  return createBuffer(that, size)
	}
	
	/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
	Buffer.alloc = function (size, fill, encoding) {
	  return alloc(null, size, fill, encoding)
	}
	
	function allocUnsafe (that, size) {
	  assertSize(size)
	  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < size; ++i) {
	      that[i] = 0
	    }
	  }
	  return that
	}
	
	/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */
	Buffer.allocUnsafe = function (size) {
	  return allocUnsafe(null, size)
	}
	/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
	Buffer.allocUnsafeSlow = function (size) {
	  return allocUnsafe(null, size)
	}
	
	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') {
	    encoding = 'utf8'
	  }
	
	  if (!Buffer.isEncoding(encoding)) {
	    throw new TypeError('"encoding" must be a valid string encoding')
	  }
	
	  var length = byteLength(string, encoding) | 0
	  that = createBuffer(that, length)
	
	  var actual = that.write(string, encoding)
	
	  if (actual !== length) {
	    // Writing a hex string, for example, that contains invalid characters will
	    // cause everything after the first invalid character to be ignored. (e.g.
	    // 'abxxcd' will be treated as 'ab')
	    that = that.slice(0, actual)
	  }
	
	  return that
	}
	
	function fromArrayLike (that, array) {
	  var length = array.length < 0 ? 0 : checked(array.length) | 0
	  that = createBuffer(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}
	
	function fromArrayBuffer (that, array, byteOffset, length) {
	  array.byteLength // this throws if `array` is not a valid ArrayBuffer
	
	  if (byteOffset < 0 || array.byteLength < byteOffset) {
	    throw new RangeError('\'offset\' is out of bounds')
	  }
	
	  if (array.byteLength < byteOffset + (length || 0)) {
	    throw new RangeError('\'length\' is out of bounds')
	  }
	
	  if (byteOffset === undefined && length === undefined) {
	    array = new Uint8Array(array)
	  } else if (length === undefined) {
	    array = new Uint8Array(array, byteOffset)
	  } else {
	    array = new Uint8Array(array, byteOffset, length)
	  }
	
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = array
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromArrayLike(that, array)
	  }
	  return that
	}
	
	function fromObject (that, obj) {
	  if (Buffer.isBuffer(obj)) {
	    var len = checked(obj.length) | 0
	    that = createBuffer(that, len)
	
	    if (that.length === 0) {
	      return that
	    }
	
	    obj.copy(that, 0, 0, len)
	    return that
	  }
	
	  if (obj) {
	    if ((typeof ArrayBuffer !== 'undefined' &&
	        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
	      if (typeof obj.length !== 'number' || isnan(obj.length)) {
	        return createBuffer(that, 0)
	      }
	      return fromArrayLike(that, obj)
	    }
	
	    if (obj.type === 'Buffer' && isArray(obj.data)) {
	      return fromArrayLike(that, obj.data)
	    }
	  }
	
	  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
	}
	
	function checked (length) {
	  // Note: cannot use `length < kMaxLength()` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}
	
	function SlowBuffer (length) {
	  if (+length != length) { // eslint-disable-line eqeqeq
	    length = 0
	  }
	  return Buffer.alloc(+length)
	}
	
	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}
	
	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }
	
	  if (a === b) return 0
	
	  var x = a.length
	  var y = b.length
	
	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i]
	      y = b[i]
	      break
	    }
	  }
	
	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}
	
	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'latin1':
	    case 'binary':
	    case 'base64':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}
	
	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) {
	    throw new TypeError('"list" argument must be an Array of Buffers')
	  }
	
	  if (list.length === 0) {
	    return Buffer.alloc(0)
	  }
	
	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; ++i) {
	      length += list[i].length
	    }
	  }
	
	  var buffer = Buffer.allocUnsafe(length)
	  var pos = 0
	  for (i = 0; i < list.length; ++i) {
	    var buf = list[i]
	    if (!Buffer.isBuffer(buf)) {
	      throw new TypeError('"list" argument must be an Array of Buffers')
	    }
	    buf.copy(buffer, pos)
	    pos += buf.length
	  }
	  return buffer
	}
	
	function byteLength (string, encoding) {
	  if (Buffer.isBuffer(string)) {
	    return string.length
	  }
	  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
	      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
	    return string.byteLength
	  }
	  if (typeof string !== 'string') {
	    string = '' + string
	  }
	
	  var len = string.length
	  if (len === 0) return 0
	
	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'latin1':
	      case 'binary':
	        return len
	      case 'utf8':
	      case 'utf-8':
	      case undefined:
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength
	
	function slowToString (encoding, start, end) {
	  var loweredCase = false
	
	  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	  // property of a typed array.
	
	  // This behaves neither like String nor Uint8Array in that we set start/end
	  // to their upper/lower bounds if the value passed is out of range.
	  // undefined is handled specially as per ECMA-262 6th Edition,
	  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
	  if (start === undefined || start < 0) {
	    start = 0
	  }
	  // Return early if start > this.length. Done here to prevent potential uint32
	  // coercion fail below.
	  if (start > this.length) {
	    return ''
	  }
	
	  if (end === undefined || end > this.length) {
	    end = this.length
	  }
	
	  if (end <= 0) {
	    return ''
	  }
	
	  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
	  end >>>= 0
	  start >>>= 0
	
	  if (end <= start) {
	    return ''
	  }
	
	  if (!encoding) encoding = 'utf8'
	
	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)
	
	      case 'ascii':
	        return asciiSlice(this, start, end)
	
	      case 'latin1':
	      case 'binary':
	        return latin1Slice(this, start, end)
	
	      case 'base64':
	        return base64Slice(this, start, end)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
	// Buffer instances.
	Buffer.prototype._isBuffer = true
	
	function swap (b, n, m) {
	  var i = b[n]
	  b[n] = b[m]
	  b[m] = i
	}
	
	Buffer.prototype.swap16 = function swap16 () {
	  var len = this.length
	  if (len % 2 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 16-bits')
	  }
	  for (var i = 0; i < len; i += 2) {
	    swap(this, i, i + 1)
	  }
	  return this
	}
	
	Buffer.prototype.swap32 = function swap32 () {
	  var len = this.length
	  if (len % 4 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 32-bits')
	  }
	  for (var i = 0; i < len; i += 4) {
	    swap(this, i, i + 3)
	    swap(this, i + 1, i + 2)
	  }
	  return this
	}
	
	Buffer.prototype.swap64 = function swap64 () {
	  var len = this.length
	  if (len % 8 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 64-bits')
	  }
	  for (var i = 0; i < len; i += 8) {
	    swap(this, i, i + 7)
	    swap(this, i + 1, i + 6)
	    swap(this, i + 2, i + 5)
	    swap(this, i + 3, i + 4)
	  }
	  return this
	}
	
	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}
	
	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}
	
	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}
	
	Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
	  if (!Buffer.isBuffer(target)) {
	    throw new TypeError('Argument must be a Buffer')
	  }
	
	  if (start === undefined) {
	    start = 0
	  }
	  if (end === undefined) {
	    end = target ? target.length : 0
	  }
	  if (thisStart === undefined) {
	    thisStart = 0
	  }
	  if (thisEnd === undefined) {
	    thisEnd = this.length
	  }
	
	  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
	    throw new RangeError('out of range index')
	  }
	
	  if (thisStart >= thisEnd && start >= end) {
	    return 0
	  }
	  if (thisStart >= thisEnd) {
	    return -1
	  }
	  if (start >= end) {
	    return 1
	  }
	
	  start >>>= 0
	  end >>>= 0
	  thisStart >>>= 0
	  thisEnd >>>= 0
	
	  if (this === target) return 0
	
	  var x = thisEnd - thisStart
	  var y = end - start
	  var len = Math.min(x, y)
	
	  var thisCopy = this.slice(thisStart, thisEnd)
	  var targetCopy = target.slice(start, end)
	
	  for (var i = 0; i < len; ++i) {
	    if (thisCopy[i] !== targetCopy[i]) {
	      x = thisCopy[i]
	      y = targetCopy[i]
	      break
	    }
	  }
	
	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}
	
	// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
	// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
	//
	// Arguments:
	// - buffer - a Buffer to search
	// - val - a string, Buffer, or number
	// - byteOffset - an index into `buffer`; will be clamped to an int32
	// - encoding - an optional encoding, relevant is val is a string
	// - dir - true for indexOf, false for lastIndexOf
	function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
	  // Empty buffer means no match
	  if (buffer.length === 0) return -1
	
	  // Normalize byteOffset
	  if (typeof byteOffset === 'string') {
	    encoding = byteOffset
	    byteOffset = 0
	  } else if (byteOffset > 0x7fffffff) {
	    byteOffset = 0x7fffffff
	  } else if (byteOffset < -0x80000000) {
	    byteOffset = -0x80000000
	  }
	  byteOffset = +byteOffset  // Coerce to Number.
	  if (isNaN(byteOffset)) {
	    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
	    byteOffset = dir ? 0 : (buffer.length - 1)
	  }
	
	  // Normalize byteOffset: negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
	  if (byteOffset >= buffer.length) {
	    if (dir) return -1
	    else byteOffset = buffer.length - 1
	  } else if (byteOffset < 0) {
	    if (dir) byteOffset = 0
	    else return -1
	  }
	
	  // Normalize val
	  if (typeof val === 'string') {
	    val = Buffer.from(val, encoding)
	  }
	
	  // Finally, search either indexOf (if dir is true) or lastIndexOf
	  if (Buffer.isBuffer(val)) {
	    // Special case: looking for empty string/buffer always fails
	    if (val.length === 0) {
	      return -1
	    }
	    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
	  } else if (typeof val === 'number') {
	    val = val & 0xFF // Search for a byte value [0-255]
	    if (Buffer.TYPED_ARRAY_SUPPORT &&
	        typeof Uint8Array.prototype.indexOf === 'function') {
	      if (dir) {
	        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
	      } else {
	        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
	      }
	    }
	    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
	  }
	
	  throw new TypeError('val must be string, number or Buffer')
	}
	
	function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
	  var indexSize = 1
	  var arrLength = arr.length
	  var valLength = val.length
	
	  if (encoding !== undefined) {
	    encoding = String(encoding).toLowerCase()
	    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
	        encoding === 'utf16le' || encoding === 'utf-16le') {
	      if (arr.length < 2 || val.length < 2) {
	        return -1
	      }
	      indexSize = 2
	      arrLength /= 2
	      valLength /= 2
	      byteOffset /= 2
	    }
	  }
	
	  function read (buf, i) {
	    if (indexSize === 1) {
	      return buf[i]
	    } else {
	      return buf.readUInt16BE(i * indexSize)
	    }
	  }
	
	  var i
	  if (dir) {
	    var foundIndex = -1
	    for (i = byteOffset; i < arrLength; i++) {
	      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
	      } else {
	        if (foundIndex !== -1) i -= i - foundIndex
	        foundIndex = -1
	      }
	    }
	  } else {
	    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
	    for (i = byteOffset; i >= 0; i--) {
	      var found = true
	      for (var j = 0; j < valLength; j++) {
	        if (read(arr, i + j) !== read(val, j)) {
	          found = false
	          break
	        }
	      }
	      if (found) return i
	    }
	  }
	
	  return -1
	}
	
	Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
	  return this.indexOf(val, byteOffset, encoding) !== -1
	}
	
	Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
	}
	
	Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
	}
	
	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }
	
	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')
	
	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; ++i) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) return i
	    buf[offset + i] = parsed
	  }
	  return i
	}
	
	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}
	
	function latin1Write (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}
	
	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}
	
	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}
	
	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    throw new Error(
	      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
	    )
	  }
	
	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining
	
	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('Attempt to write outside buffer bounds')
	  }
	
	  if (!encoding) encoding = 'utf8'
	
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)
	
	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)
	
	      case 'ascii':
	        return asciiWrite(this, string, offset, length)
	
	      case 'latin1':
	      case 'binary':
	        return latin1Write(this, string, offset, length)
	
	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)
	
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)
	
	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	
	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}
	
	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}
	
	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []
	
	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1
	
	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint
	
	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }
	
	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }
	
	    res.push(codePoint)
	    i += bytesPerSequence
	  }
	
	  return decodeCodePointsArray(res)
	}
	
	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000
	
	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }
	
	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}
	
	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}
	
	function latin1Slice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)
	
	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}
	
	function hexSlice (buf, start, end) {
	  var len = buf.length
	
	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len
	
	  var out = ''
	  for (var i = start; i < end; ++i) {
	    out += toHex(buf[i])
	  }
	  return out
	}
	
	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}
	
	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end
	
	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }
	
	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }
	
	  if (end < start) end = start
	
	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = this.subarray(start, end)
	    newBuf.__proto__ = Buffer.prototype
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; ++i) {
	      newBuf[i] = this[i + start]
	    }
	  }
	
	  return newBuf
	}
	
	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}
	
	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }
	
	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }
	
	  return val
	}
	
	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}
	
	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}
	
	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}
	
	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}
	
	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}
	
	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)
	
	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80
	
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)
	
	  return val
	}
	
	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}
	
	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}
	
	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}
	
	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	
	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}
	
	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}
	
	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}
	
	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}
	
	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}
	
	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	}
	
	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }
	
	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }
	
	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}
	
	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}
	
	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}
	
	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = 0
	  var mul = 1
	  var sub = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)
	
	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }
	
	  var i = byteLength - 1
	  var mul = 1
	  var sub = 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }
	
	  return offset + byteLength
	}
	
	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}
	
	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}
	
	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}
	
	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}
	
	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	  if (offset < 0) throw new RangeError('Index out of range')
	}
	
	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}
	
	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}
	
	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}
	
	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}
	
	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}
	
	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start
	
	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0
	
	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')
	
	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }
	
	  var len = end - start
	  var i
	
	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; --i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; ++i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    Uint8Array.prototype.set.call(
	      target,
	      this.subarray(start, start + len),
	      targetStart
	    )
	  }
	
	  return len
	}
	
	// Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])
	Buffer.prototype.fill = function fill (val, start, end, encoding) {
	  // Handle string cases:
	  if (typeof val === 'string') {
	    if (typeof start === 'string') {
	      encoding = start
	      start = 0
	      end = this.length
	    } else if (typeof end === 'string') {
	      encoding = end
	      end = this.length
	    }
	    if (val.length === 1) {
	      var code = val.charCodeAt(0)
	      if (code < 256) {
	        val = code
	      }
	    }
	    if (encoding !== undefined && typeof encoding !== 'string') {
	      throw new TypeError('encoding must be a string')
	    }
	    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
	      throw new TypeError('Unknown encoding: ' + encoding)
	    }
	  } else if (typeof val === 'number') {
	    val = val & 255
	  }
	
	  // Invalid ranges are not set to a default, so can range check early.
	  if (start < 0 || this.length < start || this.length < end) {
	    throw new RangeError('Out of range index')
	  }
	
	  if (end <= start) {
	    return this
	  }
	
	  start = start >>> 0
	  end = end === undefined ? this.length : end >>> 0
	
	  if (!val) val = 0
	
	  var i
	  if (typeof val === 'number') {
	    for (i = start; i < end; ++i) {
	      this[i] = val
	    }
	  } else {
	    var bytes = Buffer.isBuffer(val)
	      ? val
	      : utf8ToBytes(new Buffer(val, encoding).toString())
	    var len = bytes.length
	    for (i = 0; i < end - start; ++i) {
	      this[i + start] = bytes[i % len]
	    }
	  }
	
	  return this
	}
	
	// HELPER FUNCTIONS
	// ================
	
	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g
	
	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}
	
	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}
	
	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}
	
	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []
	
	  for (var i = 0; i < length; ++i) {
	    codePoint = string.charCodeAt(i)
	
	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }
	
	        // valid lead
	        leadSurrogate = codePoint
	
	        continue
	      }
	
	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }
	
	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }
	
	    leadSurrogate = null
	
	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }
	
	  return bytes
	}
	
	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}
	
	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    if ((units -= 2) < 0) break
	
	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }
	
	  return byteArray
	}
	
	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}
	
	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; ++i) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}
	
	function isnan (val) {
	  return val !== val // eslint-disable-line no-self-compare
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 283 */
/***/ function(module, exports) {

	'use strict'
	
	exports.byteLength = byteLength
	exports.toByteArray = toByteArray
	exports.fromByteArray = fromByteArray
	
	var lookup = []
	var revLookup = []
	var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array
	
	var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	for (var i = 0, len = code.length; i < len; ++i) {
	  lookup[i] = code[i]
	  revLookup[code.charCodeAt(i)] = i
	}
	
	revLookup['-'.charCodeAt(0)] = 62
	revLookup['_'.charCodeAt(0)] = 63
	
	function placeHoldersCount (b64) {
	  var len = b64.length
	  if (len % 4 > 0) {
	    throw new Error('Invalid string. Length must be a multiple of 4')
	  }
	
	  // the number of equal signs (place holders)
	  // if there are two placeholders, than the two characters before it
	  // represent one byte
	  // if there is only one, then the three characters before it represent 2 bytes
	  // this is just a cheap hack to not do indexOf twice
	  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
	}
	
	function byteLength (b64) {
	  // base64 is 4/3 + up to two characters of the original data
	  return b64.length * 3 / 4 - placeHoldersCount(b64)
	}
	
	function toByteArray (b64) {
	  var i, j, l, tmp, placeHolders, arr
	  var len = b64.length
	  placeHolders = placeHoldersCount(b64)
	
	  arr = new Arr(len * 3 / 4 - placeHolders)
	
	  // if there are placeholders, only get up to the last complete 4 chars
	  l = placeHolders > 0 ? len - 4 : len
	
	  var L = 0
	
	  for (i = 0, j = 0; i < l; i += 4, j += 3) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
	    arr[L++] = (tmp >> 16) & 0xFF
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }
	
	  if (placeHolders === 2) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
	    arr[L++] = tmp & 0xFF
	  } else if (placeHolders === 1) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }
	
	  return arr
	}
	
	function tripletToBase64 (num) {
	  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
	}
	
	function encodeChunk (uint8, start, end) {
	  var tmp
	  var output = []
	  for (var i = start; i < end; i += 3) {
	    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
	    output.push(tripletToBase64(tmp))
	  }
	  return output.join('')
	}
	
	function fromByteArray (uint8) {
	  var tmp
	  var len = uint8.length
	  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
	  var output = ''
	  var parts = []
	  var maxChunkLength = 16383 // must be multiple of 3
	
	  // go through the array every three bytes, we'll deal with trailing stuff later
	  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
	    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
	  }
	
	  // pad the end with zeros, but make sure to not forget the extra bytes
	  if (extraBytes === 1) {
	    tmp = uint8[len - 1]
	    output += lookup[tmp >> 2]
	    output += lookup[(tmp << 4) & 0x3F]
	    output += '=='
	  } else if (extraBytes === 2) {
	    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
	    output += lookup[tmp >> 10]
	    output += lookup[(tmp >> 4) & 0x3F]
	    output += lookup[(tmp << 2) & 0x3F]
	    output += '='
	  }
	
	  parts.push(output)
	
	  return parts.join('')
	}


/***/ },
/* 284 */
/***/ function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]
	
	  i += d
	
	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}
	
	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}
	
	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}
	
	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0
	
	  value = Math.abs(value)
	
	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }
	
	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }
	
	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}
	
	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}
	
	  buffer[offset + i - d] |= s * 128
	}


/***/ },
/* 285 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {var Stream = __webpack_require__(287)
	
	// through
	//
	// a stream that does nothing but re-emit the input.
	// useful for aggregating a series of changing but not ending streams into one stream)
	
	exports = module.exports = through
	through.through = through
	
	//create a readable writable stream.
	
	function through (write, end, opts) {
	  write = write || function (data) { this.queue(data) }
	  end = end || function () { this.queue(null) }
	
	  var ended = false, destroyed = false, buffer = [], _ended = false
	  var stream = new Stream()
	  stream.readable = stream.writable = true
	  stream.paused = false
	
	//  stream.autoPause   = !(opts && opts.autoPause   === false)
	  stream.autoDestroy = !(opts && opts.autoDestroy === false)
	
	  stream.write = function (data) {
	    write.call(this, data)
	    return !stream.paused
	  }
	
	  function drain() {
	    while(buffer.length && !stream.paused) {
	      var data = buffer.shift()
	      if(null === data)
	        return stream.emit('end')
	      else
	        stream.emit('data', data)
	    }
	  }
	
	  stream.queue = stream.push = function (data) {
	//    console.error(ended)
	    if(_ended) return stream
	    if(data === null) _ended = true
	    buffer.push(data)
	    drain()
	    return stream
	  }
	
	  //this will be registered as the first 'end' listener
	  //must call destroy next tick, to make sure we're after any
	  //stream piped from here.
	  //this is only a problem if end is not emitted synchronously.
	  //a nicer way to do this is to make sure this is the last listener for 'end'
	
	  stream.on('end', function () {
	    stream.readable = false
	    if(!stream.writable && stream.autoDestroy)
	      process.nextTick(function () {
	        stream.destroy()
	      })
	  })
	
	  function _end () {
	    stream.writable = false
	    end.call(stream)
	    if(!stream.readable && stream.autoDestroy)
	      stream.destroy()
	  }
	
	  stream.end = function (data) {
	    if(ended) return
	    ended = true
	    if(arguments.length) stream.write(data)
	    _end() // will emit or queue
	    return stream
	  }
	
	  stream.destroy = function () {
	    if(destroyed) return
	    destroyed = true
	    ended = true
	    buffer.length = 0
	    stream.writable = stream.readable = false
	    stream.emit('close')
	    return stream
	  }
	
	  stream.pause = function () {
	    if(stream.paused) return
	    stream.paused = true
	    return stream
	  }
	
	  stream.resume = function () {
	    if(stream.paused) {
	      stream.paused = false
	      stream.emit('resume')
	    }
	    drain()
	    //may have become paused again,
	    //as drain emits 'data'.
	    if(!stream.paused)
	      stream.emit('drain')
	    return stream
	  }
	  return stream
	}
	
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	module.exports = Stream;
	
	var EE = __webpack_require__(288).EventEmitter;
	var inherits = __webpack_require__(289);
	
	inherits(Stream, EE);
	Stream.Readable = __webpack_require__(290);
	Stream.Writable = __webpack_require__(306);
	Stream.Duplex = __webpack_require__(307);
	Stream.Transform = __webpack_require__(308);
	Stream.PassThrough = __webpack_require__(309);
	
	// Backwards-compat with node 0.4.x
	Stream.Stream = Stream;
	
	
	
	// old-style streams.  Note that the pipe method (the only relevant
	// part of this class) is overridden in the Readable class.
	
	function Stream() {
	  EE.call(this);
	}
	
	Stream.prototype.pipe = function(dest, options) {
	  var source = this;
	
	  function ondata(chunk) {
	    if (dest.writable) {
	      if (false === dest.write(chunk) && source.pause) {
	        source.pause();
	      }
	    }
	  }
	
	  source.on('data', ondata);
	
	  function ondrain() {
	    if (source.readable && source.resume) {
	      source.resume();
	    }
	  }
	
	  dest.on('drain', ondrain);
	
	  // If the 'end' option is not supplied, dest.end() will be called when
	  // source gets the 'end' or 'close' events.  Only dest.end() once.
	  if (!dest._isStdio && (!options || options.end !== false)) {
	    source.on('end', onend);
	    source.on('close', onclose);
	  }
	
	  var didOnEnd = false;
	  function onend() {
	    if (didOnEnd) return;
	    didOnEnd = true;
	
	    dest.end();
	  }
	
	
	  function onclose() {
	    if (didOnEnd) return;
	    didOnEnd = true;
	
	    if (typeof dest.destroy === 'function') dest.destroy();
	  }
	
	  // don't leave dangling pipes when there are errors.
	  function onerror(er) {
	    cleanup();
	    if (EE.listenerCount(this, 'error') === 0) {
	      throw er; // Unhandled stream error in pipe.
	    }
	  }
	
	  source.on('error', onerror);
	  dest.on('error', onerror);
	
	  // remove all the event listeners that were added.
	  function cleanup() {
	    source.removeListener('data', ondata);
	    dest.removeListener('drain', ondrain);
	
	    source.removeListener('end', onend);
	    source.removeListener('close', onclose);
	
	    source.removeListener('error', onerror);
	    dest.removeListener('error', onerror);
	
	    source.removeListener('end', cleanup);
	    source.removeListener('close', cleanup);
	
	    dest.removeListener('close', cleanup);
	  }
	
	  source.on('end', cleanup);
	  source.on('close', cleanup);
	
	  dest.on('close', cleanup);
	
	  dest.emit('pipe', source);
	
	  // Allow for unix-like usage: A.pipe(B).pipe(C)
	  return dest;
	};


/***/ },
/* 288 */
/***/ function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	function EventEmitter() {
	  this._events = this._events || {};
	  this._maxListeners = this._maxListeners || undefined;
	}
	module.exports = EventEmitter;
	
	// Backwards-compat with node 0.10.x
	EventEmitter.EventEmitter = EventEmitter;
	
	EventEmitter.prototype._events = undefined;
	EventEmitter.prototype._maxListeners = undefined;
	
	// By default EventEmitters will print a warning if more than 10 listeners are
	// added to it. This is a useful default which helps finding memory leaks.
	EventEmitter.defaultMaxListeners = 10;
	
	// Obviously not all Emitters should be limited to 10. This function allows
	// that to be increased. Set to zero for unlimited.
	EventEmitter.prototype.setMaxListeners = function(n) {
	  if (!isNumber(n) || n < 0 || isNaN(n))
	    throw TypeError('n must be a positive number');
	  this._maxListeners = n;
	  return this;
	};
	
	EventEmitter.prototype.emit = function(type) {
	  var er, handler, len, args, i, listeners;
	
	  if (!this._events)
	    this._events = {};
	
	  // If there is no 'error' event listener then throw.
	  if (type === 'error') {
	    if (!this._events.error ||
	        (isObject(this._events.error) && !this._events.error.length)) {
	      er = arguments[1];
	      if (er instanceof Error) {
	        throw er; // Unhandled 'error' event
	      } else {
	        // At least give some kind of context to the user
	        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
	        err.context = er;
	        throw err;
	      }
	    }
	  }
	
	  handler = this._events[type];
	
	  if (isUndefined(handler))
	    return false;
	
	  if (isFunction(handler)) {
	    switch (arguments.length) {
	      // fast cases
	      case 1:
	        handler.call(this);
	        break;
	      case 2:
	        handler.call(this, arguments[1]);
	        break;
	      case 3:
	        handler.call(this, arguments[1], arguments[2]);
	        break;
	      // slower
	      default:
	        args = Array.prototype.slice.call(arguments, 1);
	        handler.apply(this, args);
	    }
	  } else if (isObject(handler)) {
	    args = Array.prototype.slice.call(arguments, 1);
	    listeners = handler.slice();
	    len = listeners.length;
	    for (i = 0; i < len; i++)
	      listeners[i].apply(this, args);
	  }
	
	  return true;
	};
	
	EventEmitter.prototype.addListener = function(type, listener) {
	  var m;
	
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  if (!this._events)
	    this._events = {};
	
	  // To avoid recursion in the case that type === "newListener"! Before
	  // adding it to the listeners, first emit "newListener".
	  if (this._events.newListener)
	    this.emit('newListener', type,
	              isFunction(listener.listener) ?
	              listener.listener : listener);
	
	  if (!this._events[type])
	    // Optimize the case of one listener. Don't need the extra array object.
	    this._events[type] = listener;
	  else if (isObject(this._events[type]))
	    // If we've already got an array, just append.
	    this._events[type].push(listener);
	  else
	    // Adding the second element, need to change to array.
	    this._events[type] = [this._events[type], listener];
	
	  // Check for listener leak
	  if (isObject(this._events[type]) && !this._events[type].warned) {
	    if (!isUndefined(this._maxListeners)) {
	      m = this._maxListeners;
	    } else {
	      m = EventEmitter.defaultMaxListeners;
	    }
	
	    if (m && m > 0 && this._events[type].length > m) {
	      this._events[type].warned = true;
	      console.error('(node) warning: possible EventEmitter memory ' +
	                    'leak detected. %d listeners added. ' +
	                    'Use emitter.setMaxListeners() to increase limit.',
	                    this._events[type].length);
	      if (typeof console.trace === 'function') {
	        // not supported in IE 10
	        console.trace();
	      }
	    }
	  }
	
	  return this;
	};
	
	EventEmitter.prototype.on = EventEmitter.prototype.addListener;
	
	EventEmitter.prototype.once = function(type, listener) {
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  var fired = false;
	
	  function g() {
	    this.removeListener(type, g);
	
	    if (!fired) {
	      fired = true;
	      listener.apply(this, arguments);
	    }
	  }
	
	  g.listener = listener;
	  this.on(type, g);
	
	  return this;
	};
	
	// emits a 'removeListener' event iff the listener was removed
	EventEmitter.prototype.removeListener = function(type, listener) {
	  var list, position, length, i;
	
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  if (!this._events || !this._events[type])
	    return this;
	
	  list = this._events[type];
	  length = list.length;
	  position = -1;
	
	  if (list === listener ||
	      (isFunction(list.listener) && list.listener === listener)) {
	    delete this._events[type];
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	
	  } else if (isObject(list)) {
	    for (i = length; i-- > 0;) {
	      if (list[i] === listener ||
	          (list[i].listener && list[i].listener === listener)) {
	        position = i;
	        break;
	      }
	    }
	
	    if (position < 0)
	      return this;
	
	    if (list.length === 1) {
	      list.length = 0;
	      delete this._events[type];
	    } else {
	      list.splice(position, 1);
	    }
	
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	  }
	
	  return this;
	};
	
	EventEmitter.prototype.removeAllListeners = function(type) {
	  var key, listeners;
	
	  if (!this._events)
	    return this;
	
	  // not listening for removeListener, no need to emit
	  if (!this._events.removeListener) {
	    if (arguments.length === 0)
	      this._events = {};
	    else if (this._events[type])
	      delete this._events[type];
	    return this;
	  }
	
	  // emit removeListener for all listeners on all events
	  if (arguments.length === 0) {
	    for (key in this._events) {
	      if (key === 'removeListener') continue;
	      this.removeAllListeners(key);
	    }
	    this.removeAllListeners('removeListener');
	    this._events = {};
	    return this;
	  }
	
	  listeners = this._events[type];
	
	  if (isFunction(listeners)) {
	    this.removeListener(type, listeners);
	  } else if (listeners) {
	    // LIFO order
	    while (listeners.length)
	      this.removeListener(type, listeners[listeners.length - 1]);
	  }
	  delete this._events[type];
	
	  return this;
	};
	
	EventEmitter.prototype.listeners = function(type) {
	  var ret;
	  if (!this._events || !this._events[type])
	    ret = [];
	  else if (isFunction(this._events[type]))
	    ret = [this._events[type]];
	  else
	    ret = this._events[type].slice();
	  return ret;
	};
	
	EventEmitter.prototype.listenerCount = function(type) {
	  if (this._events) {
	    var evlistener = this._events[type];
	
	    if (isFunction(evlistener))
	      return 1;
	    else if (evlistener)
	      return evlistener.length;
	  }
	  return 0;
	};
	
	EventEmitter.listenerCount = function(emitter, type) {
	  return emitter.listenerCount(type);
	};
	
	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	
	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	
	function isUndefined(arg) {
	  return arg === void 0;
	}


/***/ },
/* 289 */
/***/ function(module, exports) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {var Stream = (function (){
	  try {
	    return __webpack_require__(287); // hack to fix a circular dependency issue when used with browserify
	  } catch(_){}
	}());
	exports = module.exports = __webpack_require__(291);
	exports.Stream = Stream || exports;
	exports.Readable = exports;
	exports.Writable = __webpack_require__(299);
	exports.Duplex = __webpack_require__(298);
	exports.Transform = __webpack_require__(304);
	exports.PassThrough = __webpack_require__(305);
	
	if (!process.browser && process.env.READABLE_STREAM === 'disable' && Stream) {
	  module.exports = Stream;
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	module.exports = Readable;
	
	/*<replacement>*/
	var processNextTick = __webpack_require__(292);
	/*</replacement>*/
	
	/*<replacement>*/
	var isArray = __webpack_require__(293);
	/*</replacement>*/
	
	/*<replacement>*/
	var Duplex;
	/*</replacement>*/
	
	Readable.ReadableState = ReadableState;
	
	/*<replacement>*/
	var EE = __webpack_require__(288).EventEmitter;
	
	var EElistenerCount = function (emitter, type) {
	  return emitter.listeners(type).length;
	};
	/*</replacement>*/
	
	/*<replacement>*/
	var Stream;
	(function () {
	  try {
	    Stream = __webpack_require__(287);
	  } catch (_) {} finally {
	    if (!Stream) Stream = __webpack_require__(288).EventEmitter;
	  }
	})();
	/*</replacement>*/
	
	var Buffer = __webpack_require__(282).Buffer;
	/*<replacement>*/
	var bufferShim = __webpack_require__(294);
	/*</replacement>*/
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	/*<replacement>*/
	var debugUtil = __webpack_require__(296);
	var debug = void 0;
	if (debugUtil && debugUtil.debuglog) {
	  debug = debugUtil.debuglog('stream');
	} else {
	  debug = function () {};
	}
	/*</replacement>*/
	
	var BufferList = __webpack_require__(297);
	var StringDecoder;
	
	util.inherits(Readable, Stream);
	
	function prependListener(emitter, event, fn) {
	  // Sadly this is not cacheable as some libraries bundle their own
	  // event emitter implementation with them.
	  if (typeof emitter.prependListener === 'function') {
	    return emitter.prependListener(event, fn);
	  } else {
	    // This is a hack to make sure that our error handler is attached before any
	    // userland ones.  NEVER DO THIS. This is here only because this code needs
	    // to continue to work with older versions of Node.js that do not include
	    // the prependListener() method. The goal is to eventually remove this hack.
	    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
	  }
	}
	
	function ReadableState(options, stream) {
	  Duplex = Duplex || __webpack_require__(298);
	
	  options = options || {};
	
	  // object stream flag. Used to make read(n) ignore n and to
	  // make all the buffer merging and length checks go away
	  this.objectMode = !!options.objectMode;
	
	  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;
	
	  // the point at which it stops calling _read() to fill the buffer
	  // Note: 0 is a valid value, means "don't call _read preemptively ever"
	  var hwm = options.highWaterMark;
	  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;
	
	  // cast to ints.
	  this.highWaterMark = ~ ~this.highWaterMark;
	
	  // A linked list is used to store data chunks instead of an array because the
	  // linked list can remove elements from the beginning faster than
	  // array.shift()
	  this.buffer = new BufferList();
	  this.length = 0;
	  this.pipes = null;
	  this.pipesCount = 0;
	  this.flowing = null;
	  this.ended = false;
	  this.endEmitted = false;
	  this.reading = false;
	
	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;
	
	  // whenever we return null, then we set a flag to say
	  // that we're awaiting a 'readable' event emission.
	  this.needReadable = false;
	  this.emittedReadable = false;
	  this.readableListening = false;
	  this.resumeScheduled = false;
	
	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';
	
	  // when piping, we only care about 'readable' events that happen
	  // after read()ing all the bytes and not getting any pushback.
	  this.ranOut = false;
	
	  // the number of writers that are awaiting a drain event in .pipe()s
	  this.awaitDrain = 0;
	
	  // if true, a maybeReadMore has been scheduled
	  this.readingMore = false;
	
	  this.decoder = null;
	  this.encoding = null;
	  if (options.encoding) {
	    if (!StringDecoder) StringDecoder = __webpack_require__(303).StringDecoder;
	    this.decoder = new StringDecoder(options.encoding);
	    this.encoding = options.encoding;
	  }
	}
	
	function Readable(options) {
	  Duplex = Duplex || __webpack_require__(298);
	
	  if (!(this instanceof Readable)) return new Readable(options);
	
	  this._readableState = new ReadableState(options, this);
	
	  // legacy
	  this.readable = true;
	
	  if (options && typeof options.read === 'function') this._read = options.read;
	
	  Stream.call(this);
	}
	
	// Manually shove something into the read() buffer.
	// This returns true if the highWaterMark has not been hit yet,
	// similar to how Writable.write() returns true if you should
	// write() some more.
	Readable.prototype.push = function (chunk, encoding) {
	  var state = this._readableState;
	
	  if (!state.objectMode && typeof chunk === 'string') {
	    encoding = encoding || state.defaultEncoding;
	    if (encoding !== state.encoding) {
	      chunk = bufferShim.from(chunk, encoding);
	      encoding = '';
	    }
	  }
	
	  return readableAddChunk(this, state, chunk, encoding, false);
	};
	
	// Unshift should *always* be something directly out of read()
	Readable.prototype.unshift = function (chunk) {
	  var state = this._readableState;
	  return readableAddChunk(this, state, chunk, '', true);
	};
	
	Readable.prototype.isPaused = function () {
	  return this._readableState.flowing === false;
	};
	
	function readableAddChunk(stream, state, chunk, encoding, addToFront) {
	  var er = chunkInvalid(state, chunk);
	  if (er) {
	    stream.emit('error', er);
	  } else if (chunk === null) {
	    state.reading = false;
	    onEofChunk(stream, state);
	  } else if (state.objectMode || chunk && chunk.length > 0) {
	    if (state.ended && !addToFront) {
	      var e = new Error('stream.push() after EOF');
	      stream.emit('error', e);
	    } else if (state.endEmitted && addToFront) {
	      var _e = new Error('stream.unshift() after end event');
	      stream.emit('error', _e);
	    } else {
	      var skipAdd;
	      if (state.decoder && !addToFront && !encoding) {
	        chunk = state.decoder.write(chunk);
	        skipAdd = !state.objectMode && chunk.length === 0;
	      }
	
	      if (!addToFront) state.reading = false;
	
	      // Don't add to the buffer if we've decoded to an empty string chunk and
	      // we're not in object mode
	      if (!skipAdd) {
	        // if we want the data now, just emit it.
	        if (state.flowing && state.length === 0 && !state.sync) {
	          stream.emit('data', chunk);
	          stream.read(0);
	        } else {
	          // update the buffer info.
	          state.length += state.objectMode ? 1 : chunk.length;
	          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
	
	          if (state.needReadable) emitReadable(stream);
	        }
	      }
	
	      maybeReadMore(stream, state);
	    }
	  } else if (!addToFront) {
	    state.reading = false;
	  }
	
	  return needMoreData(state);
	}
	
	// if it's past the high water mark, we can push in some more.
	// Also, if we have no data yet, we can stand some
	// more bytes.  This is to work around cases where hwm=0,
	// such as the repl.  Also, if the push() triggered a
	// readable event, and the user called read(largeNumber) such that
	// needReadable was set, then we ought to push more, so that another
	// 'readable' event will be triggered.
	function needMoreData(state) {
	  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
	}
	
	// backwards compatibility.
	Readable.prototype.setEncoding = function (enc) {
	  if (!StringDecoder) StringDecoder = __webpack_require__(303).StringDecoder;
	  this._readableState.decoder = new StringDecoder(enc);
	  this._readableState.encoding = enc;
	  return this;
	};
	
	// Don't raise the hwm > 8MB
	var MAX_HWM = 0x800000;
	function computeNewHighWaterMark(n) {
	  if (n >= MAX_HWM) {
	    n = MAX_HWM;
	  } else {
	    // Get the next highest power of 2 to prevent increasing hwm excessively in
	    // tiny amounts
	    n--;
	    n |= n >>> 1;
	    n |= n >>> 2;
	    n |= n >>> 4;
	    n |= n >>> 8;
	    n |= n >>> 16;
	    n++;
	  }
	  return n;
	}
	
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function howMuchToRead(n, state) {
	  if (n <= 0 || state.length === 0 && state.ended) return 0;
	  if (state.objectMode) return 1;
	  if (n !== n) {
	    // Only flow one buffer at a time
	    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
	  }
	  // If we're asking for more than the current hwm, then raise the hwm.
	  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
	  if (n <= state.length) return n;
	  // Don't have enough
	  if (!state.ended) {
	    state.needReadable = true;
	    return 0;
	  }
	  return state.length;
	}
	
	// you can override either this method, or the async _read(n) below.
	Readable.prototype.read = function (n) {
	  debug('read', n);
	  n = parseInt(n, 10);
	  var state = this._readableState;
	  var nOrig = n;
	
	  if (n !== 0) state.emittedReadable = false;
	
	  // if we're doing read(0) to trigger a readable event, but we
	  // already have a bunch of data in the buffer, then just trigger
	  // the 'readable' event and move on.
	  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
	    debug('read: emitReadable', state.length, state.ended);
	    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
	    return null;
	  }
	
	  n = howMuchToRead(n, state);
	
	  // if we've ended, and we're now clear, then finish it up.
	  if (n === 0 && state.ended) {
	    if (state.length === 0) endReadable(this);
	    return null;
	  }
	
	  // All the actual chunk generation logic needs to be
	  // *below* the call to _read.  The reason is that in certain
	  // synthetic stream cases, such as passthrough streams, _read
	  // may be a completely synchronous operation which may change
	  // the state of the read buffer, providing enough data when
	  // before there was *not* enough.
	  //
	  // So, the steps are:
	  // 1. Figure out what the state of things will be after we do
	  // a read from the buffer.
	  //
	  // 2. If that resulting state will trigger a _read, then call _read.
	  // Note that this may be asynchronous, or synchronous.  Yes, it is
	  // deeply ugly to write APIs this way, but that still doesn't mean
	  // that the Readable class should behave improperly, as streams are
	  // designed to be sync/async agnostic.
	  // Take note if the _read call is sync or async (ie, if the read call
	  // has returned yet), so that we know whether or not it's safe to emit
	  // 'readable' etc.
	  //
	  // 3. Actually pull the requested chunks out of the buffer and return.
	
	  // if we need a readable event, then we need to do some reading.
	  var doRead = state.needReadable;
	  debug('need readable', doRead);
	
	  // if we currently have less than the highWaterMark, then also read some
	  if (state.length === 0 || state.length - n < state.highWaterMark) {
	    doRead = true;
	    debug('length less than watermark', doRead);
	  }
	
	  // however, if we've ended, then there's no point, and if we're already
	  // reading, then it's unnecessary.
	  if (state.ended || state.reading) {
	    doRead = false;
	    debug('reading or ended', doRead);
	  } else if (doRead) {
	    debug('do read');
	    state.reading = true;
	    state.sync = true;
	    // if the length is currently zero, then we *need* a readable event.
	    if (state.length === 0) state.needReadable = true;
	    // call internal read method
	    this._read(state.highWaterMark);
	    state.sync = false;
	    // If _read pushed data synchronously, then `reading` will be false,
	    // and we need to re-evaluate how much data we can return to the user.
	    if (!state.reading) n = howMuchToRead(nOrig, state);
	  }
	
	  var ret;
	  if (n > 0) ret = fromList(n, state);else ret = null;
	
	  if (ret === null) {
	    state.needReadable = true;
	    n = 0;
	  } else {
	    state.length -= n;
	  }
	
	  if (state.length === 0) {
	    // If we have nothing in the buffer, then we want to know
	    // as soon as we *do* get something into the buffer.
	    if (!state.ended) state.needReadable = true;
	
	    // If we tried to read() past the EOF, then emit end on the next tick.
	    if (nOrig !== n && state.ended) endReadable(this);
	  }
	
	  if (ret !== null) this.emit('data', ret);
	
	  return ret;
	};
	
	function chunkInvalid(state, chunk) {
	  var er = null;
	  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {
	    er = new TypeError('Invalid non-string/buffer chunk');
	  }
	  return er;
	}
	
	function onEofChunk(stream, state) {
	  if (state.ended) return;
	  if (state.decoder) {
	    var chunk = state.decoder.end();
	    if (chunk && chunk.length) {
	      state.buffer.push(chunk);
	      state.length += state.objectMode ? 1 : chunk.length;
	    }
	  }
	  state.ended = true;
	
	  // emit 'readable' now to make sure it gets picked up.
	  emitReadable(stream);
	}
	
	// Don't emit readable right away in sync mode, because this can trigger
	// another read() call => stack overflow.  This way, it might trigger
	// a nextTick recursion warning, but that's not so bad.
	function emitReadable(stream) {
	  var state = stream._readableState;
	  state.needReadable = false;
	  if (!state.emittedReadable) {
	    debug('emitReadable', state.flowing);
	    state.emittedReadable = true;
	    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
	  }
	}
	
	function emitReadable_(stream) {
	  debug('emit readable');
	  stream.emit('readable');
	  flow(stream);
	}
	
	// at this point, the user has presumably seen the 'readable' event,
	// and called read() to consume some data.  that may have triggered
	// in turn another _read(n) call, in which case reading = true if
	// it's in progress.
	// However, if we're not ended, or reading, and the length < hwm,
	// then go ahead and try to read some more preemptively.
	function maybeReadMore(stream, state) {
	  if (!state.readingMore) {
	    state.readingMore = true;
	    processNextTick(maybeReadMore_, stream, state);
	  }
	}
	
	function maybeReadMore_(stream, state) {
	  var len = state.length;
	  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
	    debug('maybeReadMore read 0');
	    stream.read(0);
	    if (len === state.length)
	      // didn't get any data, stop spinning.
	      break;else len = state.length;
	  }
	  state.readingMore = false;
	}
	
	// abstract method.  to be overridden in specific implementation classes.
	// call cb(er, data) where data is <= n in length.
	// for virtual (non-string, non-buffer) streams, "length" is somewhat
	// arbitrary, and perhaps not very meaningful.
	Readable.prototype._read = function (n) {
	  this.emit('error', new Error('_read() is not implemented'));
	};
	
	Readable.prototype.pipe = function (dest, pipeOpts) {
	  var src = this;
	  var state = this._readableState;
	
	  switch (state.pipesCount) {
	    case 0:
	      state.pipes = dest;
	      break;
	    case 1:
	      state.pipes = [state.pipes, dest];
	      break;
	    default:
	      state.pipes.push(dest);
	      break;
	  }
	  state.pipesCount += 1;
	  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
	
	  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
	
	  var endFn = doEnd ? onend : cleanup;
	  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);
	
	  dest.on('unpipe', onunpipe);
	  function onunpipe(readable) {
	    debug('onunpipe');
	    if (readable === src) {
	      cleanup();
	    }
	  }
	
	  function onend() {
	    debug('onend');
	    dest.end();
	  }
	
	  // when the dest drains, it reduces the awaitDrain counter
	  // on the source.  This would be more elegant with a .once()
	  // handler in flow(), but adding and removing repeatedly is
	  // too slow.
	  var ondrain = pipeOnDrain(src);
	  dest.on('drain', ondrain);
	
	  var cleanedUp = false;
	  function cleanup() {
	    debug('cleanup');
	    // cleanup event handlers once the pipe is broken
	    dest.removeListener('close', onclose);
	    dest.removeListener('finish', onfinish);
	    dest.removeListener('drain', ondrain);
	    dest.removeListener('error', onerror);
	    dest.removeListener('unpipe', onunpipe);
	    src.removeListener('end', onend);
	    src.removeListener('end', cleanup);
	    src.removeListener('data', ondata);
	
	    cleanedUp = true;
	
	    // if the reader is waiting for a drain event from this
	    // specific writer, then it would cause it to never start
	    // flowing again.
	    // So, if this is awaiting a drain, then we just call it now.
	    // If we don't know, then assume that we are waiting for one.
	    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
	  }
	
	  // If the user pushes more data while we're writing to dest then we'll end up
	  // in ondata again. However, we only want to increase awaitDrain once because
	  // dest will only emit one 'drain' event for the multiple writes.
	  // => Introduce a guard on increasing awaitDrain.
	  var increasedAwaitDrain = false;
	  src.on('data', ondata);
	  function ondata(chunk) {
	    debug('ondata');
	    increasedAwaitDrain = false;
	    var ret = dest.write(chunk);
	    if (false === ret && !increasedAwaitDrain) {
	      // If the user unpiped during `dest.write()`, it is possible
	      // to get stuck in a permanently paused state if that write
	      // also returned false.
	      // => Check whether `dest` is still a piping destination.
	      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
	        debug('false write response, pause', src._readableState.awaitDrain);
	        src._readableState.awaitDrain++;
	        increasedAwaitDrain = true;
	      }
	      src.pause();
	    }
	  }
	
	  // if the dest has an error, then stop piping into it.
	  // however, don't suppress the throwing behavior for this.
	  function onerror(er) {
	    debug('onerror', er);
	    unpipe();
	    dest.removeListener('error', onerror);
	    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
	  }
	
	  // Make sure our error handler is attached before userland ones.
	  prependListener(dest, 'error', onerror);
	
	  // Both close and finish should trigger unpipe, but only once.
	  function onclose() {
	    dest.removeListener('finish', onfinish);
	    unpipe();
	  }
	  dest.once('close', onclose);
	  function onfinish() {
	    debug('onfinish');
	    dest.removeListener('close', onclose);
	    unpipe();
	  }
	  dest.once('finish', onfinish);
	
	  function unpipe() {
	    debug('unpipe');
	    src.unpipe(dest);
	  }
	
	  // tell the dest that it's being piped to
	  dest.emit('pipe', src);
	
	  // start the flow if it hasn't been started already.
	  if (!state.flowing) {
	    debug('pipe resume');
	    src.resume();
	  }
	
	  return dest;
	};
	
	function pipeOnDrain(src) {
	  return function () {
	    var state = src._readableState;
	    debug('pipeOnDrain', state.awaitDrain);
	    if (state.awaitDrain) state.awaitDrain--;
	    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
	      state.flowing = true;
	      flow(src);
	    }
	  };
	}
	
	Readable.prototype.unpipe = function (dest) {
	  var state = this._readableState;
	
	  // if we're not piping anywhere, then do nothing.
	  if (state.pipesCount === 0) return this;
	
	  // just one destination.  most common case.
	  if (state.pipesCount === 1) {
	    // passed in one, but it's not the right one.
	    if (dest && dest !== state.pipes) return this;
	
	    if (!dest) dest = state.pipes;
	
	    // got a match.
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;
	    if (dest) dest.emit('unpipe', this);
	    return this;
	  }
	
	  // slow case. multiple pipe destinations.
	
	  if (!dest) {
	    // remove all.
	    var dests = state.pipes;
	    var len = state.pipesCount;
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;
	
	    for (var i = 0; i < len; i++) {
	      dests[i].emit('unpipe', this);
	    }return this;
	  }
	
	  // try to find the right one.
	  var index = indexOf(state.pipes, dest);
	  if (index === -1) return this;
	
	  state.pipes.splice(index, 1);
	  state.pipesCount -= 1;
	  if (state.pipesCount === 1) state.pipes = state.pipes[0];
	
	  dest.emit('unpipe', this);
	
	  return this;
	};
	
	// set up data events if they are asked for
	// Ensure readable listeners eventually get something
	Readable.prototype.on = function (ev, fn) {
	  var res = Stream.prototype.on.call(this, ev, fn);
	
	  if (ev === 'data') {
	    // Start flowing on next tick if stream isn't explicitly paused
	    if (this._readableState.flowing !== false) this.resume();
	  } else if (ev === 'readable') {
	    var state = this._readableState;
	    if (!state.endEmitted && !state.readableListening) {
	      state.readableListening = state.needReadable = true;
	      state.emittedReadable = false;
	      if (!state.reading) {
	        processNextTick(nReadingNextTick, this);
	      } else if (state.length) {
	        emitReadable(this, state);
	      }
	    }
	  }
	
	  return res;
	};
	Readable.prototype.addListener = Readable.prototype.on;
	
	function nReadingNextTick(self) {
	  debug('readable nexttick read 0');
	  self.read(0);
	}
	
	// pause() and resume() are remnants of the legacy readable stream API
	// If the user uses them, then switch into old mode.
	Readable.prototype.resume = function () {
	  var state = this._readableState;
	  if (!state.flowing) {
	    debug('resume');
	    state.flowing = true;
	    resume(this, state);
	  }
	  return this;
	};
	
	function resume(stream, state) {
	  if (!state.resumeScheduled) {
	    state.resumeScheduled = true;
	    processNextTick(resume_, stream, state);
	  }
	}
	
	function resume_(stream, state) {
	  if (!state.reading) {
	    debug('resume read 0');
	    stream.read(0);
	  }
	
	  state.resumeScheduled = false;
	  state.awaitDrain = 0;
	  stream.emit('resume');
	  flow(stream);
	  if (state.flowing && !state.reading) stream.read(0);
	}
	
	Readable.prototype.pause = function () {
	  debug('call pause flowing=%j', this._readableState.flowing);
	  if (false !== this._readableState.flowing) {
	    debug('pause');
	    this._readableState.flowing = false;
	    this.emit('pause');
	  }
	  return this;
	};
	
	function flow(stream) {
	  var state = stream._readableState;
	  debug('flow', state.flowing);
	  while (state.flowing && stream.read() !== null) {}
	}
	
	// wrap an old-style stream as the async data source.
	// This is *not* part of the readable stream interface.
	// It is an ugly unfortunate mess of history.
	Readable.prototype.wrap = function (stream) {
	  var state = this._readableState;
	  var paused = false;
	
	  var self = this;
	  stream.on('end', function () {
	    debug('wrapped end');
	    if (state.decoder && !state.ended) {
	      var chunk = state.decoder.end();
	      if (chunk && chunk.length) self.push(chunk);
	    }
	
	    self.push(null);
	  });
	
	  stream.on('data', function (chunk) {
	    debug('wrapped data');
	    if (state.decoder) chunk = state.decoder.write(chunk);
	
	    // don't skip over falsy values in objectMode
	    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;
	
	    var ret = self.push(chunk);
	    if (!ret) {
	      paused = true;
	      stream.pause();
	    }
	  });
	
	  // proxy all the other methods.
	  // important when wrapping filters and duplexes.
	  for (var i in stream) {
	    if (this[i] === undefined && typeof stream[i] === 'function') {
	      this[i] = function (method) {
	        return function () {
	          return stream[method].apply(stream, arguments);
	        };
	      }(i);
	    }
	  }
	
	  // proxy certain important events.
	  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
	  forEach(events, function (ev) {
	    stream.on(ev, self.emit.bind(self, ev));
	  });
	
	  // when we try to consume some more bytes, simply unpause the
	  // underlying stream.
	  self._read = function (n) {
	    debug('wrapped _read', n);
	    if (paused) {
	      paused = false;
	      stream.resume();
	    }
	  };
	
	  return self;
	};
	
	// exposed for testing purposes only.
	Readable._fromList = fromList;
	
	// Pluck off n bytes from an array of buffers.
	// Length is the combined lengths of all the buffers in the list.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function fromList(n, state) {
	  // nothing buffered
	  if (state.length === 0) return null;
	
	  var ret;
	  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
	    // read it all, truncate the list
	    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
	    state.buffer.clear();
	  } else {
	    // read part of list
	    ret = fromListPartial(n, state.buffer, state.decoder);
	  }
	
	  return ret;
	}
	
	// Extracts only enough buffered data to satisfy the amount requested.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function fromListPartial(n, list, hasStrings) {
	  var ret;
	  if (n < list.head.data.length) {
	    // slice is the same for buffers and strings
	    ret = list.head.data.slice(0, n);
	    list.head.data = list.head.data.slice(n);
	  } else if (n === list.head.data.length) {
	    // first chunk is a perfect match
	    ret = list.shift();
	  } else {
	    // result spans more than one buffer
	    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
	  }
	  return ret;
	}
	
	// Copies a specified amount of characters from the list of buffered data
	// chunks.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function copyFromBufferString(n, list) {
	  var p = list.head;
	  var c = 1;
	  var ret = p.data;
	  n -= ret.length;
	  while (p = p.next) {
	    var str = p.data;
	    var nb = n > str.length ? str.length : n;
	    if (nb === str.length) ret += str;else ret += str.slice(0, n);
	    n -= nb;
	    if (n === 0) {
	      if (nb === str.length) {
	        ++c;
	        if (p.next) list.head = p.next;else list.head = list.tail = null;
	      } else {
	        list.head = p;
	        p.data = str.slice(nb);
	      }
	      break;
	    }
	    ++c;
	  }
	  list.length -= c;
	  return ret;
	}
	
	// Copies a specified amount of bytes from the list of buffered data chunks.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function copyFromBuffer(n, list) {
	  var ret = bufferShim.allocUnsafe(n);
	  var p = list.head;
	  var c = 1;
	  p.data.copy(ret);
	  n -= p.data.length;
	  while (p = p.next) {
	    var buf = p.data;
	    var nb = n > buf.length ? buf.length : n;
	    buf.copy(ret, ret.length - n, 0, nb);
	    n -= nb;
	    if (n === 0) {
	      if (nb === buf.length) {
	        ++c;
	        if (p.next) list.head = p.next;else list.head = list.tail = null;
	      } else {
	        list.head = p;
	        p.data = buf.slice(nb);
	      }
	      break;
	    }
	    ++c;
	  }
	  list.length -= c;
	  return ret;
	}
	
	function endReadable(stream) {
	  var state = stream._readableState;
	
	  // If we get here before consuming all the bytes, then that is a
	  // bug in node.  Should never happen.
	  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');
	
	  if (!state.endEmitted) {
	    state.ended = true;
	    processNextTick(endReadableNT, state, stream);
	  }
	}
	
	function endReadableNT(state, stream) {
	  // Check that we didn't get one last unshift.
	  if (!state.endEmitted && state.length === 0) {
	    state.endEmitted = true;
	    stream.readable = false;
	    stream.emit('end');
	  }
	}
	
	function forEach(xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}
	
	function indexOf(xs, x) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    if (xs[i] === x) return i;
	  }
	  return -1;
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	if (!process.version ||
	    process.version.indexOf('v0.') === 0 ||
	    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
	  module.exports = nextTick;
	} else {
	  module.exports = process.nextTick;
	}
	
	function nextTick(fn, arg1, arg2, arg3) {
	  if (typeof fn !== 'function') {
	    throw new TypeError('"callback" argument must be a function');
	  }
	  var len = arguments.length;
	  var args, i;
	  switch (len) {
	  case 0:
	  case 1:
	    return process.nextTick(fn);
	  case 2:
	    return process.nextTick(function afterTickOne() {
	      fn.call(null, arg1);
	    });
	  case 3:
	    return process.nextTick(function afterTickTwo() {
	      fn.call(null, arg1, arg2);
	    });
	  case 4:
	    return process.nextTick(function afterTickThree() {
	      fn.call(null, arg1, arg2, arg3);
	    });
	  default:
	    args = new Array(len - 1);
	    i = 0;
	    while (i < args.length) {
	      args[i++] = arguments[i];
	    }
	    return process.nextTick(function afterTick() {
	      fn.apply(null, args);
	    });
	  }
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 293 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';
	
	var buffer = __webpack_require__(282);
	var Buffer = buffer.Buffer;
	var SlowBuffer = buffer.SlowBuffer;
	var MAX_LEN = buffer.kMaxLength || 2147483647;
	exports.alloc = function alloc(size, fill, encoding) {
	  if (typeof Buffer.alloc === 'function') {
	    return Buffer.alloc(size, fill, encoding);
	  }
	  if (typeof encoding === 'number') {
	    throw new TypeError('encoding must not be number');
	  }
	  if (typeof size !== 'number') {
	    throw new TypeError('size must be a number');
	  }
	  if (size > MAX_LEN) {
	    throw new RangeError('size is too large');
	  }
	  var enc = encoding;
	  var _fill = fill;
	  if (_fill === undefined) {
	    enc = undefined;
	    _fill = 0;
	  }
	  var buf = new Buffer(size);
	  if (typeof _fill === 'string') {
	    var fillBuf = new Buffer(_fill, enc);
	    var flen = fillBuf.length;
	    var i = -1;
	    while (++i < size) {
	      buf[i] = fillBuf[i % flen];
	    }
	  } else {
	    buf.fill(_fill);
	  }
	  return buf;
	}
	exports.allocUnsafe = function allocUnsafe(size) {
	  if (typeof Buffer.allocUnsafe === 'function') {
	    return Buffer.allocUnsafe(size);
	  }
	  if (typeof size !== 'number') {
	    throw new TypeError('size must be a number');
	  }
	  if (size > MAX_LEN) {
	    throw new RangeError('size is too large');
	  }
	  return new Buffer(size);
	}
	exports.from = function from(value, encodingOrOffset, length) {
	  if (typeof Buffer.from === 'function' && (!global.Uint8Array || Uint8Array.from !== Buffer.from)) {
	    return Buffer.from(value, encodingOrOffset, length);
	  }
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number');
	  }
	  if (typeof value === 'string') {
	    return new Buffer(value, encodingOrOffset);
	  }
	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    var offset = encodingOrOffset;
	    if (arguments.length === 1) {
	      return new Buffer(value);
	    }
	    if (typeof offset === 'undefined') {
	      offset = 0;
	    }
	    var len = length;
	    if (typeof len === 'undefined') {
	      len = value.byteLength - offset;
	    }
	    if (offset >= value.byteLength) {
	      throw new RangeError('\'offset\' is out of bounds');
	    }
	    if (len > value.byteLength - offset) {
	      throw new RangeError('\'length\' is out of bounds');
	    }
	    return new Buffer(value.slice(offset, offset + len));
	  }
	  if (Buffer.isBuffer(value)) {
	    var out = new Buffer(value.length);
	    value.copy(out, 0, 0, value.length);
	    return out;
	  }
	  if (value) {
	    if (Array.isArray(value) || (typeof ArrayBuffer !== 'undefined' && value.buffer instanceof ArrayBuffer) || 'length' in value) {
	      return new Buffer(value);
	    }
	    if (value.type === 'Buffer' && Array.isArray(value.data)) {
	      return new Buffer(value.data);
	    }
	  }
	
	  throw new TypeError('First argument must be a string, Buffer, ' + 'ArrayBuffer, Array, or array-like object.');
	}
	exports.allocUnsafeSlow = function allocUnsafeSlow(size) {
	  if (typeof Buffer.allocUnsafeSlow === 'function') {
	    return Buffer.allocUnsafeSlow(size);
	  }
	  if (typeof size !== 'number') {
	    throw new TypeError('size must be a number');
	  }
	  if (size >= MAX_LEN) {
	    throw new RangeError('size is too large');
	  }
	  return new SlowBuffer(size);
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	
	function isArray(arg) {
	  if (Array.isArray) {
	    return Array.isArray(arg);
	  }
	  return objectToString(arg) === '[object Array]';
	}
	exports.isArray = isArray;
	
	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;
	
	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;
	
	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;
	
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;
	
	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;
	
	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;
	
	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;
	
	function isRegExp(re) {
	  return objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;
	
	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;
	
	function isDate(d) {
	  return objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;
	
	function isError(e) {
	  return (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;
	
	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;
	
	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;
	
	exports.isBuffer = Buffer.isBuffer;
	
	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 296 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Buffer = __webpack_require__(282).Buffer;
	/*<replacement>*/
	var bufferShim = __webpack_require__(294);
	/*</replacement>*/
	
	module.exports = BufferList;
	
	function BufferList() {
	  this.head = null;
	  this.tail = null;
	  this.length = 0;
	}
	
	BufferList.prototype.push = function (v) {
	  var entry = { data: v, next: null };
	  if (this.length > 0) this.tail.next = entry;else this.head = entry;
	  this.tail = entry;
	  ++this.length;
	};
	
	BufferList.prototype.unshift = function (v) {
	  var entry = { data: v, next: this.head };
	  if (this.length === 0) this.tail = entry;
	  this.head = entry;
	  ++this.length;
	};
	
	BufferList.prototype.shift = function () {
	  if (this.length === 0) return;
	  var ret = this.head.data;
	  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
	  --this.length;
	  return ret;
	};
	
	BufferList.prototype.clear = function () {
	  this.head = this.tail = null;
	  this.length = 0;
	};
	
	BufferList.prototype.join = function (s) {
	  if (this.length === 0) return '';
	  var p = this.head;
	  var ret = '' + p.data;
	  while (p = p.next) {
	    ret += s + p.data;
	  }return ret;
	};
	
	BufferList.prototype.concat = function (n) {
	  if (this.length === 0) return bufferShim.alloc(0);
	  if (this.length === 1) return this.head.data;
	  var ret = bufferShim.allocUnsafe(n >>> 0);
	  var p = this.head;
	  var i = 0;
	  while (p) {
	    p.data.copy(ret, i);
	    i += p.data.length;
	    p = p.next;
	  }
	  return ret;
	};

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	// a duplex stream is just a stream that is both readable and writable.
	// Since JS doesn't have multiple prototypal inheritance, this class
	// prototypally inherits from Readable, and then parasitically from
	// Writable.
	
	'use strict';
	
	/*<replacement>*/
	
	var objectKeys = Object.keys || function (obj) {
	  var keys = [];
	  for (var key in obj) {
	    keys.push(key);
	  }return keys;
	};
	/*</replacement>*/
	
	module.exports = Duplex;
	
	/*<replacement>*/
	var processNextTick = __webpack_require__(292);
	/*</replacement>*/
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	var Readable = __webpack_require__(291);
	var Writable = __webpack_require__(299);
	
	util.inherits(Duplex, Readable);
	
	var keys = objectKeys(Writable.prototype);
	for (var v = 0; v < keys.length; v++) {
	  var method = keys[v];
	  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
	}
	
	function Duplex(options) {
	  if (!(this instanceof Duplex)) return new Duplex(options);
	
	  Readable.call(this, options);
	  Writable.call(this, options);
	
	  if (options && options.readable === false) this.readable = false;
	
	  if (options && options.writable === false) this.writable = false;
	
	  this.allowHalfOpen = true;
	  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;
	
	  this.once('end', onend);
	}
	
	// the no-half-open enforcer
	function onend() {
	  // if we allow half-open state, or if the writable side ended,
	  // then we're ok.
	  if (this.allowHalfOpen || this._writableState.ended) return;
	
	  // no more data can be written.
	  // But allow more writes to happen in this tick.
	  processNextTick(onEndNT, this);
	}
	
	function onEndNT(self) {
	  self.end();
	}
	
	function forEach(xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, setImmediate) {// A bit simpler than readable streams.
	// Implement an async ._write(chunk, encoding, cb), and it'll handle all
	// the drain event emission and buffering.
	
	'use strict';
	
	module.exports = Writable;
	
	/*<replacement>*/
	var processNextTick = __webpack_require__(292);
	/*</replacement>*/
	
	/*<replacement>*/
	var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
	/*</replacement>*/
	
	/*<replacement>*/
	var Duplex;
	/*</replacement>*/
	
	Writable.WritableState = WritableState;
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	/*<replacement>*/
	var internalUtil = {
	  deprecate: __webpack_require__(302)
	};
	/*</replacement>*/
	
	/*<replacement>*/
	var Stream;
	(function () {
	  try {
	    Stream = __webpack_require__(287);
	  } catch (_) {} finally {
	    if (!Stream) Stream = __webpack_require__(288).EventEmitter;
	  }
	})();
	/*</replacement>*/
	
	var Buffer = __webpack_require__(282).Buffer;
	/*<replacement>*/
	var bufferShim = __webpack_require__(294);
	/*</replacement>*/
	
	util.inherits(Writable, Stream);
	
	function nop() {}
	
	function WriteReq(chunk, encoding, cb) {
	  this.chunk = chunk;
	  this.encoding = encoding;
	  this.callback = cb;
	  this.next = null;
	}
	
	function WritableState(options, stream) {
	  Duplex = Duplex || __webpack_require__(298);
	
	  options = options || {};
	
	  // object stream flag to indicate whether or not this stream
	  // contains buffers or objects.
	  this.objectMode = !!options.objectMode;
	
	  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;
	
	  // the point at which write() starts returning false
	  // Note: 0 is a valid value, means that we always return false if
	  // the entire buffer is not flushed immediately on write()
	  var hwm = options.highWaterMark;
	  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;
	
	  // cast to ints.
	  this.highWaterMark = ~ ~this.highWaterMark;
	
	  // drain event flag.
	  this.needDrain = false;
	  // at the start of calling end()
	  this.ending = false;
	  // when end() has been called, and returned
	  this.ended = false;
	  // when 'finish' is emitted
	  this.finished = false;
	
	  // should we decode strings into buffers before passing to _write?
	  // this is here so that some node-core streams can optimize string
	  // handling at a lower level.
	  var noDecode = options.decodeStrings === false;
	  this.decodeStrings = !noDecode;
	
	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';
	
	  // not an actual buffer we keep track of, but a measurement
	  // of how much we're waiting to get pushed to some underlying
	  // socket or file.
	  this.length = 0;
	
	  // a flag to see when we're in the middle of a write.
	  this.writing = false;
	
	  // when true all writes will be buffered until .uncork() call
	  this.corked = 0;
	
	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;
	
	  // a flag to know if we're processing previously buffered items, which
	  // may call the _write() callback in the same tick, so that we don't
	  // end up in an overlapped onwrite situation.
	  this.bufferProcessing = false;
	
	  // the callback that's passed to _write(chunk,cb)
	  this.onwrite = function (er) {
	    onwrite(stream, er);
	  };
	
	  // the callback that the user supplies to write(chunk,encoding,cb)
	  this.writecb = null;
	
	  // the amount that is being written when _write is called.
	  this.writelen = 0;
	
	  this.bufferedRequest = null;
	  this.lastBufferedRequest = null;
	
	  // number of pending user-supplied write callbacks
	  // this must be 0 before 'finish' can be emitted
	  this.pendingcb = 0;
	
	  // emit prefinish if the only thing we're waiting for is _write cbs
	  // This is relevant for synchronous Transform streams
	  this.prefinished = false;
	
	  // True if the error was already emitted and should not be thrown again
	  this.errorEmitted = false;
	
	  // count buffered requests
	  this.bufferedRequestCount = 0;
	
	  // allocate the first CorkedRequest, there is always
	  // one allocated and free to use, and we maintain at most two
	  this.corkedRequestsFree = new CorkedRequest(this);
	}
	
	WritableState.prototype.getBuffer = function getBuffer() {
	  var current = this.bufferedRequest;
	  var out = [];
	  while (current) {
	    out.push(current);
	    current = current.next;
	  }
	  return out;
	};
	
	(function () {
	  try {
	    Object.defineProperty(WritableState.prototype, 'buffer', {
	      get: internalUtil.deprecate(function () {
	        return this.getBuffer();
	      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')
	    });
	  } catch (_) {}
	})();
	
	// Test _writableState for inheritance to account for Duplex streams,
	// whose prototype chain only points to Readable.
	var realHasInstance;
	if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
	  realHasInstance = Function.prototype[Symbol.hasInstance];
	  Object.defineProperty(Writable, Symbol.hasInstance, {
	    value: function (object) {
	      if (realHasInstance.call(this, object)) return true;
	
	      return object && object._writableState instanceof WritableState;
	    }
	  });
	} else {
	  realHasInstance = function (object) {
	    return object instanceof this;
	  };
	}
	
	function Writable(options) {
	  Duplex = Duplex || __webpack_require__(298);
	
	  // Writable ctor is applied to Duplexes, too.
	  // `realHasInstance` is necessary because using plain `instanceof`
	  // would return false, as no `_writableState` property is attached.
	
	  // Trying to use the custom `instanceof` for Writable here will also break the
	  // Node.js LazyTransform implementation, which has a non-trivial getter for
	  // `_writableState` that would lead to infinite recursion.
	  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
	    return new Writable(options);
	  }
	
	  this._writableState = new WritableState(options, this);
	
	  // legacy.
	  this.writable = true;
	
	  if (options) {
	    if (typeof options.write === 'function') this._write = options.write;
	
	    if (typeof options.writev === 'function') this._writev = options.writev;
	  }
	
	  Stream.call(this);
	}
	
	// Otherwise people can pipe Writable streams, which is just wrong.
	Writable.prototype.pipe = function () {
	  this.emit('error', new Error('Cannot pipe, not readable'));
	};
	
	function writeAfterEnd(stream, cb) {
	  var er = new Error('write after end');
	  // TODO: defer error events consistently everywhere, not just the cb
	  stream.emit('error', er);
	  processNextTick(cb, er);
	}
	
	// If we get something that is not a buffer, string, null, or undefined,
	// and we're not in objectMode, then that's an error.
	// Otherwise stream chunks are all considered to be of length=1, and the
	// watermarks determine how many objects to keep in the buffer, rather than
	// how many bytes or characters.
	function validChunk(stream, state, chunk, cb) {
	  var valid = true;
	  var er = false;
	  // Always throw error if a null is written
	  // if we are not in object mode then throw
	  // if it is not a buffer, string, or undefined.
	  if (chunk === null) {
	    er = new TypeError('May not write null values to stream');
	  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
	    er = new TypeError('Invalid non-string/buffer chunk');
	  }
	  if (er) {
	    stream.emit('error', er);
	    processNextTick(cb, er);
	    valid = false;
	  }
	  return valid;
	}
	
	Writable.prototype.write = function (chunk, encoding, cb) {
	  var state = this._writableState;
	  var ret = false;
	
	  if (typeof encoding === 'function') {
	    cb = encoding;
	    encoding = null;
	  }
	
	  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
	
	  if (typeof cb !== 'function') cb = nop;
	
	  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {
	    state.pendingcb++;
	    ret = writeOrBuffer(this, state, chunk, encoding, cb);
	  }
	
	  return ret;
	};
	
	Writable.prototype.cork = function () {
	  var state = this._writableState;
	
	  state.corked++;
	};
	
	Writable.prototype.uncork = function () {
	  var state = this._writableState;
	
	  if (state.corked) {
	    state.corked--;
	
	    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
	  }
	};
	
	Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
	  // node::ParseEncoding() requires lower case.
	  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
	  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
	  this._writableState.defaultEncoding = encoding;
	  return this;
	};
	
	function decodeChunk(state, chunk, encoding) {
	  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
	    chunk = bufferShim.from(chunk, encoding);
	  }
	  return chunk;
	}
	
	// if we're already writing something, then just put this
	// in the queue, and wait our turn.  Otherwise, call _write
	// If we return false, then we need a drain event, so set that flag.
	function writeOrBuffer(stream, state, chunk, encoding, cb) {
	  chunk = decodeChunk(state, chunk, encoding);
	
	  if (Buffer.isBuffer(chunk)) encoding = 'buffer';
	  var len = state.objectMode ? 1 : chunk.length;
	
	  state.length += len;
	
	  var ret = state.length < state.highWaterMark;
	  // we must ensure that previous needDrain will not be reset to false.
	  if (!ret) state.needDrain = true;
	
	  if (state.writing || state.corked) {
	    var last = state.lastBufferedRequest;
	    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);
	    if (last) {
	      last.next = state.lastBufferedRequest;
	    } else {
	      state.bufferedRequest = state.lastBufferedRequest;
	    }
	    state.bufferedRequestCount += 1;
	  } else {
	    doWrite(stream, state, false, len, chunk, encoding, cb);
	  }
	
	  return ret;
	}
	
	function doWrite(stream, state, writev, len, chunk, encoding, cb) {
	  state.writelen = len;
	  state.writecb = cb;
	  state.writing = true;
	  state.sync = true;
	  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
	  state.sync = false;
	}
	
	function onwriteError(stream, state, sync, er, cb) {
	  --state.pendingcb;
	  if (sync) processNextTick(cb, er);else cb(er);
	
	  stream._writableState.errorEmitted = true;
	  stream.emit('error', er);
	}
	
	function onwriteStateUpdate(state) {
	  state.writing = false;
	  state.writecb = null;
	  state.length -= state.writelen;
	  state.writelen = 0;
	}
	
	function onwrite(stream, er) {
	  var state = stream._writableState;
	  var sync = state.sync;
	  var cb = state.writecb;
	
	  onwriteStateUpdate(state);
	
	  if (er) onwriteError(stream, state, sync, er, cb);else {
	    // Check if we're actually ready to finish, but don't emit yet
	    var finished = needFinish(state);
	
	    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
	      clearBuffer(stream, state);
	    }
	
	    if (sync) {
	      /*<replacement>*/
	      asyncWrite(afterWrite, stream, state, finished, cb);
	      /*</replacement>*/
	    } else {
	        afterWrite(stream, state, finished, cb);
	      }
	  }
	}
	
	function afterWrite(stream, state, finished, cb) {
	  if (!finished) onwriteDrain(stream, state);
	  state.pendingcb--;
	  cb();
	  finishMaybe(stream, state);
	}
	
	// Must force callback to be called on nextTick, so that we don't
	// emit 'drain' before the write() consumer gets the 'false' return
	// value, and has a chance to attach a 'drain' listener.
	function onwriteDrain(stream, state) {
	  if (state.length === 0 && state.needDrain) {
	    state.needDrain = false;
	    stream.emit('drain');
	  }
	}
	
	// if there's something in the buffer waiting, then process it
	function clearBuffer(stream, state) {
	  state.bufferProcessing = true;
	  var entry = state.bufferedRequest;
	
	  if (stream._writev && entry && entry.next) {
	    // Fast case, write everything using _writev()
	    var l = state.bufferedRequestCount;
	    var buffer = new Array(l);
	    var holder = state.corkedRequestsFree;
	    holder.entry = entry;
	
	    var count = 0;
	    while (entry) {
	      buffer[count] = entry;
	      entry = entry.next;
	      count += 1;
	    }
	
	    doWrite(stream, state, true, state.length, buffer, '', holder.finish);
	
	    // doWrite is almost always async, defer these to save a bit of time
	    // as the hot path ends with doWrite
	    state.pendingcb++;
	    state.lastBufferedRequest = null;
	    if (holder.next) {
	      state.corkedRequestsFree = holder.next;
	      holder.next = null;
	    } else {
	      state.corkedRequestsFree = new CorkedRequest(state);
	    }
	  } else {
	    // Slow case, write chunks one-by-one
	    while (entry) {
	      var chunk = entry.chunk;
	      var encoding = entry.encoding;
	      var cb = entry.callback;
	      var len = state.objectMode ? 1 : chunk.length;
	
	      doWrite(stream, state, false, len, chunk, encoding, cb);
	      entry = entry.next;
	      // if we didn't call the onwrite immediately, then
	      // it means that we need to wait until it does.
	      // also, that means that the chunk and cb are currently
	      // being processed, so move the buffer counter past them.
	      if (state.writing) {
	        break;
	      }
	    }
	
	    if (entry === null) state.lastBufferedRequest = null;
	  }
	
	  state.bufferedRequestCount = 0;
	  state.bufferedRequest = entry;
	  state.bufferProcessing = false;
	}
	
	Writable.prototype._write = function (chunk, encoding, cb) {
	  cb(new Error('_write() is not implemented'));
	};
	
	Writable.prototype._writev = null;
	
	Writable.prototype.end = function (chunk, encoding, cb) {
	  var state = this._writableState;
	
	  if (typeof chunk === 'function') {
	    cb = chunk;
	    chunk = null;
	    encoding = null;
	  } else if (typeof encoding === 'function') {
	    cb = encoding;
	    encoding = null;
	  }
	
	  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);
	
	  // .end() fully uncorks
	  if (state.corked) {
	    state.corked = 1;
	    this.uncork();
	  }
	
	  // ignore unnecessary end() calls.
	  if (!state.ending && !state.finished) endWritable(this, state, cb);
	};
	
	function needFinish(state) {
	  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
	}
	
	function prefinish(stream, state) {
	  if (!state.prefinished) {
	    state.prefinished = true;
	    stream.emit('prefinish');
	  }
	}
	
	function finishMaybe(stream, state) {
	  var need = needFinish(state);
	  if (need) {
	    if (state.pendingcb === 0) {
	      prefinish(stream, state);
	      state.finished = true;
	      stream.emit('finish');
	    } else {
	      prefinish(stream, state);
	    }
	  }
	  return need;
	}
	
	function endWritable(stream, state, cb) {
	  state.ending = true;
	  finishMaybe(stream, state);
	  if (cb) {
	    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
	  }
	  state.ended = true;
	  stream.writable = false;
	}
	
	// It seems a linked list but it is not
	// there will be only 2 of these for each stream
	function CorkedRequest(state) {
	  var _this = this;
	
	  this.next = null;
	  this.entry = null;
	
	  this.finish = function (err) {
	    var entry = _this.entry;
	    _this.entry = null;
	    while (entry) {
	      var cb = entry.callback;
	      state.pendingcb--;
	      cb(err);
	      entry = entry.next;
	    }
	    if (state.corkedRequestsFree) {
	      state.corkedRequestsFree.next = _this;
	    } else {
	      state.corkedRequestsFree = _this;
	    }
	  };
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6), __webpack_require__(300).setImmediate))

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	var apply = Function.prototype.apply;
	
	// DOM APIs, for completeness
	
	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) {
	  if (timeout) {
	    timeout.close();
	  }
	};
	
	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(window, this._id);
	};
	
	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};
	
	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};
	
	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);
	
	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};
	
	// setimmediate attaches itself to the global object
	__webpack_require__(301);
	exports.setImmediate = setImmediate;
	exports.clearImmediate = clearImmediate;


/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
	    "use strict";
	
	    if (global.setImmediate) {
	        return;
	    }
	
	    var nextHandle = 1; // Spec says greater than zero
	    var tasksByHandle = {};
	    var currentlyRunningATask = false;
	    var doc = global.document;
	    var registerImmediate;
	
	    function setImmediate(callback) {
	      // Callback can either be a function or a string
	      if (typeof callback !== "function") {
	        callback = new Function("" + callback);
	      }
	      // Copy function arguments
	      var args = new Array(arguments.length - 1);
	      for (var i = 0; i < args.length; i++) {
	          args[i] = arguments[i + 1];
	      }
	      // Store and register the task
	      var task = { callback: callback, args: args };
	      tasksByHandle[nextHandle] = task;
	      registerImmediate(nextHandle);
	      return nextHandle++;
	    }
	
	    function clearImmediate(handle) {
	        delete tasksByHandle[handle];
	    }
	
	    function run(task) {
	        var callback = task.callback;
	        var args = task.args;
	        switch (args.length) {
	        case 0:
	            callback();
	            break;
	        case 1:
	            callback(args[0]);
	            break;
	        case 2:
	            callback(args[0], args[1]);
	            break;
	        case 3:
	            callback(args[0], args[1], args[2]);
	            break;
	        default:
	            callback.apply(undefined, args);
	            break;
	        }
	    }
	
	    function runIfPresent(handle) {
	        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
	        // So if we're currently running a task, we'll need to delay this invocation.
	        if (currentlyRunningATask) {
	            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
	            // "too much recursion" error.
	            setTimeout(runIfPresent, 0, handle);
	        } else {
	            var task = tasksByHandle[handle];
	            if (task) {
	                currentlyRunningATask = true;
	                try {
	                    run(task);
	                } finally {
	                    clearImmediate(handle);
	                    currentlyRunningATask = false;
	                }
	            }
	        }
	    }
	
	    function installNextTickImplementation() {
	        registerImmediate = function(handle) {
	            process.nextTick(function () { runIfPresent(handle); });
	        };
	    }
	
	    function canUsePostMessage() {
	        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
	        // where `global.postMessage` means something completely different and can't be used for this purpose.
	        if (global.postMessage && !global.importScripts) {
	            var postMessageIsAsynchronous = true;
	            var oldOnMessage = global.onmessage;
	            global.onmessage = function() {
	                postMessageIsAsynchronous = false;
	            };
	            global.postMessage("", "*");
	            global.onmessage = oldOnMessage;
	            return postMessageIsAsynchronous;
	        }
	    }
	
	    function installPostMessageImplementation() {
	        // Installs an event handler on `global` for the `message` event: see
	        // * https://developer.mozilla.org/en/DOM/window.postMessage
	        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages
	
	        var messagePrefix = "setImmediate$" + Math.random() + "$";
	        var onGlobalMessage = function(event) {
	            if (event.source === global &&
	                typeof event.data === "string" &&
	                event.data.indexOf(messagePrefix) === 0) {
	                runIfPresent(+event.data.slice(messagePrefix.length));
	            }
	        };
	
	        if (global.addEventListener) {
	            global.addEventListener("message", onGlobalMessage, false);
	        } else {
	            global.attachEvent("onmessage", onGlobalMessage);
	        }
	
	        registerImmediate = function(handle) {
	            global.postMessage(messagePrefix + handle, "*");
	        };
	    }
	
	    function installMessageChannelImplementation() {
	        var channel = new MessageChannel();
	        channel.port1.onmessage = function(event) {
	            var handle = event.data;
	            runIfPresent(handle);
	        };
	
	        registerImmediate = function(handle) {
	            channel.port2.postMessage(handle);
	        };
	    }
	
	    function installReadyStateChangeImplementation() {
	        var html = doc.documentElement;
	        registerImmediate = function(handle) {
	            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
	            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
	            var script = doc.createElement("script");
	            script.onreadystatechange = function () {
	                runIfPresent(handle);
	                script.onreadystatechange = null;
	                html.removeChild(script);
	                script = null;
	            };
	            html.appendChild(script);
	        };
	    }
	
	    function installSetTimeoutImplementation() {
	        registerImmediate = function(handle) {
	            setTimeout(runIfPresent, 0, handle);
	        };
	    }
	
	    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
	    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
	    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;
	
	    // Don't get fooled by e.g. browserify environments.
	    if ({}.toString.call(global.process) === "[object process]") {
	        // For Node.js before 0.9
	        installNextTickImplementation();
	
	    } else if (canUsePostMessage()) {
	        // For non-IE10 modern browsers
	        installPostMessageImplementation();
	
	    } else if (global.MessageChannel) {
	        // For web workers, where supported
	        installMessageChannelImplementation();
	
	    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
	        // For IE 6–8
	        installReadyStateChangeImplementation();
	
	    } else {
	        // For older browsers
	        installSetTimeoutImplementation();
	    }
	
	    attachTo.setImmediate = setImmediate;
	    attachTo.clearImmediate = clearImmediate;
	}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(6)))

/***/ },
/* 302 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {
	/**
	 * Module exports.
	 */
	
	module.exports = deprecate;
	
	/**
	 * Mark that a method should not be used.
	 * Returns a modified function which warns once by default.
	 *
	 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
	 *
	 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
	 * will throw an Error when invoked.
	 *
	 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
	 * will invoke `console.trace()` instead of `console.error()`.
	 *
	 * @param {Function} fn - the function to deprecate
	 * @param {String} msg - the string to print to the console when `fn` is invoked
	 * @returns {Function} a new "deprecated" version of `fn`
	 * @api public
	 */
	
	function deprecate (fn, msg) {
	  if (config('noDeprecation')) {
	    return fn;
	  }
	
	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (config('throwDeprecation')) {
	        throw new Error(msg);
	      } else if (config('traceDeprecation')) {
	        console.trace(msg);
	      } else {
	        console.warn(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }
	
	  return deprecated;
	}
	
	/**
	 * Checks `localStorage` for boolean values for the given `name`.
	 *
	 * @param {String} name
	 * @returns {Boolean}
	 * @api private
	 */
	
	function config (name) {
	  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
	  try {
	    if (!global.localStorage) return false;
	  } catch (_) {
	    return false;
	  }
	  var val = global.localStorage[name];
	  if (null == val) return false;
	  return String(val).toLowerCase() === 'true';
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	var Buffer = __webpack_require__(282).Buffer;
	
	var isBufferEncoding = Buffer.isEncoding
	  || function(encoding) {
	       switch (encoding && encoding.toLowerCase()) {
	         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
	         default: return false;
	       }
	     }
	
	
	function assertEncoding(encoding) {
	  if (encoding && !isBufferEncoding(encoding)) {
	    throw new Error('Unknown encoding: ' + encoding);
	  }
	}
	
	// StringDecoder provides an interface for efficiently splitting a series of
	// buffers into a series of JS strings without breaking apart multi-byte
	// characters. CESU-8 is handled as part of the UTF-8 encoding.
	//
	// @TODO Handling all encodings inside a single object makes it very difficult
	// to reason about this code, so it should be split up in the future.
	// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
	// points as used by CESU-8.
	var StringDecoder = exports.StringDecoder = function(encoding) {
	  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
	  assertEncoding(encoding);
	  switch (this.encoding) {
	    case 'utf8':
	      // CESU-8 represents each of Surrogate Pair by 3-bytes
	      this.surrogateSize = 3;
	      break;
	    case 'ucs2':
	    case 'utf16le':
	      // UTF-16 represents each of Surrogate Pair by 2-bytes
	      this.surrogateSize = 2;
	      this.detectIncompleteChar = utf16DetectIncompleteChar;
	      break;
	    case 'base64':
	      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
	      this.surrogateSize = 3;
	      this.detectIncompleteChar = base64DetectIncompleteChar;
	      break;
	    default:
	      this.write = passThroughWrite;
	      return;
	  }
	
	  // Enough space to store all bytes of a single character. UTF-8 needs 4
	  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
	  this.charBuffer = new Buffer(6);
	  // Number of bytes received for the current incomplete multi-byte character.
	  this.charReceived = 0;
	  // Number of bytes expected for the current incomplete multi-byte character.
	  this.charLength = 0;
	};
	
	
	// write decodes the given buffer and returns it as JS string that is
	// guaranteed to not contain any partial multi-byte characters. Any partial
	// character found at the end of the buffer is buffered up, and will be
	// returned when calling write again with the remaining bytes.
	//
	// Note: Converting a Buffer containing an orphan surrogate to a String
	// currently works, but converting a String to a Buffer (via `new Buffer`, or
	// Buffer#write) will replace incomplete surrogates with the unicode
	// replacement character. See https://codereview.chromium.org/121173009/ .
	StringDecoder.prototype.write = function(buffer) {
	  var charStr = '';
	  // if our last write ended with an incomplete multibyte character
	  while (this.charLength) {
	    // determine how many remaining bytes this buffer has to offer for this char
	    var available = (buffer.length >= this.charLength - this.charReceived) ?
	        this.charLength - this.charReceived :
	        buffer.length;
	
	    // add the new bytes to the char buffer
	    buffer.copy(this.charBuffer, this.charReceived, 0, available);
	    this.charReceived += available;
	
	    if (this.charReceived < this.charLength) {
	      // still not enough chars in this buffer? wait for more ...
	      return '';
	    }
	
	    // remove bytes belonging to the current character from the buffer
	    buffer = buffer.slice(available, buffer.length);
	
	    // get the character that was split
	    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);
	
	    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
	    var charCode = charStr.charCodeAt(charStr.length - 1);
	    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
	      this.charLength += this.surrogateSize;
	      charStr = '';
	      continue;
	    }
	    this.charReceived = this.charLength = 0;
	
	    // if there are no more bytes in this buffer, just emit our char
	    if (buffer.length === 0) {
	      return charStr;
	    }
	    break;
	  }
	
	  // determine and set charLength / charReceived
	  this.detectIncompleteChar(buffer);
	
	  var end = buffer.length;
	  if (this.charLength) {
	    // buffer the incomplete character bytes we got
	    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
	    end -= this.charReceived;
	  }
	
	  charStr += buffer.toString(this.encoding, 0, end);
	
	  var end = charStr.length - 1;
	  var charCode = charStr.charCodeAt(end);
	  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
	  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
	    var size = this.surrogateSize;
	    this.charLength += size;
	    this.charReceived += size;
	    this.charBuffer.copy(this.charBuffer, size, 0, size);
	    buffer.copy(this.charBuffer, 0, 0, size);
	    return charStr.substring(0, end);
	  }
	
	  // or just emit the charStr
	  return charStr;
	};
	
	// detectIncompleteChar determines if there is an incomplete UTF-8 character at
	// the end of the given buffer. If so, it sets this.charLength to the byte
	// length that character, and sets this.charReceived to the number of bytes
	// that are available for this character.
	StringDecoder.prototype.detectIncompleteChar = function(buffer) {
	  // determine how many bytes we have to check at the end of this buffer
	  var i = (buffer.length >= 3) ? 3 : buffer.length;
	
	  // Figure out if one of the last i bytes of our buffer announces an
	  // incomplete char.
	  for (; i > 0; i--) {
	    var c = buffer[buffer.length - i];
	
	    // See http://en.wikipedia.org/wiki/UTF-8#Description
	
	    // 110XXXXX
	    if (i == 1 && c >> 5 == 0x06) {
	      this.charLength = 2;
	      break;
	    }
	
	    // 1110XXXX
	    if (i <= 2 && c >> 4 == 0x0E) {
	      this.charLength = 3;
	      break;
	    }
	
	    // 11110XXX
	    if (i <= 3 && c >> 3 == 0x1E) {
	      this.charLength = 4;
	      break;
	    }
	  }
	  this.charReceived = i;
	};
	
	StringDecoder.prototype.end = function(buffer) {
	  var res = '';
	  if (buffer && buffer.length)
	    res = this.write(buffer);
	
	  if (this.charReceived) {
	    var cr = this.charReceived;
	    var buf = this.charBuffer;
	    var enc = this.encoding;
	    res += buf.slice(0, cr).toString(enc);
	  }
	
	  return res;
	};
	
	function passThroughWrite(buffer) {
	  return buffer.toString(this.encoding);
	}
	
	function utf16DetectIncompleteChar(buffer) {
	  this.charReceived = buffer.length % 2;
	  this.charLength = this.charReceived ? 2 : 0;
	}
	
	function base64DetectIncompleteChar(buffer) {
	  this.charReceived = buffer.length % 3;
	  this.charLength = this.charReceived ? 3 : 0;
	}


/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	// a transform stream is a readable/writable stream where you do
	// something with the data.  Sometimes it's called a "filter",
	// but that's not a great name for it, since that implies a thing where
	// some bits pass through, and others are simply ignored.  (That would
	// be a valid example of a transform, of course.)
	//
	// While the output is causally related to the input, it's not a
	// necessarily symmetric or synchronous transformation.  For example,
	// a zlib stream might take multiple plain-text writes(), and then
	// emit a single compressed chunk some time in the future.
	//
	// Here's how this works:
	//
	// The Transform stream has all the aspects of the readable and writable
	// stream classes.  When you write(chunk), that calls _write(chunk,cb)
	// internally, and returns false if there's a lot of pending writes
	// buffered up.  When you call read(), that calls _read(n) until
	// there's enough pending readable data buffered up.
	//
	// In a transform stream, the written data is placed in a buffer.  When
	// _read(n) is called, it transforms the queued up data, calling the
	// buffered _write cb's as it consumes chunks.  If consuming a single
	// written chunk would result in multiple output chunks, then the first
	// outputted bit calls the readcb, and subsequent chunks just go into
	// the read buffer, and will cause it to emit 'readable' if necessary.
	//
	// This way, back-pressure is actually determined by the reading side,
	// since _read has to be called to start processing a new chunk.  However,
	// a pathological inflate type of transform can cause excessive buffering
	// here.  For example, imagine a stream where every byte of input is
	// interpreted as an integer from 0-255, and then results in that many
	// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
	// 1kb of data being output.  In this case, you could write a very small
	// amount of input, and end up with a very large amount of output.  In
	// such a pathological inflating mechanism, there'd be no way to tell
	// the system to stop doing the transform.  A single 4MB write could
	// cause the system to run out of memory.
	//
	// However, even in such a pathological case, only a single written chunk
	// would be consumed, and then the rest would wait (un-transformed) until
	// the results of the previous transformed chunk were consumed.
	
	'use strict';
	
	module.exports = Transform;
	
	var Duplex = __webpack_require__(298);
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	util.inherits(Transform, Duplex);
	
	function TransformState(stream) {
	  this.afterTransform = function (er, data) {
	    return afterTransform(stream, er, data);
	  };
	
	  this.needTransform = false;
	  this.transforming = false;
	  this.writecb = null;
	  this.writechunk = null;
	  this.writeencoding = null;
	}
	
	function afterTransform(stream, er, data) {
	  var ts = stream._transformState;
	  ts.transforming = false;
	
	  var cb = ts.writecb;
	
	  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));
	
	  ts.writechunk = null;
	  ts.writecb = null;
	
	  if (data !== null && data !== undefined) stream.push(data);
	
	  cb(er);
	
	  var rs = stream._readableState;
	  rs.reading = false;
	  if (rs.needReadable || rs.length < rs.highWaterMark) {
	    stream._read(rs.highWaterMark);
	  }
	}
	
	function Transform(options) {
	  if (!(this instanceof Transform)) return new Transform(options);
	
	  Duplex.call(this, options);
	
	  this._transformState = new TransformState(this);
	
	  var stream = this;
	
	  // start out asking for a readable event once data is transformed.
	  this._readableState.needReadable = true;
	
	  // we have implemented the _read method, and done the other things
	  // that Readable wants before the first _read call, so unset the
	  // sync guard flag.
	  this._readableState.sync = false;
	
	  if (options) {
	    if (typeof options.transform === 'function') this._transform = options.transform;
	
	    if (typeof options.flush === 'function') this._flush = options.flush;
	  }
	
	  // When the writable side finishes, then flush out anything remaining.
	  this.once('prefinish', function () {
	    if (typeof this._flush === 'function') this._flush(function (er, data) {
	      done(stream, er, data);
	    });else done(stream);
	  });
	}
	
	Transform.prototype.push = function (chunk, encoding) {
	  this._transformState.needTransform = false;
	  return Duplex.prototype.push.call(this, chunk, encoding);
	};
	
	// This is the part where you do stuff!
	// override this function in implementation classes.
	// 'chunk' is an input chunk.
	//
	// Call `push(newChunk)` to pass along transformed output
	// to the readable side.  You may call 'push' zero or more times.
	//
	// Call `cb(err)` when you are done with this chunk.  If you pass
	// an error, then that'll put the hurt on the whole operation.  If you
	// never call cb(), then you'll never get another chunk.
	Transform.prototype._transform = function (chunk, encoding, cb) {
	  throw new Error('_transform() is not implemented');
	};
	
	Transform.prototype._write = function (chunk, encoding, cb) {
	  var ts = this._transformState;
	  ts.writecb = cb;
	  ts.writechunk = chunk;
	  ts.writeencoding = encoding;
	  if (!ts.transforming) {
	    var rs = this._readableState;
	    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
	  }
	};
	
	// Doesn't matter what the args are here.
	// _transform does all the work.
	// That we got here means that the readable side wants more data.
	Transform.prototype._read = function (n) {
	  var ts = this._transformState;
	
	  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
	    ts.transforming = true;
	    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
	  } else {
	    // mark that we need a transform, so that any data that comes in
	    // will get processed, now that we've asked for it.
	    ts.needTransform = true;
	  }
	};
	
	function done(stream, er, data) {
	  if (er) return stream.emit('error', er);
	
	  if (data !== null && data !== undefined) stream.push(data);
	
	  // if there's nothing in the write buffer, then that means
	  // that nothing more will ever be provided
	  var ws = stream._writableState;
	  var ts = stream._transformState;
	
	  if (ws.length) throw new Error('Calling transform done when ws.length != 0');
	
	  if (ts.transforming) throw new Error('Calling transform done when still transforming');
	
	  return stream.push(null);
	}

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	// a passthrough stream.
	// basically just the most minimal sort of Transform stream.
	// Every written chunk gets output as-is.
	
	'use strict';
	
	module.exports = PassThrough;
	
	var Transform = __webpack_require__(304);
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	util.inherits(PassThrough, Transform);
	
	function PassThrough(options) {
	  if (!(this instanceof PassThrough)) return new PassThrough(options);
	
	  Transform.call(this, options);
	}
	
	PassThrough.prototype._transform = function (chunk, encoding, cb) {
	  cb(null, chunk);
	};

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(299)


/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(298)


/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(304)


/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(305)


/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.writeFile = writeFile;
	exports.readFile = readFile;
	
	var _utils = __webpack_require__(204);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// TODO hack - trick filesaver.js to skip loading under node
	/* global global*/
	/* eslint-disable no-try-catch */
	var savedNavigatorExists = 'navigator' in global;
	var savedNavigator = global.navigator;
	if (!_utils.isBrowser) {
	  global.navigator = { userAgent: 'MSIE 9.' };
	}
	var saveAs = __webpack_require__(311);
	if (!_utils.isBrowser) {
	  if (savedNavigatorExists) {
	    global.navigator = savedNavigator;
	  } else {
	    delete global.navigator;
	  }
	}
	// END hack
	
	var window = __webpack_require__(314);
	var File = window.File;
	var Blob = window.Blob;
	
	/**
	 * File system write function for the browser, similar to Node's fs.writeFile
	 *
	 * Saves a file by downloading it with the given file name.
	 *
	 * @param {String} file - file name
	 * @param {String|Blob} data - data to be written to file
	 * @param {String|Object} options -
	 * @param {Function} callback - Standard node (err, data) callback
	 * @return {Promise} - promise, can be used instead of callback
	 */
	function writeFile(file, data, options) {
	  var callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};
	
	  // options is optional
	  if (callback === undefined && typeof options === 'function') {
	    options = undefined;
	    callback = options;
	  }
	  if (typeof data === 'string') {
	    data = new Blob(data);
	  }
	  return new Promise(function (resolve, reject) {
	    var result = void 0;
	    try {
	      result = saveAs(data, file, options);
	    } catch (error) {
	      reject(error);
	      return callback(error, null);
	    }
	    resolve();
	    return callback(null, result);
	  });
	}
	
	/**
	 * File reader function for the browser, intentionally similar
	 * to node's fs.readFile API, however returns a Promise rather than
	 * callbacks
	 *
	 * @param {File|Blob} file  HTML File or Blob object to read as string
	 * @returns {Promise.string}  Resolves to a string containing file contents
	 */
	function readFile(file) {
	  return new Promise(function (resolve, reject) {
	    try {
	      (function () {
	        (0, _assert2.default)(File, 'window.File not defined. Must run under browser.');
	        (0, _assert2.default)(file instanceof File, 'parameter must be a File object');
	
	        var reader = new window.FileReader();
	
	        reader.onerror = function (e) {
	          return reject(new Error(getFileErrorMessage(e)));
	        };
	        reader.onabort = function () {
	          return reject(new Error('Read operation was aborted.'));
	        };
	        reader.onload = function () {
	          return resolve(reader.result);
	        };
	
	        reader.readAsText(file);
	      })();
	    } catch (error) {
	      reject(error);
	    }
	  });
	}
	
	// NOTES ON ERROR HANDLING
	//
	// Prepared to externalize error message texts
	//
	// The weird thing about the FileReader API is that the error definitions
	// are only available on the error event instance that is passed to the
	// handler. Thus we need to create definitions that are avialble outside
	// the handler.
	//
	// https://developer.mozilla.org/en-US/docs/Web/API/FileReader
	//
	// Side Note: To complicate matters, there are also a DOMError string set on
	// filereader object (error property). Not clear how or if these map
	// to the event error codes. These strings are not currently used by this api.
	//
	// https://developer.mozilla.org/en-US/docs/Web/API/DOMError
	
	function getFileErrorMessage(e) {
	  // Map event's error codes to static error codes so that we can
	  // externalize error code to error message mapping
	  switch (e.target.error.code) {
	    case e.target.error.NOT_FOUND_ERR:
	      return 'File not found.';
	    case e.target.error.NOT_READABLE_ERR:
	      return 'File not readable.';
	    case e.target.error.ABORT_ERR:
	      return 'Read operation was aborted.';
	    case e.target.error.SECURITY_ERR:
	      return 'File is in a locked state.';
	    case e.target.error.ENCODING_ERR:
	      return 'File is too long to encode in "data://" URL.';
	    default:
	      return 'Read error.';
	  }
	}
	//# sourceMappingURL=data:application/json;base64,
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* FileSaver.js
	 * A saveAs() FileSaver implementation.
	 * 1.1.20150716
	 *
	 * By Eli Grey, http://eligrey.com
	 * License: X11/MIT
	 *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md
	 */
	
	/*global self */
	/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */
	
	/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */
	
	var saveAs = saveAs || (function(view) {
		"use strict";
		// IE <10 is explicitly unsupported
		if (typeof navigator !== "undefined" && /MSIE [1-9]\./.test(navigator.userAgent)) {
			return;
		}
		var
			  doc = view.document
			  // only get URL when necessary in case Blob.js hasn't overridden it yet
			, get_URL = function() {
				return view.URL || view.webkitURL || view;
			}
			, save_link = doc.createElementNS("http://www.w3.org/1999/xhtml", "a")
			, can_use_save_link = "download" in save_link
			, click = function(node) {
				var event = new MouseEvent("click");
				node.dispatchEvent(event);
			}
			, webkit_req_fs = view.webkitRequestFileSystem
			, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem
			, throw_outside = function(ex) {
				(view.setImmediate || view.setTimeout)(function() {
					throw ex;
				}, 0);
			}
			, force_saveable_type = "application/octet-stream"
			, fs_min_size = 0
			// See https://code.google.com/p/chromium/issues/detail?id=375297#c7 and
			// https://github.com/eligrey/FileSaver.js/commit/485930a#commitcomment-8768047
			// for the reasoning behind the timeout and revocation flow
			, arbitrary_revoke_timeout = 500 // in ms
			, revoke = function(file) {
				var revoker = function() {
					if (typeof file === "string") { // file is an object URL
						get_URL().revokeObjectURL(file);
					} else { // file is a File
						file.remove();
					}
				};
				if (view.chrome) {
					revoker();
				} else {
					setTimeout(revoker, arbitrary_revoke_timeout);
				}
			}
			, dispatch = function(filesaver, event_types, event) {
				event_types = [].concat(event_types);
				var i = event_types.length;
				while (i--) {
					var listener = filesaver["on" + event_types[i]];
					if (typeof listener === "function") {
						try {
							listener.call(filesaver, event || filesaver);
						} catch (ex) {
							throw_outside(ex);
						}
					}
				}
			}
			, auto_bom = function(blob) {
				// prepend BOM for UTF-8 XML and text/* types (including HTML)
				if (/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(blob.type)) {
					return new Blob(["\ufeff", blob], {type: blob.type});
				}
				return blob;
			}
			, FileSaver = function(blob, name, no_auto_bom) {
				if (!no_auto_bom) {
					blob = auto_bom(blob);
				}
				// First try a.download, then web filesystem, then object URLs
				var
					  filesaver = this
					, type = blob.type
					, blob_changed = false
					, object_url
					, target_view
					, dispatch_all = function() {
						dispatch(filesaver, "writestart progress write writeend".split(" "));
					}
					// on any filesys errors revert to saving with object URLs
					, fs_error = function() {
						// don't create more object URLs than needed
						if (blob_changed || !object_url) {
							object_url = get_URL().createObjectURL(blob);
						}
						if (target_view) {
							target_view.location.href = object_url;
						} else {
							var new_tab = view.open(object_url, "_blank");
							if (new_tab == undefined && typeof safari !== "undefined") {
								//Apple do not allow window.open, see http://bit.ly/1kZffRI
								view.location.href = object_url
							}
						}
						filesaver.readyState = filesaver.DONE;
						dispatch_all();
						revoke(object_url);
					}
					, abortable = function(func) {
						return function() {
							if (filesaver.readyState !== filesaver.DONE) {
								return func.apply(this, arguments);
							}
						};
					}
					, create_if_not_found = {create: true, exclusive: false}
					, slice
				;
				filesaver.readyState = filesaver.INIT;
				if (!name) {
					name = "download";
				}
				if (can_use_save_link) {
					object_url = get_URL().createObjectURL(blob);
					save_link.href = object_url;
					save_link.download = name;
					setTimeout(function() {
						click(save_link);
						dispatch_all();
						revoke(object_url);
						filesaver.readyState = filesaver.DONE;
					});
					return;
				}
				// Object and web filesystem URLs have a problem saving in Google Chrome when
				// viewed in a tab, so I force save with application/octet-stream
				// http://code.google.com/p/chromium/issues/detail?id=91158
				// Update: Google errantly closed 91158, I submitted it again:
				// https://code.google.com/p/chromium/issues/detail?id=389642
				if (view.chrome && type && type !== force_saveable_type) {
					slice = blob.slice || blob.webkitSlice;
					blob = slice.call(blob, 0, blob.size, force_saveable_type);
					blob_changed = true;
				}
				// Since I can't be sure that the guessed media type will trigger a download
				// in WebKit, I append .download to the filename.
				// https://bugs.webkit.org/show_bug.cgi?id=65440
				if (webkit_req_fs && name !== "download") {
					name += ".download";
				}
				if (type === force_saveable_type || webkit_req_fs) {
					target_view = view;
				}
				if (!req_fs) {
					fs_error();
					return;
				}
				fs_min_size += blob.size;
				req_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {
					fs.root.getDirectory("saved", create_if_not_found, abortable(function(dir) {
						var save = function() {
							dir.getFile(name, create_if_not_found, abortable(function(file) {
								file.createWriter(abortable(function(writer) {
									writer.onwriteend = function(event) {
										target_view.location.href = file.toURL();
										filesaver.readyState = filesaver.DONE;
										dispatch(filesaver, "writeend", event);
										revoke(file);
									};
									writer.onerror = function() {
										var error = writer.error;
										if (error.code !== error.ABORT_ERR) {
											fs_error();
										}
									};
									"writestart progress write abort".split(" ").forEach(function(event) {
										writer["on" + event] = filesaver["on" + event];
									});
									writer.write(blob);
									filesaver.abort = function() {
										writer.abort();
										filesaver.readyState = filesaver.DONE;
									};
									filesaver.readyState = filesaver.WRITING;
								}), fs_error);
							}), fs_error);
						};
						dir.getFile(name, {create: false}, abortable(function(file) {
							// delete file if it already exists
							file.remove();
							save();
						}), abortable(function(ex) {
							if (ex.code === ex.NOT_FOUND_ERR) {
								save();
							} else {
								fs_error();
							}
						}));
					}), fs_error);
				}), fs_error);
			}
			, FS_proto = FileSaver.prototype
			, saveAs = function(blob, name, no_auto_bom) {
				return new FileSaver(blob, name, no_auto_bom);
			}
		;
		// IE 10+ (native saveAs)
		if (typeof navigator !== "undefined" && navigator.msSaveOrOpenBlob) {
			return function(blob, name, no_auto_bom) {
				if (!no_auto_bom) {
					blob = auto_bom(blob);
				}
				return navigator.msSaveOrOpenBlob(blob, name || "download");
			};
		}
	
		FS_proto.abort = function() {
			var filesaver = this;
			filesaver.readyState = filesaver.DONE;
			dispatch(filesaver, "abort");
		};
		FS_proto.readyState = FS_proto.INIT = 0;
		FS_proto.WRITING = 1;
		FS_proto.DONE = 2;
	
		FS_proto.error =
		FS_proto.onwritestart =
		FS_proto.onprogress =
		FS_proto.onwrite =
		FS_proto.onabort =
		FS_proto.onerror =
		FS_proto.onwriteend =
			null;
	
		return saveAs;
	}(
		   typeof self !== "undefined" && self
		|| typeof window !== "undefined" && window
		|| this.content
	));
	// `self` is undefined in Firefox for Android content script context
	// while `this` is nsIContentFrameMessageManager
	// with an attribute `content` that corresponds to the window
	
	if (typeof module !== "undefined" && module.exports) {
	  module.exports.saveAs = saveAs;
	} else if (("function" !== "undefined" && __webpack_require__(312) !== null) && (__webpack_require__(313) != null)) {
	  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
	    return saveAs;
	  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	}


/***/ },
/* 312 */
/***/ function(module, exports) {

	module.exports = function() { throw new Error("define cannot be used indirect"); };


/***/ },
/* 313 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;
	
	/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ },
/* 314 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {if (typeof window !== "undefined") {
	    module.exports = window;
	} else if (typeof global !== "undefined") {
	    module.exports = global;
	} else if (typeof self !== "undefined"){
	    module.exports = self;
	} else {
	    module.exports = {};
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _headlessIo = __webpack_require__(316);
	
	Object.keys(_headlessIo).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _headlessIo[key];
	    }
	  });
	});
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9pby9ub2RlL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9oZWFkbGVzcy1pbyc7XG4iXX0=

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.compressImage = compressImage;
	exports.loadImage = loadImage;
	
	var _getPixels = __webpack_require__(317);
	
	var _getPixels2 = _interopRequireDefault(_getPixels);
	
	var _savePixels = __webpack_require__(329);
	
	var _savePixels2 = _interopRequireDefault(_savePixels);
	
	var _ndarray = __webpack_require__(318);
	
	var _ndarray2 = _interopRequireDefault(_ndarray);
	
	var _fs = __webpack_require__(394);
	
	var _utils = __webpack_require__(204);
	
	var _globals = __webpack_require__(190);
	
	var _globals2 = _interopRequireDefault(_globals);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Returns data bytes representing a compressed image in PNG or JPG format,
	 * This data can be saved using file system (f) methods or
	 * used in a request.
	 * @param {Image} image to save
	 * @param {String} type='png' - png, jpg or image/png, image/jpg are valid
	 * @param {String} opt.dataURI= - Whether to include a data URI header
	 * @return {*} bytes
	 */
	// Use stackgl modules for DOM-less reading and writing of images
	// NOTE: These are not dependencies of luma.gl.
	// They need to be imported by the app.
	function compressImage(image) {
	  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'png';
	
	  return (0, _savePixels2.default)((0, _ndarray2.default)(image.data, [image.width, image.height, 4], [4, image.width * 4, 1], 0), type.replace('image/', ''));
	}
	
	var getPixelsAsync = (0, _utils.promisify)(_getPixels2.default);
	
	function loadImage(url) {
	  return getPixelsAsync(url);
	}
	
	_globals2.default.globals.modules.getPixels = _getPixels2.default;
	_globals2.default.globals.modules.savePixels = _savePixels2.default;
	_globals2.default.globals.modules.ndarray = _ndarray2.default;
	
	_globals2.default.globals.nodeIO = {
	  readFile: _fs.readFile,
	  writeFile: _fs.writeFile,
	  compressImage: compressImage,
	  loadImage: loadImage
	};
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9pby9ub2RlL2hlYWRsZXNzLWlvLmpzIl0sIm5hbWVzIjpbImNvbXByZXNzSW1hZ2UiLCJsb2FkSW1hZ2UiLCJpbWFnZSIsInR5cGUiLCJkYXRhIiwid2lkdGgiLCJoZWlnaHQiLCJyZXBsYWNlIiwiZ2V0UGl4ZWxzQXN5bmMiLCJ1cmwiLCJnbG9iYWxzIiwibW9kdWxlcyIsImdldFBpeGVscyIsInNhdmVQaXhlbHMiLCJuZGFycmF5Iiwibm9kZUlPIiwicmVhZEZpbGUiLCJ3cml0ZUZpbGUiXSwibWFwcGluZ3MiOiI7Ozs7O1FBb0JnQkEsYSxHQUFBQSxhO1FBVUFDLFMsR0FBQUEsUzs7QUEzQmhCOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOztBQUVBOztBQUNBOzs7Ozs7QUFFQTs7Ozs7Ozs7O0FBWEE7QUFDQTtBQUNBO0FBa0JPLFNBQVNELGFBQVQsQ0FBdUJFLEtBQXZCLEVBQTRDO0FBQUEsTUFBZEMsSUFBYyx1RUFBUCxLQUFPOztBQUNqRCxTQUFPLDBCQUFXLHVCQUNoQkQsTUFBTUUsSUFEVSxFQUVoQixDQUFDRixNQUFNRyxLQUFQLEVBQWNILE1BQU1JLE1BQXBCLEVBQTRCLENBQTVCLENBRmdCLEVBR2hCLENBQUMsQ0FBRCxFQUFJSixNQUFNRyxLQUFOLEdBQWMsQ0FBbEIsRUFBcUIsQ0FBckIsQ0FIZ0IsRUFJaEIsQ0FKZ0IsQ0FBWCxFQUlERixLQUFLSSxPQUFMLENBQWEsUUFBYixFQUF1QixFQUF2QixDQUpDLENBQVA7QUFLRDs7QUFFRCxJQUFNQyxpQkFBaUIsMENBQXZCOztBQUVPLFNBQVNQLFNBQVQsQ0FBbUJRLEdBQW5CLEVBQXdCO0FBQzdCLFNBQU9ELGVBQWVDLEdBQWYsQ0FBUDtBQUNEOztBQUVELGtCQUFLQyxPQUFMLENBQWFDLE9BQWIsQ0FBcUJDLFNBQXJCO0FBQ0Esa0JBQUtGLE9BQUwsQ0FBYUMsT0FBYixDQUFxQkUsVUFBckI7QUFDQSxrQkFBS0gsT0FBTCxDQUFhQyxPQUFiLENBQXFCRyxPQUFyQjs7QUFFQSxrQkFBS0osT0FBTCxDQUFhSyxNQUFiLEdBQXNCO0FBQ3BCQyx3QkFEb0I7QUFFcEJDLDBCQUZvQjtBQUdwQmpCLDhCQUhvQjtBQUlwQkM7QUFKb0IsQ0FBdEIiLCJmaWxlIjoiaGVhZGxlc3MtaW8uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBVc2Ugc3RhY2tnbCBtb2R1bGVzIGZvciBET00tbGVzcyByZWFkaW5nIGFuZCB3cml0aW5nIG9mIGltYWdlc1xuLy8gTk9URTogVGhlc2UgYXJlIG5vdCBkZXBlbmRlbmNpZXMgb2YgbHVtYS5nbC5cbi8vIFRoZXkgbmVlZCB0byBiZSBpbXBvcnRlZCBieSB0aGUgYXBwLlxuaW1wb3J0IGdldFBpeGVscyBmcm9tICdnZXQtcGl4ZWxzJztcbmltcG9ydCBzYXZlUGl4ZWxzIGZyb20gJ3NhdmUtcGl4ZWxzJztcbmltcG9ydCBuZGFycmF5IGZyb20gJ25kYXJyYXknO1xuaW1wb3J0IHtyZWFkRmlsZSwgd3JpdGVGaWxlfSBmcm9tICdmcyc7XG5cbmltcG9ydCB7cHJvbWlzaWZ5fSBmcm9tICcuLi8uLi91dGlscyc7XG5pbXBvcnQgbHVtYSBmcm9tICcuLi8uLi9nbG9iYWxzJztcblxuLyoqXG4gKiBSZXR1cm5zIGRhdGEgYnl0ZXMgcmVwcmVzZW50aW5nIGEgY29tcHJlc3NlZCBpbWFnZSBpbiBQTkcgb3IgSlBHIGZvcm1hdCxcbiAqIFRoaXMgZGF0YSBjYW4gYmUgc2F2ZWQgdXNpbmcgZmlsZSBzeXN0ZW0gKGYpIG1ldGhvZHMgb3JcbiAqIHVzZWQgaW4gYSByZXF1ZXN0LlxuICogQHBhcmFtIHtJbWFnZX0gaW1hZ2UgdG8gc2F2ZVxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGU9J3BuZycgLSBwbmcsIGpwZyBvciBpbWFnZS9wbmcsIGltYWdlL2pwZyBhcmUgdmFsaWRcbiAqIEBwYXJhbSB7U3RyaW5nfSBvcHQuZGF0YVVSST0gLSBXaGV0aGVyIHRvIGluY2x1ZGUgYSBkYXRhIFVSSSBoZWFkZXJcbiAqIEByZXR1cm4geyp9IGJ5dGVzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21wcmVzc0ltYWdlKGltYWdlLCB0eXBlID0gJ3BuZycpIHtcbiAgcmV0dXJuIHNhdmVQaXhlbHMobmRhcnJheShcbiAgICBpbWFnZS5kYXRhLFxuICAgIFtpbWFnZS53aWR0aCwgaW1hZ2UuaGVpZ2h0LCA0XSxcbiAgICBbNCwgaW1hZ2Uud2lkdGggKiA0LCAxXSxcbiAgICAwKSwgdHlwZS5yZXBsYWNlKCdpbWFnZS8nLCAnJykpO1xufVxuXG5jb25zdCBnZXRQaXhlbHNBc3luYyA9IHByb21pc2lmeShnZXRQaXhlbHMpO1xuXG5leHBvcnQgZnVuY3Rpb24gbG9hZEltYWdlKHVybCkge1xuICByZXR1cm4gZ2V0UGl4ZWxzQXN5bmModXJsKTtcbn1cblxubHVtYS5nbG9iYWxzLm1vZHVsZXMuZ2V0UGl4ZWxzID0gZ2V0UGl4ZWxzO1xubHVtYS5nbG9iYWxzLm1vZHVsZXMuc2F2ZVBpeGVscyA9IHNhdmVQaXhlbHM7XG5sdW1hLmdsb2JhbHMubW9kdWxlcy5uZGFycmF5ID0gbmRhcnJheTtcblxubHVtYS5nbG9iYWxzLm5vZGVJTyA9IHtcbiAgcmVhZEZpbGUsXG4gIHdyaXRlRmlsZSxcbiAgY29tcHJlc3NJbWFnZSxcbiAgbG9hZEltYWdlXG59O1xuIl19

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, Buffer) {'use strict'
	
	var path          = __webpack_require__(214)
	var ndarray       = __webpack_require__(318)
	var GifReader     = __webpack_require__(321).GifReader
	var pack          = __webpack_require__(322)
	var through       = __webpack_require__(286)
	var parseDataURI  = __webpack_require__(328)
	
	function defaultImage(url, cb) {
	  var img = new Image()
	  img.crossOrigin = "Anonymous"
	  img.onload = function() {
	    var canvas = document.createElement('canvas')
	    canvas.width = img.width
	    canvas.height = img.height
	    var context = canvas.getContext('2d')
	    context.drawImage(img, 0, 0)
	    var pixels = context.getImageData(0, 0, img.width, img.height)
	    cb(null, ndarray(new Uint8Array(pixels.data), [img.width, img.height, 4], [4, 4*img.width, 1], 0))
	  }
	  img.onerror = function(err) {
	    cb(err)
	  }
	  img.src = url
	}
	
	//Animated gif loading
	function handleGif(data, cb) {
	  var reader
	  try {
	    reader = new GifReader(data)
	  } catch(err) {
	    cb(err)
	    return
	  }
	  if(reader.numFrames() > 0) {
	    var nshape = [reader.numFrames(), reader.height, reader.width, 4]
	    var ndata = new Uint8Array(nshape[0] * nshape[1] * nshape[2] * nshape[3])
	    var result = ndarray(ndata, nshape)
	    try {
	      for(var i=0; i<reader.numFrames(); ++i) {
	        reader.decodeAndBlitFrameRGBA(i, ndata.subarray(
	          result.index(i, 0, 0, 0),
	          result.index(i+1, 0, 0, 0)))
	      }
	    } catch(err) {
	      cb(err)
	      return
	    }
	    cb(null, result.transpose(0,2,1))
	  } else {
	    var nshape = [reader.height, reader.width, 4]
	    var ndata = new Uint8Array(nshape[0] * nshape[1] * nshape[2])
	    var result = ndarray(ndata, nshape)
	    try {
	      reader.decodeAndBlitFrameRGBA(0, ndata)
	    } catch(err) {
	      cb(err)
	      return
	    }
	    cb(null, result.transpose(1,0))
	  }
	}
	
	function httpGif(url, cb) {
	  var xhr          = new XMLHttpRequest()
	  xhr.open('GET', url, true)
	  xhr.responseType = 'arraybuffer'
	  if(xhr.overrideMimeType){
	    xhr.overrideMimeType('application/binary')
	  }
	  xhr.onerror = function(err) {
	    cb(err)
	  }
	  xhr.onload = function() {
	    if(xhr.readyState !== 4) {
	      return
	    }
	    var data = new Uint8Array(xhr.response)
	    handleGif(data, cb)
	    return
	  }
	  xhr.send()
	}
	
	function copyBuffer(buffer) {
	  if(buffer[0] === undefined) {
	    var n = buffer.length
	    var result = new Uint8Array(n)
	    for(var i=0; i<n; ++i) {
	      result[i] = buffer.get(i)
	    }
	    return result
	  } else {
	    return new Uint8Array(buffer)
	  }
	}
	
	function dataGif(url, cb) {
	  process.nextTick(function() {
	    try {
	      var buffer = parseDataURI(url)
	      if(buffer) {
	        handleGif(copyBuffer(buffer), cb)
	      } else {
	        cb(new Error('Error parsing data URI'))
	      }
	    } catch(err) {
	      cb(err)
	    }
	  })
	}
	
	module.exports = function getPixels(url, type, cb) {
	  if(!cb) {
	    cb = type
	    type = ''
	  }
	  var ext = path.extname(url)
	  switch(type || ext.toUpperCase()) {
	    case '.GIF':
	      httpGif(url, cb)
	    break
	    default:
	      if(Buffer.isBuffer(url)) {
	        url = 'data:' + type + ';base64,' + url.toString('base64')
	      }
	      if(url.indexOf('data:image/gif;') === 0) {
	        dataGif(url, cb)
	      } else {
	        defaultImage(url, cb)
	      }
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6), __webpack_require__(282).Buffer))

/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	var iota = __webpack_require__(319)
	var isBuffer = __webpack_require__(320)
	
	var hasTypedArrays  = ((typeof Float64Array) !== "undefined")
	
	function compare1st(a, b) {
	  return a[0] - b[0]
	}
	
	function order() {
	  var stride = this.stride
	  var terms = new Array(stride.length)
	  var i
	  for(i=0; i<terms.length; ++i) {
	    terms[i] = [Math.abs(stride[i]), i]
	  }
	  terms.sort(compare1st)
	  var result = new Array(terms.length)
	  for(i=0; i<result.length; ++i) {
	    result[i] = terms[i][1]
	  }
	  return result
	}
	
	function compileConstructor(dtype, dimension) {
	  var className = ["View", dimension, "d", dtype].join("")
	  if(dimension < 0) {
	    className = "View_Nil" + dtype
	  }
	  var useGetters = (dtype === "generic")
	
	  if(dimension === -1) {
	    //Special case for trivial arrays
	    var code =
	      "function "+className+"(a){this.data=a;};\
	var proto="+className+".prototype;\
	proto.dtype='"+dtype+"';\
	proto.index=function(){return -1};\
	proto.size=0;\
	proto.dimension=-1;\
	proto.shape=proto.stride=proto.order=[];\
	proto.lo=proto.hi=proto.transpose=proto.step=\
	function(){return new "+className+"(this.data);};\
	proto.get=proto.set=function(){};\
	proto.pick=function(){return null};\
	return function construct_"+className+"(a){return new "+className+"(a);}"
	    var procedure = new Function(code)
	    return procedure()
	  } else if(dimension === 0) {
	    //Special case for 0d arrays
	    var code =
	      "function "+className+"(a,d) {\
	this.data = a;\
	this.offset = d\
	};\
	var proto="+className+".prototype;\
	proto.dtype='"+dtype+"';\
	proto.index=function(){return this.offset};\
	proto.dimension=0;\
	proto.size=1;\
	proto.shape=\
	proto.stride=\
	proto.order=[];\
	proto.lo=\
	proto.hi=\
	proto.transpose=\
	proto.step=function "+className+"_copy() {\
	return new "+className+"(this.data,this.offset)\
	};\
	proto.pick=function "+className+"_pick(){\
	return TrivialArray(this.data);\
	};\
	proto.valueOf=proto.get=function "+className+"_get(){\
	return "+(useGetters ? "this.data.get(this.offset)" : "this.data[this.offset]")+
	"};\
	proto.set=function "+className+"_set(v){\
	return "+(useGetters ? "this.data.set(this.offset,v)" : "this.data[this.offset]=v")+"\
	};\
	return function construct_"+className+"(a,b,c,d){return new "+className+"(a,d)}"
	    var procedure = new Function("TrivialArray", code)
	    return procedure(CACHED_CONSTRUCTORS[dtype][0])
	  }
	
	  var code = ["'use strict'"]
	
	  //Create constructor for view
	  var indices = iota(dimension)
	  var args = indices.map(function(i) { return "i"+i })
	  var index_str = "this.offset+" + indices.map(function(i) {
	        return "this.stride[" + i + "]*i" + i
	      }).join("+")
	  var shapeArg = indices.map(function(i) {
	      return "b"+i
	    }).join(",")
	  var strideArg = indices.map(function(i) {
	      return "c"+i
	    }).join(",")
	  code.push(
	    "function "+className+"(a," + shapeArg + "," + strideArg + ",d){this.data=a",
	      "this.shape=[" + shapeArg + "]",
	      "this.stride=[" + strideArg + "]",
	      "this.offset=d|0}",
	    "var proto="+className+".prototype",
	    "proto.dtype='"+dtype+"'",
	    "proto.dimension="+dimension)
	
	  //view.size:
	  code.push("Object.defineProperty(proto,'size',{get:function "+className+"_size(){\
	return "+indices.map(function(i) { return "this.shape["+i+"]" }).join("*"),
	"}})")
	
	  //view.order:
	  if(dimension === 1) {
	    code.push("proto.order=[0]")
	  } else {
	    code.push("Object.defineProperty(proto,'order',{get:")
	    if(dimension < 4) {
	      code.push("function "+className+"_order(){")
	      if(dimension === 2) {
	        code.push("return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})")
	      } else if(dimension === 3) {
	        code.push(
	"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\
	if(s0>s1){\
	if(s1>s2){\
	return [2,1,0];\
	}else if(s0>s2){\
	return [1,2,0];\
	}else{\
	return [1,0,2];\
	}\
	}else if(s0>s2){\
	return [2,0,1];\
	}else if(s2>s1){\
	return [0,1,2];\
	}else{\
	return [0,2,1];\
	}}})")
	      }
	    } else {
	      code.push("ORDER})")
	    }
	  }
	
	  //view.set(i0, ..., v):
	  code.push(
	"proto.set=function "+className+"_set("+args.join(",")+",v){")
	  if(useGetters) {
	    code.push("return this.data.set("+index_str+",v)}")
	  } else {
	    code.push("return this.data["+index_str+"]=v}")
	  }
	
	  //view.get(i0, ...):
	  code.push("proto.get=function "+className+"_get("+args.join(",")+"){")
	  if(useGetters) {
	    code.push("return this.data.get("+index_str+")}")
	  } else {
	    code.push("return this.data["+index_str+"]}")
	  }
	
	  //view.index:
	  code.push(
	    "proto.index=function "+className+"_index(", args.join(), "){return "+index_str+"}")
	
	  //view.hi():
	  code.push("proto.hi=function "+className+"_hi("+args.join(",")+"){return new "+className+"(this.data,"+
	    indices.map(function(i) {
	      return ["(typeof i",i,"!=='number'||i",i,"<0)?this.shape[", i, "]:i", i,"|0"].join("")
	    }).join(",")+","+
	    indices.map(function(i) {
	      return "this.stride["+i + "]"
	    }).join(",")+",this.offset)}")
	
	  //view.lo():
	  var a_vars = indices.map(function(i) { return "a"+i+"=this.shape["+i+"]" })
	  var c_vars = indices.map(function(i) { return "c"+i+"=this.stride["+i+"]" })
	  code.push("proto.lo=function "+className+"_lo("+args.join(",")+"){var b=this.offset,d=0,"+a_vars.join(",")+","+c_vars.join(","))
	  for(var i=0; i<dimension; ++i) {
	    code.push(
	"if(typeof i"+i+"==='number'&&i"+i+">=0){\
	d=i"+i+"|0;\
	b+=c"+i+"*d;\
	a"+i+"-=d}")
	  }
	  code.push("return new "+className+"(this.data,"+
	    indices.map(function(i) {
	      return "a"+i
	    }).join(",")+","+
	    indices.map(function(i) {
	      return "c"+i
	    }).join(",")+",b)}")
	
	  //view.step():
	  code.push("proto.step=function "+className+"_step("+args.join(",")+"){var "+
	    indices.map(function(i) {
	      return "a"+i+"=this.shape["+i+"]"
	    }).join(",")+","+
	    indices.map(function(i) {
	      return "b"+i+"=this.stride["+i+"]"
	    }).join(",")+",c=this.offset,d=0,ceil=Math.ceil")
	  for(var i=0; i<dimension; ++i) {
	    code.push(
	"if(typeof i"+i+"==='number'){\
	d=i"+i+"|0;\
	if(d<0){\
	c+=b"+i+"*(a"+i+"-1);\
	a"+i+"=ceil(-a"+i+"/d)\
	}else{\
	a"+i+"=ceil(a"+i+"/d)\
	}\
	b"+i+"*=d\
	}")
	  }
	  code.push("return new "+className+"(this.data,"+
	    indices.map(function(i) {
	      return "a" + i
	    }).join(",")+","+
	    indices.map(function(i) {
	      return "b" + i
	    }).join(",")+",c)}")
	
	  //view.transpose():
	  var tShape = new Array(dimension)
	  var tStride = new Array(dimension)
	  for(var i=0; i<dimension; ++i) {
	    tShape[i] = "a[i"+i+"]"
	    tStride[i] = "b[i"+i+"]"
	  }
	  code.push("proto.transpose=function "+className+"_transpose("+args+"){"+
	    args.map(function(n,idx) { return n + "=(" + n + "===undefined?" + idx + ":" + n + "|0)"}).join(";"),
	    "var a=this.shape,b=this.stride;return new "+className+"(this.data,"+tShape.join(",")+","+tStride.join(",")+",this.offset)}")
	
	  //view.pick():
	  code.push("proto.pick=function "+className+"_pick("+args+"){var a=[],b=[],c=this.offset")
	  for(var i=0; i<dimension; ++i) {
	    code.push("if(typeof i"+i+"==='number'&&i"+i+">=0){c=(c+this.stride["+i+"]*i"+i+")|0}else{a.push(this.shape["+i+"]);b.push(this.stride["+i+"])}")
	  }
	  code.push("var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}")
	
	  //Add return statement
	  code.push("return function construct_"+className+"(data,shape,stride,offset){return new "+className+"(data,"+
	    indices.map(function(i) {
	      return "shape["+i+"]"
	    }).join(",")+","+
	    indices.map(function(i) {
	      return "stride["+i+"]"
	    }).join(",")+",offset)}")
	
	  //Compile procedure
	  var procedure = new Function("CTOR_LIST", "ORDER", code.join("\n"))
	  return procedure(CACHED_CONSTRUCTORS[dtype], order)
	}
	
	function arrayDType(data) {
	  if(isBuffer(data)) {
	    return "buffer"
	  }
	  if(hasTypedArrays) {
	    switch(Object.prototype.toString.call(data)) {
	      case "[object Float64Array]":
	        return "float64"
	      case "[object Float32Array]":
	        return "float32"
	      case "[object Int8Array]":
	        return "int8"
	      case "[object Int16Array]":
	        return "int16"
	      case "[object Int32Array]":
	        return "int32"
	      case "[object Uint8Array]":
	        return "uint8"
	      case "[object Uint16Array]":
	        return "uint16"
	      case "[object Uint32Array]":
	        return "uint32"
	      case "[object Uint8ClampedArray]":
	        return "uint8_clamped"
	    }
	  }
	  if(Array.isArray(data)) {
	    return "array"
	  }
	  return "generic"
	}
	
	var CACHED_CONSTRUCTORS = {
	  "float32":[],
	  "float64":[],
	  "int8":[],
	  "int16":[],
	  "int32":[],
	  "uint8":[],
	  "uint16":[],
	  "uint32":[],
	  "array":[],
	  "uint8_clamped":[],
	  "buffer":[],
	  "generic":[]
	}
	
	;(function() {
	  for(var id in CACHED_CONSTRUCTORS) {
	    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))
	  }
	});
	
	function wrappedNDArrayCtor(data, shape, stride, offset) {
	  if(data === undefined) {
	    var ctor = CACHED_CONSTRUCTORS.array[0]
	    return ctor([])
	  } else if(typeof data === "number") {
	    data = [data]
	  }
	  if(shape === undefined) {
	    shape = [ data.length ]
	  }
	  var d = shape.length
	  if(stride === undefined) {
	    stride = new Array(d)
	    for(var i=d-1, sz=1; i>=0; --i) {
	      stride[i] = sz
	      sz *= shape[i]
	    }
	  }
	  if(offset === undefined) {
	    offset = 0
	    for(var i=0; i<d; ++i) {
	      if(stride[i] < 0) {
	        offset -= (shape[i]-1)*stride[i]
	      }
	    }
	  }
	  var dtype = arrayDType(data)
	  var ctor_list = CACHED_CONSTRUCTORS[dtype]
	  while(ctor_list.length <= d+1) {
	    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))
	  }
	  var ctor = ctor_list[d+1]
	  return ctor(data, shape, stride, offset)
	}
	
	module.exports = wrappedNDArrayCtor


/***/ },
/* 319 */
/***/ function(module, exports) {

	"use strict"
	
	function iota(n) {
	  var result = new Array(n)
	  for(var i=0; i<n; ++i) {
	    result[i] = i
	  }
	  return result
	}
	
	module.exports = iota

/***/ },
/* 320 */
/***/ function(module, exports) {

	/*!
	 * Determine if an object is a Buffer
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	
	// The _isBuffer check is for Safari 5-7 support, because it's missing
	// Object.prototype.constructor. Remove this eventually
	module.exports = function (obj) {
	  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
	}
	
	function isBuffer (obj) {
	  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
	}
	
	// For Node v0.10 support. Remove this eventually.
	function isSlowBuffer (obj) {
	  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
	}


/***/ },
/* 321 */
/***/ function(module, exports) {

	// (c) Dean McNamee <dean@gmail.com>, 2013.
	//
	// https://github.com/deanm/omggif
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the "Software"), to
	// deal in the Software without restriction, including without limitation the
	// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
	// sell copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
	// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
	// IN THE SOFTWARE.
	//
	// omggif is a JavaScript implementation of a GIF 89a encoder and decoder,
	// including animation and compression.  It does not rely on any specific
	// underlying system, so should run in the browser, Node, or Plask.
	
	function GifWriter(buf, width, height, gopts) {
	  var p = 0;
	
	  var gopts = gopts === undefined ? { } : gopts;
	  var loop_count = gopts.loop === undefined ? null : gopts.loop;
	  var global_palette = gopts.palette === undefined ? null : gopts.palette;
	
	  if (width <= 0 || height <= 0 || width > 65535 || height > 65535)
	    throw "Width/Height invalid."
	
	  function check_palette_and_num_colors(palette) {
	    var num_colors = palette.length;
	    if (num_colors < 2 || num_colors > 256 ||  num_colors & (num_colors-1))
	      throw "Invalid code/color length, must be power of 2 and 2 .. 256.";
	    return num_colors;
	  }
	
	  // - Header.
	  buf[p++] = 0x47; buf[p++] = 0x49; buf[p++] = 0x46;  // GIF
	  buf[p++] = 0x38; buf[p++] = 0x39; buf[p++] = 0x61;  // 89a
	
	  // Handling of Global Color Table (palette) and background index.
	  var gp_num_colors_pow2 = 0;
	  var background = 0;
	  if (global_palette !== null) {
	    var gp_num_colors = check_palette_and_num_colors(global_palette);
	    while (gp_num_colors >>= 1) ++gp_num_colors_pow2;
	    gp_num_colors = 1 << gp_num_colors_pow2;
	    --gp_num_colors_pow2;
	    if (gopts.background !== undefined) {
	      background = gopts.background;
	      if (background >= gp_num_colors) throw "Background index out of range.";
	      // The GIF spec states that a background index of 0 should be ignored, so
	      // this is probably a mistake and you really want to set it to another
	      // slot in the palette.  But actually in the end most browsers, etc end
	      // up ignoring this almost completely (including for dispose background).
	      if (background === 0)
	        throw "Background index explicitly passed as 0.";
	    }
	  }
	
	  // - Logical Screen Descriptor.
	  // NOTE(deanm): w/h apparently ignored by implementations, but set anyway.
	  buf[p++] = width & 0xff; buf[p++] = width >> 8 & 0xff;
	  buf[p++] = height & 0xff; buf[p++] = height >> 8 & 0xff;
	  // NOTE: Indicates 0-bpp original color resolution (unused?).
	  buf[p++] = (global_palette !== null ? 0x80 : 0) |  // Global Color Table Flag.
	             gp_num_colors_pow2;  // NOTE: No sort flag (unused?).
	  buf[p++] = background;  // Background Color Index.
	  buf[p++] = 0;  // Pixel aspect ratio (unused?).
	
	  // - Global Color Table
	  if (global_palette !== null) {
	    for (var i = 0, il = global_palette.length; i < il; ++i) {
	      var rgb = global_palette[i];
	      buf[p++] = rgb >> 16 & 0xff;
	      buf[p++] = rgb >> 8 & 0xff;
	      buf[p++] = rgb & 0xff;
	    }
	  }
	
	  if (loop_count !== null) {  // Netscape block for looping.
	    if (loop_count < 0 || loop_count > 65535)
	      throw "Loop count invalid."
	    // Extension code, label, and length.
	    buf[p++] = 0x21; buf[p++] = 0xff; buf[p++] = 0x0b;
	    // NETSCAPE2.0
	    buf[p++] = 0x4e; buf[p++] = 0x45; buf[p++] = 0x54; buf[p++] = 0x53;
	    buf[p++] = 0x43; buf[p++] = 0x41; buf[p++] = 0x50; buf[p++] = 0x45;
	    buf[p++] = 0x32; buf[p++] = 0x2e; buf[p++] = 0x30;
	    // Sub-block
	    buf[p++] = 0x03; buf[p++] = 0x01;
	    buf[p++] = loop_count & 0xff; buf[p++] = loop_count >> 8 & 0xff;
	    buf[p++] = 0x00;  // Terminator.
	  }
	
	
	  var ended = false;
	
	  this.addFrame = function(x, y, w, h, indexed_pixels, opts) {
	    if (ended === true) { --p; ended = false; }  // Un-end.
	
	    opts = opts === undefined ? { } : opts;
	
	    // TODO(deanm): Bounds check x, y.  Do they need to be within the virtual
	    // canvas width/height, I imagine?
	    if (x < 0 || y < 0 || x > 65535 || y > 65535)
	      throw "x/y invalid."
	
	    if (w <= 0 || h <= 0 || w > 65535 || h > 65535)
	      throw "Width/Height invalid."
	
	    if (indexed_pixels.length < w * h)
	      throw "Not enough pixels for the frame size.";
	
	    var using_local_palette = true;
	    var palette = opts.palette;
	    if (palette === undefined || palette === null) {
	      using_local_palette = false;
	      palette = global_palette;
	    }
	
	    if (palette === undefined || palette === null)
	      throw "Must supply either a local or global palette.";
	
	    var num_colors = check_palette_and_num_colors(palette);
	
	    // Compute the min_code_size (power of 2), destroying num_colors.
	    var min_code_size = 0;
	    while (num_colors >>= 1) ++min_code_size;
	    num_colors = 1 << min_code_size;  // Now we can easily get it back.
	
	    var delay = opts.delay === undefined ? 0 : opts.delay;
	
	    // From the spec:
	    //     0 -   No disposal specified. The decoder is
	    //           not required to take any action.
	    //     1 -   Do not dispose. The graphic is to be left
	    //           in place.
	    //     2 -   Restore to background color. The area used by the
	    //           graphic must be restored to the background color.
	    //     3 -   Restore to previous. The decoder is required to
	    //           restore the area overwritten by the graphic with
	    //           what was there prior to rendering the graphic.
	    //  4-7 -    To be defined.
	    // NOTE(deanm): Dispose background doesn't really work, apparently most
	    // browsers ignore the background palette index and clear to transparency.
	    var disposal = opts.disposal === undefined ? 0 : opts.disposal;
	    if (disposal < 0 || disposal > 3)  // 4-7 is reserved.
	      throw "Disposal out of range.";
	
	    var use_transparency = false;
	    var transparent_index = 0;
	    if (opts.transparent !== undefined && opts.transparent !== null) {
	      use_transparency = true;
	      transparent_index = opts.transparent;
	      if (transparent_index < 0 || transparent_index >= num_colors)
	        throw "Transparent color index.";
	    }
	
	    if (disposal !== 0 || use_transparency || delay !== 0) {
	      // - Graphics Control Extension
	      buf[p++] = 0x21; buf[p++] = 0xf9;  // Extension / Label.
	      buf[p++] = 4;  // Byte size.
	
	      buf[p++] = disposal << 2 | (use_transparency === true ? 1 : 0);
	      buf[p++] = delay & 0xff; buf[p++] = delay >> 8 & 0xff;
	      buf[p++] = transparent_index;  // Transparent color index.
	      buf[p++] = 0;  // Block Terminator.
	    }
	
	    // - Image Descriptor
	    buf[p++] = 0x2c;  // Image Seperator.
	    buf[p++] = x & 0xff; buf[p++] = x >> 8 & 0xff;  // Left.
	    buf[p++] = y & 0xff; buf[p++] = y >> 8 & 0xff;  // Top.
	    buf[p++] = w & 0xff; buf[p++] = w >> 8 & 0xff;
	    buf[p++] = h & 0xff; buf[p++] = h >> 8 & 0xff;
	    // NOTE: No sort flag (unused?).
	    // TODO(deanm): Support interlace.
	    buf[p++] = using_local_palette === true ? (0x80 | (min_code_size-1)) : 0;
	
	    // - Local Color Table
	    if (using_local_palette === true) {
	      for (var i = 0, il = palette.length; i < il; ++i) {
	        var rgb = palette[i];
	        buf[p++] = rgb >> 16 & 0xff;
	        buf[p++] = rgb >> 8 & 0xff;
	        buf[p++] = rgb & 0xff;
	      }
	    }
	
	    p = GifWriterOutputLZWCodeStream(
	            buf, p, min_code_size < 2 ? 2 : min_code_size, indexed_pixels);
	  };
	
	  this.end = function() {
	    if (ended === false) {
	      buf[p++] = 0x3b;  // Trailer.
	      ended = true;
	    }
	    return p;
	  };
	}
	
	// Main compression routine, palette indexes -> LZW code stream.
	// |index_stream| must have at least one entry.
	function GifWriterOutputLZWCodeStream(buf, p, min_code_size, index_stream) {
	  buf[p++] = min_code_size;
	  var cur_subblock = p++;  // Pointing at the length field.
	
	  var clear_code = 1 << min_code_size;
	  var code_mask = clear_code - 1;
	  var eoi_code = clear_code + 1;
	  var next_code = eoi_code + 1;
	
	  var cur_code_size = min_code_size + 1;  // Number of bits per code.
	  var cur_shift = 0;
	  // We have at most 12-bit codes, so we should have to hold a max of 19
	  // bits here (and then we would write out).
	  var cur = 0;
	
	  function emit_bytes_to_buffer(bit_block_size) {
	    while (cur_shift >= bit_block_size) {
	      buf[p++] = cur & 0xff;
	      cur >>= 8; cur_shift -= 8;
	      if (p === cur_subblock + 256) {  // Finished a subblock.
	        buf[cur_subblock] = 255;
	        cur_subblock = p++;
	      }
	    }
	  }
	
	  function emit_code(c) {
	    cur |= c << cur_shift;
	    cur_shift += cur_code_size;
	    emit_bytes_to_buffer(8);
	  }
	
	  // I am not an expert on the topic, and I don't want to write a thesis.
	  // However, it is good to outline here the basic algorithm and the few data
	  // structures and optimizations here that make this implementation fast.
	  // The basic idea behind LZW is to build a table of previously seen runs
	  // addressed by a short id (herein called output code).  All data is
	  // referenced by a code, which represents one or more values from the
	  // original input stream.  All input bytes can be referenced as the same
	  // value as an output code.  So if you didn't want any compression, you
	  // could more or less just output the original bytes as codes (there are
	  // some details to this, but it is the idea).  In order to achieve
	  // compression, values greater then the input range (codes can be up to
	  // 12-bit while input only 8-bit) represent a sequence of previously seen
	  // inputs.  The decompressor is able to build the same mapping while
	  // decoding, so there is always a shared common knowledge between the
	  // encoding and decoder, which is also important for "timing" aspects like
	  // how to handle variable bit width code encoding.
	  //
	  // One obvious but very important consequence of the table system is there
	  // is always a unique id (at most 12-bits) to map the runs.  'A' might be
	  // 4, then 'AA' might be 10, 'AAA' 11, 'AAAA' 12, etc.  This relationship
	  // can be used for an effecient lookup strategy for the code mapping.  We
	  // need to know if a run has been seen before, and be able to map that run
	  // to the output code.  Since we start with known unique ids (input bytes),
	  // and then from those build more unique ids (table entries), we can
	  // continue this chain (almost like a linked list) to always have small
	  // integer values that represent the current byte chains in the encoder.
	  // This means instead of tracking the input bytes (AAAABCD) to know our
	  // current state, we can track the table entry for AAAABC (it is guaranteed
	  // to exist by the nature of the algorithm) and the next character D.
	  // Therefor the tuple of (table_entry, byte) is guaranteed to also be
	  // unique.  This allows us to create a simple lookup key for mapping input
	  // sequences to codes (table indices) without having to store or search
	  // any of the code sequences.  So if 'AAAA' has a table entry of 12, the
	  // tuple of ('AAAA', K) for any input byte K will be unique, and can be our
	  // key.  This leads to a integer value at most 20-bits, which can always
	  // fit in an SMI value and be used as a fast sparse array / object key.
	
	  // Output code for the current contents of the index buffer.
	  var ib_code = index_stream[0] & code_mask;  // Load first input index.
	  var code_table = { };  // Key'd on our 20-bit "tuple".
	
	  emit_code(clear_code);  // Spec says first code should be a clear code.
	
	  // First index already loaded, process the rest of the stream.
	  for (var i = 1, il = index_stream.length; i < il; ++i) {
	    var k = index_stream[i] & code_mask;
	    var cur_key = ib_code << 8 | k;  // (prev, k) unique tuple.
	    var cur_code = code_table[cur_key];  // buffer + k.
	
	    // Check if we have to create a new code table entry.
	    if (cur_code === undefined) {  // We don't have buffer + k.
	      // Emit index buffer (without k).
	      // This is an inline version of emit_code, because this is the core
	      // writing routine of the compressor (and V8 cannot inline emit_code
	      // because it is a closure here in a different context).  Additionally
	      // we can call emit_byte_to_buffer less often, because we can have
	      // 30-bits (from our 31-bit signed SMI), and we know our codes will only
	      // be 12-bits, so can safely have 18-bits there without overflow.
	      // emit_code(ib_code);
	      cur |= ib_code << cur_shift;
	      cur_shift += cur_code_size;
	      while (cur_shift >= 8) {
	        buf[p++] = cur & 0xff;
	        cur >>= 8; cur_shift -= 8;
	        if (p === cur_subblock + 256) {  // Finished a subblock.
	          buf[cur_subblock] = 255;
	          cur_subblock = p++;
	        }
	      }
	
	      if (next_code === 4096) {  // Table full, need a clear.
	        emit_code(clear_code);
	        next_code = eoi_code + 1;
	        cur_code_size = min_code_size + 1;
	        code_table = { };
	      } else {  // Table not full, insert a new entry.
	        // Increase our variable bit code sizes if necessary.  This is a bit
	        // tricky as it is based on "timing" between the encoding and
	        // decoder.  From the encoders perspective this should happen after
	        // we've already emitted the index buffer and are about to create the
	        // first table entry that would overflow our current code bit size.
	        if (next_code >= (1 << cur_code_size)) ++cur_code_size;
	        code_table[cur_key] = next_code++;  // Insert into code table.
	      }
	
	      ib_code = k;  // Index buffer to single input k.
	    } else {
	      ib_code = cur_code;  // Index buffer to sequence in code table.
	    }
	  }
	
	  emit_code(ib_code);  // There will still be something in the index buffer.
	  emit_code(eoi_code);  // End Of Information.
	
	  // Flush / finalize the sub-blocks stream to the buffer.
	  emit_bytes_to_buffer(1);
	
	  // Finish the sub-blocks, writing out any unfinished lengths and
	  // terminating with a sub-block of length 0.  If we have already started
	  // but not yet used a sub-block it can just become the terminator.
	  if (cur_subblock + 1 === p) {  // Started but unused.
	    buf[cur_subblock] = 0;
	  } else {  // Started and used, write length and additional terminator block.
	    buf[cur_subblock] = p - cur_subblock - 1;
	    buf[p++] = 0;
	  }
	  return p;
	}
	
	function GifReader(buf) {
	  var p = 0;
	
	  // - Header (GIF87a or GIF89a).
	  if (buf[p++] !== 0x47 ||            buf[p++] !== 0x49 || buf[p++] !== 0x46 ||
	      buf[p++] !== 0x38 || (buf[p++]+1 & 0xfd) !== 0x38 || buf[p++] !== 0x61) {
	    throw "Invalid GIF 87a/89a header.";
	  }
	
	  // - Logical Screen Descriptor.
	  var width = buf[p++] | buf[p++] << 8;
	  var height = buf[p++] | buf[p++] << 8;
	  var pf0 = buf[p++];  // <Packed Fields>.
	  var global_palette_flag = pf0 >> 7;
	  var num_global_colors_pow2 = pf0 & 0x7;
	  var num_global_colors = 1 << (num_global_colors_pow2 + 1);
	  var background = buf[p++];
	  buf[p++];  // Pixel aspect ratio (unused?).
	
	  var global_palette_offset = null;
	
	  if (global_palette_flag) {
	    global_palette_offset = p;
	    p += num_global_colors * 3;  // Seek past palette.
	  }
	
	  var no_eof = true;
	
	  var frames = [ ];
	
	  var delay = 0;
	  var transparent_index = null;
	  var disposal = 0;  // 0 - No disposal specified.
	  var loop_count = null;
	
	  this.width = width;
	  this.height = height;
	
	  while (no_eof && p < buf.length) {
	    switch (buf[p++]) {
	      case 0x21:  // Graphics Control Extension Block
	        switch (buf[p++]) {
	          case 0xff:  // Application specific block
	            // Try if it's a Netscape block (with animation loop counter).
	            if (buf[p   ] !== 0x0b ||  // 21 FF already read, check block size.
	                // NETSCAPE2.0
	                buf[p+1 ] == 0x4e && buf[p+2 ] == 0x45 && buf[p+3 ] == 0x54 &&
	                buf[p+4 ] == 0x53 && buf[p+5 ] == 0x43 && buf[p+6 ] == 0x41 &&
	                buf[p+7 ] == 0x50 && buf[p+8 ] == 0x45 && buf[p+9 ] == 0x32 &&
	                buf[p+10] == 0x2e && buf[p+11] == 0x30 &&
	                // Sub-block
	                buf[p+12] == 0x03 && buf[p+13] == 0x01 && buf[p+16] == 0) {
	              p += 14;
	              loop_count = buf[p++] | buf[p++] << 8;
	              p++;  // Skip terminator.
	            } else {  // We don't know what it is, just try to get past it.
	              p += 12;
	              while (true) {  // Seek through subblocks.
	                var block_size = buf[p++];
	                if (block_size === 0) break;
	                p += block_size;
	              }
	            }
	            break;
	
	          case 0xf9:  // Graphics Control Extension
	            if (buf[p++] !== 0x4 || buf[p+4] !== 0)
	              throw "Invalid graphics extension block.";
	            var pf1 = buf[p++];
	            delay = buf[p++] | buf[p++] << 8;
	            transparent_index = buf[p++];
	            if ((pf1 & 1) === 0) transparent_index = null;
	            disposal = pf1 >> 2 & 0x7;
	            p++;  // Skip terminator.
	            break;
	
	          case 0xfe:  // Comment Extension.
	            while (true) {  // Seek through subblocks.
	              var block_size = buf[p++];
	              if (block_size === 0) break;
	              // console.log(buf.slice(p, p+block_size).toString('ascii'));
	              p += block_size;
	            }
	            break;
	
	          default:
	            throw "Unknown graphic control label: 0x" + buf[p-1].toString(16);
	        }
	        break;
	
	      case 0x2c:  // Image Descriptor.
	        var x = buf[p++] | buf[p++] << 8;
	        var y = buf[p++] | buf[p++] << 8;
	        var w = buf[p++] | buf[p++] << 8;
	        var h = buf[p++] | buf[p++] << 8;
	        var pf2 = buf[p++];
	        var local_palette_flag = pf2 >> 7;
	        var interlace_flag = pf2 >> 6 & 1;
	        var num_local_colors_pow2 = pf2 & 0x7;
	        var num_local_colors = 1 << (num_local_colors_pow2 + 1);
	        var palette_offset = global_palette_offset;
	        var has_local_palette = false;
	        if (local_palette_flag) {
	          var has_local_palette = true;
	          palette_offset = p;  // Override with local palette.
	          p += num_local_colors * 3;  // Seek past palette.
	        }
	
	        var data_offset = p;
	
	        p++;  // codesize
	        while (true) {
	          var block_size = buf[p++];
	          if (block_size === 0) break;
	          p += block_size;
	        }
	
	        frames.push({x: x, y: y, width: w, height: h,
	                     has_local_palette: has_local_palette,
	                     palette_offset: palette_offset,
	                     data_offset: data_offset,
	                     data_length: p - data_offset,
	                     transparent_index: transparent_index,
	                     interlaced: !!interlace_flag,
	                     delay: delay,
	                     disposal: disposal});
	        break;
	
	      case 0x3b:  // Trailer Marker (end of file).
	        no_eof = false;
	        break;
	
	      default:
	        throw "Unknown gif block: 0x" + buf[p-1].toString(16);
	        break;
	    }
	  }
	
	  this.numFrames = function() {
	    return frames.length;
	  };
	
	  this.loopCount = function() {
	    return loop_count;
	  };
	
	  this.frameInfo = function(frame_num) {
	    if (frame_num < 0 || frame_num >= frames.length)
	      throw "Frame index out of range.";
	    return frames[frame_num];
	  }
	
	  this.decodeAndBlitFrameBGRA = function(frame_num, pixels) {
	    var frame = this.frameInfo(frame_num);
	    var num_pixels = frame.width * frame.height;
	    var index_stream = new Uint8Array(num_pixels);  // At most 8-bit indices.
	    GifReaderLZWOutputIndexStream(
	        buf, frame.data_offset, index_stream, num_pixels);
	    var palette_offset = frame.palette_offset;
	
	    // NOTE(deanm): It seems to be much faster to compare index to 256 than
	    // to === null.  Not sure why, but CompareStub_EQ_STRICT shows up high in
	    // the profile, not sure if it's related to using a Uint8Array.
	    var trans = frame.transparent_index;
	    if (trans === null) trans = 256;
	
	    // We are possibly just blitting to a portion of the entire frame.
	    // That is a subrect within the framerect, so the additional pixels
	    // must be skipped over after we finished a scanline.
	    var framewidth  = frame.width;
	    var framestride = width - framewidth;
	    var xleft       = framewidth;  // Number of subrect pixels left in scanline.
	
	    // Output indicies of the top left and bottom right corners of the subrect.
	    var opbeg = ((frame.y * width) + frame.x) * 4;
	    var opend = ((frame.y + frame.height) * width + frame.x) * 4;
	    var op    = opbeg;
	
	    var scanstride = framestride * 4;
	
	    // Use scanstride to skip past the rows when interlacing.  This is skipping
	    // 7 rows for the first two passes, then 3 then 1.
	    if (frame.interlaced === true) {
	      scanstride += width * 4 * 7;  // Pass 1.
	    }
	
	    var interlaceskip = 8;  // Tracking the row interval in the current pass.
	
	    for (var i = 0, il = index_stream.length; i < il; ++i) {
	      var index = index_stream[i];
	
	      if (xleft === 0) {  // Beginning of new scan line
	        op += scanstride;
	        xleft = framewidth;
	        if (op >= opend) { // Catch the wrap to switch passes when interlacing.
	          scanstride = framestride * 4 + width * 4 * (interlaceskip-1);
	          // interlaceskip / 2 * 4 is interlaceskip << 1.
	          op = opbeg + (framewidth + framestride) * (interlaceskip << 1);
	          interlaceskip >>= 1;
	        }
	      }
	
	      if (index === trans) {
	        op += 4;
	      } else {
	        var r = buf[palette_offset + index * 3];
	        var g = buf[palette_offset + index * 3 + 1];
	        var b = buf[palette_offset + index * 3 + 2];
	        pixels[op++] = b;
	        pixels[op++] = g;
	        pixels[op++] = r;
	        pixels[op++] = 255;
	      }
	      --xleft;
	    }
	  };
	
	  // I will go to copy and paste hell one day...
	  this.decodeAndBlitFrameRGBA = function(frame_num, pixels) {
	    var frame = this.frameInfo(frame_num);
	    var num_pixels = frame.width * frame.height;
	    var index_stream = new Uint8Array(num_pixels);  // At most 8-bit indices.
	    GifReaderLZWOutputIndexStream(
	        buf, frame.data_offset, index_stream, num_pixels);
	    var palette_offset = frame.palette_offset;
	
	    // NOTE(deanm): It seems to be much faster to compare index to 256 than
	    // to === null.  Not sure why, but CompareStub_EQ_STRICT shows up high in
	    // the profile, not sure if it's related to using a Uint8Array.
	    var trans = frame.transparent_index;
	    if (trans === null) trans = 256;
	
	    // We are possibly just blitting to a portion of the entire frame.
	    // That is a subrect within the framerect, so the additional pixels
	    // must be skipped over after we finished a scanline.
	    var framewidth  = frame.width;
	    var framestride = width - framewidth;
	    var xleft       = framewidth;  // Number of subrect pixels left in scanline.
	
	    // Output indicies of the top left and bottom right corners of the subrect.
	    var opbeg = ((frame.y * width) + frame.x) * 4;
	    var opend = ((frame.y + frame.height) * width + frame.x) * 4;
	    var op    = opbeg;
	
	    var scanstride = framestride * 4;
	
	    // Use scanstride to skip past the rows when interlacing.  This is skipping
	    // 7 rows for the first two passes, then 3 then 1.
	    if (frame.interlaced === true) {
	      scanstride += width * 4 * 7;  // Pass 1.
	    }
	
	    var interlaceskip = 8;  // Tracking the row interval in the current pass.
	
	    for (var i = 0, il = index_stream.length; i < il; ++i) {
	      var index = index_stream[i];
	
	      if (xleft === 0) {  // Beginning of new scan line
	        op += scanstride;
	        xleft = framewidth;
	        if (op >= opend) { // Catch the wrap to switch passes when interlacing.
	          scanstride = framestride * 4 + width * 4 * (interlaceskip-1);
	          // interlaceskip / 2 * 4 is interlaceskip << 1.
	          op = opbeg + (framewidth + framestride) * (interlaceskip << 1);
	          interlaceskip >>= 1;
	        }
	      }
	
	      if (index === trans) {
	        op += 4;
	      } else {
	        var r = buf[palette_offset + index * 3];
	        var g = buf[palette_offset + index * 3 + 1];
	        var b = buf[palette_offset + index * 3 + 2];
	        pixels[op++] = r;
	        pixels[op++] = g;
	        pixels[op++] = b;
	        pixels[op++] = 255;
	      }
	      --xleft;
	    }
	  };
	}
	
	function GifReaderLZWOutputIndexStream(code_stream, p, output, output_length) {
	  var min_code_size = code_stream[p++];
	
	  var clear_code = 1 << min_code_size;
	  var eoi_code = clear_code + 1;
	  var next_code = eoi_code + 1;
	
	  var cur_code_size = min_code_size + 1;  // Number of bits per code.
	  // NOTE: This shares the same name as the encoder, but has a different
	  // meaning here.  Here this masks each code coming from the code stream.
	  var code_mask = (1 << cur_code_size) - 1;
	  var cur_shift = 0;
	  var cur = 0;
	
	  var op = 0;  // Output pointer.
	  
	  var subblock_size = code_stream[p++];
	
	  // TODO(deanm): Would using a TypedArray be any faster?  At least it would
	  // solve the fast mode / backing store uncertainty.
	  // var code_table = Array(4096);
	  var code_table = new Int32Array(4096);  // Can be signed, we only use 20 bits.
	
	  var prev_code = null;  // Track code-1.
	
	  while (true) {
	    // Read up to two bytes, making sure we always 12-bits for max sized code.
	    while (cur_shift < 16) {
	      if (subblock_size === 0) break;  // No more data to be read.
	
	      cur |= code_stream[p++] << cur_shift;
	      cur_shift += 8;
	
	      if (subblock_size === 1) {  // Never let it get to 0 to hold logic above.
	        subblock_size = code_stream[p++];  // Next subblock.
	      } else {
	        --subblock_size;
	      }
	    }
	
	    // TODO(deanm): We should never really get here, we should have received
	    // and EOI.
	    if (cur_shift < cur_code_size)
	      break;
	
	    var code = cur & code_mask;
	    cur >>= cur_code_size;
	    cur_shift -= cur_code_size;
	
	    // TODO(deanm): Maybe should check that the first code was a clear code,
	    // at least this is what you're supposed to do.  But actually our encoder
	    // now doesn't emit a clear code first anyway.
	    if (code === clear_code) {
	      // We don't actually have to clear the table.  This could be a good idea
	      // for greater error checking, but we don't really do any anyway.  We
	      // will just track it with next_code and overwrite old entries.
	
	      next_code = eoi_code + 1;
	      cur_code_size = min_code_size + 1;
	      code_mask = (1 << cur_code_size) - 1;
	
	      // Don't update prev_code ?
	      prev_code = null;
	      continue;
	    } else if (code === eoi_code) {
	      break;
	    }
	
	    // We have a similar situation as the decoder, where we want to store
	    // variable length entries (code table entries), but we want to do in a
	    // faster manner than an array of arrays.  The code below stores sort of a
	    // linked list within the code table, and then "chases" through it to
	    // construct the dictionary entries.  When a new entry is created, just the
	    // last byte is stored, and the rest (prefix) of the entry is only
	    // referenced by its table entry.  Then the code chases through the
	    // prefixes until it reaches a single byte code.  We have to chase twice,
	    // first to compute the length, and then to actually copy the data to the
	    // output (backwards, since we know the length).  The alternative would be
	    // storing something in an intermediate stack, but that doesn't make any
	    // more sense.  I implemented an approach where it also stored the length
	    // in the code table, although it's a bit tricky because you run out of
	    // bits (12 + 12 + 8), but I didn't measure much improvements (the table
	    // entries are generally not the long).  Even when I created benchmarks for
	    // very long table entries the complexity did not seem worth it.
	    // The code table stores the prefix entry in 12 bits and then the suffix
	    // byte in 8 bits, so each entry is 20 bits.
	
	    var chase_code = code < next_code ? code : prev_code;
	
	    // Chase what we will output, either {CODE} or {CODE-1}.
	    var chase_length = 0;
	    var chase = chase_code;
	    while (chase > clear_code) {
	      chase = code_table[chase] >> 8;
	      ++chase_length;
	    }
	
	    var k = chase;
	    
	    var op_end = op + chase_length + (chase_code !== code ? 1 : 0);
	    if (op_end > output_length) {
	      console.log("Warning, gif stream longer than expected.");
	      return;
	    }
	
	    // Already have the first byte from the chase, might as well write it fast.
	    output[op++] = k;
	
	    op += chase_length;
	    var b = op;  // Track pointer, writing backwards.
	
	    if (chase_code !== code)  // The case of emitting {CODE-1} + k.
	      output[op++] = k;
	
	    chase = chase_code;
	    while (chase_length--) {
	      chase = code_table[chase];
	      output[--b] = chase & 0xff;  // Write backwards.
	      chase >>= 8;  // Pull down to the prefix code.
	    }
	
	    if (prev_code !== null && next_code < 4096) {
	      code_table[next_code++] = prev_code << 8 | k;
	      // TODO(deanm): Figure out this clearing vs code growth logic better.  I
	      // have an feeling that it should just happen somewhere else, for now it
	      // is awkward between when we grow past the max and then hit a clear code.
	      // For now just check if we hit the max 12-bits (then a clear code should
	      // follow, also of course encoded in 12-bits).
	      if (next_code >= code_mask+1 && cur_code_size < 12) {
	        ++cur_code_size;
	        code_mask = code_mask << 1 | 1;
	      }
	    }
	
	    prev_code = code;
	  }
	
	  if (op !== output_length) {
	    console.log("Warning, gif stream shorter than expected.");
	  }
	
	  return output;
	}
	
	try { exports.GifWriter = GifWriter; exports.GifReader = GifReader } catch(e) { }  // CommonJS.


/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	"use strict"
	
	var ndarray = __webpack_require__(318)
	var do_convert = __webpack_require__(323)
	
	module.exports = function convert(arr, result) {
	  var shape = [], c = arr, sz = 1
	  while(Array.isArray(c)) {
	    shape.push(c.length)
	    sz *= c.length
	    c = c[0]
	  }
	  if(shape.length === 0) {
	    return ndarray()
	  }
	  if(!result) {
	    result = ndarray(new Float64Array(sz), shape)
	  }
	  do_convert(result, arr)
	  return result
	}


/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	module.exports=__webpack_require__(324)({"args":["array","scalar","index"],"pre":{"body":"{}","args":[],"thisVars":[],"localVars":[]},"body":{"body":"{\nvar _inline_1_v=_inline_1_arg1_,_inline_1_i\nfor(_inline_1_i=0;_inline_1_i<_inline_1_arg2_.length-1;++_inline_1_i) {\n_inline_1_v=_inline_1_v[_inline_1_arg2_[_inline_1_i]]\n}\n_inline_1_arg0_=_inline_1_v[_inline_1_arg2_[_inline_1_arg2_.length-1]]\n}","args":[{"name":"_inline_1_arg0_","lvalue":true,"rvalue":false,"count":1},{"name":"_inline_1_arg1_","lvalue":false,"rvalue":true,"count":1},{"name":"_inline_1_arg2_","lvalue":false,"rvalue":true,"count":4}],"thisVars":[],"localVars":["_inline_1_i","_inline_1_v"]},"post":{"body":"{}","args":[],"thisVars":[],"localVars":[]},"funcName":"convert","blockSize":64})


/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	"use strict"
	
	var createThunk = __webpack_require__(325)
	
	function Procedure() {
	  this.argTypes = []
	  this.shimArgs = []
	  this.arrayArgs = []
	  this.arrayBlockIndices = []
	  this.scalarArgs = []
	  this.offsetArgs = []
	  this.offsetArgIndex = []
	  this.indexArgs = []
	  this.shapeArgs = []
	  this.funcName = ""
	  this.pre = null
	  this.body = null
	  this.post = null
	  this.debug = false
	}
	
	function compileCwise(user_args) {
	  //Create procedure
	  var proc = new Procedure()
	  
	  //Parse blocks
	  proc.pre    = user_args.pre
	  proc.body   = user_args.body
	  proc.post   = user_args.post
	
	  //Parse arguments
	  var proc_args = user_args.args.slice(0)
	  proc.argTypes = proc_args
	  for(var i=0; i<proc_args.length; ++i) {
	    var arg_type = proc_args[i]
	    if(arg_type === "array" || (typeof arg_type === "object" && arg_type.blockIndices)) {
	      proc.argTypes[i] = "array"
	      proc.arrayArgs.push(i)
	      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)
	      proc.shimArgs.push("array" + i)
	      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {
	        throw new Error("cwise: pre() block may not reference array args")
	      }
	      if(i < proc.post.args.length && proc.post.args[i].count>0) {
	        throw new Error("cwise: post() block may not reference array args")
	      }
	    } else if(arg_type === "scalar") {
	      proc.scalarArgs.push(i)
	      proc.shimArgs.push("scalar" + i)
	    } else if(arg_type === "index") {
	      proc.indexArgs.push(i)
	      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {
	        throw new Error("cwise: pre() block may not reference array index")
	      }
	      if(i < proc.body.args.length && proc.body.args[i].lvalue) {
	        throw new Error("cwise: body() block may not write to array index")
	      }
	      if(i < proc.post.args.length && proc.post.args[i].count > 0) {
	        throw new Error("cwise: post() block may not reference array index")
	      }
	    } else if(arg_type === "shape") {
	      proc.shapeArgs.push(i)
	      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {
	        throw new Error("cwise: pre() block may not write to array shape")
	      }
	      if(i < proc.body.args.length && proc.body.args[i].lvalue) {
	        throw new Error("cwise: body() block may not write to array shape")
	      }
	      if(i < proc.post.args.length && proc.post.args[i].lvalue) {
	        throw new Error("cwise: post() block may not write to array shape")
	      }
	    } else if(typeof arg_type === "object" && arg_type.offset) {
	      proc.argTypes[i] = "offset"
	      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })
	      proc.offsetArgIndex.push(i)
	    } else {
	      throw new Error("cwise: Unknown argument type " + proc_args[i])
	    }
	  }
	  
	  //Make sure at least one array argument was specified
	  if(proc.arrayArgs.length <= 0) {
	    throw new Error("cwise: No array arguments specified")
	  }
	  
	  //Make sure arguments are correct
	  if(proc.pre.args.length > proc_args.length) {
	    throw new Error("cwise: Too many arguments in pre() block")
	  }
	  if(proc.body.args.length > proc_args.length) {
	    throw new Error("cwise: Too many arguments in body() block")
	  }
	  if(proc.post.args.length > proc_args.length) {
	    throw new Error("cwise: Too many arguments in post() block")
	  }
	
	  //Check debug flag
	  proc.debug = !!user_args.printCode || !!user_args.debug
	  
	  //Retrieve name
	  proc.funcName = user_args.funcName || "cwise"
	  
	  //Read in block size
	  proc.blockSize = user_args.blockSize || 64
	
	  return createThunk(proc)
	}
	
	module.exports = compileCwise


/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	"use strict"
	
	// The function below is called when constructing a cwise function object, and does the following:
	// A function object is constructed which accepts as argument a compilation function and returns another function.
	// It is this other function that is eventually returned by createThunk, and this function is the one that actually
	// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.
	// The compilation passed to the first function object is used for compiling new functions.
	// Once this function object is created, it is called with compile as argument, where the first argument of compile
	// is bound to "proc" (essentially containing a preprocessed version of the user arguments to cwise).
	// So createThunk roughly works like this:
	// function createThunk(proc) {
	//   var thunk = function(compileBound) {
	//     var CACHED = {}
	//     return function(arrays and scalars) {
	//       if (dtype and order of arrays in CACHED) {
	//         var func = CACHED[dtype and order of arrays]
	//       } else {
	//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)
	//       }
	//       return func(arrays and scalars)
	//     }
	//   }
	//   return thunk(compile.bind1(proc))
	// }
	
	var compile = __webpack_require__(326)
	
	function createThunk(proc) {
	  var code = ["'use strict'", "var CACHED={}"]
	  var vars = []
	  var thunkName = proc.funcName + "_cwise_thunk"
	  
	  //Build thunk
	  code.push(["return function ", thunkName, "(", proc.shimArgs.join(","), "){"].join(""))
	  var typesig = []
	  var string_typesig = []
	  var proc_args = [["array",proc.arrayArgs[0],".shape.slice(", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).
	                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(","+proc.arrayBlockIndices[0]+")"):")"].join("")]
	  var shapeLengthConditions = [], shapeConditions = []
	  // Process array arguments
	  for(var i=0; i<proc.arrayArgs.length; ++i) {
	    var j = proc.arrayArgs[i]
	    vars.push(["t", j, "=array", j, ".dtype,",
	               "r", j, "=array", j, ".order"].join(""))
	    typesig.push("t" + j)
	    typesig.push("r" + j)
	    string_typesig.push("t"+j)
	    string_typesig.push("r"+j+".join()")
	    proc_args.push("array" + j + ".data")
	    proc_args.push("array" + j + ".stride")
	    proc_args.push("array" + j + ".offset|0")
	    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)
	      shapeLengthConditions.push("array" + proc.arrayArgs[0] + ".shape.length===array" + j + ".shape.length+" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))
	      shapeConditions.push("array" + proc.arrayArgs[0] + ".shape[shapeIndex+" + Math.max(0,proc.arrayBlockIndices[0]) + "]===array" + j + ".shape[shapeIndex+" + Math.max(0,proc.arrayBlockIndices[i]) + "]")
	    }
	  }
	  // Check for shape equality
	  if (proc.arrayArgs.length > 1) {
	    code.push("if (!(" + shapeLengthConditions.join(" && ") + ")) throw new Error('cwise: Arrays do not all have the same dimensionality!')")
	    code.push("for(var shapeIndex=array" + proc.arrayArgs[0] + ".shape.length-" + Math.abs(proc.arrayBlockIndices[0]) + "; shapeIndex-->0;) {")
	    code.push("if (!(" + shapeConditions.join(" && ") + ")) throw new Error('cwise: Arrays do not all have the same shape!')")
	    code.push("}")
	  }
	  // Process scalar arguments
	  for(var i=0; i<proc.scalarArgs.length; ++i) {
	    proc_args.push("scalar" + proc.scalarArgs[i])
	  }
	  // Check for cached function (and if not present, generate it)
	  vars.push(["type=[", string_typesig.join(","), "].join()"].join(""))
	  vars.push("proc=CACHED[type]")
	  code.push("var " + vars.join(","))
	  
	  code.push(["if(!proc){",
	             "CACHED[type]=proc=compile([", typesig.join(","), "])}",
	             "return proc(", proc_args.join(","), ")}"].join(""))
	
	  if(proc.debug) {
	    console.log("-----Generated thunk:\n" + code.join("\n") + "\n----------")
	  }
	  
	  //Compile thunk
	  var thunk = new Function("compile", code.join("\n"))
	  return thunk(compile.bind(undefined, proc))
	}
	
	module.exports = createThunk


/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	"use strict"
	
	var uniq = __webpack_require__(327)
	
	// This function generates very simple loops analogous to how you typically traverse arrays (the outermost loop corresponds to the slowest changing index, the innermost loop to the fastest changing index)
	// TODO: If two arrays have the same strides (and offsets) there is potential for decreasing the number of "pointers" and related variables. The drawback is that the type signature would become more specific and that there would thus be less potential for caching, but it might still be worth it, especially when dealing with large numbers of arguments.
	function innerFill(order, proc, body) {
	  var dimension = order.length
	    , nargs = proc.arrayArgs.length
	    , has_index = proc.indexArgs.length>0
	    , code = []
	    , vars = []
	    , idx=0, pidx=0, i, j
	  for(i=0; i<dimension; ++i) { // Iteration variables
	    vars.push(["i",i,"=0"].join(""))
	  }
	  //Compute scan deltas
	  for(j=0; j<nargs; ++j) {
	    for(i=0; i<dimension; ++i) {
	      pidx = idx
	      idx = order[i]
	      if(i === 0) { // The innermost/fastest dimension's delta is simply its stride
	        vars.push(["d",j,"s",i,"=t",j,"p",idx].join(""))
	      } else { // For other dimensions the delta is basically the stride minus something which essentially "rewinds" the previous (more inner) dimension
	        vars.push(["d",j,"s",i,"=(t",j,"p",idx,"-s",pidx,"*t",j,"p",pidx,")"].join(""))
	      }
	    }
	  }
	  code.push("var " + vars.join(","))
	  //Scan loop
	  for(i=dimension-1; i>=0; --i) { // Start at largest stride and work your way inwards
	    idx = order[i]
	    code.push(["for(i",i,"=0;i",i,"<s",idx,";++i",i,"){"].join(""))
	  }
	  //Push body of inner loop
	  code.push(body)
	  //Advance scan pointers
	  for(i=0; i<dimension; ++i) {
	    pidx = idx
	    idx = order[i]
	    for(j=0; j<nargs; ++j) {
	      code.push(["p",j,"+=d",j,"s",i].join(""))
	    }
	    if(has_index) {
	      if(i > 0) {
	        code.push(["index[",pidx,"]-=s",pidx].join(""))
	      }
	      code.push(["++index[",idx,"]"].join(""))
	    }
	    code.push("}")
	  }
	  return code.join("\n")
	}
	
	// Generate "outer" loops that loop over blocks of data, applying "inner" loops to the blocks by manipulating the local variables in such a way that the inner loop only "sees" the current block.
	// TODO: If this is used, then the previous declaration (done by generateCwiseOp) of s* is essentially unnecessary.
	//       I believe the s* are not used elsewhere (in particular, I don't think they're used in the pre/post parts and "shape" is defined independently), so it would be possible to make defining the s* dependent on what loop method is being used.
	function outerFill(matched, order, proc, body) {
	  var dimension = order.length
	    , nargs = proc.arrayArgs.length
	    , blockSize = proc.blockSize
	    , has_index = proc.indexArgs.length > 0
	    , code = []
	  for(var i=0; i<nargs; ++i) {
	    code.push(["var offset",i,"=p",i].join(""))
	  }
	  //Generate loops for unmatched dimensions
	  // The order in which these dimensions are traversed is fairly arbitrary (from small stride to large stride, for the first argument)
	  // TODO: It would be nice if the order in which these loops are placed would also be somehow "optimal" (at the very least we should check that it really doesn't hurt us if they're not).
	  for(var i=matched; i<dimension; ++i) {
	    code.push(["for(var j"+i+"=SS[", order[i], "]|0;j", i, ">0;){"].join("")) // Iterate back to front
	    code.push(["if(j",i,"<",blockSize,"){"].join("")) // Either decrease j by blockSize (s = blockSize), or set it to zero (after setting s = j).
	    code.push(["s",order[i],"=j",i].join(""))
	    code.push(["j",i,"=0"].join(""))
	    code.push(["}else{s",order[i],"=",blockSize].join(""))
	    code.push(["j",i,"-=",blockSize,"}"].join(""))
	    if(has_index) {
	      code.push(["index[",order[i],"]=j",i].join(""))
	    }
	  }
	  for(var i=0; i<nargs; ++i) {
	    var indexStr = ["offset"+i]
	    for(var j=matched; j<dimension; ++j) {
	      indexStr.push(["j",j,"*t",i,"p",order[j]].join(""))
	    }
	    code.push(["p",i,"=(",indexStr.join("+"),")"].join(""))
	  }
	  code.push(innerFill(order, proc, body))
	  for(var i=matched; i<dimension; ++i) {
	    code.push("}")
	  }
	  return code.join("\n")
	}
	
	//Count the number of compatible inner orders
	// This is the length of the longest common prefix of the arrays in orders.
	// Each array in orders lists the dimensions of the correspond ndarray in order of increasing stride.
	// This is thus the maximum number of dimensions that can be efficiently traversed by simple nested loops for all arrays.
	function countMatches(orders) {
	  var matched = 0, dimension = orders[0].length
	  while(matched < dimension) {
	    for(var j=1; j<orders.length; ++j) {
	      if(orders[j][matched] !== orders[0][matched]) {
	        return matched
	      }
	    }
	    ++matched
	  }
	  return matched
	}
	
	//Processes a block according to the given data types
	// Replaces variable names by different ones, either "local" ones (that are then ferried in and out of the given array) or ones matching the arguments that the function performing the ultimate loop will accept.
	function processBlock(block, proc, dtypes) {
	  var code = block.body
	  var pre = []
	  var post = []
	  for(var i=0; i<block.args.length; ++i) {
	    var carg = block.args[i]
	    if(carg.count <= 0) {
	      continue
	    }
	    var re = new RegExp(carg.name, "g")
	    var ptrStr = ""
	    var arrNum = proc.arrayArgs.indexOf(i)
	    switch(proc.argTypes[i]) {
	      case "offset":
	        var offArgIndex = proc.offsetArgIndex.indexOf(i)
	        var offArg = proc.offsetArgs[offArgIndex]
	        arrNum = offArg.array
	        ptrStr = "+q" + offArgIndex // Adds offset to the "pointer" in the array
	      case "array":
	        ptrStr = "p" + arrNum + ptrStr
	        var localStr = "l" + i
	        var arrStr = "a" + arrNum
	        if (proc.arrayBlockIndices[arrNum] === 0) { // Argument to body is just a single value from this array
	          if(carg.count === 1) { // Argument/array used only once(?)
	            if(dtypes[arrNum] === "generic") {
	              if(carg.lvalue) {
	                pre.push(["var ", localStr, "=", arrStr, ".get(", ptrStr, ")"].join("")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)
	                code = code.replace(re, localStr)
	                post.push([arrStr, ".set(", ptrStr, ",", localStr,")"].join(""))
	              } else {
	                code = code.replace(re, [arrStr, ".get(", ptrStr, ")"].join(""))
	              }
	            } else {
	              code = code.replace(re, [arrStr, "[", ptrStr, "]"].join(""))
	            }
	          } else if(dtypes[arrNum] === "generic") {
	            pre.push(["var ", localStr, "=", arrStr, ".get(", ptrStr, ")"].join("")) // TODO: Could we optimize by checking for carg.rvalue?
	            code = code.replace(re, localStr)
	            if(carg.lvalue) {
	              post.push([arrStr, ".set(", ptrStr, ",", localStr,")"].join(""))
	            }
	          } else {
	            pre.push(["var ", localStr, "=", arrStr, "[", ptrStr, "]"].join("")) // TODO: Could we optimize by checking for carg.rvalue?
	            code = code.replace(re, localStr)
	            if(carg.lvalue) {
	              post.push([arrStr, "[", ptrStr, "]=", localStr].join(""))
	            }
	          }
	        } else { // Argument to body is a "block"
	          var reStrArr = [carg.name], ptrStrArr = [ptrStr]
	          for(var j=0; j<Math.abs(proc.arrayBlockIndices[arrNum]); j++) {
	            reStrArr.push("\\s*\\[([^\\]]+)\\]")
	            ptrStrArr.push("$" + (j+1) + "*t" + arrNum + "b" + j) // Matched index times stride
	          }
	          re = new RegExp(reStrArr.join(""), "g")
	          ptrStr = ptrStrArr.join("+")
	          if(dtypes[arrNum] === "generic") {
	            /*if(carg.lvalue) {
	              pre.push(["var ", localStr, "=", arrStr, ".get(", ptrStr, ")"].join("")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)
	              code = code.replace(re, localStr)
	              post.push([arrStr, ".set(", ptrStr, ",", localStr,")"].join(""))
	            } else {
	              code = code.replace(re, [arrStr, ".get(", ptrStr, ")"].join(""))
	            }*/
	            throw new Error("cwise: Generic arrays not supported in combination with blocks!")
	          } else {
	            // This does not produce any local variables, even if variables are used multiple times. It would be possible to do so, but it would complicate things quite a bit.
	            code = code.replace(re, [arrStr, "[", ptrStr, "]"].join(""))
	          }
	        }
	      break
	      case "scalar":
	        code = code.replace(re, "Y" + proc.scalarArgs.indexOf(i))
	      break
	      case "index":
	        code = code.replace(re, "index")
	      break
	      case "shape":
	        code = code.replace(re, "shape")
	      break
	    }
	  }
	  return [pre.join("\n"), code, post.join("\n")].join("\n").trim()
	}
	
	function typeSummary(dtypes) {
	  var summary = new Array(dtypes.length)
	  var allEqual = true
	  for(var i=0; i<dtypes.length; ++i) {
	    var t = dtypes[i]
	    var digits = t.match(/\d+/)
	    if(!digits) {
	      digits = ""
	    } else {
	      digits = digits[0]
	    }
	    if(t.charAt(0) === 0) {
	      summary[i] = "u" + t.charAt(1) + digits
	    } else {
	      summary[i] = t.charAt(0) + digits
	    }
	    if(i > 0) {
	      allEqual = allEqual && summary[i] === summary[i-1]
	    }
	  }
	  if(allEqual) {
	    return summary[0]
	  }
	  return summary.join("")
	}
	
	//Generates a cwise operator
	function generateCWiseOp(proc, typesig) {
	
	  //Compute dimension
	  // Arrays get put first in typesig, and there are two entries per array (dtype and order), so this gets the number of dimensions in the first array arg.
	  var dimension = (typesig[1].length - Math.abs(proc.arrayBlockIndices[0]))|0
	  var orders = new Array(proc.arrayArgs.length)
	  var dtypes = new Array(proc.arrayArgs.length)
	  for(var i=0; i<proc.arrayArgs.length; ++i) {
	    dtypes[i] = typesig[2*i]
	    orders[i] = typesig[2*i+1]
	  }
	  
	  //Determine where block and loop indices start and end
	  var blockBegin = [], blockEnd = [] // These indices are exposed as blocks
	  var loopBegin = [], loopEnd = [] // These indices are iterated over
	  var loopOrders = [] // orders restricted to the loop indices
	  for(var i=0; i<proc.arrayArgs.length; ++i) {
	    if (proc.arrayBlockIndices[i]<0) {
	      loopBegin.push(0)
	      loopEnd.push(dimension)
	      blockBegin.push(dimension)
	      blockEnd.push(dimension+proc.arrayBlockIndices[i])
	    } else {
	      loopBegin.push(proc.arrayBlockIndices[i]) // Non-negative
	      loopEnd.push(proc.arrayBlockIndices[i]+dimension)
	      blockBegin.push(0)
	      blockEnd.push(proc.arrayBlockIndices[i])
	    }
	    var newOrder = []
	    for(var j=0; j<orders[i].length; j++) {
	      if (loopBegin[i]<=orders[i][j] && orders[i][j]<loopEnd[i]) {
	        newOrder.push(orders[i][j]-loopBegin[i]) // If this is a loop index, put it in newOrder, subtracting loopBegin, to make sure that all loopOrders are using a common set of indices.
	      }
	    }
	    loopOrders.push(newOrder)
	  }
	
	  //First create arguments for procedure
	  var arglist = ["SS"] // SS is the overall shape over which we iterate
	  var code = ["'use strict'"]
	  var vars = []
	  
	  for(var j=0; j<dimension; ++j) {
	    vars.push(["s", j, "=SS[", j, "]"].join("")) // The limits for each dimension.
	  }
	  for(var i=0; i<proc.arrayArgs.length; ++i) {
	    arglist.push("a"+i) // Actual data array
	    arglist.push("t"+i) // Strides
	    arglist.push("p"+i) // Offset in the array at which the data starts (also used for iterating over the data)
	    
	    for(var j=0; j<dimension; ++j) { // Unpack the strides into vars for looping
	      vars.push(["t",i,"p",j,"=t",i,"[",loopBegin[i]+j,"]"].join(""))
	    }
	    
	    for(var j=0; j<Math.abs(proc.arrayBlockIndices[i]); ++j) { // Unpack the strides into vars for block iteration
	      vars.push(["t",i,"b",j,"=t",i,"[",blockBegin[i]+j,"]"].join(""))
	    }
	  }
	  for(var i=0; i<proc.scalarArgs.length; ++i) {
	    arglist.push("Y" + i)
	  }
	  if(proc.shapeArgs.length > 0) {
	    vars.push("shape=SS.slice(0)") // Makes the shape over which we iterate available to the user defined functions (so you can use width/height for example)
	  }
	  if(proc.indexArgs.length > 0) {
	    // Prepare an array to keep track of the (logical) indices, initialized to dimension zeroes.
	    var zeros = new Array(dimension)
	    for(var i=0; i<dimension; ++i) {
	      zeros[i] = "0"
	    }
	    vars.push(["index=[", zeros.join(","), "]"].join(""))
	  }
	  for(var i=0; i<proc.offsetArgs.length; ++i) { // Offset arguments used for stencil operations
	    var off_arg = proc.offsetArgs[i]
	    var init_string = []
	    for(var j=0; j<off_arg.offset.length; ++j) {
	      if(off_arg.offset[j] === 0) {
	        continue
	      } else if(off_arg.offset[j] === 1) {
	        init_string.push(["t", off_arg.array, "p", j].join(""))      
	      } else {
	        init_string.push([off_arg.offset[j], "*t", off_arg.array, "p", j].join(""))
	      }
	    }
	    if(init_string.length === 0) {
	      vars.push("q" + i + "=0")
	    } else {
	      vars.push(["q", i, "=", init_string.join("+")].join(""))
	    }
	  }
	
	  //Prepare this variables
	  var thisVars = uniq([].concat(proc.pre.thisVars)
	                      .concat(proc.body.thisVars)
	                      .concat(proc.post.thisVars))
	  vars = vars.concat(thisVars)
	  code.push("var " + vars.join(","))
	  for(var i=0; i<proc.arrayArgs.length; ++i) {
	    code.push("p"+i+"|=0")
	  }
	  
	  //Inline prelude
	  if(proc.pre.body.length > 3) {
	    code.push(processBlock(proc.pre, proc, dtypes))
	  }
	
	  //Process body
	  var body = processBlock(proc.body, proc, dtypes)
	  var matched = countMatches(loopOrders)
	  if(matched < dimension) {
	    code.push(outerFill(matched, loopOrders[0], proc, body)) // TODO: Rather than passing loopOrders[0], it might be interesting to look at passing an order that represents the majority of the arguments for example.
	  } else {
	    code.push(innerFill(loopOrders[0], proc, body))
	  }
	
	  //Inline epilog
	  if(proc.post.body.length > 3) {
	    code.push(processBlock(proc.post, proc, dtypes))
	  }
	  
	  if(proc.debug) {
	    console.log("-----Generated cwise routine for ", typesig, ":\n" + code.join("\n") + "\n----------")
	  }
	  
	  var loopName = [(proc.funcName||"unnamed"), "_cwise_loop_", orders[0].join("s"),"m",matched,typeSummary(dtypes)].join("")
	  var f = new Function(["function ",loopName,"(", arglist.join(","),"){", code.join("\n"),"} return ", loopName].join(""))
	  return f()
	}
	module.exports = generateCWiseOp


/***/ },
/* 327 */
/***/ function(module, exports) {

	"use strict"
	
	function unique_pred(list, compare) {
	  var ptr = 1
	    , len = list.length
	    , a=list[0], b=list[0]
	  for(var i=1; i<len; ++i) {
	    b = a
	    a = list[i]
	    if(compare(a, b)) {
	      if(i === ptr) {
	        ptr++
	        continue
	      }
	      list[ptr++] = a
	    }
	  }
	  list.length = ptr
	  return list
	}
	
	function unique_eq(list) {
	  var ptr = 1
	    , len = list.length
	    , a=list[0], b = list[0]
	  for(var i=1; i<len; ++i, b=a) {
	    b = a
	    a = list[i]
	    if(a !== b) {
	      if(i === ptr) {
	        ptr++
	        continue
	      }
	      list[ptr++] = a
	    }
	  }
	  list.length = ptr
	  return list
	}
	
	function unique(list, compare, sorted) {
	  if(list.length === 0) {
	    return list
	  }
	  if(compare) {
	    if(!sorted) {
	      list.sort(compare)
	    }
	    return unique_pred(list, compare)
	  }
	  if(!sorted) {
	    list.sort()
	  }
	  return unique_eq(list)
	}
	
	module.exports = unique


/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {
	/**
	 * Module exports.
	 */
	
	module.exports = dataUriToBuffer;
	
	/**
	 * Returns a `Buffer` instance from the given data URI `uri`.
	 *
	 * @param {String} uri Data URI to turn into a Buffer instance
	 * @return {Buffer} Buffer instance from Data URI
	 * @api public
	 */
	
	function dataUriToBuffer (uri) {
	  if (!/^data\:/i.test(uri)) {
	    throw new TypeError('`uri` does not appear to be a Data URI (must begin with "data:")');
	  }
	
	  // strip newlines
	  uri = uri.replace(/\r?\n/g, '');
	
	  // split the URI up into the "metadata" and the "data" portions
	  var firstComma = uri.indexOf(',');
	  if (-1 === firstComma || firstComma <= 4) throw new TypeError('malformed data: URI');
	
	  // remove the "data:" scheme and parse the metadata
	  var meta = uri.substring(5, firstComma).split(';');
	
	  var base64 = false;
	  var charset = 'US-ASCII';
	  for (var i = 0; i < meta.length; i++) {
	    if ('base64' == meta[i]) {
	      base64 = true;
	    } else if (0 == meta[i].indexOf('charset=')) {
	      charset = meta[i].substring(8);
	    }
	  }
	
	  // get the encoded data portion and decode URI-encoded chars
	  var data = unescape(uri.substring(firstComma + 1));
	
	  var encoding = base64 ? 'base64' : 'ascii';
	  var buffer = new Buffer(data, encoding);
	
	  // set `.type` property to MIME type
	  buffer.type = meta[0] || 'text/plain';
	
	  // set the `.charset` property
	  buffer.charset = charset;
	
	  return buffer;
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict'
	
	var ContentStream = __webpack_require__(330)
	var GifEncoder = __webpack_require__(338)
	var jpegJs = __webpack_require__(348)
	var PNG = __webpack_require__(351).PNG
	var ndarray = __webpack_require__(318)
	var ops = __webpack_require__(393)
	var through = __webpack_require__(286)
	
	function handleData (array, data, frame) {
	  var i, j, ptr = 0, c
	  if (array.shape.length === 4) {
	    return handleData(array.pick(frame), data, 0)
	  } else if (array.shape.length === 3) {
	    if (array.shape[2] === 3) {
	      ops.assign(
	        ndarray(data,
	          [array.shape[0], array.shape[1], 3],
	          [4, 4 * array.shape[0], 1]),
	        array)
	      ops.assigns(
	        ndarray(data,
	          [array.shape[0] * array.shape[1]],
	          [4],
	          3),
	        255)
	    } else if (array.shape[2] === 4) {
	      ops.assign(
	        ndarray(data,
	          [array.shape[0], array.shape[1], 4],
	          [4, array.shape[0] * 4, 1]),
	        array)
	    } else if (array.shape[2] === 1) {
	      ops.assign(
	        ndarray(data,
	          [array.shape[0], array.shape[1], 3],
	          [4, 4 * array.shape[0], 1]),
	        ndarray(array.data,
	          [array.shape[0], array.shape[1], 3],
	          [array.stride[0], array.stride[1], 0],
	          array.offset))
	      ops.assigns(
	        ndarray(data,
	          [array.shape[0] * array.shape[1]],
	          [4],
	          3),
	        255)
	    } else {
	      return new Error('Incompatible array shape')
	    }
	  } else if (array.shape.length === 2) {
	    ops.assign(
	      ndarray(data,
	        [array.shape[0], array.shape[1], 3],
	        [4, 4 * array.shape[0], 1]),
	      ndarray(array.data,
	        [array.shape[0], array.shape[1], 3],
	        [array.stride[0], array.stride[1], 0],
	        array.offset))
	    ops.assigns(
	      ndarray(data,
	        [array.shape[0] * array.shape[1]],
	        [4],
	        3),
	      255)
	  } else {
	    return new Error('Incompatible array shape')
	  }
	  return data
	}
	
	function haderror (err) {
	  var result = through()
	  result.emit('error', err)
	  return result
	}
	
	module.exports = function savePixels (array, type, options) {
	  options = options || {}
	  switch (type.toUpperCase()) {
	    case 'JPG':
	    case '.JPG':
	    case 'JPEG':
	    case '.JPEG':
	    case 'JPE':
	    case '.JPE':
	      var width = array.shape[0]
	      var height = array.shape[1]
	      var data = new Buffer(width * height * 4)
	      data = handleData(array, data)
	      var rawImageData = {
	        data: data,
	        width: width,
	        height: height
	      }
	      var jpegImageData = jpegJs.encode(rawImageData, options.quality)
	      return new ContentStream(jpegImageData.data)
	
	    case 'GIF':
	    case '.GIF':
	      var frames = array.shape.length === 4 ? array.shape[0] : 1
	      var width = array.shape.length === 4 ? array.shape[1] : array.shape[0]
	      var height = array.shape.length === 4 ? array.shape[2] : array.shape[1]
	      var data = new Buffer(width * height * 4)
	      var gif = new GifEncoder(width, height)
	      gif.writeHeader()
	      for (var i = 0; i < frames; i++) {
	        data = handleData(array, data, i)
	        gif.addFrame(data)
	      }
	      gif.finish()
	      return gif
	
	    case 'PNG':
	    case '.PNG':
	      var png = new PNG({
	        width: array.shape[0],
	        height: array.shape[1]
	      })
	      var data = handleData(array, png.data)
	      if (typeof data === 'Error') return haderror(data)
	      png.data = data
	      return png.pack()
	
	    case 'CANVAS':
	      var canvas = document.createElement('canvas')
	      var context = canvas.getContext('2d')
	      canvas.width = array.shape[0]
	      canvas.height = array.shape[1]
	      var imageData = context.getImageData(0, 0, canvas.width, canvas.height)
	      var data = imageData.data
	      data = handleData(array, data)
	      if (typeof data === 'Error') return haderror(data)
	      context.putImageData(imageData, 0, 0)
	      return canvas
	
	    default:
	      return haderror(new Error('Unsupported file type: ' + type))
	  }
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {/**!
	 * contentstream - index.js
	 *
	 * Copyright(c) fengmk2 and other contributors.
	 * MIT Licensed
	 *
	 * Authors:
	 *   fengmk2 <fengmk2@gmail.com> (http://fengmk2.github.com)
	 */
	
	'use strict';
	
	/**
	 * Module dependencies.
	 */
	
	var Readable = __webpack_require__(331).Readable;
	var util = __webpack_require__(197);
	
	module.exports = ContentStream;
	
	function ContentStream(obj, options) {
	  if (!(this instanceof ContentStream)) {
	    return new ContentStream(obj, options);
	  }
	  Readable.call(this, options);
	  if (obj === null || obj === undefined) {
	    obj = String(obj);
	  }
	  this._obj = obj;
	}
	
	util.inherits(ContentStream, Readable);
	
	ContentStream.prototype._read = function (n) {
	  var obj = this._obj;
	  if (typeof obj === 'string') {
	    this.push(new Buffer(obj));
	  } else if (Buffer.isBuffer(obj)) {
	    this.push(obj);
	  } else {
	    this.push(new Buffer(JSON.stringify(obj)));
	  }
	  this.push(null);
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {var Stream = __webpack_require__(287); // hack to fix a circular dependency issue when used with browserify
	exports = module.exports = __webpack_require__(332);
	exports.Stream = Stream;
	exports.Readable = exports;
	exports.Writable = __webpack_require__(334);
	exports.Duplex = __webpack_require__(335);
	exports.Transform = __webpack_require__(336);
	exports.PassThrough = __webpack_require__(337);
	if (!process.browser && process.env.READABLE_STREAM === 'disable') {
	  module.exports = __webpack_require__(287);
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	module.exports = Readable;
	
	/*<replacement>*/
	var isArray = __webpack_require__(333);
	/*</replacement>*/
	
	
	/*<replacement>*/
	var Buffer = __webpack_require__(282).Buffer;
	/*</replacement>*/
	
	Readable.ReadableState = ReadableState;
	
	var EE = __webpack_require__(288).EventEmitter;
	
	/*<replacement>*/
	if (!EE.listenerCount) EE.listenerCount = function(emitter, type) {
	  return emitter.listeners(type).length;
	};
	/*</replacement>*/
	
	var Stream = __webpack_require__(287);
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	var StringDecoder;
	
	util.inherits(Readable, Stream);
	
	function ReadableState(options, stream) {
	  options = options || {};
	
	  // the point at which it stops calling _read() to fill the buffer
	  // Note: 0 is a valid value, means "don't call _read preemptively ever"
	  var hwm = options.highWaterMark;
	  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;
	
	  // cast to ints.
	  this.highWaterMark = ~~this.highWaterMark;
	
	  this.buffer = [];
	  this.length = 0;
	  this.pipes = null;
	  this.pipesCount = 0;
	  this.flowing = false;
	  this.ended = false;
	  this.endEmitted = false;
	  this.reading = false;
	
	  // In streams that never have any data, and do push(null) right away,
	  // the consumer can miss the 'end' event if they do some I/O before
	  // consuming the stream.  So, we don't emit('end') until some reading
	  // happens.
	  this.calledRead = false;
	
	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, becuase any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;
	
	  // whenever we return null, then we set a flag to say
	  // that we're awaiting a 'readable' event emission.
	  this.needReadable = false;
	  this.emittedReadable = false;
	  this.readableListening = false;
	
	
	  // object stream flag. Used to make read(n) ignore n and to
	  // make all the buffer merging and length checks go away
	  this.objectMode = !!options.objectMode;
	
	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';
	
	  // when piping, we only care about 'readable' events that happen
	  // after read()ing all the bytes and not getting any pushback.
	  this.ranOut = false;
	
	  // the number of writers that are awaiting a drain event in .pipe()s
	  this.awaitDrain = 0;
	
	  // if true, a maybeReadMore has been scheduled
	  this.readingMore = false;
	
	  this.decoder = null;
	  this.encoding = null;
	  if (options.encoding) {
	    if (!StringDecoder)
	      StringDecoder = __webpack_require__(303).StringDecoder;
	    this.decoder = new StringDecoder(options.encoding);
	    this.encoding = options.encoding;
	  }
	}
	
	function Readable(options) {
	  if (!(this instanceof Readable))
	    return new Readable(options);
	
	  this._readableState = new ReadableState(options, this);
	
	  // legacy
	  this.readable = true;
	
	  Stream.call(this);
	}
	
	// Manually shove something into the read() buffer.
	// This returns true if the highWaterMark has not been hit yet,
	// similar to how Writable.write() returns true if you should
	// write() some more.
	Readable.prototype.push = function(chunk, encoding) {
	  var state = this._readableState;
	
	  if (typeof chunk === 'string' && !state.objectMode) {
	    encoding = encoding || state.defaultEncoding;
	    if (encoding !== state.encoding) {
	      chunk = new Buffer(chunk, encoding);
	      encoding = '';
	    }
	  }
	
	  return readableAddChunk(this, state, chunk, encoding, false);
	};
	
	// Unshift should *always* be something directly out of read()
	Readable.prototype.unshift = function(chunk) {
	  var state = this._readableState;
	  return readableAddChunk(this, state, chunk, '', true);
	};
	
	function readableAddChunk(stream, state, chunk, encoding, addToFront) {
	  var er = chunkInvalid(state, chunk);
	  if (er) {
	    stream.emit('error', er);
	  } else if (chunk === null || chunk === undefined) {
	    state.reading = false;
	    if (!state.ended)
	      onEofChunk(stream, state);
	  } else if (state.objectMode || chunk && chunk.length > 0) {
	    if (state.ended && !addToFront) {
	      var e = new Error('stream.push() after EOF');
	      stream.emit('error', e);
	    } else if (state.endEmitted && addToFront) {
	      var e = new Error('stream.unshift() after end event');
	      stream.emit('error', e);
	    } else {
	      if (state.decoder && !addToFront && !encoding)
	        chunk = state.decoder.write(chunk);
	
	      // update the buffer info.
	      state.length += state.objectMode ? 1 : chunk.length;
	      if (addToFront) {
	        state.buffer.unshift(chunk);
	      } else {
	        state.reading = false;
	        state.buffer.push(chunk);
	      }
	
	      if (state.needReadable)
	        emitReadable(stream);
	
	      maybeReadMore(stream, state);
	    }
	  } else if (!addToFront) {
	    state.reading = false;
	  }
	
	  return needMoreData(state);
	}
	
	
	
	// if it's past the high water mark, we can push in some more.
	// Also, if we have no data yet, we can stand some
	// more bytes.  This is to work around cases where hwm=0,
	// such as the repl.  Also, if the push() triggered a
	// readable event, and the user called read(largeNumber) such that
	// needReadable was set, then we ought to push more, so that another
	// 'readable' event will be triggered.
	function needMoreData(state) {
	  return !state.ended &&
	         (state.needReadable ||
	          state.length < state.highWaterMark ||
	          state.length === 0);
	}
	
	// backwards compatibility.
	Readable.prototype.setEncoding = function(enc) {
	  if (!StringDecoder)
	    StringDecoder = __webpack_require__(303).StringDecoder;
	  this._readableState.decoder = new StringDecoder(enc);
	  this._readableState.encoding = enc;
	};
	
	// Don't raise the hwm > 128MB
	var MAX_HWM = 0x800000;
	function roundUpToNextPowerOf2(n) {
	  if (n >= MAX_HWM) {
	    n = MAX_HWM;
	  } else {
	    // Get the next highest power of 2
	    n--;
	    for (var p = 1; p < 32; p <<= 1) n |= n >> p;
	    n++;
	  }
	  return n;
	}
	
	function howMuchToRead(n, state) {
	  if (state.length === 0 && state.ended)
	    return 0;
	
	  if (state.objectMode)
	    return n === 0 ? 0 : 1;
	
	  if (n === null || isNaN(n)) {
	    // only flow one buffer at a time
	    if (state.flowing && state.buffer.length)
	      return state.buffer[0].length;
	    else
	      return state.length;
	  }
	
	  if (n <= 0)
	    return 0;
	
	  // If we're asking for more than the target buffer level,
	  // then raise the water mark.  Bump up to the next highest
	  // power of 2, to prevent increasing it excessively in tiny
	  // amounts.
	  if (n > state.highWaterMark)
	    state.highWaterMark = roundUpToNextPowerOf2(n);
	
	  // don't have that much.  return null, unless we've ended.
	  if (n > state.length) {
	    if (!state.ended) {
	      state.needReadable = true;
	      return 0;
	    } else
	      return state.length;
	  }
	
	  return n;
	}
	
	// you can override either this method, or the async _read(n) below.
	Readable.prototype.read = function(n) {
	  var state = this._readableState;
	  state.calledRead = true;
	  var nOrig = n;
	  var ret;
	
	  if (typeof n !== 'number' || n > 0)
	    state.emittedReadable = false;
	
	  // if we're doing read(0) to trigger a readable event, but we
	  // already have a bunch of data in the buffer, then just trigger
	  // the 'readable' event and move on.
	  if (n === 0 &&
	      state.needReadable &&
	      (state.length >= state.highWaterMark || state.ended)) {
	    emitReadable(this);
	    return null;
	  }
	
	  n = howMuchToRead(n, state);
	
	  // if we've ended, and we're now clear, then finish it up.
	  if (n === 0 && state.ended) {
	    ret = null;
	
	    // In cases where the decoder did not receive enough data
	    // to produce a full chunk, then immediately received an
	    // EOF, state.buffer will contain [<Buffer >, <Buffer 00 ...>].
	    // howMuchToRead will see this and coerce the amount to
	    // read to zero (because it's looking at the length of the
	    // first <Buffer > in state.buffer), and we'll end up here.
	    //
	    // This can only happen via state.decoder -- no other venue
	    // exists for pushing a zero-length chunk into state.buffer
	    // and triggering this behavior. In this case, we return our
	    // remaining data and end the stream, if appropriate.
	    if (state.length > 0 && state.decoder) {
	      ret = fromList(n, state);
	      state.length -= ret.length;
	    }
	
	    if (state.length === 0)
	      endReadable(this);
	
	    return ret;
	  }
	
	  // All the actual chunk generation logic needs to be
	  // *below* the call to _read.  The reason is that in certain
	  // synthetic stream cases, such as passthrough streams, _read
	  // may be a completely synchronous operation which may change
	  // the state of the read buffer, providing enough data when
	  // before there was *not* enough.
	  //
	  // So, the steps are:
	  // 1. Figure out what the state of things will be after we do
	  // a read from the buffer.
	  //
	  // 2. If that resulting state will trigger a _read, then call _read.
	  // Note that this may be asynchronous, or synchronous.  Yes, it is
	  // deeply ugly to write APIs this way, but that still doesn't mean
	  // that the Readable class should behave improperly, as streams are
	  // designed to be sync/async agnostic.
	  // Take note if the _read call is sync or async (ie, if the read call
	  // has returned yet), so that we know whether or not it's safe to emit
	  // 'readable' etc.
	  //
	  // 3. Actually pull the requested chunks out of the buffer and return.
	
	  // if we need a readable event, then we need to do some reading.
	  var doRead = state.needReadable;
	
	  // if we currently have less than the highWaterMark, then also read some
	  if (state.length - n <= state.highWaterMark)
	    doRead = true;
	
	  // however, if we've ended, then there's no point, and if we're already
	  // reading, then it's unnecessary.
	  if (state.ended || state.reading)
	    doRead = false;
	
	  if (doRead) {
	    state.reading = true;
	    state.sync = true;
	    // if the length is currently zero, then we *need* a readable event.
	    if (state.length === 0)
	      state.needReadable = true;
	    // call internal read method
	    this._read(state.highWaterMark);
	    state.sync = false;
	  }
	
	  // If _read called its callback synchronously, then `reading`
	  // will be false, and we need to re-evaluate how much data we
	  // can return to the user.
	  if (doRead && !state.reading)
	    n = howMuchToRead(nOrig, state);
	
	  if (n > 0)
	    ret = fromList(n, state);
	  else
	    ret = null;
	
	  if (ret === null) {
	    state.needReadable = true;
	    n = 0;
	  }
	
	  state.length -= n;
	
	  // If we have nothing in the buffer, then we want to know
	  // as soon as we *do* get something into the buffer.
	  if (state.length === 0 && !state.ended)
	    state.needReadable = true;
	
	  // If we happened to read() exactly the remaining amount in the
	  // buffer, and the EOF has been seen at this point, then make sure
	  // that we emit 'end' on the very next tick.
	  if (state.ended && !state.endEmitted && state.length === 0)
	    endReadable(this);
	
	  return ret;
	};
	
	function chunkInvalid(state, chunk) {
	  var er = null;
	  if (!Buffer.isBuffer(chunk) &&
	      'string' !== typeof chunk &&
	      chunk !== null &&
	      chunk !== undefined &&
	      !state.objectMode) {
	    er = new TypeError('Invalid non-string/buffer chunk');
	  }
	  return er;
	}
	
	
	function onEofChunk(stream, state) {
	  if (state.decoder && !state.ended) {
	    var chunk = state.decoder.end();
	    if (chunk && chunk.length) {
	      state.buffer.push(chunk);
	      state.length += state.objectMode ? 1 : chunk.length;
	    }
	  }
	  state.ended = true;
	
	  // if we've ended and we have some data left, then emit
	  // 'readable' now to make sure it gets picked up.
	  if (state.length > 0)
	    emitReadable(stream);
	  else
	    endReadable(stream);
	}
	
	// Don't emit readable right away in sync mode, because this can trigger
	// another read() call => stack overflow.  This way, it might trigger
	// a nextTick recursion warning, but that's not so bad.
	function emitReadable(stream) {
	  var state = stream._readableState;
	  state.needReadable = false;
	  if (state.emittedReadable)
	    return;
	
	  state.emittedReadable = true;
	  if (state.sync)
	    process.nextTick(function() {
	      emitReadable_(stream);
	    });
	  else
	    emitReadable_(stream);
	}
	
	function emitReadable_(stream) {
	  stream.emit('readable');
	}
	
	
	// at this point, the user has presumably seen the 'readable' event,
	// and called read() to consume some data.  that may have triggered
	// in turn another _read(n) call, in which case reading = true if
	// it's in progress.
	// However, if we're not ended, or reading, and the length < hwm,
	// then go ahead and try to read some more preemptively.
	function maybeReadMore(stream, state) {
	  if (!state.readingMore) {
	    state.readingMore = true;
	    process.nextTick(function() {
	      maybeReadMore_(stream, state);
	    });
	  }
	}
	
	function maybeReadMore_(stream, state) {
	  var len = state.length;
	  while (!state.reading && !state.flowing && !state.ended &&
	         state.length < state.highWaterMark) {
	    stream.read(0);
	    if (len === state.length)
	      // didn't get any data, stop spinning.
	      break;
	    else
	      len = state.length;
	  }
	  state.readingMore = false;
	}
	
	// abstract method.  to be overridden in specific implementation classes.
	// call cb(er, data) where data is <= n in length.
	// for virtual (non-string, non-buffer) streams, "length" is somewhat
	// arbitrary, and perhaps not very meaningful.
	Readable.prototype._read = function(n) {
	  this.emit('error', new Error('not implemented'));
	};
	
	Readable.prototype.pipe = function(dest, pipeOpts) {
	  var src = this;
	  var state = this._readableState;
	
	  switch (state.pipesCount) {
	    case 0:
	      state.pipes = dest;
	      break;
	    case 1:
	      state.pipes = [state.pipes, dest];
	      break;
	    default:
	      state.pipes.push(dest);
	      break;
	  }
	  state.pipesCount += 1;
	
	  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&
	              dest !== process.stdout &&
	              dest !== process.stderr;
	
	  var endFn = doEnd ? onend : cleanup;
	  if (state.endEmitted)
	    process.nextTick(endFn);
	  else
	    src.once('end', endFn);
	
	  dest.on('unpipe', onunpipe);
	  function onunpipe(readable) {
	    if (readable !== src) return;
	    cleanup();
	  }
	
	  function onend() {
	    dest.end();
	  }
	
	  // when the dest drains, it reduces the awaitDrain counter
	  // on the source.  This would be more elegant with a .once()
	  // handler in flow(), but adding and removing repeatedly is
	  // too slow.
	  var ondrain = pipeOnDrain(src);
	  dest.on('drain', ondrain);
	
	  function cleanup() {
	    // cleanup event handlers once the pipe is broken
	    dest.removeListener('close', onclose);
	    dest.removeListener('finish', onfinish);
	    dest.removeListener('drain', ondrain);
	    dest.removeListener('error', onerror);
	    dest.removeListener('unpipe', onunpipe);
	    src.removeListener('end', onend);
	    src.removeListener('end', cleanup);
	
	    // if the reader is waiting for a drain event from this
	    // specific writer, then it would cause it to never start
	    // flowing again.
	    // So, if this is awaiting a drain, then we just call it now.
	    // If we don't know, then assume that we are waiting for one.
	    if (!dest._writableState || dest._writableState.needDrain)
	      ondrain();
	  }
	
	  // if the dest has an error, then stop piping into it.
	  // however, don't suppress the throwing behavior for this.
	  function onerror(er) {
	    unpipe();
	    dest.removeListener('error', onerror);
	    if (EE.listenerCount(dest, 'error') === 0)
	      dest.emit('error', er);
	  }
	  // This is a brutally ugly hack to make sure that our error handler
	  // is attached before any userland ones.  NEVER DO THIS.
	  if (!dest._events || !dest._events.error)
	    dest.on('error', onerror);
	  else if (isArray(dest._events.error))
	    dest._events.error.unshift(onerror);
	  else
	    dest._events.error = [onerror, dest._events.error];
	
	
	
	  // Both close and finish should trigger unpipe, but only once.
	  function onclose() {
	    dest.removeListener('finish', onfinish);
	    unpipe();
	  }
	  dest.once('close', onclose);
	  function onfinish() {
	    dest.removeListener('close', onclose);
	    unpipe();
	  }
	  dest.once('finish', onfinish);
	
	  function unpipe() {
	    src.unpipe(dest);
	  }
	
	  // tell the dest that it's being piped to
	  dest.emit('pipe', src);
	
	  // start the flow if it hasn't been started already.
	  if (!state.flowing) {
	    // the handler that waits for readable events after all
	    // the data gets sucked out in flow.
	    // This would be easier to follow with a .once() handler
	    // in flow(), but that is too slow.
	    this.on('readable', pipeOnReadable);
	
	    state.flowing = true;
	    process.nextTick(function() {
	      flow(src);
	    });
	  }
	
	  return dest;
	};
	
	function pipeOnDrain(src) {
	  return function() {
	    var dest = this;
	    var state = src._readableState;
	    state.awaitDrain--;
	    if (state.awaitDrain === 0)
	      flow(src);
	  };
	}
	
	function flow(src) {
	  var state = src._readableState;
	  var chunk;
	  state.awaitDrain = 0;
	
	  function write(dest, i, list) {
	    var written = dest.write(chunk);
	    if (false === written) {
	      state.awaitDrain++;
	    }
	  }
	
	  while (state.pipesCount && null !== (chunk = src.read())) {
	
	    if (state.pipesCount === 1)
	      write(state.pipes, 0, null);
	    else
	      forEach(state.pipes, write);
	
	    src.emit('data', chunk);
	
	    // if anyone needs a drain, then we have to wait for that.
	    if (state.awaitDrain > 0)
	      return;
	  }
	
	  // if every destination was unpiped, either before entering this
	  // function, or in the while loop, then stop flowing.
	  //
	  // NB: This is a pretty rare edge case.
	  if (state.pipesCount === 0) {
	    state.flowing = false;
	
	    // if there were data event listeners added, then switch to old mode.
	    if (EE.listenerCount(src, 'data') > 0)
	      emitDataEvents(src);
	    return;
	  }
	
	  // at this point, no one needed a drain, so we just ran out of data
	  // on the next readable event, start it over again.
	  state.ranOut = true;
	}
	
	function pipeOnReadable() {
	  if (this._readableState.ranOut) {
	    this._readableState.ranOut = false;
	    flow(this);
	  }
	}
	
	
	Readable.prototype.unpipe = function(dest) {
	  var state = this._readableState;
	
	  // if we're not piping anywhere, then do nothing.
	  if (state.pipesCount === 0)
	    return this;
	
	  // just one destination.  most common case.
	  if (state.pipesCount === 1) {
	    // passed in one, but it's not the right one.
	    if (dest && dest !== state.pipes)
	      return this;
	
	    if (!dest)
	      dest = state.pipes;
	
	    // got a match.
	    state.pipes = null;
	    state.pipesCount = 0;
	    this.removeListener('readable', pipeOnReadable);
	    state.flowing = false;
	    if (dest)
	      dest.emit('unpipe', this);
	    return this;
	  }
	
	  // slow case. multiple pipe destinations.
	
	  if (!dest) {
	    // remove all.
	    var dests = state.pipes;
	    var len = state.pipesCount;
	    state.pipes = null;
	    state.pipesCount = 0;
	    this.removeListener('readable', pipeOnReadable);
	    state.flowing = false;
	
	    for (var i = 0; i < len; i++)
	      dests[i].emit('unpipe', this);
	    return this;
	  }
	
	  // try to find the right one.
	  var i = indexOf(state.pipes, dest);
	  if (i === -1)
	    return this;
	
	  state.pipes.splice(i, 1);
	  state.pipesCount -= 1;
	  if (state.pipesCount === 1)
	    state.pipes = state.pipes[0];
	
	  dest.emit('unpipe', this);
	
	  return this;
	};
	
	// set up data events if they are asked for
	// Ensure readable listeners eventually get something
	Readable.prototype.on = function(ev, fn) {
	  var res = Stream.prototype.on.call(this, ev, fn);
	
	  if (ev === 'data' && !this._readableState.flowing)
	    emitDataEvents(this);
	
	  if (ev === 'readable' && this.readable) {
	    var state = this._readableState;
	    if (!state.readableListening) {
	      state.readableListening = true;
	      state.emittedReadable = false;
	      state.needReadable = true;
	      if (!state.reading) {
	        this.read(0);
	      } else if (state.length) {
	        emitReadable(this, state);
	      }
	    }
	  }
	
	  return res;
	};
	Readable.prototype.addListener = Readable.prototype.on;
	
	// pause() and resume() are remnants of the legacy readable stream API
	// If the user uses them, then switch into old mode.
	Readable.prototype.resume = function() {
	  emitDataEvents(this);
	  this.read(0);
	  this.emit('resume');
	};
	
	Readable.prototype.pause = function() {
	  emitDataEvents(this, true);
	  this.emit('pause');
	};
	
	function emitDataEvents(stream, startPaused) {
	  var state = stream._readableState;
	
	  if (state.flowing) {
	    // https://github.com/isaacs/readable-stream/issues/16
	    throw new Error('Cannot switch to old mode now.');
	  }
	
	  var paused = startPaused || false;
	  var readable = false;
	
	  // convert to an old-style stream.
	  stream.readable = true;
	  stream.pipe = Stream.prototype.pipe;
	  stream.on = stream.addListener = Stream.prototype.on;
	
	  stream.on('readable', function() {
	    readable = true;
	
	    var c;
	    while (!paused && (null !== (c = stream.read())))
	      stream.emit('data', c);
	
	    if (c === null) {
	      readable = false;
	      stream._readableState.needReadable = true;
	    }
	  });
	
	  stream.pause = function() {
	    paused = true;
	    this.emit('pause');
	  };
	
	  stream.resume = function() {
	    paused = false;
	    if (readable)
	      process.nextTick(function() {
	        stream.emit('readable');
	      });
	    else
	      this.read(0);
	    this.emit('resume');
	  };
	
	  // now make it start, just in case it hadn't already.
	  stream.emit('readable');
	}
	
	// wrap an old-style stream as the async data source.
	// This is *not* part of the readable stream interface.
	// It is an ugly unfortunate mess of history.
	Readable.prototype.wrap = function(stream) {
	  var state = this._readableState;
	  var paused = false;
	
	  var self = this;
	  stream.on('end', function() {
	    if (state.decoder && !state.ended) {
	      var chunk = state.decoder.end();
	      if (chunk && chunk.length)
	        self.push(chunk);
	    }
	
	    self.push(null);
	  });
	
	  stream.on('data', function(chunk) {
	    if (state.decoder)
	      chunk = state.decoder.write(chunk);
	
	    // don't skip over falsy values in objectMode
	    //if (state.objectMode && util.isNullOrUndefined(chunk))
	    if (state.objectMode && (chunk === null || chunk === undefined))
	      return;
	    else if (!state.objectMode && (!chunk || !chunk.length))
	      return;
	
	    var ret = self.push(chunk);
	    if (!ret) {
	      paused = true;
	      stream.pause();
	    }
	  });
	
	  // proxy all the other methods.
	  // important when wrapping filters and duplexes.
	  for (var i in stream) {
	    if (typeof stream[i] === 'function' &&
	        typeof this[i] === 'undefined') {
	      this[i] = function(method) { return function() {
	        return stream[method].apply(stream, arguments);
	      }}(i);
	    }
	  }
	
	  // proxy certain important events.
	  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
	  forEach(events, function(ev) {
	    stream.on(ev, self.emit.bind(self, ev));
	  });
	
	  // when we try to consume some more bytes, simply unpause the
	  // underlying stream.
	  self._read = function(n) {
	    if (paused) {
	      paused = false;
	      stream.resume();
	    }
	  };
	
	  return self;
	};
	
	
	
	// exposed for testing purposes only.
	Readable._fromList = fromList;
	
	// Pluck off n bytes from an array of buffers.
	// Length is the combined lengths of all the buffers in the list.
	function fromList(n, state) {
	  var list = state.buffer;
	  var length = state.length;
	  var stringMode = !!state.decoder;
	  var objectMode = !!state.objectMode;
	  var ret;
	
	  // nothing in the list, definitely empty.
	  if (list.length === 0)
	    return null;
	
	  if (length === 0)
	    ret = null;
	  else if (objectMode)
	    ret = list.shift();
	  else if (!n || n >= length) {
	    // read it all, truncate the array.
	    if (stringMode)
	      ret = list.join('');
	    else
	      ret = Buffer.concat(list, length);
	    list.length = 0;
	  } else {
	    // read just some of it.
	    if (n < list[0].length) {
	      // just take a part of the first list item.
	      // slice is the same for buffers and strings.
	      var buf = list[0];
	      ret = buf.slice(0, n);
	      list[0] = buf.slice(n);
	    } else if (n === list[0].length) {
	      // first list is a perfect match
	      ret = list.shift();
	    } else {
	      // complex case.
	      // we have enough to cover it, but it spans past the first buffer.
	      if (stringMode)
	        ret = '';
	      else
	        ret = new Buffer(n);
	
	      var c = 0;
	      for (var i = 0, l = list.length; i < l && c < n; i++) {
	        var buf = list[0];
	        var cpy = Math.min(n - c, buf.length);
	
	        if (stringMode)
	          ret += buf.slice(0, cpy);
	        else
	          buf.copy(ret, c, 0, cpy);
	
	        if (cpy < buf.length)
	          list[0] = buf.slice(cpy);
	        else
	          list.shift();
	
	        c += cpy;
	      }
	    }
	  }
	
	  return ret;
	}
	
	function endReadable(stream) {
	  var state = stream._readableState;
	
	  // If we get here before consuming all the bytes, then that is a
	  // bug in node.  Should never happen.
	  if (state.length > 0)
	    throw new Error('endReadable called on non-empty stream');
	
	  if (!state.endEmitted && state.calledRead) {
	    state.ended = true;
	    process.nextTick(function() {
	      // Check that we didn't get one last unshift.
	      if (!state.endEmitted && state.length === 0) {
	        state.endEmitted = true;
	        stream.readable = false;
	        stream.emit('end');
	      }
	    });
	  }
	}
	
	function forEach (xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}
	
	function indexOf (xs, x) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    if (xs[i] === x) return i;
	  }
	  return -1;
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 333 */
/***/ function(module, exports) {

	module.exports = Array.isArray || function (arr) {
	  return Object.prototype.toString.call(arr) == '[object Array]';
	};


/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// A bit simpler than readable streams.
	// Implement an async ._write(chunk, cb), and it'll handle all
	// the drain event emission and buffering.
	
	module.exports = Writable;
	
	/*<replacement>*/
	var Buffer = __webpack_require__(282).Buffer;
	/*</replacement>*/
	
	Writable.WritableState = WritableState;
	
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	var Stream = __webpack_require__(287);
	
	util.inherits(Writable, Stream);
	
	function WriteReq(chunk, encoding, cb) {
	  this.chunk = chunk;
	  this.encoding = encoding;
	  this.callback = cb;
	}
	
	function WritableState(options, stream) {
	  options = options || {};
	
	  // the point at which write() starts returning false
	  // Note: 0 is a valid value, means that we always return false if
	  // the entire buffer is not flushed immediately on write()
	  var hwm = options.highWaterMark;
	  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;
	
	  // object stream flag to indicate whether or not this stream
	  // contains buffers or objects.
	  this.objectMode = !!options.objectMode;
	
	  // cast to ints.
	  this.highWaterMark = ~~this.highWaterMark;
	
	  this.needDrain = false;
	  // at the start of calling end()
	  this.ending = false;
	  // when end() has been called, and returned
	  this.ended = false;
	  // when 'finish' is emitted
	  this.finished = false;
	
	  // should we decode strings into buffers before passing to _write?
	  // this is here so that some node-core streams can optimize string
	  // handling at a lower level.
	  var noDecode = options.decodeStrings === false;
	  this.decodeStrings = !noDecode;
	
	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';
	
	  // not an actual buffer we keep track of, but a measurement
	  // of how much we're waiting to get pushed to some underlying
	  // socket or file.
	  this.length = 0;
	
	  // a flag to see when we're in the middle of a write.
	  this.writing = false;
	
	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, becuase any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;
	
	  // a flag to know if we're processing previously buffered items, which
	  // may call the _write() callback in the same tick, so that we don't
	  // end up in an overlapped onwrite situation.
	  this.bufferProcessing = false;
	
	  // the callback that's passed to _write(chunk,cb)
	  this.onwrite = function(er) {
	    onwrite(stream, er);
	  };
	
	  // the callback that the user supplies to write(chunk,encoding,cb)
	  this.writecb = null;
	
	  // the amount that is being written when _write is called.
	  this.writelen = 0;
	
	  this.buffer = [];
	
	  // True if the error was already emitted and should not be thrown again
	  this.errorEmitted = false;
	}
	
	function Writable(options) {
	  var Duplex = __webpack_require__(335);
	
	  // Writable ctor is applied to Duplexes, though they're not
	  // instanceof Writable, they're instanceof Readable.
	  if (!(this instanceof Writable) && !(this instanceof Duplex))
	    return new Writable(options);
	
	  this._writableState = new WritableState(options, this);
	
	  // legacy.
	  this.writable = true;
	
	  Stream.call(this);
	}
	
	// Otherwise people can pipe Writable streams, which is just wrong.
	Writable.prototype.pipe = function() {
	  this.emit('error', new Error('Cannot pipe. Not readable.'));
	};
	
	
	function writeAfterEnd(stream, state, cb) {
	  var er = new Error('write after end');
	  // TODO: defer error events consistently everywhere, not just the cb
	  stream.emit('error', er);
	  process.nextTick(function() {
	    cb(er);
	  });
	}
	
	// If we get something that is not a buffer, string, null, or undefined,
	// and we're not in objectMode, then that's an error.
	// Otherwise stream chunks are all considered to be of length=1, and the
	// watermarks determine how many objects to keep in the buffer, rather than
	// how many bytes or characters.
	function validChunk(stream, state, chunk, cb) {
	  var valid = true;
	  if (!Buffer.isBuffer(chunk) &&
	      'string' !== typeof chunk &&
	      chunk !== null &&
	      chunk !== undefined &&
	      !state.objectMode) {
	    var er = new TypeError('Invalid non-string/buffer chunk');
	    stream.emit('error', er);
	    process.nextTick(function() {
	      cb(er);
	    });
	    valid = false;
	  }
	  return valid;
	}
	
	Writable.prototype.write = function(chunk, encoding, cb) {
	  var state = this._writableState;
	  var ret = false;
	
	  if (typeof encoding === 'function') {
	    cb = encoding;
	    encoding = null;
	  }
	
	  if (Buffer.isBuffer(chunk))
	    encoding = 'buffer';
	  else if (!encoding)
	    encoding = state.defaultEncoding;
	
	  if (typeof cb !== 'function')
	    cb = function() {};
	
	  if (state.ended)
	    writeAfterEnd(this, state, cb);
	  else if (validChunk(this, state, chunk, cb))
	    ret = writeOrBuffer(this, state, chunk, encoding, cb);
	
	  return ret;
	};
	
	function decodeChunk(state, chunk, encoding) {
	  if (!state.objectMode &&
	      state.decodeStrings !== false &&
	      typeof chunk === 'string') {
	    chunk = new Buffer(chunk, encoding);
	  }
	  return chunk;
	}
	
	// if we're already writing something, then just put this
	// in the queue, and wait our turn.  Otherwise, call _write
	// If we return false, then we need a drain event, so set that flag.
	function writeOrBuffer(stream, state, chunk, encoding, cb) {
	  chunk = decodeChunk(state, chunk, encoding);
	  if (Buffer.isBuffer(chunk))
	    encoding = 'buffer';
	  var len = state.objectMode ? 1 : chunk.length;
	
	  state.length += len;
	
	  var ret = state.length < state.highWaterMark;
	  // we must ensure that previous needDrain will not be reset to false.
	  if (!ret)
	    state.needDrain = true;
	
	  if (state.writing)
	    state.buffer.push(new WriteReq(chunk, encoding, cb));
	  else
	    doWrite(stream, state, len, chunk, encoding, cb);
	
	  return ret;
	}
	
	function doWrite(stream, state, len, chunk, encoding, cb) {
	  state.writelen = len;
	  state.writecb = cb;
	  state.writing = true;
	  state.sync = true;
	  stream._write(chunk, encoding, state.onwrite);
	  state.sync = false;
	}
	
	function onwriteError(stream, state, sync, er, cb) {
	  if (sync)
	    process.nextTick(function() {
	      cb(er);
	    });
	  else
	    cb(er);
	
	  stream._writableState.errorEmitted = true;
	  stream.emit('error', er);
	}
	
	function onwriteStateUpdate(state) {
	  state.writing = false;
	  state.writecb = null;
	  state.length -= state.writelen;
	  state.writelen = 0;
	}
	
	function onwrite(stream, er) {
	  var state = stream._writableState;
	  var sync = state.sync;
	  var cb = state.writecb;
	
	  onwriteStateUpdate(state);
	
	  if (er)
	    onwriteError(stream, state, sync, er, cb);
	  else {
	    // Check if we're actually ready to finish, but don't emit yet
	    var finished = needFinish(stream, state);
	
	    if (!finished && !state.bufferProcessing && state.buffer.length)
	      clearBuffer(stream, state);
	
	    if (sync) {
	      process.nextTick(function() {
	        afterWrite(stream, state, finished, cb);
	      });
	    } else {
	      afterWrite(stream, state, finished, cb);
	    }
	  }
	}
	
	function afterWrite(stream, state, finished, cb) {
	  if (!finished)
	    onwriteDrain(stream, state);
	  cb();
	  if (finished)
	    finishMaybe(stream, state);
	}
	
	// Must force callback to be called on nextTick, so that we don't
	// emit 'drain' before the write() consumer gets the 'false' return
	// value, and has a chance to attach a 'drain' listener.
	function onwriteDrain(stream, state) {
	  if (state.length === 0 && state.needDrain) {
	    state.needDrain = false;
	    stream.emit('drain');
	  }
	}
	
	
	// if there's something in the buffer waiting, then process it
	function clearBuffer(stream, state) {
	  state.bufferProcessing = true;
	
	  for (var c = 0; c < state.buffer.length; c++) {
	    var entry = state.buffer[c];
	    var chunk = entry.chunk;
	    var encoding = entry.encoding;
	    var cb = entry.callback;
	    var len = state.objectMode ? 1 : chunk.length;
	
	    doWrite(stream, state, len, chunk, encoding, cb);
	
	    // if we didn't call the onwrite immediately, then
	    // it means that we need to wait until it does.
	    // also, that means that the chunk and cb are currently
	    // being processed, so move the buffer counter past them.
	    if (state.writing) {
	      c++;
	      break;
	    }
	  }
	
	  state.bufferProcessing = false;
	  if (c < state.buffer.length)
	    state.buffer = state.buffer.slice(c);
	  else
	    state.buffer.length = 0;
	}
	
	Writable.prototype._write = function(chunk, encoding, cb) {
	  cb(new Error('not implemented'));
	};
	
	Writable.prototype.end = function(chunk, encoding, cb) {
	  var state = this._writableState;
	
	  if (typeof chunk === 'function') {
	    cb = chunk;
	    chunk = null;
	    encoding = null;
	  } else if (typeof encoding === 'function') {
	    cb = encoding;
	    encoding = null;
	  }
	
	  if (typeof chunk !== 'undefined' && chunk !== null)
	    this.write(chunk, encoding);
	
	  // ignore unnecessary end() calls.
	  if (!state.ending && !state.finished)
	    endWritable(this, state, cb);
	};
	
	
	function needFinish(stream, state) {
	  return (state.ending &&
	          state.length === 0 &&
	          !state.finished &&
	          !state.writing);
	}
	
	function finishMaybe(stream, state) {
	  var need = needFinish(stream, state);
	  if (need) {
	    state.finished = true;
	    stream.emit('finish');
	  }
	  return need;
	}
	
	function endWritable(stream, state, cb) {
	  state.ending = true;
	  finishMaybe(stream, state);
	  if (cb) {
	    if (state.finished)
	      process.nextTick(cb);
	    else
	      stream.once('finish', cb);
	  }
	  state.ended = true;
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// a duplex stream is just a stream that is both readable and writable.
	// Since JS doesn't have multiple prototypal inheritance, this class
	// prototypally inherits from Readable, and then parasitically from
	// Writable.
	
	module.exports = Duplex;
	
	/*<replacement>*/
	var objectKeys = Object.keys || function (obj) {
	  var keys = [];
	  for (var key in obj) keys.push(key);
	  return keys;
	}
	/*</replacement>*/
	
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	var Readable = __webpack_require__(332);
	var Writable = __webpack_require__(334);
	
	util.inherits(Duplex, Readable);
	
	forEach(objectKeys(Writable.prototype), function(method) {
	  if (!Duplex.prototype[method])
	    Duplex.prototype[method] = Writable.prototype[method];
	});
	
	function Duplex(options) {
	  if (!(this instanceof Duplex))
	    return new Duplex(options);
	
	  Readable.call(this, options);
	  Writable.call(this, options);
	
	  if (options && options.readable === false)
	    this.readable = false;
	
	  if (options && options.writable === false)
	    this.writable = false;
	
	  this.allowHalfOpen = true;
	  if (options && options.allowHalfOpen === false)
	    this.allowHalfOpen = false;
	
	  this.once('end', onend);
	}
	
	// the no-half-open enforcer
	function onend() {
	  // if we allow half-open state, or if the writable side ended,
	  // then we're ok.
	  if (this.allowHalfOpen || this._writableState.ended)
	    return;
	
	  // no more data can be written.
	  // But allow more writes to happen in this tick.
	  process.nextTick(this.end.bind(this));
	}
	
	function forEach (xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	
	// a transform stream is a readable/writable stream where you do
	// something with the data.  Sometimes it's called a "filter",
	// but that's not a great name for it, since that implies a thing where
	// some bits pass through, and others are simply ignored.  (That would
	// be a valid example of a transform, of course.)
	//
	// While the output is causally related to the input, it's not a
	// necessarily symmetric or synchronous transformation.  For example,
	// a zlib stream might take multiple plain-text writes(), and then
	// emit a single compressed chunk some time in the future.
	//
	// Here's how this works:
	//
	// The Transform stream has all the aspects of the readable and writable
	// stream classes.  When you write(chunk), that calls _write(chunk,cb)
	// internally, and returns false if there's a lot of pending writes
	// buffered up.  When you call read(), that calls _read(n) until
	// there's enough pending readable data buffered up.
	//
	// In a transform stream, the written data is placed in a buffer.  When
	// _read(n) is called, it transforms the queued up data, calling the
	// buffered _write cb's as it consumes chunks.  If consuming a single
	// written chunk would result in multiple output chunks, then the first
	// outputted bit calls the readcb, and subsequent chunks just go into
	// the read buffer, and will cause it to emit 'readable' if necessary.
	//
	// This way, back-pressure is actually determined by the reading side,
	// since _read has to be called to start processing a new chunk.  However,
	// a pathological inflate type of transform can cause excessive buffering
	// here.  For example, imagine a stream where every byte of input is
	// interpreted as an integer from 0-255, and then results in that many
	// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
	// 1kb of data being output.  In this case, you could write a very small
	// amount of input, and end up with a very large amount of output.  In
	// such a pathological inflating mechanism, there'd be no way to tell
	// the system to stop doing the transform.  A single 4MB write could
	// cause the system to run out of memory.
	//
	// However, even in such a pathological case, only a single written chunk
	// would be consumed, and then the rest would wait (un-transformed) until
	// the results of the previous transformed chunk were consumed.
	
	module.exports = Transform;
	
	var Duplex = __webpack_require__(335);
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	util.inherits(Transform, Duplex);
	
	
	function TransformState(options, stream) {
	  this.afterTransform = function(er, data) {
	    return afterTransform(stream, er, data);
	  };
	
	  this.needTransform = false;
	  this.transforming = false;
	  this.writecb = null;
	  this.writechunk = null;
	}
	
	function afterTransform(stream, er, data) {
	  var ts = stream._transformState;
	  ts.transforming = false;
	
	  var cb = ts.writecb;
	
	  if (!cb)
	    return stream.emit('error', new Error('no writecb in Transform class'));
	
	  ts.writechunk = null;
	  ts.writecb = null;
	
	  if (data !== null && data !== undefined)
	    stream.push(data);
	
	  if (cb)
	    cb(er);
	
	  var rs = stream._readableState;
	  rs.reading = false;
	  if (rs.needReadable || rs.length < rs.highWaterMark) {
	    stream._read(rs.highWaterMark);
	  }
	}
	
	
	function Transform(options) {
	  if (!(this instanceof Transform))
	    return new Transform(options);
	
	  Duplex.call(this, options);
	
	  var ts = this._transformState = new TransformState(options, this);
	
	  // when the writable side finishes, then flush out anything remaining.
	  var stream = this;
	
	  // start out asking for a readable event once data is transformed.
	  this._readableState.needReadable = true;
	
	  // we have implemented the _read method, and done the other things
	  // that Readable wants before the first _read call, so unset the
	  // sync guard flag.
	  this._readableState.sync = false;
	
	  this.once('finish', function() {
	    if ('function' === typeof this._flush)
	      this._flush(function(er) {
	        done(stream, er);
	      });
	    else
	      done(stream);
	  });
	}
	
	Transform.prototype.push = function(chunk, encoding) {
	  this._transformState.needTransform = false;
	  return Duplex.prototype.push.call(this, chunk, encoding);
	};
	
	// This is the part where you do stuff!
	// override this function in implementation classes.
	// 'chunk' is an input chunk.
	//
	// Call `push(newChunk)` to pass along transformed output
	// to the readable side.  You may call 'push' zero or more times.
	//
	// Call `cb(err)` when you are done with this chunk.  If you pass
	// an error, then that'll put the hurt on the whole operation.  If you
	// never call cb(), then you'll never get another chunk.
	Transform.prototype._transform = function(chunk, encoding, cb) {
	  throw new Error('not implemented');
	};
	
	Transform.prototype._write = function(chunk, encoding, cb) {
	  var ts = this._transformState;
	  ts.writecb = cb;
	  ts.writechunk = chunk;
	  ts.writeencoding = encoding;
	  if (!ts.transforming) {
	    var rs = this._readableState;
	    if (ts.needTransform ||
	        rs.needReadable ||
	        rs.length < rs.highWaterMark)
	      this._read(rs.highWaterMark);
	  }
	};
	
	// Doesn't matter what the args are here.
	// _transform does all the work.
	// That we got here means that the readable side wants more data.
	Transform.prototype._read = function(n) {
	  var ts = this._transformState;
	
	  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
	    ts.transforming = true;
	    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
	  } else {
	    // mark that we need a transform, so that any data that comes in
	    // will get processed, now that we've asked for it.
	    ts.needTransform = true;
	  }
	};
	
	
	function done(stream, er) {
	  if (er)
	    return stream.emit('error', er);
	
	  // if there's nothing in the write buffer, then that means
	  // that nothing more will ever be provided
	  var ws = stream._writableState;
	  var rs = stream._readableState;
	  var ts = stream._transformState;
	
	  if (ws.length)
	    throw new Error('calling transform done when ws.length != 0');
	
	  if (ts.transforming)
	    throw new Error('calling transform done when still transforming');
	
	  return stream.push(null);
	}


/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// a passthrough stream.
	// basically just the most minimal sort of Transform stream.
	// Every written chunk gets output as-is.
	
	module.exports = PassThrough;
	
	var Transform = __webpack_require__(336);
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	util.inherits(PassThrough, Transform);
	
	function PassThrough(options) {
	  if (!(this instanceof PassThrough))
	    return new PassThrough(options);
	
	  Transform.call(this, options);
	}
	
	PassThrough.prototype._transform = function(chunk, encoding, cb) {
	  cb(null, chunk);
	};


/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {/*
	  GIFEncoder.js
	
	  Authors
	  Kevin Weiner (original Java version - kweiner@fmsware.com)
	  Thibault Imbert (AS3 version - bytearray.org)
	  Johan Nordberg (JS version - code@johan-nordberg.com)
	  Todd Wolfson (Implemented streams - todd@twolfson.com)
	*/
	
	var assert = __webpack_require__(196);
	var EventEmitter = __webpack_require__(288).EventEmitter;
	var ReadableStream = __webpack_require__(339);
	var util = __webpack_require__(197);
	
	var NeuQuant = __webpack_require__(346);
	var LZWEncoder = __webpack_require__(347);
	
	// DEV: By using a capacitor, we prevent creating a data event for every byte written
	function ByteCapacitor(options) {
	  // Inherit from ReadableStream
	  ReadableStream.call(this, options);
	
	  // Start with an empty buffer and allow writes
	  this.okayToPush = true;
	  this.resetData();
	}
	util.inherits(ByteCapacitor, ReadableStream);
	
	ByteCapacitor.prototype._read = function () {
	  // The output is controlled by the input provided by methods.
	  // If we exceed the highwater mark, we will raise an error.
	  this.okayToPush = true;
	};
	
	ByteCapacitor.prototype.resetData = function () {
	  this.data = [];
	};
	
	ByteCapacitor.prototype.flushData = function () {
	  // If we are not okay to push, emit an error
	  if (!this.okayToPush) {
	    var err = new Error('GIF memory limit exceeded. Please `read` from GIF before writing additional frames/information.');
	    return this.emit('error', err);
	  }
	
	  // Otherwise, push out the new buffer
	  var buff = new Buffer(this.data);
	  this.resetData();
	  this.okayToPush = this.push(buff);
	};
	
	ByteCapacitor.prototype.writeByte = function (val) {
	  this.data.push(val);
	};
	
	ByteCapacitor.prototype.writeUTFBytes = function (string) {
	  for (var l = string.length, i = 0; i < l; i++) {
	    this.writeByte(string.charCodeAt(i));
	  }
	};
	
	ByteCapacitor.prototype.writeBytes = function (array, offset, length) {
	  for (var l = length || array.length, i = offset || 0; i < l; i++) {
	    this.writeByte(array[i]);
	  }
	};
	
	function GIFEncoder(width, height, options) {
	  // Fallback options
	  options = options || {};
	
	  // Inherit from ByteCapacitor immediately
	  // https://github.com/isaacs/readable-stream/blob/v1.1.9/lib/_stream_readable.js#L60-L63
	  var hwm = options.highWaterMark;
	  ByteCapacitor.call(this, {
	    // Allow for up to 64kB of GIFfy-goodness
	    highWaterMark: (hwm || hwm === 0) ? hwm : 64 * 1024
	  });
	
	  // image size
	  this.width = ~~width;
	  this.height = ~~height;
	
	  // transparent color if given
	  this.transparent = null;
	
	  // transparent index in color table
	  this.transIndex = 0;
	
	  // -1 = no repeat, 0 = forever. anything else is repeat count
	  this.repeat = -1;
	
	  // frame delay (hundredths)
	  this.delay = 0;
	
	  this.pixels = null; // BGR byte array from frame
	  this.indexedPixels = null; // converted frame indexed to palette
	  this.colorDepth = null; // number of bit planes
	  this.colorTab = null; // RGB palette
	  this.usedEntry = []; // active palette entries
	  this.palSize = 7; // color table size (bits-1)
	  this.dispose = -1; // disposal code (-1 = use default)
	  this.firstFrame = true;
	  this.sample = 10; // default sample interval for quantizer
	
	  // When we encounter a header, new frame, or stop, emit data
	  var that = this;
	  function flushData() {
	    that.flushData();
	  }
	  this.on('writeHeader#stop', flushData);
	  this.on('frame#stop', flushData);
	  this.on('finish#stop', function finishGif () {
	    // Flush the data
	    flushData();
	
	    // Close the gif
	    that.push(null);
	  });
	}
	util.inherits(GIFEncoder, ByteCapacitor);
	
	/*
	  Sets the delay time between each frame, or changes it for subsequent frames
	  (applies to last frame added)
	*/
	GIFEncoder.prototype.setDelay = function(milliseconds) {
	  this.delay = Math.round(milliseconds / 10);
	};
	
	/*
	  Sets frame rate in frames per second.
	*/
	GIFEncoder.prototype.setFrameRate = function(fps) {
	  this.delay = Math.round(100 / fps);
	};
	
	/*
	  Sets the GIF frame disposal code for the last added frame and any
	  subsequent frames.
	
	  Default is 0 if no transparent color has been set, otherwise 2.
	*/
	GIFEncoder.prototype.setDispose = function(disposalCode) {
	  if (disposalCode >= 0) this.dispose = disposalCode;
	};
	
	/*
	  Sets the number of times the set of GIF frames should be played.
	
	  -1 = play once
	  0 = repeat indefinitely
	
	  Default is -1
	
	  Must be invoked before the first image is added
	*/
	
	GIFEncoder.prototype.setRepeat = function(repeat) {
	  this.repeat = repeat;
	};
	
	/*
	  Sets the transparent color for the last added frame and any subsequent
	  frames. Since all colors are subject to modification in the quantization
	  process, the color in the final palette for each frame closest to the given
	  color becomes the transparent color for that frame. May be set to null to
	  indicate no transparent color.
	*/
	GIFEncoder.prototype.setTransparent = function(color) {
	  this.transparent = color;
	};
	
	// Custom methods for performance hacks around streaming GIF data pieces without re-analyzing/loading
	GIFEncoder.prototype.analyzeImage = function (imageData) {
	  // convert to correct format if necessary
	  this.setImagePixels(this.removeAlphaChannel(imageData));
	  this.analyzePixels(); // build color table & map pixels
	};
	
	GIFEncoder.prototype.writeImageInfo = function () {
	  if (this.firstFrame) {
	    this.writeLSD(); // logical screen descriptior
	    this.writePalette(); // global color table
	    if (this.repeat >= 0) {
	      // use NS app extension to indicate reps
	      this.writeNetscapeExt();
	    }
	  }
	
	  this.writeGraphicCtrlExt(); // write graphic control extension
	  this.writeImageDesc(); // image descriptor
	  if (!this.firstFrame) this.writePalette(); // local color table
	
	  // DEV: This was originally after outputImage but it does not affect order it seems
	  this.firstFrame = false;
	};
	
	GIFEncoder.prototype.outputImage = function () {
	  this.writePixels(); // encode and write pixel data
	};
	
	/*
	  Adds next GIF frame. The frame is not written immediately, but is
	  actually deferred until the next frame is received so that timing
	  data can be inserted.  Invoking finish() flushes all frames.
	*/
	GIFEncoder.prototype.addFrame = function(imageData) {
	  this.emit('frame#start');
	
	  this.analyzeImage(imageData);
	  this.writeImageInfo();
	  this.outputImage();
	
	  this.emit('frame#stop');
	};
	
	/*
	  Adds final trailer to the GIF stream, if you don't call the finish method
	  the GIF stream will not be valid.
	*/
	GIFEncoder.prototype.finish = function() {
	  this.emit('finish#start');
	  this.writeByte(0x3b); // gif trailer
	  this.emit('finish#stop');
	};
	
	/*
	  Sets quality of color quantization (conversion of images to the maximum 256
	  colors allowed by the GIF specification). Lower values (minimum = 1)
	  produce better colors, but slow processing significantly. 10 is the
	  default, and produces good color mapping at reasonable speeds. Values
	  greater than 20 do not yield significant improvements in speed.
	*/
	GIFEncoder.prototype.setQuality = function(quality) {
	  if (quality < 1) quality = 1;
	  this.sample = quality;
	};
	
	/*
	  Writes GIF file header
	*/
	GIFEncoder.prototype.writeHeader = function() {
	  this.emit('writeHeader#start');
	  this.writeUTFBytes("GIF89a");
	  this.emit('writeHeader#stop');
	};
	
	/*
	  Analyzes current frame colors and creates color map.
	*/
	GIFEncoder.prototype.analyzePixels = function() {
	  var len = this.pixels.length;
	  var nPix = len / 3;
	
	  // TODO: Re-use indexedPixels
	  this.indexedPixels = new Uint8Array(nPix);
	
	  var imgq = new NeuQuant(this.pixels, this.sample);
	  imgq.buildColormap(); // create reduced palette
	  this.colorTab = imgq.getColormap();
	
	  // map image pixels to new palette
	  var k = 0;
	  for (var j = 0; j < nPix; j++) {
	    var index = imgq.lookupRGB(
	      this.pixels[k++] & 0xff,
	      this.pixels[k++] & 0xff,
	      this.pixels[k++] & 0xff
	    );
	    this.usedEntry[index] = true;
	    this.indexedPixels[j] = index;
	  }
	
	  this.pixels = null;
	  this.colorDepth = 8;
	  this.palSize = 7;
	
	  // get closest match to transparent color if specified
	  if (this.transparent !== null) {
	    this.transIndex = this.findClosest(this.transparent);
	  }
	};
	
	/*
	  Returns index of palette color closest to c
	*/
	GIFEncoder.prototype.findClosest = function(c) {
	  if (this.colorTab === null) return -1;
	
	  var r = (c & 0xFF0000) >> 16;
	  var g = (c & 0x00FF00) >> 8;
	  var b = (c & 0x0000FF);
	  var minpos = 0;
	  var dmin = 256 * 256 * 256;
	  var len = this.colorTab.length;
	
	  for (var i = 0; i < len;) {
	    var dr = r - (this.colorTab[i++] & 0xff);
	    var dg = g - (this.colorTab[i++] & 0xff);
	    var db = b - (this.colorTab[i] & 0xff);
	    var d = dr * dr + dg * dg + db * db;
	    var index = i / 3;
	    if (this.usedEntry[index] && (d < dmin)) {
	      dmin = d;
	      minpos = index;
	    }
	    i++;
	  }
	
	  return minpos;
	};
	
	/*
	  Extracts image pixels into byte array pixels
	  (removes alphachannel from canvas imagedata)
	*/
	GIFEncoder.prototype.removeAlphaChannel = function (data) {
	  var w = this.width;
	  var h = this.height;
	  var pixels = new Uint8Array(w * h * 3);
	
	  var count = 0;
	
	  for (var i = 0; i < h; i++) {
	    for (var j = 0; j < w; j++) {
	      var b = (i * w * 4) + j * 4;
	      pixels[count++] = data[b];
	      pixels[count++] = data[b+1];
	      pixels[count++] = data[b+2];
	    }
	  }
	
	  return pixels;
	};
	
	GIFEncoder.prototype.setImagePixels = function(pixels) {
	  this.pixels = pixels;
	};
	
	/*
	  Writes Graphic Control Extension
	*/
	GIFEncoder.prototype.writeGraphicCtrlExt = function() {
	  this.writeByte(0x21); // extension introducer
	  this.writeByte(0xf9); // GCE label
	  this.writeByte(4); // data block size
	
	  var transp, disp;
	  if (this.transparent === null) {
	    transp = 0;
	    disp = 0; // dispose = no action
	  } else {
	    transp = 1;
	    disp = 2; // force clear if using transparent color
	  }
	
	  if (this.dispose >= 0) {
	    disp = dispose & 7; // user override
	  }
	  disp <<= 2;
	
	  // packed fields
	  this.writeByte(
	    0 | // 1:3 reserved
	    disp | // 4:6 disposal
	    0 | // 7 user input - 0 = none
	    transp // 8 transparency flag
	  );
	
	  this.writeShort(this.delay); // delay x 1/100 sec
	  this.writeByte(this.transIndex); // transparent color index
	  this.writeByte(0); // block terminator
	};
	
	/*
	  Writes Image Descriptor
	*/
	GIFEncoder.prototype.writeImageDesc = function() {
	  this.writeByte(0x2c); // image separator
	  this.writeShort(0); // image position x,y = 0,0
	  this.writeShort(0);
	  this.writeShort(this.width); // image size
	  this.writeShort(this.height);
	
	  // packed fields
	  if (this.firstFrame) {
	    // no LCT - GCT is used for first (or only) frame
	    this.writeByte(0);
	  } else {
	    // specify normal LCT
	    this.writeByte(
	      0x80 | // 1 local color table 1=yes
	      0 | // 2 interlace - 0=no
	      0 | // 3 sorted - 0=no
	      0 | // 4-5 reserved
	      this.palSize // 6-8 size of color table
	    );
	  }
	};
	
	/*
	  Writes Logical Screen Descriptor
	*/
	GIFEncoder.prototype.writeLSD = function() {
	  // logical screen size
	  this.writeShort(this.width);
	  this.writeShort(this.height);
	
	  // packed fields
	  this.writeByte(
	    0x80 | // 1 : global color table flag = 1 (gct used)
	    0x70 | // 2-4 : color resolution = 7
	    0x00 | // 5 : gct sort flag = 0
	    this.palSize // 6-8 : gct size
	  );
	
	  this.writeByte(0); // background color index
	  this.writeByte(0); // pixel aspect ratio - assume 1:1
	};
	
	/*
	  Writes Netscape application extension to define repeat count.
	*/
	GIFEncoder.prototype.writeNetscapeExt = function() {
	  this.writeByte(0x21); // extension introducer
	  this.writeByte(0xff); // app extension label
	  this.writeByte(11); // block size
	  this.writeUTFBytes('NETSCAPE2.0'); // app id + auth code
	  this.writeByte(3); // sub-block size
	  this.writeByte(1); // loop sub-block id
	  this.writeShort(this.repeat); // loop count (extra iterations, 0=repeat forever)
	  this.writeByte(0); // block terminator
	};
	
	/*
	  Writes color table
	*/
	GIFEncoder.prototype.writePalette = function() {
	  this.writeBytes(this.colorTab);
	  var n = (3 * 256) - this.colorTab.length;
	  for (var i = 0; i < n; i++)
	    this.writeByte(0);
	};
	
	GIFEncoder.prototype.writeShort = function(pValue) {
	  this.writeByte(pValue & 0xFF);
	  this.writeByte((pValue >> 8) & 0xFF);
	};
	
	/*
	  Encodes and writes pixel data
	*/
	GIFEncoder.prototype.writePixels = function() {
	  var enc = new LZWEncoder(this.width, this.height, this.indexedPixels, this.colorDepth);
	  enc.encode(this);
	};
	
	/*
	  Retrieves the GIF stream
	*/
	GIFEncoder.prototype.stream = function() {
	  return this;
	};
	
	GIFEncoder.ByteCapacitor = ByteCapacitor;
	
	module.exports = GIFEncoder;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {exports = module.exports = __webpack_require__(340);
	exports.Stream = __webpack_require__(287);
	exports.Readable = exports;
	exports.Writable = __webpack_require__(343);
	exports.Duplex = __webpack_require__(342);
	exports.Transform = __webpack_require__(344);
	exports.PassThrough = __webpack_require__(345);
	if (!process.browser && process.env.READABLE_STREAM === 'disable') {
	  module.exports = __webpack_require__(287);
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	module.exports = Readable;
	
	/*<replacement>*/
	var isArray = __webpack_require__(333);
	/*</replacement>*/
	
	
	/*<replacement>*/
	var Buffer = __webpack_require__(282).Buffer;
	/*</replacement>*/
	
	Readable.ReadableState = ReadableState;
	
	var EE = __webpack_require__(288).EventEmitter;
	
	/*<replacement>*/
	if (!EE.listenerCount) EE.listenerCount = function(emitter, type) {
	  return emitter.listeners(type).length;
	};
	/*</replacement>*/
	
	var Stream = __webpack_require__(287);
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	var StringDecoder;
	
	
	/*<replacement>*/
	var debug = __webpack_require__(341);
	if (debug && debug.debuglog) {
	  debug = debug.debuglog('stream');
	} else {
	  debug = function () {};
	}
	/*</replacement>*/
	
	
	util.inherits(Readable, Stream);
	
	function ReadableState(options, stream) {
	  var Duplex = __webpack_require__(342);
	
	  options = options || {};
	
	  // the point at which it stops calling _read() to fill the buffer
	  // Note: 0 is a valid value, means "don't call _read preemptively ever"
	  var hwm = options.highWaterMark;
	  var defaultHwm = options.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;
	
	  // cast to ints.
	  this.highWaterMark = ~~this.highWaterMark;
	
	  this.buffer = [];
	  this.length = 0;
	  this.pipes = null;
	  this.pipesCount = 0;
	  this.flowing = null;
	  this.ended = false;
	  this.endEmitted = false;
	  this.reading = false;
	
	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;
	
	  // whenever we return null, then we set a flag to say
	  // that we're awaiting a 'readable' event emission.
	  this.needReadable = false;
	  this.emittedReadable = false;
	  this.readableListening = false;
	
	
	  // object stream flag. Used to make read(n) ignore n and to
	  // make all the buffer merging and length checks go away
	  this.objectMode = !!options.objectMode;
	
	  if (stream instanceof Duplex)
	    this.objectMode = this.objectMode || !!options.readableObjectMode;
	
	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';
	
	  // when piping, we only care about 'readable' events that happen
	  // after read()ing all the bytes and not getting any pushback.
	  this.ranOut = false;
	
	  // the number of writers that are awaiting a drain event in .pipe()s
	  this.awaitDrain = 0;
	
	  // if true, a maybeReadMore has been scheduled
	  this.readingMore = false;
	
	  this.decoder = null;
	  this.encoding = null;
	  if (options.encoding) {
	    if (!StringDecoder)
	      StringDecoder = __webpack_require__(303).StringDecoder;
	    this.decoder = new StringDecoder(options.encoding);
	    this.encoding = options.encoding;
	  }
	}
	
	function Readable(options) {
	  var Duplex = __webpack_require__(342);
	
	  if (!(this instanceof Readable))
	    return new Readable(options);
	
	  this._readableState = new ReadableState(options, this);
	
	  // legacy
	  this.readable = true;
	
	  Stream.call(this);
	}
	
	// Manually shove something into the read() buffer.
	// This returns true if the highWaterMark has not been hit yet,
	// similar to how Writable.write() returns true if you should
	// write() some more.
	Readable.prototype.push = function(chunk, encoding) {
	  var state = this._readableState;
	
	  if (util.isString(chunk) && !state.objectMode) {
	    encoding = encoding || state.defaultEncoding;
	    if (encoding !== state.encoding) {
	      chunk = new Buffer(chunk, encoding);
	      encoding = '';
	    }
	  }
	
	  return readableAddChunk(this, state, chunk, encoding, false);
	};
	
	// Unshift should *always* be something directly out of read()
	Readable.prototype.unshift = function(chunk) {
	  var state = this._readableState;
	  return readableAddChunk(this, state, chunk, '', true);
	};
	
	function readableAddChunk(stream, state, chunk, encoding, addToFront) {
	  var er = chunkInvalid(state, chunk);
	  if (er) {
	    stream.emit('error', er);
	  } else if (util.isNullOrUndefined(chunk)) {
	    state.reading = false;
	    if (!state.ended)
	      onEofChunk(stream, state);
	  } else if (state.objectMode || chunk && chunk.length > 0) {
	    if (state.ended && !addToFront) {
	      var e = new Error('stream.push() after EOF');
	      stream.emit('error', e);
	    } else if (state.endEmitted && addToFront) {
	      var e = new Error('stream.unshift() after end event');
	      stream.emit('error', e);
	    } else {
	      if (state.decoder && !addToFront && !encoding)
	        chunk = state.decoder.write(chunk);
	
	      if (!addToFront)
	        state.reading = false;
	
	      // if we want the data now, just emit it.
	      if (state.flowing && state.length === 0 && !state.sync) {
	        stream.emit('data', chunk);
	        stream.read(0);
	      } else {
	        // update the buffer info.
	        state.length += state.objectMode ? 1 : chunk.length;
	        if (addToFront)
	          state.buffer.unshift(chunk);
	        else
	          state.buffer.push(chunk);
	
	        if (state.needReadable)
	          emitReadable(stream);
	      }
	
	      maybeReadMore(stream, state);
	    }
	  } else if (!addToFront) {
	    state.reading = false;
	  }
	
	  return needMoreData(state);
	}
	
	
	
	// if it's past the high water mark, we can push in some more.
	// Also, if we have no data yet, we can stand some
	// more bytes.  This is to work around cases where hwm=0,
	// such as the repl.  Also, if the push() triggered a
	// readable event, and the user called read(largeNumber) such that
	// needReadable was set, then we ought to push more, so that another
	// 'readable' event will be triggered.
	function needMoreData(state) {
	  return !state.ended &&
	         (state.needReadable ||
	          state.length < state.highWaterMark ||
	          state.length === 0);
	}
	
	// backwards compatibility.
	Readable.prototype.setEncoding = function(enc) {
	  if (!StringDecoder)
	    StringDecoder = __webpack_require__(303).StringDecoder;
	  this._readableState.decoder = new StringDecoder(enc);
	  this._readableState.encoding = enc;
	  return this;
	};
	
	// Don't raise the hwm > 128MB
	var MAX_HWM = 0x800000;
	function roundUpToNextPowerOf2(n) {
	  if (n >= MAX_HWM) {
	    n = MAX_HWM;
	  } else {
	    // Get the next highest power of 2
	    n--;
	    for (var p = 1; p < 32; p <<= 1) n |= n >> p;
	    n++;
	  }
	  return n;
	}
	
	function howMuchToRead(n, state) {
	  if (state.length === 0 && state.ended)
	    return 0;
	
	  if (state.objectMode)
	    return n === 0 ? 0 : 1;
	
	  if (isNaN(n) || util.isNull(n)) {
	    // only flow one buffer at a time
	    if (state.flowing && state.buffer.length)
	      return state.buffer[0].length;
	    else
	      return state.length;
	  }
	
	  if (n <= 0)
	    return 0;
	
	  // If we're asking for more than the target buffer level,
	  // then raise the water mark.  Bump up to the next highest
	  // power of 2, to prevent increasing it excessively in tiny
	  // amounts.
	  if (n > state.highWaterMark)
	    state.highWaterMark = roundUpToNextPowerOf2(n);
	
	  // don't have that much.  return null, unless we've ended.
	  if (n > state.length) {
	    if (!state.ended) {
	      state.needReadable = true;
	      return 0;
	    } else
	      return state.length;
	  }
	
	  return n;
	}
	
	// you can override either this method, or the async _read(n) below.
	Readable.prototype.read = function(n) {
	  debug('read', n);
	  var state = this._readableState;
	  var nOrig = n;
	
	  if (!util.isNumber(n) || n > 0)
	    state.emittedReadable = false;
	
	  // if we're doing read(0) to trigger a readable event, but we
	  // already have a bunch of data in the buffer, then just trigger
	  // the 'readable' event and move on.
	  if (n === 0 &&
	      state.needReadable &&
	      (state.length >= state.highWaterMark || state.ended)) {
	    debug('read: emitReadable', state.length, state.ended);
	    if (state.length === 0 && state.ended)
	      endReadable(this);
	    else
	      emitReadable(this);
	    return null;
	  }
	
	  n = howMuchToRead(n, state);
	
	  // if we've ended, and we're now clear, then finish it up.
	  if (n === 0 && state.ended) {
	    if (state.length === 0)
	      endReadable(this);
	    return null;
	  }
	
	  // All the actual chunk generation logic needs to be
	  // *below* the call to _read.  The reason is that in certain
	  // synthetic stream cases, such as passthrough streams, _read
	  // may be a completely synchronous operation which may change
	  // the state of the read buffer, providing enough data when
	  // before there was *not* enough.
	  //
	  // So, the steps are:
	  // 1. Figure out what the state of things will be after we do
	  // a read from the buffer.
	  //
	  // 2. If that resulting state will trigger a _read, then call _read.
	  // Note that this may be asynchronous, or synchronous.  Yes, it is
	  // deeply ugly to write APIs this way, but that still doesn't mean
	  // that the Readable class should behave improperly, as streams are
	  // designed to be sync/async agnostic.
	  // Take note if the _read call is sync or async (ie, if the read call
	  // has returned yet), so that we know whether or not it's safe to emit
	  // 'readable' etc.
	  //
	  // 3. Actually pull the requested chunks out of the buffer and return.
	
	  // if we need a readable event, then we need to do some reading.
	  var doRead = state.needReadable;
	  debug('need readable', doRead);
	
	  // if we currently have less than the highWaterMark, then also read some
	  if (state.length === 0 || state.length - n < state.highWaterMark) {
	    doRead = true;
	    debug('length less than watermark', doRead);
	  }
	
	  // however, if we've ended, then there's no point, and if we're already
	  // reading, then it's unnecessary.
	  if (state.ended || state.reading) {
	    doRead = false;
	    debug('reading or ended', doRead);
	  }
	
	  if (doRead) {
	    debug('do read');
	    state.reading = true;
	    state.sync = true;
	    // if the length is currently zero, then we *need* a readable event.
	    if (state.length === 0)
	      state.needReadable = true;
	    // call internal read method
	    this._read(state.highWaterMark);
	    state.sync = false;
	  }
	
	  // If _read pushed data synchronously, then `reading` will be false,
	  // and we need to re-evaluate how much data we can return to the user.
	  if (doRead && !state.reading)
	    n = howMuchToRead(nOrig, state);
	
	  var ret;
	  if (n > 0)
	    ret = fromList(n, state);
	  else
	    ret = null;
	
	  if (util.isNull(ret)) {
	    state.needReadable = true;
	    n = 0;
	  }
	
	  state.length -= n;
	
	  // If we have nothing in the buffer, then we want to know
	  // as soon as we *do* get something into the buffer.
	  if (state.length === 0 && !state.ended)
	    state.needReadable = true;
	
	  // If we tried to read() past the EOF, then emit end on the next tick.
	  if (nOrig !== n && state.ended && state.length === 0)
	    endReadable(this);
	
	  if (!util.isNull(ret))
	    this.emit('data', ret);
	
	  return ret;
	};
	
	function chunkInvalid(state, chunk) {
	  var er = null;
	  if (!util.isBuffer(chunk) &&
	      !util.isString(chunk) &&
	      !util.isNullOrUndefined(chunk) &&
	      !state.objectMode) {
	    er = new TypeError('Invalid non-string/buffer chunk');
	  }
	  return er;
	}
	
	
	function onEofChunk(stream, state) {
	  if (state.decoder && !state.ended) {
	    var chunk = state.decoder.end();
	    if (chunk && chunk.length) {
	      state.buffer.push(chunk);
	      state.length += state.objectMode ? 1 : chunk.length;
	    }
	  }
	  state.ended = true;
	
	  // emit 'readable' now to make sure it gets picked up.
	  emitReadable(stream);
	}
	
	// Don't emit readable right away in sync mode, because this can trigger
	// another read() call => stack overflow.  This way, it might trigger
	// a nextTick recursion warning, but that's not so bad.
	function emitReadable(stream) {
	  var state = stream._readableState;
	  state.needReadable = false;
	  if (!state.emittedReadable) {
	    debug('emitReadable', state.flowing);
	    state.emittedReadable = true;
	    if (state.sync)
	      process.nextTick(function() {
	        emitReadable_(stream);
	      });
	    else
	      emitReadable_(stream);
	  }
	}
	
	function emitReadable_(stream) {
	  debug('emit readable');
	  stream.emit('readable');
	  flow(stream);
	}
	
	
	// at this point, the user has presumably seen the 'readable' event,
	// and called read() to consume some data.  that may have triggered
	// in turn another _read(n) call, in which case reading = true if
	// it's in progress.
	// However, if we're not ended, or reading, and the length < hwm,
	// then go ahead and try to read some more preemptively.
	function maybeReadMore(stream, state) {
	  if (!state.readingMore) {
	    state.readingMore = true;
	    process.nextTick(function() {
	      maybeReadMore_(stream, state);
	    });
	  }
	}
	
	function maybeReadMore_(stream, state) {
	  var len = state.length;
	  while (!state.reading && !state.flowing && !state.ended &&
	         state.length < state.highWaterMark) {
	    debug('maybeReadMore read 0');
	    stream.read(0);
	    if (len === state.length)
	      // didn't get any data, stop spinning.
	      break;
	    else
	      len = state.length;
	  }
	  state.readingMore = false;
	}
	
	// abstract method.  to be overridden in specific implementation classes.
	// call cb(er, data) where data is <= n in length.
	// for virtual (non-string, non-buffer) streams, "length" is somewhat
	// arbitrary, and perhaps not very meaningful.
	Readable.prototype._read = function(n) {
	  this.emit('error', new Error('not implemented'));
	};
	
	Readable.prototype.pipe = function(dest, pipeOpts) {
	  var src = this;
	  var state = this._readableState;
	
	  switch (state.pipesCount) {
	    case 0:
	      state.pipes = dest;
	      break;
	    case 1:
	      state.pipes = [state.pipes, dest];
	      break;
	    default:
	      state.pipes.push(dest);
	      break;
	  }
	  state.pipesCount += 1;
	  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
	
	  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&
	              dest !== process.stdout &&
	              dest !== process.stderr;
	
	  var endFn = doEnd ? onend : cleanup;
	  if (state.endEmitted)
	    process.nextTick(endFn);
	  else
	    src.once('end', endFn);
	
	  dest.on('unpipe', onunpipe);
	  function onunpipe(readable) {
	    debug('onunpipe');
	    if (readable === src) {
	      cleanup();
	    }
	  }
	
	  function onend() {
	    debug('onend');
	    dest.end();
	  }
	
	  // when the dest drains, it reduces the awaitDrain counter
	  // on the source.  This would be more elegant with a .once()
	  // handler in flow(), but adding and removing repeatedly is
	  // too slow.
	  var ondrain = pipeOnDrain(src);
	  dest.on('drain', ondrain);
	
	  function cleanup() {
	    debug('cleanup');
	    // cleanup event handlers once the pipe is broken
	    dest.removeListener('close', onclose);
	    dest.removeListener('finish', onfinish);
	    dest.removeListener('drain', ondrain);
	    dest.removeListener('error', onerror);
	    dest.removeListener('unpipe', onunpipe);
	    src.removeListener('end', onend);
	    src.removeListener('end', cleanup);
	    src.removeListener('data', ondata);
	
	    // if the reader is waiting for a drain event from this
	    // specific writer, then it would cause it to never start
	    // flowing again.
	    // So, if this is awaiting a drain, then we just call it now.
	    // If we don't know, then assume that we are waiting for one.
	    if (state.awaitDrain &&
	        (!dest._writableState || dest._writableState.needDrain))
	      ondrain();
	  }
	
	  src.on('data', ondata);
	  function ondata(chunk) {
	    debug('ondata');
	    var ret = dest.write(chunk);
	    if (false === ret) {
	      debug('false write response, pause',
	            src._readableState.awaitDrain);
	      src._readableState.awaitDrain++;
	      src.pause();
	    }
	  }
	
	  // if the dest has an error, then stop piping into it.
	  // however, don't suppress the throwing behavior for this.
	  function onerror(er) {
	    debug('onerror', er);
	    unpipe();
	    dest.removeListener('error', onerror);
	    if (EE.listenerCount(dest, 'error') === 0)
	      dest.emit('error', er);
	  }
	  // This is a brutally ugly hack to make sure that our error handler
	  // is attached before any userland ones.  NEVER DO THIS.
	  if (!dest._events || !dest._events.error)
	    dest.on('error', onerror);
	  else if (isArray(dest._events.error))
	    dest._events.error.unshift(onerror);
	  else
	    dest._events.error = [onerror, dest._events.error];
	
	
	
	  // Both close and finish should trigger unpipe, but only once.
	  function onclose() {
	    dest.removeListener('finish', onfinish);
	    unpipe();
	  }
	  dest.once('close', onclose);
	  function onfinish() {
	    debug('onfinish');
	    dest.removeListener('close', onclose);
	    unpipe();
	  }
	  dest.once('finish', onfinish);
	
	  function unpipe() {
	    debug('unpipe');
	    src.unpipe(dest);
	  }
	
	  // tell the dest that it's being piped to
	  dest.emit('pipe', src);
	
	  // start the flow if it hasn't been started already.
	  if (!state.flowing) {
	    debug('pipe resume');
	    src.resume();
	  }
	
	  return dest;
	};
	
	function pipeOnDrain(src) {
	  return function() {
	    var state = src._readableState;
	    debug('pipeOnDrain', state.awaitDrain);
	    if (state.awaitDrain)
	      state.awaitDrain--;
	    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {
	      state.flowing = true;
	      flow(src);
	    }
	  };
	}
	
	
	Readable.prototype.unpipe = function(dest) {
	  var state = this._readableState;
	
	  // if we're not piping anywhere, then do nothing.
	  if (state.pipesCount === 0)
	    return this;
	
	  // just one destination.  most common case.
	  if (state.pipesCount === 1) {
	    // passed in one, but it's not the right one.
	    if (dest && dest !== state.pipes)
	      return this;
	
	    if (!dest)
	      dest = state.pipes;
	
	    // got a match.
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;
	    if (dest)
	      dest.emit('unpipe', this);
	    return this;
	  }
	
	  // slow case. multiple pipe destinations.
	
	  if (!dest) {
	    // remove all.
	    var dests = state.pipes;
	    var len = state.pipesCount;
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;
	
	    for (var i = 0; i < len; i++)
	      dests[i].emit('unpipe', this);
	    return this;
	  }
	
	  // try to find the right one.
	  var i = indexOf(state.pipes, dest);
	  if (i === -1)
	    return this;
	
	  state.pipes.splice(i, 1);
	  state.pipesCount -= 1;
	  if (state.pipesCount === 1)
	    state.pipes = state.pipes[0];
	
	  dest.emit('unpipe', this);
	
	  return this;
	};
	
	// set up data events if they are asked for
	// Ensure readable listeners eventually get something
	Readable.prototype.on = function(ev, fn) {
	  var res = Stream.prototype.on.call(this, ev, fn);
	
	  // If listening to data, and it has not explicitly been paused,
	  // then call resume to start the flow of data on the next tick.
	  if (ev === 'data' && false !== this._readableState.flowing) {
	    this.resume();
	  }
	
	  if (ev === 'readable' && this.readable) {
	    var state = this._readableState;
	    if (!state.readableListening) {
	      state.readableListening = true;
	      state.emittedReadable = false;
	      state.needReadable = true;
	      if (!state.reading) {
	        var self = this;
	        process.nextTick(function() {
	          debug('readable nexttick read 0');
	          self.read(0);
	        });
	      } else if (state.length) {
	        emitReadable(this, state);
	      }
	    }
	  }
	
	  return res;
	};
	Readable.prototype.addListener = Readable.prototype.on;
	
	// pause() and resume() are remnants of the legacy readable stream API
	// If the user uses them, then switch into old mode.
	Readable.prototype.resume = function() {
	  var state = this._readableState;
	  if (!state.flowing) {
	    debug('resume');
	    state.flowing = true;
	    if (!state.reading) {
	      debug('resume read 0');
	      this.read(0);
	    }
	    resume(this, state);
	  }
	  return this;
	};
	
	function resume(stream, state) {
	  if (!state.resumeScheduled) {
	    state.resumeScheduled = true;
	    process.nextTick(function() {
	      resume_(stream, state);
	    });
	  }
	}
	
	function resume_(stream, state) {
	  state.resumeScheduled = false;
	  stream.emit('resume');
	  flow(stream);
	  if (state.flowing && !state.reading)
	    stream.read(0);
	}
	
	Readable.prototype.pause = function() {
	  debug('call pause flowing=%j', this._readableState.flowing);
	  if (false !== this._readableState.flowing) {
	    debug('pause');
	    this._readableState.flowing = false;
	    this.emit('pause');
	  }
	  return this;
	};
	
	function flow(stream) {
	  var state = stream._readableState;
	  debug('flow', state.flowing);
	  if (state.flowing) {
	    do {
	      var chunk = stream.read();
	    } while (null !== chunk && state.flowing);
	  }
	}
	
	// wrap an old-style stream as the async data source.
	// This is *not* part of the readable stream interface.
	// It is an ugly unfortunate mess of history.
	Readable.prototype.wrap = function(stream) {
	  var state = this._readableState;
	  var paused = false;
	
	  var self = this;
	  stream.on('end', function() {
	    debug('wrapped end');
	    if (state.decoder && !state.ended) {
	      var chunk = state.decoder.end();
	      if (chunk && chunk.length)
	        self.push(chunk);
	    }
	
	    self.push(null);
	  });
	
	  stream.on('data', function(chunk) {
	    debug('wrapped data');
	    if (state.decoder)
	      chunk = state.decoder.write(chunk);
	    if (!chunk || !state.objectMode && !chunk.length)
	      return;
	
	    var ret = self.push(chunk);
	    if (!ret) {
	      paused = true;
	      stream.pause();
	    }
	  });
	
	  // proxy all the other methods.
	  // important when wrapping filters and duplexes.
	  for (var i in stream) {
	    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {
	      this[i] = function(method) { return function() {
	        return stream[method].apply(stream, arguments);
	      }}(i);
	    }
	  }
	
	  // proxy certain important events.
	  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
	  forEach(events, function(ev) {
	    stream.on(ev, self.emit.bind(self, ev));
	  });
	
	  // when we try to consume some more bytes, simply unpause the
	  // underlying stream.
	  self._read = function(n) {
	    debug('wrapped _read', n);
	    if (paused) {
	      paused = false;
	      stream.resume();
	    }
	  };
	
	  return self;
	};
	
	
	
	// exposed for testing purposes only.
	Readable._fromList = fromList;
	
	// Pluck off n bytes from an array of buffers.
	// Length is the combined lengths of all the buffers in the list.
	function fromList(n, state) {
	  var list = state.buffer;
	  var length = state.length;
	  var stringMode = !!state.decoder;
	  var objectMode = !!state.objectMode;
	  var ret;
	
	  // nothing in the list, definitely empty.
	  if (list.length === 0)
	    return null;
	
	  if (length === 0)
	    ret = null;
	  else if (objectMode)
	    ret = list.shift();
	  else if (!n || n >= length) {
	    // read it all, truncate the array.
	    if (stringMode)
	      ret = list.join('');
	    else
	      ret = Buffer.concat(list, length);
	    list.length = 0;
	  } else {
	    // read just some of it.
	    if (n < list[0].length) {
	      // just take a part of the first list item.
	      // slice is the same for buffers and strings.
	      var buf = list[0];
	      ret = buf.slice(0, n);
	      list[0] = buf.slice(n);
	    } else if (n === list[0].length) {
	      // first list is a perfect match
	      ret = list.shift();
	    } else {
	      // complex case.
	      // we have enough to cover it, but it spans past the first buffer.
	      if (stringMode)
	        ret = '';
	      else
	        ret = new Buffer(n);
	
	      var c = 0;
	      for (var i = 0, l = list.length; i < l && c < n; i++) {
	        var buf = list[0];
	        var cpy = Math.min(n - c, buf.length);
	
	        if (stringMode)
	          ret += buf.slice(0, cpy);
	        else
	          buf.copy(ret, c, 0, cpy);
	
	        if (cpy < buf.length)
	          list[0] = buf.slice(cpy);
	        else
	          list.shift();
	
	        c += cpy;
	      }
	    }
	  }
	
	  return ret;
	}
	
	function endReadable(stream) {
	  var state = stream._readableState;
	
	  // If we get here before consuming all the bytes, then that is a
	  // bug in node.  Should never happen.
	  if (state.length > 0)
	    throw new Error('endReadable called on non-empty stream');
	
	  if (!state.endEmitted) {
	    state.ended = true;
	    process.nextTick(function() {
	      // Check that we didn't get one last unshift.
	      if (!state.endEmitted && state.length === 0) {
	        state.endEmitted = true;
	        stream.readable = false;
	        stream.emit('end');
	      }
	    });
	  }
	}
	
	function forEach (xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}
	
	function indexOf (xs, x) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    if (xs[i] === x) return i;
	  }
	  return -1;
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 341 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// a duplex stream is just a stream that is both readable and writable.
	// Since JS doesn't have multiple prototypal inheritance, this class
	// prototypally inherits from Readable, and then parasitically from
	// Writable.
	
	module.exports = Duplex;
	
	/*<replacement>*/
	var objectKeys = Object.keys || function (obj) {
	  var keys = [];
	  for (var key in obj) keys.push(key);
	  return keys;
	}
	/*</replacement>*/
	
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	var Readable = __webpack_require__(340);
	var Writable = __webpack_require__(343);
	
	util.inherits(Duplex, Readable);
	
	forEach(objectKeys(Writable.prototype), function(method) {
	  if (!Duplex.prototype[method])
	    Duplex.prototype[method] = Writable.prototype[method];
	});
	
	function Duplex(options) {
	  if (!(this instanceof Duplex))
	    return new Duplex(options);
	
	  Readable.call(this, options);
	  Writable.call(this, options);
	
	  if (options && options.readable === false)
	    this.readable = false;
	
	  if (options && options.writable === false)
	    this.writable = false;
	
	  this.allowHalfOpen = true;
	  if (options && options.allowHalfOpen === false)
	    this.allowHalfOpen = false;
	
	  this.once('end', onend);
	}
	
	// the no-half-open enforcer
	function onend() {
	  // if we allow half-open state, or if the writable side ended,
	  // then we're ok.
	  if (this.allowHalfOpen || this._writableState.ended)
	    return;
	
	  // no more data can be written.
	  // But allow more writes to happen in this tick.
	  process.nextTick(this.end.bind(this));
	}
	
	function forEach (xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// A bit simpler than readable streams.
	// Implement an async ._write(chunk, cb), and it'll handle all
	// the drain event emission and buffering.
	
	module.exports = Writable;
	
	/*<replacement>*/
	var Buffer = __webpack_require__(282).Buffer;
	/*</replacement>*/
	
	Writable.WritableState = WritableState;
	
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	var Stream = __webpack_require__(287);
	
	util.inherits(Writable, Stream);
	
	function WriteReq(chunk, encoding, cb) {
	  this.chunk = chunk;
	  this.encoding = encoding;
	  this.callback = cb;
	}
	
	function WritableState(options, stream) {
	  var Duplex = __webpack_require__(342);
	
	  options = options || {};
	
	  // the point at which write() starts returning false
	  // Note: 0 is a valid value, means that we always return false if
	  // the entire buffer is not flushed immediately on write()
	  var hwm = options.highWaterMark;
	  var defaultHwm = options.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;
	
	  // object stream flag to indicate whether or not this stream
	  // contains buffers or objects.
	  this.objectMode = !!options.objectMode;
	
	  if (stream instanceof Duplex)
	    this.objectMode = this.objectMode || !!options.writableObjectMode;
	
	  // cast to ints.
	  this.highWaterMark = ~~this.highWaterMark;
	
	  this.needDrain = false;
	  // at the start of calling end()
	  this.ending = false;
	  // when end() has been called, and returned
	  this.ended = false;
	  // when 'finish' is emitted
	  this.finished = false;
	
	  // should we decode strings into buffers before passing to _write?
	  // this is here so that some node-core streams can optimize string
	  // handling at a lower level.
	  var noDecode = options.decodeStrings === false;
	  this.decodeStrings = !noDecode;
	
	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';
	
	  // not an actual buffer we keep track of, but a measurement
	  // of how much we're waiting to get pushed to some underlying
	  // socket or file.
	  this.length = 0;
	
	  // a flag to see when we're in the middle of a write.
	  this.writing = false;
	
	  // when true all writes will be buffered until .uncork() call
	  this.corked = 0;
	
	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;
	
	  // a flag to know if we're processing previously buffered items, which
	  // may call the _write() callback in the same tick, so that we don't
	  // end up in an overlapped onwrite situation.
	  this.bufferProcessing = false;
	
	  // the callback that's passed to _write(chunk,cb)
	  this.onwrite = function(er) {
	    onwrite(stream, er);
	  };
	
	  // the callback that the user supplies to write(chunk,encoding,cb)
	  this.writecb = null;
	
	  // the amount that is being written when _write is called.
	  this.writelen = 0;
	
	  this.buffer = [];
	
	  // number of pending user-supplied write callbacks
	  // this must be 0 before 'finish' can be emitted
	  this.pendingcb = 0;
	
	  // emit prefinish if the only thing we're waiting for is _write cbs
	  // This is relevant for synchronous Transform streams
	  this.prefinished = false;
	
	  // True if the error was already emitted and should not be thrown again
	  this.errorEmitted = false;
	}
	
	function Writable(options) {
	  var Duplex = __webpack_require__(342);
	
	  // Writable ctor is applied to Duplexes, though they're not
	  // instanceof Writable, they're instanceof Readable.
	  if (!(this instanceof Writable) && !(this instanceof Duplex))
	    return new Writable(options);
	
	  this._writableState = new WritableState(options, this);
	
	  // legacy.
	  this.writable = true;
	
	  Stream.call(this);
	}
	
	// Otherwise people can pipe Writable streams, which is just wrong.
	Writable.prototype.pipe = function() {
	  this.emit('error', new Error('Cannot pipe. Not readable.'));
	};
	
	
	function writeAfterEnd(stream, state, cb) {
	  var er = new Error('write after end');
	  // TODO: defer error events consistently everywhere, not just the cb
	  stream.emit('error', er);
	  process.nextTick(function() {
	    cb(er);
	  });
	}
	
	// If we get something that is not a buffer, string, null, or undefined,
	// and we're not in objectMode, then that's an error.
	// Otherwise stream chunks are all considered to be of length=1, and the
	// watermarks determine how many objects to keep in the buffer, rather than
	// how many bytes or characters.
	function validChunk(stream, state, chunk, cb) {
	  var valid = true;
	  if (!util.isBuffer(chunk) &&
	      !util.isString(chunk) &&
	      !util.isNullOrUndefined(chunk) &&
	      !state.objectMode) {
	    var er = new TypeError('Invalid non-string/buffer chunk');
	    stream.emit('error', er);
	    process.nextTick(function() {
	      cb(er);
	    });
	    valid = false;
	  }
	  return valid;
	}
	
	Writable.prototype.write = function(chunk, encoding, cb) {
	  var state = this._writableState;
	  var ret = false;
	
	  if (util.isFunction(encoding)) {
	    cb = encoding;
	    encoding = null;
	  }
	
	  if (util.isBuffer(chunk))
	    encoding = 'buffer';
	  else if (!encoding)
	    encoding = state.defaultEncoding;
	
	  if (!util.isFunction(cb))
	    cb = function() {};
	
	  if (state.ended)
	    writeAfterEnd(this, state, cb);
	  else if (validChunk(this, state, chunk, cb)) {
	    state.pendingcb++;
	    ret = writeOrBuffer(this, state, chunk, encoding, cb);
	  }
	
	  return ret;
	};
	
	Writable.prototype.cork = function() {
	  var state = this._writableState;
	
	  state.corked++;
	};
	
	Writable.prototype.uncork = function() {
	  var state = this._writableState;
	
	  if (state.corked) {
	    state.corked--;
	
	    if (!state.writing &&
	        !state.corked &&
	        !state.finished &&
	        !state.bufferProcessing &&
	        state.buffer.length)
	      clearBuffer(this, state);
	  }
	};
	
	function decodeChunk(state, chunk, encoding) {
	  if (!state.objectMode &&
	      state.decodeStrings !== false &&
	      util.isString(chunk)) {
	    chunk = new Buffer(chunk, encoding);
	  }
	  return chunk;
	}
	
	// if we're already writing something, then just put this
	// in the queue, and wait our turn.  Otherwise, call _write
	// If we return false, then we need a drain event, so set that flag.
	function writeOrBuffer(stream, state, chunk, encoding, cb) {
	  chunk = decodeChunk(state, chunk, encoding);
	  if (util.isBuffer(chunk))
	    encoding = 'buffer';
	  var len = state.objectMode ? 1 : chunk.length;
	
	  state.length += len;
	
	  var ret = state.length < state.highWaterMark;
	  // we must ensure that previous needDrain will not be reset to false.
	  if (!ret)
	    state.needDrain = true;
	
	  if (state.writing || state.corked)
	    state.buffer.push(new WriteReq(chunk, encoding, cb));
	  else
	    doWrite(stream, state, false, len, chunk, encoding, cb);
	
	  return ret;
	}
	
	function doWrite(stream, state, writev, len, chunk, encoding, cb) {
	  state.writelen = len;
	  state.writecb = cb;
	  state.writing = true;
	  state.sync = true;
	  if (writev)
	    stream._writev(chunk, state.onwrite);
	  else
	    stream._write(chunk, encoding, state.onwrite);
	  state.sync = false;
	}
	
	function onwriteError(stream, state, sync, er, cb) {
	  if (sync)
	    process.nextTick(function() {
	      state.pendingcb--;
	      cb(er);
	    });
	  else {
	    state.pendingcb--;
	    cb(er);
	  }
	
	  stream._writableState.errorEmitted = true;
	  stream.emit('error', er);
	}
	
	function onwriteStateUpdate(state) {
	  state.writing = false;
	  state.writecb = null;
	  state.length -= state.writelen;
	  state.writelen = 0;
	}
	
	function onwrite(stream, er) {
	  var state = stream._writableState;
	  var sync = state.sync;
	  var cb = state.writecb;
	
	  onwriteStateUpdate(state);
	
	  if (er)
	    onwriteError(stream, state, sync, er, cb);
	  else {
	    // Check if we're actually ready to finish, but don't emit yet
	    var finished = needFinish(stream, state);
	
	    if (!finished &&
	        !state.corked &&
	        !state.bufferProcessing &&
	        state.buffer.length) {
	      clearBuffer(stream, state);
	    }
	
	    if (sync) {
	      process.nextTick(function() {
	        afterWrite(stream, state, finished, cb);
	      });
	    } else {
	      afterWrite(stream, state, finished, cb);
	    }
	  }
	}
	
	function afterWrite(stream, state, finished, cb) {
	  if (!finished)
	    onwriteDrain(stream, state);
	  state.pendingcb--;
	  cb();
	  finishMaybe(stream, state);
	}
	
	// Must force callback to be called on nextTick, so that we don't
	// emit 'drain' before the write() consumer gets the 'false' return
	// value, and has a chance to attach a 'drain' listener.
	function onwriteDrain(stream, state) {
	  if (state.length === 0 && state.needDrain) {
	    state.needDrain = false;
	    stream.emit('drain');
	  }
	}
	
	
	// if there's something in the buffer waiting, then process it
	function clearBuffer(stream, state) {
	  state.bufferProcessing = true;
	
	  if (stream._writev && state.buffer.length > 1) {
	    // Fast case, write everything using _writev()
	    var cbs = [];
	    for (var c = 0; c < state.buffer.length; c++)
	      cbs.push(state.buffer[c].callback);
	
	    // count the one we are adding, as well.
	    // TODO(isaacs) clean this up
	    state.pendingcb++;
	    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {
	      for (var i = 0; i < cbs.length; i++) {
	        state.pendingcb--;
	        cbs[i](err);
	      }
	    });
	
	    // Clear buffer
	    state.buffer = [];
	  } else {
	    // Slow case, write chunks one-by-one
	    for (var c = 0; c < state.buffer.length; c++) {
	      var entry = state.buffer[c];
	      var chunk = entry.chunk;
	      var encoding = entry.encoding;
	      var cb = entry.callback;
	      var len = state.objectMode ? 1 : chunk.length;
	
	      doWrite(stream, state, false, len, chunk, encoding, cb);
	
	      // if we didn't call the onwrite immediately, then
	      // it means that we need to wait until it does.
	      // also, that means that the chunk and cb are currently
	      // being processed, so move the buffer counter past them.
	      if (state.writing) {
	        c++;
	        break;
	      }
	    }
	
	    if (c < state.buffer.length)
	      state.buffer = state.buffer.slice(c);
	    else
	      state.buffer.length = 0;
	  }
	
	  state.bufferProcessing = false;
	}
	
	Writable.prototype._write = function(chunk, encoding, cb) {
	  cb(new Error('not implemented'));
	
	};
	
	Writable.prototype._writev = null;
	
	Writable.prototype.end = function(chunk, encoding, cb) {
	  var state = this._writableState;
	
	  if (util.isFunction(chunk)) {
	    cb = chunk;
	    chunk = null;
	    encoding = null;
	  } else if (util.isFunction(encoding)) {
	    cb = encoding;
	    encoding = null;
	  }
	
	  if (!util.isNullOrUndefined(chunk))
	    this.write(chunk, encoding);
	
	  // .end() fully uncorks
	  if (state.corked) {
	    state.corked = 1;
	    this.uncork();
	  }
	
	  // ignore unnecessary end() calls.
	  if (!state.ending && !state.finished)
	    endWritable(this, state, cb);
	};
	
	
	function needFinish(stream, state) {
	  return (state.ending &&
	          state.length === 0 &&
	          !state.finished &&
	          !state.writing);
	}
	
	function prefinish(stream, state) {
	  if (!state.prefinished) {
	    state.prefinished = true;
	    stream.emit('prefinish');
	  }
	}
	
	function finishMaybe(stream, state) {
	  var need = needFinish(stream, state);
	  if (need) {
	    if (state.pendingcb === 0) {
	      prefinish(stream, state);
	      state.finished = true;
	      stream.emit('finish');
	    } else
	      prefinish(stream, state);
	  }
	  return need;
	}
	
	function endWritable(stream, state, cb) {
	  state.ending = true;
	  finishMaybe(stream, state);
	  if (cb) {
	    if (state.finished)
	      process.nextTick(cb);
	    else
	      stream.once('finish', cb);
	  }
	  state.ended = true;
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	
	// a transform stream is a readable/writable stream where you do
	// something with the data.  Sometimes it's called a "filter",
	// but that's not a great name for it, since that implies a thing where
	// some bits pass through, and others are simply ignored.  (That would
	// be a valid example of a transform, of course.)
	//
	// While the output is causally related to the input, it's not a
	// necessarily symmetric or synchronous transformation.  For example,
	// a zlib stream might take multiple plain-text writes(), and then
	// emit a single compressed chunk some time in the future.
	//
	// Here's how this works:
	//
	// The Transform stream has all the aspects of the readable and writable
	// stream classes.  When you write(chunk), that calls _write(chunk,cb)
	// internally, and returns false if there's a lot of pending writes
	// buffered up.  When you call read(), that calls _read(n) until
	// there's enough pending readable data buffered up.
	//
	// In a transform stream, the written data is placed in a buffer.  When
	// _read(n) is called, it transforms the queued up data, calling the
	// buffered _write cb's as it consumes chunks.  If consuming a single
	// written chunk would result in multiple output chunks, then the first
	// outputted bit calls the readcb, and subsequent chunks just go into
	// the read buffer, and will cause it to emit 'readable' if necessary.
	//
	// This way, back-pressure is actually determined by the reading side,
	// since _read has to be called to start processing a new chunk.  However,
	// a pathological inflate type of transform can cause excessive buffering
	// here.  For example, imagine a stream where every byte of input is
	// interpreted as an integer from 0-255, and then results in that many
	// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
	// 1kb of data being output.  In this case, you could write a very small
	// amount of input, and end up with a very large amount of output.  In
	// such a pathological inflating mechanism, there'd be no way to tell
	// the system to stop doing the transform.  A single 4MB write could
	// cause the system to run out of memory.
	//
	// However, even in such a pathological case, only a single written chunk
	// would be consumed, and then the rest would wait (un-transformed) until
	// the results of the previous transformed chunk were consumed.
	
	module.exports = Transform;
	
	var Duplex = __webpack_require__(342);
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	util.inherits(Transform, Duplex);
	
	
	function TransformState(options, stream) {
	  this.afterTransform = function(er, data) {
	    return afterTransform(stream, er, data);
	  };
	
	  this.needTransform = false;
	  this.transforming = false;
	  this.writecb = null;
	  this.writechunk = null;
	}
	
	function afterTransform(stream, er, data) {
	  var ts = stream._transformState;
	  ts.transforming = false;
	
	  var cb = ts.writecb;
	
	  if (!cb)
	    return stream.emit('error', new Error('no writecb in Transform class'));
	
	  ts.writechunk = null;
	  ts.writecb = null;
	
	  if (!util.isNullOrUndefined(data))
	    stream.push(data);
	
	  if (cb)
	    cb(er);
	
	  var rs = stream._readableState;
	  rs.reading = false;
	  if (rs.needReadable || rs.length < rs.highWaterMark) {
	    stream._read(rs.highWaterMark);
	  }
	}
	
	
	function Transform(options) {
	  if (!(this instanceof Transform))
	    return new Transform(options);
	
	  Duplex.call(this, options);
	
	  this._transformState = new TransformState(options, this);
	
	  // when the writable side finishes, then flush out anything remaining.
	  var stream = this;
	
	  // start out asking for a readable event once data is transformed.
	  this._readableState.needReadable = true;
	
	  // we have implemented the _read method, and done the other things
	  // that Readable wants before the first _read call, so unset the
	  // sync guard flag.
	  this._readableState.sync = false;
	
	  this.once('prefinish', function() {
	    if (util.isFunction(this._flush))
	      this._flush(function(er) {
	        done(stream, er);
	      });
	    else
	      done(stream);
	  });
	}
	
	Transform.prototype.push = function(chunk, encoding) {
	  this._transformState.needTransform = false;
	  return Duplex.prototype.push.call(this, chunk, encoding);
	};
	
	// This is the part where you do stuff!
	// override this function in implementation classes.
	// 'chunk' is an input chunk.
	//
	// Call `push(newChunk)` to pass along transformed output
	// to the readable side.  You may call 'push' zero or more times.
	//
	// Call `cb(err)` when you are done with this chunk.  If you pass
	// an error, then that'll put the hurt on the whole operation.  If you
	// never call cb(), then you'll never get another chunk.
	Transform.prototype._transform = function(chunk, encoding, cb) {
	  throw new Error('not implemented');
	};
	
	Transform.prototype._write = function(chunk, encoding, cb) {
	  var ts = this._transformState;
	  ts.writecb = cb;
	  ts.writechunk = chunk;
	  ts.writeencoding = encoding;
	  if (!ts.transforming) {
	    var rs = this._readableState;
	    if (ts.needTransform ||
	        rs.needReadable ||
	        rs.length < rs.highWaterMark)
	      this._read(rs.highWaterMark);
	  }
	};
	
	// Doesn't matter what the args are here.
	// _transform does all the work.
	// That we got here means that the readable side wants more data.
	Transform.prototype._read = function(n) {
	  var ts = this._transformState;
	
	  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {
	    ts.transforming = true;
	    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
	  } else {
	    // mark that we need a transform, so that any data that comes in
	    // will get processed, now that we've asked for it.
	    ts.needTransform = true;
	  }
	};
	
	
	function done(stream, er) {
	  if (er)
	    return stream.emit('error', er);
	
	  // if there's nothing in the write buffer, then that means
	  // that nothing more will ever be provided
	  var ws = stream._writableState;
	  var ts = stream._transformState;
	
	  if (ws.length)
	    throw new Error('calling transform done when ws.length != 0');
	
	  if (ts.transforming)
	    throw new Error('calling transform done when still transforming');
	
	  return stream.push(null);
	}


/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	// a passthrough stream.
	// basically just the most minimal sort of Transform stream.
	// Every written chunk gets output as-is.
	
	module.exports = PassThrough;
	
	var Transform = __webpack_require__(344);
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	util.inherits(PassThrough, Transform);
	
	function PassThrough(options) {
	  if (!(this instanceof PassThrough))
	    return new PassThrough(options);
	
	  Transform.call(this, options);
	}
	
	PassThrough.prototype._transform = function(chunk, encoding, cb) {
	  cb(null, chunk);
	};


/***/ },
/* 346 */
/***/ function(module, exports) {

	/* NeuQuant Neural-Net Quantization Algorithm
	 * ------------------------------------------
	 *
	 * Copyright (c) 1994 Anthony Dekker
	 *
	 * NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.
	 * See "Kohonen neural networks for optimal colour quantization"
	 * in "Network: Computation in Neural Systems" Vol. 5 (1994) pp 351-367.
	 * for a discussion of the algorithm.
	 * See also  http://members.ozemail.com.au/~dekker/NEUQUANT.HTML
	 *
	 * Any party obtaining a copy of these files from the author, directly or
	 * indirectly, is granted, free of charge, a full and unrestricted irrevocable,
	 * world-wide, paid up, royalty-free, nonexclusive right and license to deal
	 * in this software and documentation files (the "Software"), including without
	 * limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
	 * and/or sell copies of the Software, and to permit persons who receive
	 * copies from any such party to do so, with the only requirement being
	 * that this copyright notice remain intact.
	 *
	 * (JavaScript port 2012 by Johan Nordberg)
	 */
	
	var ncycles = 100; // number of learning cycles
	var netsize = 256; // number of colors used
	var maxnetpos = netsize - 1;
	
	// defs for freq and bias
	var netbiasshift = 4; // bias for colour values
	var intbiasshift = 16; // bias for fractions
	var intbias = (1 << intbiasshift);
	var gammashift = 10;
	var gamma = (1 << gammashift);
	var betashift = 10;
	var beta = (intbias >> betashift); /* beta = 1/1024 */
	var betagamma = (intbias << (gammashift - betashift));
	
	// defs for decreasing radius factor
	var initrad = (netsize >> 3); // for 256 cols, radius starts
	var radiusbiasshift = 6; // at 32.0 biased by 6 bits
	var radiusbias = (1 << radiusbiasshift);
	var initradius = (initrad * radiusbias); //and decreases by a
	var radiusdec = 30; // factor of 1/30 each cycle
	
	// defs for decreasing alpha factor
	var alphabiasshift = 10; // alpha starts at 1.0
	var initalpha = (1 << alphabiasshift);
	var alphadec; // biased by 10 bits
	
	/* radbias and alpharadbias used for radpower calculation */
	var radbiasshift = 8;
	var radbias = (1 << radbiasshift);
	var alpharadbshift = (alphabiasshift + radbiasshift);
	var alpharadbias = (1 << alpharadbshift);
	
	// four primes near 500 - assume no image has a length so large that it is
	// divisible by all four primes
	var prime1 = 499;
	var prime2 = 491;
	var prime3 = 487;
	var prime4 = 503;
	var minpicturebytes = (3 * prime4);
	
	/*
	  Constructor: NeuQuant
	
	  Arguments:
	
	  pixels - array of pixels in RGB format
	  samplefac - sampling factor 1 to 30 where lower is better quality
	
	  >
	  > pixels = [r, g, b, r, g, b, r, g, b, ..]
	  >
	*/
	function NeuQuant(pixels, samplefac) {
	  var network; // int[netsize][4]
	  var netindex; // for network lookup - really 256
	
	  // bias and freq arrays for learning
	  var bias;
	  var freq;
	  var radpower;
	
	  /*
	    Private Method: init
	
	    sets up arrays
	  */
	  function init() {
	    network = [];
	    netindex = new Int32Array(256);
	    bias = new Int32Array(netsize);
	    freq = new Int32Array(netsize);
	    radpower = new Int32Array(netsize >> 3);
	
	    var i, v;
	    for (i = 0; i < netsize; i++) {
	      v = (i << (netbiasshift + 8)) / netsize;
	      network[i] = new Float64Array([v, v, v, 0]);
	      //network[i] = [v, v, v, 0]
	      freq[i] = intbias / netsize;
	      bias[i] = 0;
	    }
	  }
	
	  /*
	    Private Method: unbiasnet
	
	    unbiases network to give byte values 0..255 and record position i to prepare for sort
	  */
	  function unbiasnet() {
	    for (var i = 0; i < netsize; i++) {
	      network[i][0] >>= netbiasshift;
	      network[i][1] >>= netbiasshift;
	      network[i][2] >>= netbiasshift;
	      network[i][3] = i; // record color number
	    }
	  }
	
	  /*
	    Private Method: altersingle
	
	    moves neuron *i* towards biased (b,g,r) by factor *alpha*
	  */
	  function altersingle(alpha, i, b, g, r) {
	    network[i][0] -= (alpha * (network[i][0] - b)) / initalpha;
	    network[i][1] -= (alpha * (network[i][1] - g)) / initalpha;
	    network[i][2] -= (alpha * (network[i][2] - r)) / initalpha;
	  }
	
	  /*
	    Private Method: alterneigh
	
	    moves neurons in *radius* around index *i* towards biased (b,g,r) by factor *alpha*
	  */
	  function alterneigh(radius, i, b, g, r) {
	    var lo = Math.abs(i - radius);
	    var hi = Math.min(i + radius, netsize);
	
	    var j = i + 1;
	    var k = i - 1;
	    var m = 1;
	
	    var p, a;
	    while ((j < hi) || (k > lo)) {
	      a = radpower[m++];
	
	      if (j < hi) {
	        p = network[j++];
	        p[0] -= (a * (p[0] - b)) / alpharadbias;
	        p[1] -= (a * (p[1] - g)) / alpharadbias;
	        p[2] -= (a * (p[2] - r)) / alpharadbias;
	      }
	
	      if (k > lo) {
	        p = network[k--];
	        p[0] -= (a * (p[0] - b)) / alpharadbias;
	        p[1] -= (a * (p[1] - g)) / alpharadbias;
	        p[2] -= (a * (p[2] - r)) / alpharadbias;
	      }
	    }
	  }
	
	  /*
	    Private Method: contest
	
	    searches for biased BGR values
	  */
	  function contest(b, g, r) {
	    /*
	      finds closest neuron (min dist) and updates freq
	      finds best neuron (min dist-bias) and returns position
	      for frequently chosen neurons, freq[i] is high and bias[i] is negative
	      bias[i] = gamma * ((1 / netsize) - freq[i])
	    */
	
	    var bestd = ~(1 << 31);
	    var bestbiasd = bestd;
	    var bestpos = -1;
	    var bestbiaspos = bestpos;
	
	    var i, n, dist, biasdist, betafreq;
	    for (i = 0; i < netsize; i++) {
	      n = network[i];
	
	      dist = Math.abs(n[0] - b) + Math.abs(n[1] - g) + Math.abs(n[2] - r);
	      if (dist < bestd) {
	        bestd = dist;
	        bestpos = i;
	      }
	
	      biasdist = dist - ((bias[i]) >> (intbiasshift - netbiasshift));
	      if (biasdist < bestbiasd) {
	        bestbiasd = biasdist;
	        bestbiaspos = i;
	      }
	
	      betafreq = (freq[i] >> betashift);
	      freq[i] -= betafreq;
	      bias[i] += (betafreq << gammashift);
	    }
	
	    freq[bestpos] += beta;
	    bias[bestpos] -= betagamma;
	
	    return bestbiaspos;
	  }
	
	  /*
	    Private Method: inxbuild
	
	    sorts network and builds netindex[0..255]
	  */
	  function inxbuild() {
	    var i, j, p, q, smallpos, smallval, previouscol = 0, startpos = 0;
	    for (i = 0; i < netsize; i++) {
	      p = network[i];
	      smallpos = i;
	      smallval = p[1]; // index on g
	      // find smallest in i..netsize-1
	      for (j = i + 1; j < netsize; j++) {
	        q = network[j];
	        if (q[1] < smallval) { // index on g
	          smallpos = j;
	          smallval = q[1]; // index on g
	        }
	      }
	      q = network[smallpos];
	      // swap p (i) and q (smallpos) entries
	      if (i != smallpos) {
	        j = q[0];   q[0] = p[0];   p[0] = j;
	        j = q[1];   q[1] = p[1];   p[1] = j;
	        j = q[2];   q[2] = p[2];   p[2] = j;
	        j = q[3];   q[3] = p[3];   p[3] = j;
	      }
	      // smallval entry is now in position i
	
	      if (smallval != previouscol) {
	        netindex[previouscol] = (startpos + i) >> 1;
	        for (j = previouscol + 1; j < smallval; j++)
	          netindex[j] = i;
	        previouscol = smallval;
	        startpos = i;
	      }
	    }
	    netindex[previouscol] = (startpos + maxnetpos) >> 1;
	    for (j = previouscol + 1; j < 256; j++)
	      netindex[j] = maxnetpos; // really 256
	  }
	
	  /*
	    Private Method: inxsearch
	
	    searches for BGR values 0..255 and returns a color index
	  */
	  function inxsearch(b, g, r) {
	    var a, p, dist;
	
	    var bestd = 1000; // biggest possible dist is 256*3
	    var best = -1;
	
	    var i = netindex[g]; // index on g
	    var j = i - 1; // start at netindex[g] and work outwards
	
	    while ((i < netsize) || (j >= 0)) {
	      if (i < netsize) {
	        p = network[i];
	        dist = p[1] - g; // inx key
	        if (dist >= bestd) i = netsize; // stop iter
	        else {
	          i++;
	          if (dist < 0) dist = -dist;
	          a = p[0] - b; if (a < 0) a = -a;
	          dist += a;
	          if (dist < bestd) {
	            a = p[2] - r; if (a < 0) a = -a;
	            dist += a;
	            if (dist < bestd) {
	              bestd = dist;
	              best = p[3];
	            }
	          }
	        }
	      }
	      if (j >= 0) {
	        p = network[j];
	        dist = g - p[1]; // inx key - reverse dif
	        if (dist >= bestd) j = -1; // stop iter
	        else {
	          j--;
	          if (dist < 0) dist = -dist;
	          a = p[0] - b; if (a < 0) a = -a;
	          dist += a;
	          if (dist < bestd) {
	            a = p[2] - r; if (a < 0) a = -a;
	            dist += a;
	            if (dist < bestd) {
	              bestd = dist;
	              best = p[3];
	            }
	          }
	        }
	      }
	    }
	
	    return best;
	  }
	
	  /*
	    Private Method: learn
	
	    "Main Learning Loop"
	  */
	  function learn() {
	    var i;
	
	    var lengthcount = pixels.length;
	    var alphadec = 30 + ((samplefac - 1) / 3);
	    var samplepixels = lengthcount / (3 * samplefac);
	    var delta = ~~(samplepixels / ncycles);
	    var alpha = initalpha;
	    var radius = initradius;
	
	    var rad = radius >> radiusbiasshift;
	
	    if (rad <= 1) rad = 0;
	    for (i = 0; i < rad; i++)
	      radpower[i] = alpha * (((rad * rad - i * i) * radbias) / (rad * rad));
	
	    var step;
	    if (lengthcount < minpicturebytes) {
	      samplefac = 1;
	      step = 3;
	    } else if ((lengthcount % prime1) !== 0) {
	      step = 3 * prime1;
	    } else if ((lengthcount % prime2) !== 0) {
	      step = 3 * prime2;
	    } else if ((lengthcount % prime3) !== 0)  {
	      step = 3 * prime3;
	    } else {
	      step = 3 * prime4;
	    }
	
	    var b, g, r, j;
	    var pix = 0; // current pixel
	
	    i = 0;
	    while (i < samplepixels) {
	      b = (pixels[pix] & 0xff) << netbiasshift;
	      g = (pixels[pix + 1] & 0xff) << netbiasshift;
	      r = (pixels[pix + 2] & 0xff) << netbiasshift;
	
	      j = contest(b, g, r);
	
	      altersingle(alpha, j, b, g, r);
	      if (rad !== 0) alterneigh(rad, j, b, g, r); // alter neighbours
	
	      pix += step;
	      if (pix >= lengthcount) pix -= lengthcount;
	
	      i++;
	
	      if (delta === 0) delta = 1;
	      if (i % delta === 0) {
	        alpha -= alpha / alphadec;
	        radius -= radius / radiusdec;
	        rad = radius >> radiusbiasshift;
	
	        if (rad <= 1) rad = 0;
	        for (j = 0; j < rad; j++)
	          radpower[j] = alpha * (((rad * rad - j * j) * radbias) / (rad * rad));
	      }
	    }
	  }
	
	  /*
	    Method: buildColormap
	
	    1. initializes network
	    2. trains it
	    3. removes misconceptions
	    4. builds colorindex
	  */
	  function buildColormap() {
	    init();
	    learn();
	    unbiasnet();
	    inxbuild();
	  }
	  this.buildColormap = buildColormap;
	
	  /*
	    Method: getColormap
	
	    builds colormap from the index
	
	    returns array in the format:
	
	    >
	    > [r, g, b, r, g, b, r, g, b, ..]
	    >
	  */
	  function getColormap() {
	    var map = [];
	    var index = [];
	
	    for (var i = 0; i < netsize; i++)
	      index[network[i][3]] = i;
	
	    var k = 0;
	    for (var l = 0; l < netsize; l++) {
	      var j = index[l];
	      map[k++] = (network[j][0]);
	      map[k++] = (network[j][1]);
	      map[k++] = (network[j][2]);
	    }
	    return map;
	  }
	  this.getColormap = getColormap;
	
	  /*
	    Method: lookupRGB
	
	    looks for the closest *r*, *g*, *b* color in the map and
	    returns its index
	  */
	  this.lookupRGB = inxsearch;
	}
	
	module.exports = NeuQuant;


/***/ },
/* 347 */
/***/ function(module, exports) {

	/*
	  LZWEncoder.js
	
	  Authors
	  Kevin Weiner (original Java version - kweiner@fmsware.com)
	  Thibault Imbert (AS3 version - bytearray.org)
	  Johan Nordberg (JS version - code@johan-nordberg.com)
	
	  Acknowledgements
	  GIFCOMPR.C - GIF Image compression routines
	  Lempel-Ziv compression based on 'compress'. GIF modifications by
	  David Rowley (mgardi@watdcsu.waterloo.edu)
	  GIF Image compression - modified 'compress'
	  Based on: compress.c - File compression ala IEEE Computer, June 1984.
	  By Authors: Spencer W. Thomas (decvax!harpo!utah-cs!utah-gr!thomas)
	  Jim McKie (decvax!mcvax!jim)
	  Steve Davies (decvax!vax135!petsd!peora!srd)
	  Ken Turkowski (decvax!decwrl!turtlevax!ken)
	  James A. Woods (decvax!ihnp4!ames!jaw)
	  Joe Orost (decvax!vax135!petsd!joe)
	*/
	
	var EOF = -1;
	var BITS = 12;
	var HSIZE = 5003; // 80% occupancy
	var masks = [0x0000, 0x0001, 0x0003, 0x0007, 0x000F, 0x001F,
	             0x003F, 0x007F, 0x00FF, 0x01FF, 0x03FF, 0x07FF,
	             0x0FFF, 0x1FFF, 0x3FFF, 0x7FFF, 0xFFFF];
	
	function LZWEncoder(width, height, pixels, colorDepth) {
	  var initCodeSize = Math.max(2, colorDepth);
	
	  var accum = new Uint8Array(256);
	  var htab = new Int32Array(HSIZE);
	  var codetab = new Int32Array(HSIZE);
	
	  var cur_accum, cur_bits = 0;
	  var a_count;
	  var free_ent = 0; // first unused entry
	  var maxcode;
	  var remaining;
	  var curPixel;
	  var n_bits;
	
	  // block compression parameters -- after all codes are used up,
	  // and compression rate changes, start over.
	  var clear_flg = false;
	
	  // Algorithm: use open addressing double hashing (no chaining) on the
	  // prefix code / next character combination. We do a variant of Knuth's
	  // algorithm D (vol. 3, sec. 6.4) along with G. Knott's relatively-prime
	  // secondary probe. Here, the modular division first probe is gives way
	  // to a faster exclusive-or manipulation. Also do block compression with
	  // an adaptive reset, whereby the code table is cleared when the compression
	  // ratio decreases, but after the table fills. The variable-length output
	  // codes are re-sized at this point, and a special CLEAR code is generated
	  // for the decompressor. Late addition: construct the table according to
	  // file size for noticeable speed improvement on small files. Please direct
	  // questions about this implementation to ames!jaw.
	  var g_init_bits, ClearCode, EOFCode;
	
	  // Add a character to the end of the current packet, and if it is 254
	  // characters, flush the packet to disk.
	  function char_out(c, outs) {
	    accum[a_count++] = c;
	    if (a_count >= 254) flush_char(outs);
	  }
	
	  // Clear out the hash table
	  // table clear for block compress
	  function cl_block(outs) {
	    cl_hash(HSIZE);
	    free_ent = ClearCode + 2;
	    clear_flg = true;
	    output(ClearCode, outs);
	  }
	
	  // Reset code table
	  function cl_hash(hsize) {
	    for (var i = 0; i < hsize; ++i) htab[i] = -1;
	  }
	
	  function compress(init_bits, outs) {
	    var fcode, c, i, ent, disp, hsize_reg, hshift;
	
	    // Set up the globals: g_init_bits - initial number of bits
	    g_init_bits = init_bits;
	
	    // Set up the necessary values
	    clear_flg = false;
	    n_bits = g_init_bits;
	    maxcode = MAXCODE(n_bits);
	
	    ClearCode = 1 << (init_bits - 1);
	    EOFCode = ClearCode + 1;
	    free_ent = ClearCode + 2;
	
	    a_count = 0; // clear packet
	
	    ent = nextPixel();
	
	    hshift = 0;
	    for (fcode = HSIZE; fcode < 65536; fcode *= 2) ++hshift;
	    hshift = 8 - hshift; // set hash code range bound
	    hsize_reg = HSIZE;
	    cl_hash(hsize_reg); // clear hash table
	
	    output(ClearCode, outs);
	
	    outer_loop: while ((c = nextPixel()) != EOF) {
	      fcode = (c << BITS) + ent;
	      i = (c << hshift) ^ ent; // xor hashing
	      if (htab[i] === fcode) {
	        ent = codetab[i];
	        continue;
	      } else if (htab[i] >= 0) { // non-empty slot
	        disp = hsize_reg - i; // secondary hash (after G. Knott)
	        if (i === 0) disp = 1;
	        do {
	          if ((i -= disp) < 0) i += hsize_reg;
	          if (htab[i] === fcode) {
	            ent = codetab[i];
	            continue outer_loop;
	          }
	        } while (htab[i] >= 0);
	      }
	      output(ent, outs);
	      ent = c;
	      if (free_ent < 1 << BITS) {
	        codetab[i] = free_ent++; // code -> hashtable
	        htab[i] = fcode;
	      } else {
	        cl_block(outs);
	      }
	    }
	
	    // Put out the final code.
	    output(ent, outs);
	    output(EOFCode, outs);
	  }
	
	  function encode(outs) {
	    outs.writeByte(initCodeSize); // write "initial code size" byte
	    remaining = width * height; // reset navigation variables
	    curPixel = 0;
	    compress(initCodeSize + 1, outs); // compress and write the pixel data
	    outs.writeByte(0); // write block terminator
	  }
	
	  // Flush the packet to disk, and reset the accumulator
	  function flush_char(outs) {
	    if (a_count > 0) {
	      outs.writeByte(a_count);
	      outs.writeBytes(accum, 0, a_count);
	      a_count = 0;
	    }
	  }
	
	  function MAXCODE(n_bits) {
	    return (1 << n_bits) - 1;
	  }
	
	  // Return the next pixel from the image
	  function nextPixel() {
	    if (remaining === 0) return EOF;
	    --remaining;
	    var pix = pixels[curPixel++];
	    return pix & 0xff;
	  }
	
	  function output(code, outs) {
	    cur_accum &= masks[cur_bits];
	
	    if (cur_bits > 0) cur_accum |= (code << cur_bits);
	    else cur_accum = code;
	
	    cur_bits += n_bits;
	
	    while (cur_bits >= 8) {
	      char_out((cur_accum & 0xff), outs);
	      cur_accum >>= 8;
	      cur_bits -= 8;
	    }
	
	    // If the next entry is going to be too big for the code size,
	    // then increase it, if possible.
	    if (free_ent > maxcode || clear_flg) {
	      if (clear_flg) {
	        maxcode = MAXCODE(n_bits = g_init_bits);
	        clear_flg = false;
	      } else {
	        ++n_bits;
	        if (n_bits == BITS) maxcode = 1 << BITS;
	        else maxcode = MAXCODE(n_bits);
	      }
	    }
	
	    if (code == EOFCode) {
	      // At EOF, write the rest of the buffer.
	      while (cur_bits > 0) {
	        char_out((cur_accum & 0xff), outs);
	        cur_accum >>= 8;
	        cur_bits -= 8;
	      }
	      flush_char(outs);
	    }
	  }
	
	  this.encode = encode;
	}
	
	module.exports = LZWEncoder;


/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	var encode = __webpack_require__(349),
	    decode = __webpack_require__(350);
	
	module.exports = {
	  encode: encode,
	  decode: decode
	};


/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {/*
	  Copyright (c) 2008, Adobe Systems Incorporated
	  All rights reserved.
	
	  Redistribution and use in source and binary forms, with or without 
	  modification, are permitted provided that the following conditions are
	  met:
	
	  * Redistributions of source code must retain the above copyright notice, 
	    this list of conditions and the following disclaimer.
	  
	  * Redistributions in binary form must reproduce the above copyright
	    notice, this list of conditions and the following disclaimer in the 
	    documentation and/or other materials provided with the distribution.
	  
	  * Neither the name of Adobe Systems Incorporated nor the names of its 
	    contributors may be used to endorse or promote products derived from 
	    this software without specific prior written permission.
	
	  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
	  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
	  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
	  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
	  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
	  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
	  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
	  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
	  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
	  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
	  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	/*
	JPEG encoder ported to JavaScript and optimized by Andreas Ritter, www.bytestrom.eu, 11/2009
	
	Basic GUI blocking jpeg encoder
	*/
	
	var btoa = btoa || function(buf) {
	  return new Buffer(buf).toString('base64');
	};
	
	function JPEGEncoder(quality) {
	  var self = this;
		var fround = Math.round;
		var ffloor = Math.floor;
		var YTable = new Array(64);
		var UVTable = new Array(64);
		var fdtbl_Y = new Array(64);
		var fdtbl_UV = new Array(64);
		var YDC_HT;
		var UVDC_HT;
		var YAC_HT;
		var UVAC_HT;
		
		var bitcode = new Array(65535);
		var category = new Array(65535);
		var outputfDCTQuant = new Array(64);
		var DU = new Array(64);
		var byteout = [];
		var bytenew = 0;
		var bytepos = 7;
		
		var YDU = new Array(64);
		var UDU = new Array(64);
		var VDU = new Array(64);
		var clt = new Array(256);
		var RGB_YUV_TABLE = new Array(2048);
		var currentQuality;
		
		var ZigZag = [
				 0, 1, 5, 6,14,15,27,28,
				 2, 4, 7,13,16,26,29,42,
				 3, 8,12,17,25,30,41,43,
				 9,11,18,24,31,40,44,53,
				10,19,23,32,39,45,52,54,
				20,22,33,38,46,51,55,60,
				21,34,37,47,50,56,59,61,
				35,36,48,49,57,58,62,63
			];
		
		var std_dc_luminance_nrcodes = [0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0];
		var std_dc_luminance_values = [0,1,2,3,4,5,6,7,8,9,10,11];
		var std_ac_luminance_nrcodes = [0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,0x7d];
		var std_ac_luminance_values = [
				0x01,0x02,0x03,0x00,0x04,0x11,0x05,0x12,
				0x21,0x31,0x41,0x06,0x13,0x51,0x61,0x07,
				0x22,0x71,0x14,0x32,0x81,0x91,0xa1,0x08,
				0x23,0x42,0xb1,0xc1,0x15,0x52,0xd1,0xf0,
				0x24,0x33,0x62,0x72,0x82,0x09,0x0a,0x16,
				0x17,0x18,0x19,0x1a,0x25,0x26,0x27,0x28,
				0x29,0x2a,0x34,0x35,0x36,0x37,0x38,0x39,
				0x3a,0x43,0x44,0x45,0x46,0x47,0x48,0x49,
				0x4a,0x53,0x54,0x55,0x56,0x57,0x58,0x59,
				0x5a,0x63,0x64,0x65,0x66,0x67,0x68,0x69,
				0x6a,0x73,0x74,0x75,0x76,0x77,0x78,0x79,
				0x7a,0x83,0x84,0x85,0x86,0x87,0x88,0x89,
				0x8a,0x92,0x93,0x94,0x95,0x96,0x97,0x98,
				0x99,0x9a,0xa2,0xa3,0xa4,0xa5,0xa6,0xa7,
				0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,0xb5,0xb6,
				0xb7,0xb8,0xb9,0xba,0xc2,0xc3,0xc4,0xc5,
				0xc6,0xc7,0xc8,0xc9,0xca,0xd2,0xd3,0xd4,
				0xd5,0xd6,0xd7,0xd8,0xd9,0xda,0xe1,0xe2,
				0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,0xea,
				0xf1,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,
				0xf9,0xfa
			];
		
		var std_dc_chrominance_nrcodes = [0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0];
		var std_dc_chrominance_values = [0,1,2,3,4,5,6,7,8,9,10,11];
		var std_ac_chrominance_nrcodes = [0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,0x77];
		var std_ac_chrominance_values = [
				0x00,0x01,0x02,0x03,0x11,0x04,0x05,0x21,
				0x31,0x06,0x12,0x41,0x51,0x07,0x61,0x71,
				0x13,0x22,0x32,0x81,0x08,0x14,0x42,0x91,
				0xa1,0xb1,0xc1,0x09,0x23,0x33,0x52,0xf0,
				0x15,0x62,0x72,0xd1,0x0a,0x16,0x24,0x34,
				0xe1,0x25,0xf1,0x17,0x18,0x19,0x1a,0x26,
				0x27,0x28,0x29,0x2a,0x35,0x36,0x37,0x38,
				0x39,0x3a,0x43,0x44,0x45,0x46,0x47,0x48,
				0x49,0x4a,0x53,0x54,0x55,0x56,0x57,0x58,
				0x59,0x5a,0x63,0x64,0x65,0x66,0x67,0x68,
				0x69,0x6a,0x73,0x74,0x75,0x76,0x77,0x78,
				0x79,0x7a,0x82,0x83,0x84,0x85,0x86,0x87,
				0x88,0x89,0x8a,0x92,0x93,0x94,0x95,0x96,
				0x97,0x98,0x99,0x9a,0xa2,0xa3,0xa4,0xa5,
				0xa6,0xa7,0xa8,0xa9,0xaa,0xb2,0xb3,0xb4,
				0xb5,0xb6,0xb7,0xb8,0xb9,0xba,0xc2,0xc3,
				0xc4,0xc5,0xc6,0xc7,0xc8,0xc9,0xca,0xd2,
				0xd3,0xd4,0xd5,0xd6,0xd7,0xd8,0xd9,0xda,
				0xe2,0xe3,0xe4,0xe5,0xe6,0xe7,0xe8,0xe9,
				0xea,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,
				0xf9,0xfa
			];
		
		function initQuantTables(sf){
				var YQT = [
					16, 11, 10, 16, 24, 40, 51, 61,
					12, 12, 14, 19, 26, 58, 60, 55,
					14, 13, 16, 24, 40, 57, 69, 56,
					14, 17, 22, 29, 51, 87, 80, 62,
					18, 22, 37, 56, 68,109,103, 77,
					24, 35, 55, 64, 81,104,113, 92,
					49, 64, 78, 87,103,121,120,101,
					72, 92, 95, 98,112,100,103, 99
				];
				
				for (var i = 0; i < 64; i++) {
					var t = ffloor((YQT[i]*sf+50)/100);
					if (t < 1) {
						t = 1;
					} else if (t > 255) {
						t = 255;
					}
					YTable[ZigZag[i]] = t;
				}
				var UVQT = [
					17, 18, 24, 47, 99, 99, 99, 99,
					18, 21, 26, 66, 99, 99, 99, 99,
					24, 26, 56, 99, 99, 99, 99, 99,
					47, 66, 99, 99, 99, 99, 99, 99,
					99, 99, 99, 99, 99, 99, 99, 99,
					99, 99, 99, 99, 99, 99, 99, 99,
					99, 99, 99, 99, 99, 99, 99, 99,
					99, 99, 99, 99, 99, 99, 99, 99
				];
				for (var j = 0; j < 64; j++) {
					var u = ffloor((UVQT[j]*sf+50)/100);
					if (u < 1) {
						u = 1;
					} else if (u > 255) {
						u = 255;
					}
					UVTable[ZigZag[j]] = u;
				}
				var aasf = [
					1.0, 1.387039845, 1.306562965, 1.175875602,
					1.0, 0.785694958, 0.541196100, 0.275899379
				];
				var k = 0;
				for (var row = 0; row < 8; row++)
				{
					for (var col = 0; col < 8; col++)
					{
						fdtbl_Y[k]  = (1.0 / (YTable [ZigZag[k]] * aasf[row] * aasf[col] * 8.0));
						fdtbl_UV[k] = (1.0 / (UVTable[ZigZag[k]] * aasf[row] * aasf[col] * 8.0));
						k++;
					}
				}
			}
			
			function computeHuffmanTbl(nrcodes, std_table){
				var codevalue = 0;
				var pos_in_table = 0;
				var HT = new Array();
				for (var k = 1; k <= 16; k++) {
					for (var j = 1; j <= nrcodes[k]; j++) {
						HT[std_table[pos_in_table]] = [];
						HT[std_table[pos_in_table]][0] = codevalue;
						HT[std_table[pos_in_table]][1] = k;
						pos_in_table++;
						codevalue++;
					}
					codevalue*=2;
				}
				return HT;
			}
			
			function initHuffmanTbl()
			{
				YDC_HT = computeHuffmanTbl(std_dc_luminance_nrcodes,std_dc_luminance_values);
				UVDC_HT = computeHuffmanTbl(std_dc_chrominance_nrcodes,std_dc_chrominance_values);
				YAC_HT = computeHuffmanTbl(std_ac_luminance_nrcodes,std_ac_luminance_values);
				UVAC_HT = computeHuffmanTbl(std_ac_chrominance_nrcodes,std_ac_chrominance_values);
			}
		
			function initCategoryNumber()
			{
				var nrlower = 1;
				var nrupper = 2;
				for (var cat = 1; cat <= 15; cat++) {
					//Positive numbers
					for (var nr = nrlower; nr<nrupper; nr++) {
						category[32767+nr] = cat;
						bitcode[32767+nr] = [];
						bitcode[32767+nr][1] = cat;
						bitcode[32767+nr][0] = nr;
					}
					//Negative numbers
					for (var nrneg =-(nrupper-1); nrneg<=-nrlower; nrneg++) {
						category[32767+nrneg] = cat;
						bitcode[32767+nrneg] = [];
						bitcode[32767+nrneg][1] = cat;
						bitcode[32767+nrneg][0] = nrupper-1+nrneg;
					}
					nrlower <<= 1;
					nrupper <<= 1;
				}
			}
			
			function initRGBYUVTable() {
				for(var i = 0; i < 256;i++) {
					RGB_YUV_TABLE[i]      		=  19595 * i;
					RGB_YUV_TABLE[(i+ 256)>>0] 	=  38470 * i;
					RGB_YUV_TABLE[(i+ 512)>>0] 	=   7471 * i + 0x8000;
					RGB_YUV_TABLE[(i+ 768)>>0] 	= -11059 * i;
					RGB_YUV_TABLE[(i+1024)>>0] 	= -21709 * i;
					RGB_YUV_TABLE[(i+1280)>>0] 	=  32768 * i + 0x807FFF;
					RGB_YUV_TABLE[(i+1536)>>0] 	= -27439 * i;
					RGB_YUV_TABLE[(i+1792)>>0] 	= - 5329 * i;
				}
			}
			
			// IO functions
			function writeBits(bs)
			{
				var value = bs[0];
				var posval = bs[1]-1;
				while ( posval >= 0 ) {
					if (value & (1 << posval) ) {
						bytenew |= (1 << bytepos);
					}
					posval--;
					bytepos--;
					if (bytepos < 0) {
						if (bytenew == 0xFF) {
							writeByte(0xFF);
							writeByte(0);
						}
						else {
							writeByte(bytenew);
						}
						bytepos=7;
						bytenew=0;
					}
				}
			}
		
			function writeByte(value)
			{
				//byteout.push(clt[value]); // write char directly instead of converting later
	      byteout.push(value);
			}
		
			function writeWord(value)
			{
				writeByte((value>>8)&0xFF);
				writeByte((value   )&0xFF);
			}
			
			// DCT & quantization core
			function fDCTQuant(data, fdtbl)
			{
				var d0, d1, d2, d3, d4, d5, d6, d7;
				/* Pass 1: process rows. */
				var dataOff=0;
				var i;
				const I8 = 8;
				const I64 = 64;
				for (i=0; i<I8; ++i)
				{
					d0 = data[dataOff];
					d1 = data[dataOff+1];
					d2 = data[dataOff+2];
					d3 = data[dataOff+3];
					d4 = data[dataOff+4];
					d5 = data[dataOff+5];
					d6 = data[dataOff+6];
					d7 = data[dataOff+7];
					
					var tmp0 = d0 + d7;
					var tmp7 = d0 - d7;
					var tmp1 = d1 + d6;
					var tmp6 = d1 - d6;
					var tmp2 = d2 + d5;
					var tmp5 = d2 - d5;
					var tmp3 = d3 + d4;
					var tmp4 = d3 - d4;
		
					/* Even part */
					var tmp10 = tmp0 + tmp3;	/* phase 2 */
					var tmp13 = tmp0 - tmp3;
					var tmp11 = tmp1 + tmp2;
					var tmp12 = tmp1 - tmp2;
		
					data[dataOff] = tmp10 + tmp11; /* phase 3 */
					data[dataOff+4] = tmp10 - tmp11;
		
					var z1 = (tmp12 + tmp13) * 0.707106781; /* c4 */
					data[dataOff+2] = tmp13 + z1; /* phase 5 */
					data[dataOff+6] = tmp13 - z1;
		
					/* Odd part */
					tmp10 = tmp4 + tmp5; /* phase 2 */
					tmp11 = tmp5 + tmp6;
					tmp12 = tmp6 + tmp7;
		
					/* The rotator is modified from fig 4-8 to avoid extra negations. */
					var z5 = (tmp10 - tmp12) * 0.382683433; /* c6 */
					var z2 = 0.541196100 * tmp10 + z5; /* c2-c6 */
					var z4 = 1.306562965 * tmp12 + z5; /* c2+c6 */
					var z3 = tmp11 * 0.707106781; /* c4 */
		
					var z11 = tmp7 + z3;	/* phase 5 */
					var z13 = tmp7 - z3;
		
					data[dataOff+5] = z13 + z2;	/* phase 6 */
					data[dataOff+3] = z13 - z2;
					data[dataOff+1] = z11 + z4;
					data[dataOff+7] = z11 - z4;
		
					dataOff += 8; /* advance pointer to next row */
				}
		
				/* Pass 2: process columns. */
				dataOff = 0;
				for (i=0; i<I8; ++i)
				{
					d0 = data[dataOff];
					d1 = data[dataOff + 8];
					d2 = data[dataOff + 16];
					d3 = data[dataOff + 24];
					d4 = data[dataOff + 32];
					d5 = data[dataOff + 40];
					d6 = data[dataOff + 48];
					d7 = data[dataOff + 56];
					
					var tmp0p2 = d0 + d7;
					var tmp7p2 = d0 - d7;
					var tmp1p2 = d1 + d6;
					var tmp6p2 = d1 - d6;
					var tmp2p2 = d2 + d5;
					var tmp5p2 = d2 - d5;
					var tmp3p2 = d3 + d4;
					var tmp4p2 = d3 - d4;
		
					/* Even part */
					var tmp10p2 = tmp0p2 + tmp3p2;	/* phase 2 */
					var tmp13p2 = tmp0p2 - tmp3p2;
					var tmp11p2 = tmp1p2 + tmp2p2;
					var tmp12p2 = tmp1p2 - tmp2p2;
		
					data[dataOff] = tmp10p2 + tmp11p2; /* phase 3 */
					data[dataOff+32] = tmp10p2 - tmp11p2;
		
					var z1p2 = (tmp12p2 + tmp13p2) * 0.707106781; /* c4 */
					data[dataOff+16] = tmp13p2 + z1p2; /* phase 5 */
					data[dataOff+48] = tmp13p2 - z1p2;
		
					/* Odd part */
					tmp10p2 = tmp4p2 + tmp5p2; /* phase 2 */
					tmp11p2 = tmp5p2 + tmp6p2;
					tmp12p2 = tmp6p2 + tmp7p2;
		
					/* The rotator is modified from fig 4-8 to avoid extra negations. */
					var z5p2 = (tmp10p2 - tmp12p2) * 0.382683433; /* c6 */
					var z2p2 = 0.541196100 * tmp10p2 + z5p2; /* c2-c6 */
					var z4p2 = 1.306562965 * tmp12p2 + z5p2; /* c2+c6 */
					var z3p2 = tmp11p2 * 0.707106781; /* c4 */
		
					var z11p2 = tmp7p2 + z3p2;	/* phase 5 */
					var z13p2 = tmp7p2 - z3p2;
		
					data[dataOff+40] = z13p2 + z2p2; /* phase 6 */
					data[dataOff+24] = z13p2 - z2p2;
					data[dataOff+ 8] = z11p2 + z4p2;
					data[dataOff+56] = z11p2 - z4p2;
		
					dataOff++; /* advance pointer to next column */
				}
		
				// Quantize/descale the coefficients
				var fDCTQuant;
				for (i=0; i<I64; ++i)
				{
					// Apply the quantization and scaling factor & Round to nearest integer
					fDCTQuant = data[i]*fdtbl[i];
					outputfDCTQuant[i] = (fDCTQuant > 0.0) ? ((fDCTQuant + 0.5)|0) : ((fDCTQuant - 0.5)|0);
					//outputfDCTQuant[i] = fround(fDCTQuant);
	
				}
				return outputfDCTQuant;
			}
			
			function writeAPP0()
			{
				writeWord(0xFFE0); // marker
				writeWord(16); // length
				writeByte(0x4A); // J
				writeByte(0x46); // F
				writeByte(0x49); // I
				writeByte(0x46); // F
				writeByte(0); // = "JFIF",'\0'
				writeByte(1); // versionhi
				writeByte(1); // versionlo
				writeByte(0); // xyunits
				writeWord(1); // xdensity
				writeWord(1); // ydensity
				writeByte(0); // thumbnwidth
				writeByte(0); // thumbnheight
			}
		
			function writeSOF0(width, height)
			{
				writeWord(0xFFC0); // marker
				writeWord(17);   // length, truecolor YUV JPG
				writeByte(8);    // precision
				writeWord(height);
				writeWord(width);
				writeByte(3);    // nrofcomponents
				writeByte(1);    // IdY
				writeByte(0x11); // HVY
				writeByte(0);    // QTY
				writeByte(2);    // IdU
				writeByte(0x11); // HVU
				writeByte(1);    // QTU
				writeByte(3);    // IdV
				writeByte(0x11); // HVV
				writeByte(1);    // QTV
			}
		
			function writeDQT()
			{
				writeWord(0xFFDB); // marker
				writeWord(132);	   // length
				writeByte(0);
				for (var i=0; i<64; i++) {
					writeByte(YTable[i]);
				}
				writeByte(1);
				for (var j=0; j<64; j++) {
					writeByte(UVTable[j]);
				}
			}
		
			function writeDHT()
			{
				writeWord(0xFFC4); // marker
				writeWord(0x01A2); // length
		
				writeByte(0); // HTYDCinfo
				for (var i=0; i<16; i++) {
					writeByte(std_dc_luminance_nrcodes[i+1]);
				}
				for (var j=0; j<=11; j++) {
					writeByte(std_dc_luminance_values[j]);
				}
		
				writeByte(0x10); // HTYACinfo
				for (var k=0; k<16; k++) {
					writeByte(std_ac_luminance_nrcodes[k+1]);
				}
				for (var l=0; l<=161; l++) {
					writeByte(std_ac_luminance_values[l]);
				}
		
				writeByte(1); // HTUDCinfo
				for (var m=0; m<16; m++) {
					writeByte(std_dc_chrominance_nrcodes[m+1]);
				}
				for (var n=0; n<=11; n++) {
					writeByte(std_dc_chrominance_values[n]);
				}
		
				writeByte(0x11); // HTUACinfo
				for (var o=0; o<16; o++) {
					writeByte(std_ac_chrominance_nrcodes[o+1]);
				}
				for (var p=0; p<=161; p++) {
					writeByte(std_ac_chrominance_values[p]);
				}
			}
		
			function writeSOS()
			{
				writeWord(0xFFDA); // marker
				writeWord(12); // length
				writeByte(3); // nrofcomponents
				writeByte(1); // IdY
				writeByte(0); // HTY
				writeByte(2); // IdU
				writeByte(0x11); // HTU
				writeByte(3); // IdV
				writeByte(0x11); // HTV
				writeByte(0); // Ss
				writeByte(0x3f); // Se
				writeByte(0); // Bf
			}
			
			function processDU(CDU, fdtbl, DC, HTDC, HTAC){
				var EOB = HTAC[0x00];
				var M16zeroes = HTAC[0xF0];
				var pos;
				const I16 = 16;
				const I63 = 63;
				const I64 = 64;
				var DU_DCT = fDCTQuant(CDU, fdtbl);
				//ZigZag reorder
				for (var j=0;j<I64;++j) {
					DU[ZigZag[j]]=DU_DCT[j];
				}
				var Diff = DU[0] - DC; DC = DU[0];
				//Encode DC
				if (Diff==0) {
					writeBits(HTDC[0]); // Diff might be 0
				} else {
					pos = 32767+Diff;
					writeBits(HTDC[category[pos]]);
					writeBits(bitcode[pos]);
				}
				//Encode ACs
				var end0pos = 63; // was const... which is crazy
				for (; (end0pos>0)&&(DU[end0pos]==0); end0pos--) {};
				//end0pos = first element in reverse order !=0
				if ( end0pos == 0) {
					writeBits(EOB);
					return DC;
				}
				var i = 1;
				var lng;
				while ( i <= end0pos ) {
					var startpos = i;
					for (; (DU[i]==0) && (i<=end0pos); ++i) {}
					var nrzeroes = i-startpos;
					if ( nrzeroes >= I16 ) {
						lng = nrzeroes>>4;
						for (var nrmarker=1; nrmarker <= lng; ++nrmarker)
							writeBits(M16zeroes);
						nrzeroes = nrzeroes&0xF;
					}
					pos = 32767+DU[i];
					writeBits(HTAC[(nrzeroes<<4)+category[pos]]);
					writeBits(bitcode[pos]);
					i++;
				}
				if ( end0pos != I63 ) {
					writeBits(EOB);
				}
				return DC;
			}
	
			function initCharLookupTable(){
				var sfcc = String.fromCharCode;
				for(var i=0; i < 256; i++){ ///// ACHTUNG // 255
					clt[i] = sfcc(i);
				}
			}
			
			this.encode = function(image,quality) // image data object
			{
				var time_start = new Date().getTime();
				
				if(quality) setQuality(quality);
				
				// Initialize bit writer
				byteout = new Array();
				bytenew=0;
				bytepos=7;
		
				// Add JPEG headers
				writeWord(0xFFD8); // SOI
				writeAPP0();
				writeDQT();
				writeSOF0(image.width,image.height);
				writeDHT();
				writeSOS();
	
		
				// Encode 8x8 macroblocks
				var DCY=0;
				var DCU=0;
				var DCV=0;
				
				bytenew=0;
				bytepos=7;
				
				
				this.encode.displayName = "_encode_";
	
				var imageData = image.data;
				var width = image.width;
				var height = image.height;
	
				var quadWidth = width*4;
				var tripleWidth = width*3;
				
				var x, y = 0;
				var r, g, b;
				var start,p, col,row,pos;
				while(y < height){
					x = 0;
					while(x < quadWidth){
					start = quadWidth * y + x;
					p = start;
					col = -1;
					row = 0;
					
					for(pos=0; pos < 64; pos++){
						row = pos >> 3;// /8
						col = ( pos & 7 ) * 4; // %8
						p = start + ( row * quadWidth ) + col;		
						
						if(y+row >= height){ // padding bottom
							p-= (quadWidth*(y+1+row-height));
						}
	
						if(x+col >= quadWidth){ // padding right	
							p-= ((x+col) - quadWidth +4)
						}
						
						r = imageData[ p++ ];
						g = imageData[ p++ ];
						b = imageData[ p++ ];
						
						
						/* // calculate YUV values dynamically
						YDU[pos]=((( 0.29900)*r+( 0.58700)*g+( 0.11400)*b))-128; //-0x80
						UDU[pos]=(((-0.16874)*r+(-0.33126)*g+( 0.50000)*b));
						VDU[pos]=((( 0.50000)*r+(-0.41869)*g+(-0.08131)*b));
						*/
						
						// use lookup table (slightly faster)
						YDU[pos] = ((RGB_YUV_TABLE[r]             + RGB_YUV_TABLE[(g +  256)>>0] + RGB_YUV_TABLE[(b +  512)>>0]) >> 16)-128;
						UDU[pos] = ((RGB_YUV_TABLE[(r +  768)>>0] + RGB_YUV_TABLE[(g + 1024)>>0] + RGB_YUV_TABLE[(b + 1280)>>0]) >> 16)-128;
						VDU[pos] = ((RGB_YUV_TABLE[(r + 1280)>>0] + RGB_YUV_TABLE[(g + 1536)>>0] + RGB_YUV_TABLE[(b + 1792)>>0]) >> 16)-128;
	
					}
					
					DCY = processDU(YDU, fdtbl_Y, DCY, YDC_HT, YAC_HT);
					DCU = processDU(UDU, fdtbl_UV, DCU, UVDC_HT, UVAC_HT);
					DCV = processDU(VDU, fdtbl_UV, DCV, UVDC_HT, UVAC_HT);
					x+=32;
					}
					y+=8;
				}
				
				
				////////////////////////////////////////////////////////////////
		
				// Do the bit alignment of the EOI marker
				if ( bytepos >= 0 ) {
					var fillbits = [];
					fillbits[1] = bytepos+1;
					fillbits[0] = (1<<(bytepos+1))-1;
					writeBits(fillbits);
				}
		
				writeWord(0xFFD9); //EOI
	
	      //return new Uint8Array(byteout);
	      return new Buffer(byteout);
	
				var jpegDataUri = 'data:image/jpeg;base64,' + btoa(byteout.join(''));
				
				byteout = [];
				
				// benchmarking
				var duration = new Date().getTime() - time_start;
	    		//console.log('Encoding time: '+ duration + 'ms');
	    		//
				
				return jpegDataUri			
		}
		
		function setQuality(quality){
			if (quality <= 0) {
				quality = 1;
			}
			if (quality > 100) {
				quality = 100;
			}
			
			if(currentQuality == quality) return // don't recalc if unchanged
			
			var sf = 0;
			if (quality < 50) {
				sf = Math.floor(5000 / quality);
			} else {
				sf = Math.floor(200 - quality*2);
			}
			
			initQuantTables(sf);
			currentQuality = quality;
			//console.log('Quality set to: '+quality +'%');
		}
		
		function init(){
			var time_start = new Date().getTime();
			if(!quality) quality = 50;
			// Create tables
			initCharLookupTable()
			initHuffmanTbl();
			initCategoryNumber();
			initRGBYUVTable();
			
			setQuality(quality);
			var duration = new Date().getTime() - time_start;
	    	//console.log('Initialization '+ duration + 'ms');
		}
		
		init();
		
	};
	module.exports = encode;
	
	function encode(imgData, qu) {
	  if (typeof qu === 'undefined') qu = 50;
	  var encoder = new JPEGEncoder(qu);
		var data = encoder.encode(imgData, qu);
	  return {
	    data: data,
	    width: imgData.width,
	    height: imgData.height
	  };
	}
	
	// helper function to get the imageData of an existing image on the current page.
	function getImageDataFromImage(idOrElement){
		var theImg = (typeof(idOrElement)=='string')? document.getElementById(idOrElement):idOrElement;
		var cvs = document.createElement('canvas');
		cvs.width = theImg.width;
		cvs.height = theImg.height;
		var ctx = cvs.getContext("2d");
		ctx.drawImage(theImg,0,0);
		
		return (ctx.getImageData(0, 0, cvs.width, cvs.height));
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /
	/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */
	/*
	   Copyright 2011 notmasteryet
	
	   Licensed under the Apache License, Version 2.0 (the "License");
	   you may not use this file except in compliance with the License.
	   You may obtain a copy of the License at
	
	       http://www.apache.org/licenses/LICENSE-2.0
	
	   Unless required by applicable law or agreed to in writing, software
	   distributed under the License is distributed on an "AS IS" BASIS,
	   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   See the License for the specific language governing permissions and
	   limitations under the License.
	*/
	
	// - The JPEG specification can be found in the ITU CCITT Recommendation T.81
	//   (www.w3.org/Graphics/JPEG/itu-t81.pdf)
	// - The JFIF specification can be found in the JPEG File Interchange Format
	//   (www.w3.org/Graphics/JPEG/jfif3.pdf)
	// - The Adobe Application-Specific JPEG markers in the Supporting the DCT Filters
	//   in PostScript Level 2, Technical Note #5116
	//   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)
	
	var JpegImage = (function jpegImage() {
	  "use strict";
	  var dctZigZag = new Int32Array([
	     0,
	     1,  8,
	    16,  9,  2,
	     3, 10, 17, 24,
	    32, 25, 18, 11, 4,
	     5, 12, 19, 26, 33, 40,
	    48, 41, 34, 27, 20, 13,  6,
	     7, 14, 21, 28, 35, 42, 49, 56,
	    57, 50, 43, 36, 29, 22, 15,
	    23, 30, 37, 44, 51, 58,
	    59, 52, 45, 38, 31,
	    39, 46, 53, 60,
	    61, 54, 47,
	    55, 62,
	    63
	  ]);
	
	  var dctCos1  =  4017   // cos(pi/16)
	  var dctSin1  =   799   // sin(pi/16)
	  var dctCos3  =  3406   // cos(3*pi/16)
	  var dctSin3  =  2276   // sin(3*pi/16)
	  var dctCos6  =  1567   // cos(6*pi/16)
	  var dctSin6  =  3784   // sin(6*pi/16)
	  var dctSqrt2 =  5793   // sqrt(2)
	  var dctSqrt1d2 = 2896  // sqrt(2) / 2
	
	  function constructor() {
	  }
	
	  function buildHuffmanTable(codeLengths, values) {
	    var k = 0, code = [], i, j, length = 16;
	    while (length > 0 && !codeLengths[length - 1])
	      length--;
	    code.push({children: [], index: 0});
	    var p = code[0], q;
	    for (i = 0; i < length; i++) {
	      for (j = 0; j < codeLengths[i]; j++) {
	        p = code.pop();
	        p.children[p.index] = values[k];
	        while (p.index > 0) {
	          p = code.pop();
	        }
	        p.index++;
	        code.push(p);
	        while (code.length <= i) {
	          code.push(q = {children: [], index: 0});
	          p.children[p.index] = q.children;
	          p = q;
	        }
	        k++;
	      }
	      if (i + 1 < length) {
	        // p here points to last code
	        code.push(q = {children: [], index: 0});
	        p.children[p.index] = q.children;
	        p = q;
	      }
	    }
	    return code[0].children;
	  }
	
	  function decodeScan(data, offset,
	                      frame, components, resetInterval,
	                      spectralStart, spectralEnd,
	                      successivePrev, successive) {
	    var precision = frame.precision;
	    var samplesPerLine = frame.samplesPerLine;
	    var scanLines = frame.scanLines;
	    var mcusPerLine = frame.mcusPerLine;
	    var progressive = frame.progressive;
	    var maxH = frame.maxH, maxV = frame.maxV;
	
	    var startOffset = offset, bitsData = 0, bitsCount = 0;
	    function readBit() {
	      if (bitsCount > 0) {
	        bitsCount--;
	        return (bitsData >> bitsCount) & 1;
	      }
	      bitsData = data[offset++];
	      if (bitsData == 0xFF) {
	        var nextByte = data[offset++];
	        if (nextByte) {
	          throw "unexpected marker: " + ((bitsData << 8) | nextByte).toString(16);
	        }
	        // unstuff 0
	      }
	      bitsCount = 7;
	      return bitsData >>> 7;
	    }
	    function decodeHuffman(tree) {
	      var node = tree, bit;
	      while ((bit = readBit()) !== null) {
	        node = node[bit];
	        if (typeof node === 'number')
	          return node;
	        if (typeof node !== 'object')
	          throw "invalid huffman sequence";
	      }
	      return null;
	    }
	    function receive(length) {
	      var n = 0;
	      while (length > 0) {
	        var bit = readBit();
	        if (bit === null) return;
	        n = (n << 1) | bit;
	        length--;
	      }
	      return n;
	    }
	    function receiveAndExtend(length) {
	      var n = receive(length);
	      if (n >= 1 << (length - 1))
	        return n;
	      return n + (-1 << length) + 1;
	    }
	    function decodeBaseline(component, zz) {
	      var t = decodeHuffman(component.huffmanTableDC);
	      var diff = t === 0 ? 0 : receiveAndExtend(t);
	      zz[0]= (component.pred += diff);
	      var k = 1;
	      while (k < 64) {
	        var rs = decodeHuffman(component.huffmanTableAC);
	        var s = rs & 15, r = rs >> 4;
	        if (s === 0) {
	          if (r < 15)
	            break;
	          k += 16;
	          continue;
	        }
	        k += r;
	        var z = dctZigZag[k];
	        zz[z] = receiveAndExtend(s);
	        k++;
	      }
	    }
	    function decodeDCFirst(component, zz) {
	      var t = decodeHuffman(component.huffmanTableDC);
	      var diff = t === 0 ? 0 : (receiveAndExtend(t) << successive);
	      zz[0] = (component.pred += diff);
	    }
	    function decodeDCSuccessive(component, zz) {
	      zz[0] |= readBit() << successive;
	    }
	    var eobrun = 0;
	    function decodeACFirst(component, zz) {
	      if (eobrun > 0) {
	        eobrun--;
	        return;
	      }
	      var k = spectralStart, e = spectralEnd;
	      while (k <= e) {
	        var rs = decodeHuffman(component.huffmanTableAC);
	        var s = rs & 15, r = rs >> 4;
	        if (s === 0) {
	          if (r < 15) {
	            eobrun = receive(r) + (1 << r) - 1;
	            break;
	          }
	          k += 16;
	          continue;
	        }
	        k += r;
	        var z = dctZigZag[k];
	        zz[z] = receiveAndExtend(s) * (1 << successive);
	        k++;
	      }
	    }
	    var successiveACState = 0, successiveACNextValue;
	    function decodeACSuccessive(component, zz) {
	      var k = spectralStart, e = spectralEnd, r = 0;
	      while (k <= e) {
	        var z = dctZigZag[k];
	        switch (successiveACState) {
	        case 0: // initial state
	          var rs = decodeHuffman(component.huffmanTableAC);
	          var s = rs & 15, r = rs >> 4;
	          if (s === 0) {
	            if (r < 15) {
	              eobrun = receive(r) + (1 << r);
	              successiveACState = 4;
	            } else {
	              r = 16;
	              successiveACState = 1;
	            }
	          } else {
	            if (s !== 1)
	              throw "invalid ACn encoding";
	            successiveACNextValue = receiveAndExtend(s);
	            successiveACState = r ? 2 : 3;
	          }
	          continue;
	        case 1: // skipping r zero items
	        case 2:
	          if (zz[z])
	            zz[z] += (readBit() << successive);
	          else {
	            r--;
	            if (r === 0)
	              successiveACState = successiveACState == 2 ? 3 : 0;
	          }
	          break;
	        case 3: // set value for a zero item
	          if (zz[z])
	            zz[z] += (readBit() << successive);
	          else {
	            zz[z] = successiveACNextValue << successive;
	            successiveACState = 0;
	          }
	          break;
	        case 4: // eob
	          if (zz[z])
	            zz[z] += (readBit() << successive);
	          break;
	        }
	        k++;
	      }
	      if (successiveACState === 4) {
	        eobrun--;
	        if (eobrun === 0)
	          successiveACState = 0;
	      }
	    }
	    function decodeMcu(component, decode, mcu, row, col) {
	      var mcuRow = (mcu / mcusPerLine) | 0;
	      var mcuCol = mcu % mcusPerLine;
	      var blockRow = mcuRow * component.v + row;
	      var blockCol = mcuCol * component.h + col;
	      decode(component, component.blocks[blockRow][blockCol]);
	    }
	    function decodeBlock(component, decode, mcu) {
	      var blockRow = (mcu / component.blocksPerLine) | 0;
	      var blockCol = mcu % component.blocksPerLine;
	      decode(component, component.blocks[blockRow][blockCol]);
	    }
	
	    var componentsLength = components.length;
	    var component, i, j, k, n;
	    var decodeFn;
	    if (progressive) {
	      if (spectralStart === 0)
	        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;
	      else
	        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;
	    } else {
	      decodeFn = decodeBaseline;
	    }
	
	    var mcu = 0, marker;
	    var mcuExpected;
	    if (componentsLength == 1) {
	      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;
	    } else {
	      mcuExpected = mcusPerLine * frame.mcusPerColumn;
	    }
	    if (!resetInterval) resetInterval = mcuExpected;
	
	    var h, v;
	    while (mcu < mcuExpected) {
	      // reset interval stuff
	      for (i = 0; i < componentsLength; i++)
	        components[i].pred = 0;
	      eobrun = 0;
	
	      if (componentsLength == 1) {
	        component = components[0];
	        for (n = 0; n < resetInterval; n++) {
	          decodeBlock(component, decodeFn, mcu);
	          mcu++;
	        }
	      } else {
	        for (n = 0; n < resetInterval; n++) {
	          for (i = 0; i < componentsLength; i++) {
	            component = components[i];
	            h = component.h;
	            v = component.v;
	            for (j = 0; j < v; j++) {
	              for (k = 0; k < h; k++) {
	                decodeMcu(component, decodeFn, mcu, j, k);
	              }
	            }
	          }
	          mcu++;
	
	          // If we've reached our expected MCU's, stop decoding
	          if (mcu === mcuExpected) break;
	        }
	      }
	
	      // find marker
	      bitsCount = 0;
	      marker = (data[offset] << 8) | data[offset + 1];
	      if (marker < 0xFF00) {
	        throw "marker was not found";
	      }
	
	      if (marker >= 0xFFD0 && marker <= 0xFFD7) { // RSTx
	        offset += 2;
	      }
	      else
	        break;
	    }
	
	    return offset - startOffset;
	  }
	
	  function buildComponentData(frame, component) {
	    var lines = [];
	    var blocksPerLine = component.blocksPerLine;
	    var blocksPerColumn = component.blocksPerColumn;
	    var samplesPerLine = blocksPerLine << 3;
	    var R = new Int32Array(64), r = new Uint8Array(64);
	
	    // A port of poppler's IDCT method which in turn is taken from:
	    //   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,
	    //   "Practical Fast 1-D DCT Algorithms with 11 Multiplications",
	    //   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,
	    //   988-991.
	    function quantizeAndInverse(zz, dataOut, dataIn) {
	      var qt = component.quantizationTable;
	      var v0, v1, v2, v3, v4, v5, v6, v7, t;
	      var p = dataIn;
	      var i;
	
	      // dequant
	      for (i = 0; i < 64; i++)
	        p[i] = zz[i] * qt[i];
	
	      // inverse DCT on rows
	      for (i = 0; i < 8; ++i) {
	        var row = 8 * i;
	
	        // check for all-zero AC coefficients
	        if (p[1 + row] == 0 && p[2 + row] == 0 && p[3 + row] == 0 &&
	            p[4 + row] == 0 && p[5 + row] == 0 && p[6 + row] == 0 &&
	            p[7 + row] == 0) {
	          t = (dctSqrt2 * p[0 + row] + 512) >> 10;
	          p[0 + row] = t;
	          p[1 + row] = t;
	          p[2 + row] = t;
	          p[3 + row] = t;
	          p[4 + row] = t;
	          p[5 + row] = t;
	          p[6 + row] = t;
	          p[7 + row] = t;
	          continue;
	        }
	
	        // stage 4
	        v0 = (dctSqrt2 * p[0 + row] + 128) >> 8;
	        v1 = (dctSqrt2 * p[4 + row] + 128) >> 8;
	        v2 = p[2 + row];
	        v3 = p[6 + row];
	        v4 = (dctSqrt1d2 * (p[1 + row] - p[7 + row]) + 128) >> 8;
	        v7 = (dctSqrt1d2 * (p[1 + row] + p[7 + row]) + 128) >> 8;
	        v5 = p[3 + row] << 4;
	        v6 = p[5 + row] << 4;
	
	        // stage 3
	        t = (v0 - v1+ 1) >> 1;
	        v0 = (v0 + v1 + 1) >> 1;
	        v1 = t;
	        t = (v2 * dctSin6 + v3 * dctCos6 + 128) >> 8;
	        v2 = (v2 * dctCos6 - v3 * dctSin6 + 128) >> 8;
	        v3 = t;
	        t = (v4 - v6 + 1) >> 1;
	        v4 = (v4 + v6 + 1) >> 1;
	        v6 = t;
	        t = (v7 + v5 + 1) >> 1;
	        v5 = (v7 - v5 + 1) >> 1;
	        v7 = t;
	
	        // stage 2
	        t = (v0 - v3 + 1) >> 1;
	        v0 = (v0 + v3 + 1) >> 1;
	        v3 = t;
	        t = (v1 - v2 + 1) >> 1;
	        v1 = (v1 + v2 + 1) >> 1;
	        v2 = t;
	        t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;
	        v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;
	        v7 = t;
	        t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;
	        v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;
	        v6 = t;
	
	        // stage 1
	        p[0 + row] = v0 + v7;
	        p[7 + row] = v0 - v7;
	        p[1 + row] = v1 + v6;
	        p[6 + row] = v1 - v6;
	        p[2 + row] = v2 + v5;
	        p[5 + row] = v2 - v5;
	        p[3 + row] = v3 + v4;
	        p[4 + row] = v3 - v4;
	      }
	
	      // inverse DCT on columns
	      for (i = 0; i < 8; ++i) {
	        var col = i;
	
	        // check for all-zero AC coefficients
	        if (p[1*8 + col] == 0 && p[2*8 + col] == 0 && p[3*8 + col] == 0 &&
	            p[4*8 + col] == 0 && p[5*8 + col] == 0 && p[6*8 + col] == 0 &&
	            p[7*8 + col] == 0) {
	          t = (dctSqrt2 * dataIn[i+0] + 8192) >> 14;
	          p[0*8 + col] = t;
	          p[1*8 + col] = t;
	          p[2*8 + col] = t;
	          p[3*8 + col] = t;
	          p[4*8 + col] = t;
	          p[5*8 + col] = t;
	          p[6*8 + col] = t;
	          p[7*8 + col] = t;
	          continue;
	        }
	
	        // stage 4
	        v0 = (dctSqrt2 * p[0*8 + col] + 2048) >> 12;
	        v1 = (dctSqrt2 * p[4*8 + col] + 2048) >> 12;
	        v2 = p[2*8 + col];
	        v3 = p[6*8 + col];
	        v4 = (dctSqrt1d2 * (p[1*8 + col] - p[7*8 + col]) + 2048) >> 12;
	        v7 = (dctSqrt1d2 * (p[1*8 + col] + p[7*8 + col]) + 2048) >> 12;
	        v5 = p[3*8 + col];
	        v6 = p[5*8 + col];
	
	        // stage 3
	        t = (v0 - v1 + 1) >> 1;
	        v0 = (v0 + v1 + 1) >> 1;
	        v1 = t;
	        t = (v2 * dctSin6 + v3 * dctCos6 + 2048) >> 12;
	        v2 = (v2 * dctCos6 - v3 * dctSin6 + 2048) >> 12;
	        v3 = t;
	        t = (v4 - v6 + 1) >> 1;
	        v4 = (v4 + v6 + 1) >> 1;
	        v6 = t;
	        t = (v7 + v5 + 1) >> 1;
	        v5 = (v7 - v5 + 1) >> 1;
	        v7 = t;
	
	        // stage 2
	        t = (v0 - v3 + 1) >> 1;
	        v0 = (v0 + v3 + 1) >> 1;
	        v3 = t;
	        t = (v1 - v2 + 1) >> 1;
	        v1 = (v1 + v2 + 1) >> 1;
	        v2 = t;
	        t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;
	        v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;
	        v7 = t;
	        t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;
	        v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;
	        v6 = t;
	
	        // stage 1
	        p[0*8 + col] = v0 + v7;
	        p[7*8 + col] = v0 - v7;
	        p[1*8 + col] = v1 + v6;
	        p[6*8 + col] = v1 - v6;
	        p[2*8 + col] = v2 + v5;
	        p[5*8 + col] = v2 - v5;
	        p[3*8 + col] = v3 + v4;
	        p[4*8 + col] = v3 - v4;
	      }
	
	      // convert to 8-bit integers
	      for (i = 0; i < 64; ++i) {
	        var sample = 128 + ((p[i] + 8) >> 4);
	        dataOut[i] = sample < 0 ? 0 : sample > 0xFF ? 0xFF : sample;
	      }
	    }
	
	    var i, j;
	    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {
	      var scanLine = blockRow << 3;
	      for (i = 0; i < 8; i++)
	        lines.push(new Uint8Array(samplesPerLine));
	      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {
	        quantizeAndInverse(component.blocks[blockRow][blockCol], r, R);
	
	        var offset = 0, sample = blockCol << 3;
	        for (j = 0; j < 8; j++) {
	          var line = lines[scanLine + j];
	          for (i = 0; i < 8; i++)
	            line[sample + i] = r[offset++];
	        }
	      }
	    }
	    return lines;
	  }
	
	  function clampTo8bit(a) {
	    return a < 0 ? 0 : a > 255 ? 255 : a;
	  }
	
	  constructor.prototype = {
	    load: function load(path) {
	      var xhr = new XMLHttpRequest();
	      xhr.open("GET", path, true);
	      xhr.responseType = "arraybuffer";
	      xhr.onload = (function() {
	        // TODO catch parse error
	        var data = new Uint8Array(xhr.response || xhr.mozResponseArrayBuffer);
	        this.parse(data);
	        if (this.onload)
	          this.onload();
	      }).bind(this);
	      xhr.send(null);
	    },
	    parse: function parse(data) {
	      var offset = 0, length = data.length;
	      function readUint16() {
	        var value = (data[offset] << 8) | data[offset + 1];
	        offset += 2;
	        return value;
	      }
	      function readDataBlock() {
	        var length = readUint16();
	        var array = data.subarray(offset, offset + length - 2);
	        offset += array.length;
	        return array;
	      }
	      function prepareComponents(frame) {
	        var maxH = 0, maxV = 0;
	        var component, componentId;
	        for (componentId in frame.components) {
	          if (frame.components.hasOwnProperty(componentId)) {
	            component = frame.components[componentId];
	            if (maxH < component.h) maxH = component.h;
	            if (maxV < component.v) maxV = component.v;
	          }
	        }
	        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / maxH);
	        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / maxV);
	        for (componentId in frame.components) {
	          if (frame.components.hasOwnProperty(componentId)) {
	            component = frame.components[componentId];
	            var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / maxH);
	            var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines  / 8) * component.v / maxV);
	            var blocksPerLineForMcu = mcusPerLine * component.h;
	            var blocksPerColumnForMcu = mcusPerColumn * component.v;
	            var blocks = [];
	            for (var i = 0; i < blocksPerColumnForMcu; i++) {
	              var row = [];
	              for (var j = 0; j < blocksPerLineForMcu; j++)
	                row.push(new Int32Array(64));
	              blocks.push(row);
	            }
	            component.blocksPerLine = blocksPerLine;
	            component.blocksPerColumn = blocksPerColumn;
	            component.blocks = blocks;
	          }
	        }
	        frame.maxH = maxH;
	        frame.maxV = maxV;
	        frame.mcusPerLine = mcusPerLine;
	        frame.mcusPerColumn = mcusPerColumn;
	      }
	      var jfif = null;
	      var adobe = null;
	      var pixels = null;
	      var frame, resetInterval;
	      var quantizationTables = [], frames = [];
	      var huffmanTablesAC = [], huffmanTablesDC = [];
	      var fileMarker = readUint16();
	      if (fileMarker != 0xFFD8) { // SOI (Start of Image)
	        throw "SOI not found";
	      }
	
	      fileMarker = readUint16();
	      while (fileMarker != 0xFFD9) { // EOI (End of image)
	        var i, j, l;
	        switch(fileMarker) {
	          case 0xFF00: break;
	          case 0xFFE0: // APP0 (Application Specific)
	          case 0xFFE1: // APP1
	          case 0xFFE2: // APP2
	          case 0xFFE3: // APP3
	          case 0xFFE4: // APP4
	          case 0xFFE5: // APP5
	          case 0xFFE6: // APP6
	          case 0xFFE7: // APP7
	          case 0xFFE8: // APP8
	          case 0xFFE9: // APP9
	          case 0xFFEA: // APP10
	          case 0xFFEB: // APP11
	          case 0xFFEC: // APP12
	          case 0xFFED: // APP13
	          case 0xFFEE: // APP14
	          case 0xFFEF: // APP15
	          case 0xFFFE: // COM (Comment)
	            var appData = readDataBlock();
	
	            if (fileMarker === 0xFFE0) {
	              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 &&
	                appData[3] === 0x46 && appData[4] === 0) { // 'JFIF\x00'
	                jfif = {
	                  version: { major: appData[5], minor: appData[6] },
	                  densityUnits: appData[7],
	                  xDensity: (appData[8] << 8) | appData[9],
	                  yDensity: (appData[10] << 8) | appData[11],
	                  thumbWidth: appData[12],
	                  thumbHeight: appData[13],
	                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])
	                };
	              }
	            }
	            // TODO APP1 - Exif
	            if (fileMarker === 0xFFEE) {
	              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F &&
	                appData[3] === 0x62 && appData[4] === 0x65 && appData[5] === 0) { // 'Adobe\x00'
	                adobe = {
	                  version: appData[6],
	                  flags0: (appData[7] << 8) | appData[8],
	                  flags1: (appData[9] << 8) | appData[10],
	                  transformCode: appData[11]
	                };
	              }
	            }
	            break;
	
	          case 0xFFDB: // DQT (Define Quantization Tables)
	            var quantizationTablesLength = readUint16();
	            var quantizationTablesEnd = quantizationTablesLength + offset - 2;
	            while (offset < quantizationTablesEnd) {
	              var quantizationTableSpec = data[offset++];
	              var tableData = new Int32Array(64);
	              if ((quantizationTableSpec >> 4) === 0) { // 8 bit values
	                for (j = 0; j < 64; j++) {
	                  var z = dctZigZag[j];
	                  tableData[z] = data[offset++];
	                }
	              } else if ((quantizationTableSpec >> 4) === 1) { //16 bit
	                for (j = 0; j < 64; j++) {
	                  var z = dctZigZag[j];
	                  tableData[z] = readUint16();
	                }
	              } else
	                throw "DQT: invalid table spec";
	              quantizationTables[quantizationTableSpec & 15] = tableData;
	            }
	            break;
	
	          case 0xFFC0: // SOF0 (Start of Frame, Baseline DCT)
	          case 0xFFC1: // SOF1 (Start of Frame, Extended DCT)
	          case 0xFFC2: // SOF2 (Start of Frame, Progressive DCT)
	            readUint16(); // skip data length
	            frame = {};
	            frame.extended = (fileMarker === 0xFFC1);
	            frame.progressive = (fileMarker === 0xFFC2);
	            frame.precision = data[offset++];
	            frame.scanLines = readUint16();
	            frame.samplesPerLine = readUint16();
	            frame.components = {};
	            frame.componentsOrder = [];
	            var componentsCount = data[offset++], componentId;
	            var maxH = 0, maxV = 0;
	            for (i = 0; i < componentsCount; i++) {
	              componentId = data[offset];
	              var h = data[offset + 1] >> 4;
	              var v = data[offset + 1] & 15;
	              var qId = data[offset + 2];
	              frame.componentsOrder.push(componentId);
	              frame.components[componentId] = {
	                h: h,
	                v: v,
	                quantizationTable: quantizationTables[qId]
	              };
	              offset += 3;
	            }
	            prepareComponents(frame);
	            frames.push(frame);
	            break;
	
	          case 0xFFC4: // DHT (Define Huffman Tables)
	            var huffmanLength = readUint16();
	            for (i = 2; i < huffmanLength;) {
	              var huffmanTableSpec = data[offset++];
	              var codeLengths = new Uint8Array(16);
	              var codeLengthSum = 0;
	              for (j = 0; j < 16; j++, offset++)
	                codeLengthSum += (codeLengths[j] = data[offset]);
	              var huffmanValues = new Uint8Array(codeLengthSum);
	              for (j = 0; j < codeLengthSum; j++, offset++)
	                huffmanValues[j] = data[offset];
	              i += 17 + codeLengthSum;
	
	              ((huffmanTableSpec >> 4) === 0 ? 
	                huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] =
	                buildHuffmanTable(codeLengths, huffmanValues);
	            }
	            break;
	
	          case 0xFFDD: // DRI (Define Restart Interval)
	            readUint16(); // skip data length
	            resetInterval = readUint16();
	            break;
	
	          case 0xFFDA: // SOS (Start of Scan)
	            var scanLength = readUint16();
	            var selectorsCount = data[offset++];
	            var components = [], component;
	            for (i = 0; i < selectorsCount; i++) {
	              component = frame.components[data[offset++]];
	              var tableSpec = data[offset++];
	              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];
	              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];
	              components.push(component);
	            }
	            var spectralStart = data[offset++];
	            var spectralEnd = data[offset++];
	            var successiveApproximation = data[offset++];
	            var processed = decodeScan(data, offset,
	              frame, components, resetInterval,
	              spectralStart, spectralEnd,
	              successiveApproximation >> 4, successiveApproximation & 15);
	            offset += processed;
	            break;
	          default:
	            if (data[offset - 3] == 0xFF &&
	                data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {
	              // could be incorrect encoding -- last 0xFF byte of the previous
	              // block was eaten by the encoder
	              offset -= 3;
	              break;
	            }
	            throw "unknown JPEG marker " + fileMarker.toString(16);
	        }
	        fileMarker = readUint16();
	      }
	      if (frames.length != 1)
	        throw "only single frame JPEGs supported";
	
	      this.width = frame.samplesPerLine;
	      this.height = frame.scanLines;
	      this.jfif = jfif;
	      this.adobe = adobe;
	      this.components = [];
	      for (var i = 0; i < frame.componentsOrder.length; i++) {
	        var component = frame.components[frame.componentsOrder[i]];
	        this.components.push({
	          lines: buildComponentData(frame, component),
	          scaleX: component.h / frame.maxH,
	          scaleY: component.v / frame.maxV
	        });
	      }
	    },
	    getData: function getData(width, height) {
	      var scaleX = this.width / width, scaleY = this.height / height;
	
	      var component1, component2, component3, component4;
	      var component1Line, component2Line, component3Line, component4Line;
	      var x, y;
	      var offset = 0;
	      var Y, Cb, Cr, K, C, M, Ye, R, G, B;
	      var colorTransform;
	      var dataLength = width * height * this.components.length;
	      var data = new Uint8Array(dataLength);
	      switch (this.components.length) {
	        case 1:
	          component1 = this.components[0];
	          for (y = 0; y < height; y++) {
	            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];
	            for (x = 0; x < width; x++) {
	              Y = component1Line[0 | (x * component1.scaleX * scaleX)];
	
	              data[offset++] = Y;
	            }
	          }
	          break;
	        case 2:
	          // PDF might compress two component data in custom colorspace
	          component1 = this.components[0];
	          component2 = this.components[1];
	          for (y = 0; y < height; y++) {
	            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];
	            component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];
	            for (x = 0; x < width; x++) {
	              Y = component1Line[0 | (x * component1.scaleX * scaleX)];
	              data[offset++] = Y;
	              Y = component2Line[0 | (x * component2.scaleX * scaleX)];
	              data[offset++] = Y;
	            }
	          }
	          break;
	        case 3:
	          // The default transform for three components is true
	          colorTransform = true;
	          // The adobe transform marker overrides any previous setting
	          if (this.adobe && this.adobe.transformCode)
	            colorTransform = true;
	          else if (typeof this.colorTransform !== 'undefined')
	            colorTransform = !!this.colorTransform;
	
	          component1 = this.components[0];
	          component2 = this.components[1];
	          component3 = this.components[2];
	          for (y = 0; y < height; y++) {
	            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];
	            component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];
	            component3Line = component3.lines[0 | (y * component3.scaleY * scaleY)];
	            for (x = 0; x < width; x++) {
	              if (!colorTransform) {
	                R = component1Line[0 | (x * component1.scaleX * scaleX)];
	                G = component2Line[0 | (x * component2.scaleX * scaleX)];
	                B = component3Line[0 | (x * component3.scaleX * scaleX)];
	              } else {
	                Y = component1Line[0 | (x * component1.scaleX * scaleX)];
	                Cb = component2Line[0 | (x * component2.scaleX * scaleX)];
	                Cr = component3Line[0 | (x * component3.scaleX * scaleX)];
	
	                R = clampTo8bit(Y + 1.402 * (Cr - 128));
	                G = clampTo8bit(Y - 0.3441363 * (Cb - 128) - 0.71413636 * (Cr - 128));
	                B = clampTo8bit(Y + 1.772 * (Cb - 128));
	              }
	
	              data[offset++] = R;
	              data[offset++] = G;
	              data[offset++] = B;
	            }
	          }
	          break;
	        case 4:
	          if (!this.adobe)
	            throw 'Unsupported color mode (4 components)';
	          // The default transform for four components is false
	          colorTransform = false;
	          // The adobe transform marker overrides any previous setting
	          if (this.adobe && this.adobe.transformCode)
	            colorTransform = true;
	          else if (typeof this.colorTransform !== 'undefined')
	            colorTransform = !!this.colorTransform;
	
	          component1 = this.components[0];
	          component2 = this.components[1];
	          component3 = this.components[2];
	          component4 = this.components[3];
	          for (y = 0; y < height; y++) {
	            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];
	            component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];
	            component3Line = component3.lines[0 | (y * component3.scaleY * scaleY)];
	            component4Line = component4.lines[0 | (y * component4.scaleY * scaleY)];
	            for (x = 0; x < width; x++) {
	              if (!colorTransform) {
	                C = component1Line[0 | (x * component1.scaleX * scaleX)];
	                M = component2Line[0 | (x * component2.scaleX * scaleX)];
	                Ye = component3Line[0 | (x * component3.scaleX * scaleX)];
	                K = component4Line[0 | (x * component4.scaleX * scaleX)];
	              } else {
	                Y = component1Line[0 | (x * component1.scaleX * scaleX)];
	                Cb = component2Line[0 | (x * component2.scaleX * scaleX)];
	                Cr = component3Line[0 | (x * component3.scaleX * scaleX)];
	                K = component4Line[0 | (x * component4.scaleX * scaleX)];
	
	                C = 255 - clampTo8bit(Y + 1.402 * (Cr - 128));
	                M = 255 - clampTo8bit(Y - 0.3441363 * (Cb - 128) - 0.71413636 * (Cr - 128));
	                Ye = 255 - clampTo8bit(Y + 1.772 * (Cb - 128));
	              }
	              data[offset++] = C;
	              data[offset++] = M;
	              data[offset++] = Ye;
	              data[offset++] = K;
	            }
	          }
	          break;
	        default:
	          throw 'Unsupported color mode';
	      }
	      return data;
	    },
	    copyToImageData: function copyToImageData(imageData) {
	      var width = imageData.width, height = imageData.height;
	      var imageDataArray = imageData.data;
	      var data = this.getData(width, height);
	      var i = 0, j = 0, x, y;
	      var Y, K, C, M, R, G, B;
	      switch (this.components.length) {
	        case 1:
	          for (y = 0; y < height; y++) {
	            for (x = 0; x < width; x++) {
	              Y = data[i++];
	
	              imageDataArray[j++] = Y;
	              imageDataArray[j++] = Y;
	              imageDataArray[j++] = Y;
	              imageDataArray[j++] = 255;
	            }
	          }
	          break;
	        case 3:
	          for (y = 0; y < height; y++) {
	            for (x = 0; x < width; x++) {
	              R = data[i++];
	              G = data[i++];
	              B = data[i++];
	
	              imageDataArray[j++] = R;
	              imageDataArray[j++] = G;
	              imageDataArray[j++] = B;
	              imageDataArray[j++] = 255;
	            }
	          }
	          break;
	        case 4:
	          for (y = 0; y < height; y++) {
	            for (x = 0; x < width; x++) {
	              C = data[i++];
	              M = data[i++];
	              Y = data[i++];
	              K = data[i++];
	
	              R = 255 - clampTo8bit(C * (1 - K / 255) + K);
	              G = 255 - clampTo8bit(M * (1 - K / 255) + K);
	              B = 255 - clampTo8bit(Y * (1 - K / 255) + K);
	
	              imageDataArray[j++] = R;
	              imageDataArray[j++] = G;
	              imageDataArray[j++] = B;
	              imageDataArray[j++] = 255;
	            }
	          }
	          break;
	        default:
	          throw 'Unsupported color mode';
	      }
	    }
	  };
	
	  return constructor;
	})();
	module.exports = decode;
	
	function decode(jpegData) {
	  var arr = new Uint8Array(jpegData);
	  var decoder = new JpegImage();
	  decoder.parse(arr);
	  var data =  decoder.getData(decoder.width, decoder.height);
	  var buf = new Buffer(decoder.width * decoder.height * 4);
	  var n = 0;
	  for (var i = 0; i < buf.length; i++) {
	    buf[i + (i/3 | 0)] = data[n++];
	    if (i % 4 == 3) buf[i] = 255;
	  }
	  return {
	    data: buf,
	    width: decoder.width,
	    height: decoder.height
	  };
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, process) {'use strict';
	
	var util = __webpack_require__(197);
	var Stream = __webpack_require__(287);
	var Parser = __webpack_require__(352);
	var Packer = __webpack_require__(384);
	var PNGSync = __webpack_require__(388);
	
	
	var PNG = exports.PNG = function(options) {
	  Stream.call(this);
	
	  options = options || {}; // eslint-disable-line no-param-reassign
	
	  this.width = options.width || 0;
	  this.height = options.height || 0;
	
	  this.data = this.width > 0 && this.height > 0 ?
	    new Buffer(4 * this.width * this.height) : null;
	
	  if (options.fill && this.data) {
	    this.data.fill(0);
	  }
	
	  this.gamma = 0;
	  this.readable = this.writable = true;
	
	  this._parser = new Parser(options);
	
	  this._parser.on('error', this.emit.bind(this, 'error'));
	  this._parser.on('close', this._handleClose.bind(this));
	  this._parser.on('metadata', this._metadata.bind(this));
	  this._parser.on('gamma', this._gamma.bind(this));
	  this._parser.on('parsed', function(data) {
	    this.data = data;
	    this.emit('parsed', data);
	  }.bind(this));
	
	  this._packer = new Packer(options);
	  this._packer.on('data', this.emit.bind(this, 'data'));
	  this._packer.on('end', this.emit.bind(this, 'end'));
	  this._parser.on('close', this._handleClose.bind(this));
	  this._packer.on('error', this.emit.bind(this, 'error'));
	
	};
	util.inherits(PNG, Stream);
	
	PNG.sync = PNGSync;
	
	PNG.prototype.pack = function() {
	
	  if (!this.data || !this.data.length) {
	    this.emit('error', 'No data provided');
	    return this;
	  }
	
	  process.nextTick(function() {
	    this._packer.pack(this.data, this.width, this.height, this.gamma);
	  }.bind(this));
	
	  return this;
	};
	
	
	PNG.prototype.parse = function(data, callback) {
	
	  if (callback) {
	    var onParsed, onError;
	
	    onParsed = function(parsedData) {
	      this.removeListener('error', onError);
	
	      this.data = parsedData;
	      callback(null, this);
	    }.bind(this);
	
	    onError = function(err) {
	      this.removeListener('parsed', onParsed);
	
	      callback(err, null);
	    }.bind(this);
	
	    this.once('parsed', onParsed);
	    this.once('error', onError);
	  }
	
	  this.end(data);
	  return this;
	};
	
	PNG.prototype.write = function(data) {
	  this._parser.write(data);
	  return true;
	};
	
	PNG.prototype.end = function(data) {
	  this._parser.end(data);
	};
	
	PNG.prototype._metadata = function(metadata) {
	  this.width = metadata.width;
	  this.height = metadata.height;
	
	  this.emit('metadata', metadata);
	};
	
	PNG.prototype._gamma = function(gamma) {
	  this.gamma = gamma;
	};
	
	PNG.prototype._handleClose = function() {
	  if (!this._parser.writable && !this._packer.readable) {
	    this.emit('close');
	  }
	};
	
	
	PNG.bitblt = function(src, dst, srcX, srcY, width, height, deltaX, deltaY) { // eslint-disable-line max-params
	
	  if (srcX > src.width || srcY > src.height || srcX + width > src.width || srcY + height > src.height) {
	    throw new Error('bitblt reading outside image');
	  }
	
	  if (deltaX > dst.width || deltaY > dst.height || deltaX + width > dst.width || deltaY + height > dst.height) {
	    throw new Error('bitblt writing outside image');
	  }
	
	  for (var y = 0; y < height; y++) {
	    src.data.copy(dst.data,
	      ((deltaY + y) * dst.width + deltaX) << 2,
	      ((srcY + y) * src.width + srcX) << 2,
	      ((srcY + y) * src.width + srcX + width) << 2
	    );
	  }
	};
	
	
	PNG.prototype.bitblt = function(dst, srcX, srcY, width, height, deltaX, deltaY) { // eslint-disable-line max-params
	
	  PNG.bitblt(this, dst, srcX, srcY, width, height, deltaX, deltaY);
	  return this;
	};
	
	PNG.adjustGamma = function(src) {
	  if (src.gamma) {
	    for (var y = 0; y < src.height; y++) {
	      for (var x = 0; x < src.width; x++) {
	        var idx = (src.width * y + x) << 2;
	
	        for (var i = 0; i < 3; i++) {
	          var sample = src.data[idx + i] / 255;
	          sample = Math.pow(sample, 1 / 2.2 / src.gamma);
	          src.data[idx + i] = Math.round(sample * 255);
	        }
	      }
	    }
	    src.gamma = 0;
	  }
	};
	
	PNG.prototype.adjustGamma = function() {
	  PNG.adjustGamma(this);
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer, __webpack_require__(6)))

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var util = __webpack_require__(197);
	var zlib = __webpack_require__(353);
	var ChunkStream = __webpack_require__(374);
	var FilterAsync = __webpack_require__(375);
	var Parser = __webpack_require__(379);
	var bitmapper = __webpack_require__(382);
	var formatNormaliser = __webpack_require__(383);
	
	var ParserAsync = module.exports = function(options) {
	  ChunkStream.call(this);
	
	  this._parser = new Parser(options, {
	    read: this.read.bind(this),
	    error: this._handleError.bind(this),
	    metadata: this._handleMetaData.bind(this),
	    gamma: this.emit.bind(this, 'gamma'),
	    palette: this._handlePalette.bind(this),
	    transColor: this._handleTransColor.bind(this),
	    finished: this._finished.bind(this),
	    inflateData: this._inflateData.bind(this)
	  });
	  this._options = options;
	  this.writable = true;
	
	  this._parser.start();
	};
	util.inherits(ParserAsync, ChunkStream);
	
	
	ParserAsync.prototype._handleError = function(err) {
	
	  this.emit('error', err);
	
	  this.writable = false;
	
	  this.destroy();
	
	  if (this._inflate && this._inflate.destroy) {
	    this._inflate.destroy();
	  }
	
	  this.errord = true;
	};
	
	ParserAsync.prototype._inflateData = function(data) {
	  if (!this._inflate) {
	    this._inflate = zlib.createInflate();
	
	    this._inflate.on('error', this.emit.bind(this, 'error'));
	    this._filter.on('complete', this._complete.bind(this));
	
	    this._inflate.pipe(this._filter);
	  }
	  this._inflate.write(data);
	};
	
	ParserAsync.prototype._handleMetaData = function(metaData) {
	
	  this.emit('metadata', metaData);
	
	  this._bitmapInfo = Object.create(metaData);
	
	  this._filter = new FilterAsync(this._bitmapInfo);
	};
	
	ParserAsync.prototype._handleTransColor = function(transColor) {
	  this._bitmapInfo.transColor = transColor;
	};
	
	ParserAsync.prototype._handlePalette = function(palette) {
	  this._bitmapInfo.palette = palette;
	};
	
	
	ParserAsync.prototype._finished = function() {
	  if (this.errord) {
	    return;
	  }
	
	  if (!this._inflate) {
	    this.emit('error', 'No Inflate block');
	  }
	  else {
	    // no more data to inflate
	    this._inflate.end();
	  }
	  this.destroySoon();
	};
	
	ParserAsync.prototype._complete = function(filteredData) {
	
	  if (this.errord) {
	    return;
	  }
	
	  try {
	    var bitmapData = bitmapper.dataToBitMap(filteredData, this._bitmapInfo);
	
	    var normalisedBitmapData = formatNormaliser(bitmapData, this._bitmapInfo);
	    bitmapData = null;
	  }
	  catch (ex) {
	    this._handleError(ex);
	    return;
	  }
	
	  this.emit('parsed', normalisedBitmapData);
	};


/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	var Transform = __webpack_require__(354);
	
	var binding = __webpack_require__(362);
	var util = __webpack_require__(197);
	var assert = __webpack_require__(196).ok;
	
	// zlib doesn't provide these, so kludge them in following the same
	// const naming scheme zlib uses.
	binding.Z_MIN_WINDOWBITS = 8;
	binding.Z_MAX_WINDOWBITS = 15;
	binding.Z_DEFAULT_WINDOWBITS = 15;
	
	// fewer than 64 bytes per chunk is stupid.
	// technically it could work with as few as 8, but even 64 bytes
	// is absurdly low.  Usually a MB or more is best.
	binding.Z_MIN_CHUNK = 64;
	binding.Z_MAX_CHUNK = Infinity;
	binding.Z_DEFAULT_CHUNK = (16 * 1024);
	
	binding.Z_MIN_MEMLEVEL = 1;
	binding.Z_MAX_MEMLEVEL = 9;
	binding.Z_DEFAULT_MEMLEVEL = 8;
	
	binding.Z_MIN_LEVEL = -1;
	binding.Z_MAX_LEVEL = 9;
	binding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;
	
	// expose all the zlib constants
	Object.keys(binding).forEach(function(k) {
	  if (k.match(/^Z/)) exports[k] = binding[k];
	});
	
	// translation table for return codes.
	exports.codes = {
	  Z_OK: binding.Z_OK,
	  Z_STREAM_END: binding.Z_STREAM_END,
	  Z_NEED_DICT: binding.Z_NEED_DICT,
	  Z_ERRNO: binding.Z_ERRNO,
	  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,
	  Z_DATA_ERROR: binding.Z_DATA_ERROR,
	  Z_MEM_ERROR: binding.Z_MEM_ERROR,
	  Z_BUF_ERROR: binding.Z_BUF_ERROR,
	  Z_VERSION_ERROR: binding.Z_VERSION_ERROR
	};
	
	Object.keys(exports.codes).forEach(function(k) {
	  exports.codes[exports.codes[k]] = k;
	});
	
	exports.Deflate = Deflate;
	exports.Inflate = Inflate;
	exports.Gzip = Gzip;
	exports.Gunzip = Gunzip;
	exports.DeflateRaw = DeflateRaw;
	exports.InflateRaw = InflateRaw;
	exports.Unzip = Unzip;
	
	exports.createDeflate = function(o) {
	  return new Deflate(o);
	};
	
	exports.createInflate = function(o) {
	  return new Inflate(o);
	};
	
	exports.createDeflateRaw = function(o) {
	  return new DeflateRaw(o);
	};
	
	exports.createInflateRaw = function(o) {
	  return new InflateRaw(o);
	};
	
	exports.createGzip = function(o) {
	  return new Gzip(o);
	};
	
	exports.createGunzip = function(o) {
	  return new Gunzip(o);
	};
	
	exports.createUnzip = function(o) {
	  return new Unzip(o);
	};
	
	
	// Convenience methods.
	// compress/decompress a string or buffer in one step.
	exports.deflate = function(buffer, opts, callback) {
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  }
	  return zlibBuffer(new Deflate(opts), buffer, callback);
	};
	
	exports.deflateSync = function(buffer, opts) {
	  return zlibBufferSync(new Deflate(opts), buffer);
	};
	
	exports.gzip = function(buffer, opts, callback) {
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  }
	  return zlibBuffer(new Gzip(opts), buffer, callback);
	};
	
	exports.gzipSync = function(buffer, opts) {
	  return zlibBufferSync(new Gzip(opts), buffer);
	};
	
	exports.deflateRaw = function(buffer, opts, callback) {
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  }
	  return zlibBuffer(new DeflateRaw(opts), buffer, callback);
	};
	
	exports.deflateRawSync = function(buffer, opts) {
	  return zlibBufferSync(new DeflateRaw(opts), buffer);
	};
	
	exports.unzip = function(buffer, opts, callback) {
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  }
	  return zlibBuffer(new Unzip(opts), buffer, callback);
	};
	
	exports.unzipSync = function(buffer, opts) {
	  return zlibBufferSync(new Unzip(opts), buffer);
	};
	
	exports.inflate = function(buffer, opts, callback) {
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  }
	  return zlibBuffer(new Inflate(opts), buffer, callback);
	};
	
	exports.inflateSync = function(buffer, opts) {
	  return zlibBufferSync(new Inflate(opts), buffer);
	};
	
	exports.gunzip = function(buffer, opts, callback) {
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  }
	  return zlibBuffer(new Gunzip(opts), buffer, callback);
	};
	
	exports.gunzipSync = function(buffer, opts) {
	  return zlibBufferSync(new Gunzip(opts), buffer);
	};
	
	exports.inflateRaw = function(buffer, opts, callback) {
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  }
	  return zlibBuffer(new InflateRaw(opts), buffer, callback);
	};
	
	exports.inflateRawSync = function(buffer, opts) {
	  return zlibBufferSync(new InflateRaw(opts), buffer);
	};
	
	function zlibBuffer(engine, buffer, callback) {
	  var buffers = [];
	  var nread = 0;
	
	  engine.on('error', onError);
	  engine.on('end', onEnd);
	
	  engine.end(buffer);
	  flow();
	
	  function flow() {
	    var chunk;
	    while (null !== (chunk = engine.read())) {
	      buffers.push(chunk);
	      nread += chunk.length;
	    }
	    engine.once('readable', flow);
	  }
	
	  function onError(err) {
	    engine.removeListener('end', onEnd);
	    engine.removeListener('readable', flow);
	    callback(err);
	  }
	
	  function onEnd() {
	    var buf = Buffer.concat(buffers, nread);
	    buffers = [];
	    callback(null, buf);
	    engine.close();
	  }
	}
	
	function zlibBufferSync(engine, buffer) {
	  if (typeof buffer === 'string')
	    buffer = new Buffer(buffer);
	  if (!Buffer.isBuffer(buffer))
	    throw new TypeError('Not a string or buffer');
	
	  var flushFlag = binding.Z_FINISH;
	
	  return engine._processChunk(buffer, flushFlag);
	}
	
	// generic zlib
	// minimal 2-byte header
	function Deflate(opts) {
	  if (!(this instanceof Deflate)) return new Deflate(opts);
	  Zlib.call(this, opts, binding.DEFLATE);
	}
	
	function Inflate(opts) {
	  if (!(this instanceof Inflate)) return new Inflate(opts);
	  Zlib.call(this, opts, binding.INFLATE);
	}
	
	
	
	// gzip - bigger header, same deflate compression
	function Gzip(opts) {
	  if (!(this instanceof Gzip)) return new Gzip(opts);
	  Zlib.call(this, opts, binding.GZIP);
	}
	
	function Gunzip(opts) {
	  if (!(this instanceof Gunzip)) return new Gunzip(opts);
	  Zlib.call(this, opts, binding.GUNZIP);
	}
	
	
	
	// raw - no header
	function DeflateRaw(opts) {
	  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);
	  Zlib.call(this, opts, binding.DEFLATERAW);
	}
	
	function InflateRaw(opts) {
	  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);
	  Zlib.call(this, opts, binding.INFLATERAW);
	}
	
	
	// auto-detect header.
	function Unzip(opts) {
	  if (!(this instanceof Unzip)) return new Unzip(opts);
	  Zlib.call(this, opts, binding.UNZIP);
	}
	
	
	// the Zlib class they all inherit from
	// This thing manages the queue of requests, and returns
	// true or false if there is anything in the queue when
	// you call the .write() method.
	
	function Zlib(opts, mode) {
	  this._opts = opts = opts || {};
	  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;
	
	  Transform.call(this, opts);
	
	  if (opts.flush) {
	    if (opts.flush !== binding.Z_NO_FLUSH &&
	        opts.flush !== binding.Z_PARTIAL_FLUSH &&
	        opts.flush !== binding.Z_SYNC_FLUSH &&
	        opts.flush !== binding.Z_FULL_FLUSH &&
	        opts.flush !== binding.Z_FINISH &&
	        opts.flush !== binding.Z_BLOCK) {
	      throw new Error('Invalid flush flag: ' + opts.flush);
	    }
	  }
	  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;
	
	  if (opts.chunkSize) {
	    if (opts.chunkSize < exports.Z_MIN_CHUNK ||
	        opts.chunkSize > exports.Z_MAX_CHUNK) {
	      throw new Error('Invalid chunk size: ' + opts.chunkSize);
	    }
	  }
	
	  if (opts.windowBits) {
	    if (opts.windowBits < exports.Z_MIN_WINDOWBITS ||
	        opts.windowBits > exports.Z_MAX_WINDOWBITS) {
	      throw new Error('Invalid windowBits: ' + opts.windowBits);
	    }
	  }
	
	  if (opts.level) {
	    if (opts.level < exports.Z_MIN_LEVEL ||
	        opts.level > exports.Z_MAX_LEVEL) {
	      throw new Error('Invalid compression level: ' + opts.level);
	    }
	  }
	
	  if (opts.memLevel) {
	    if (opts.memLevel < exports.Z_MIN_MEMLEVEL ||
	        opts.memLevel > exports.Z_MAX_MEMLEVEL) {
	      throw new Error('Invalid memLevel: ' + opts.memLevel);
	    }
	  }
	
	  if (opts.strategy) {
	    if (opts.strategy != exports.Z_FILTERED &&
	        opts.strategy != exports.Z_HUFFMAN_ONLY &&
	        opts.strategy != exports.Z_RLE &&
	        opts.strategy != exports.Z_FIXED &&
	        opts.strategy != exports.Z_DEFAULT_STRATEGY) {
	      throw new Error('Invalid strategy: ' + opts.strategy);
	    }
	  }
	
	  if (opts.dictionary) {
	    if (!Buffer.isBuffer(opts.dictionary)) {
	      throw new Error('Invalid dictionary: it should be a Buffer instance');
	    }
	  }
	
	  this._binding = new binding.Zlib(mode);
	
	  var self = this;
	  this._hadError = false;
	  this._binding.onerror = function(message, errno) {
	    // there is no way to cleanly recover.
	    // continuing only obscures problems.
	    self._binding = null;
	    self._hadError = true;
	
	    var error = new Error(message);
	    error.errno = errno;
	    error.code = exports.codes[errno];
	    self.emit('error', error);
	  };
	
	  var level = exports.Z_DEFAULT_COMPRESSION;
	  if (typeof opts.level === 'number') level = opts.level;
	
	  var strategy = exports.Z_DEFAULT_STRATEGY;
	  if (typeof opts.strategy === 'number') strategy = opts.strategy;
	
	  this._binding.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS,
	                     level,
	                     opts.memLevel || exports.Z_DEFAULT_MEMLEVEL,
	                     strategy,
	                     opts.dictionary);
	
	  this._buffer = new Buffer(this._chunkSize);
	  this._offset = 0;
	  this._closed = false;
	  this._level = level;
	  this._strategy = strategy;
	
	  this.once('end', this.close);
	}
	
	util.inherits(Zlib, Transform);
	
	Zlib.prototype.params = function(level, strategy, callback) {
	  if (level < exports.Z_MIN_LEVEL ||
	      level > exports.Z_MAX_LEVEL) {
	    throw new RangeError('Invalid compression level: ' + level);
	  }
	  if (strategy != exports.Z_FILTERED &&
	      strategy != exports.Z_HUFFMAN_ONLY &&
	      strategy != exports.Z_RLE &&
	      strategy != exports.Z_FIXED &&
	      strategy != exports.Z_DEFAULT_STRATEGY) {
	    throw new TypeError('Invalid strategy: ' + strategy);
	  }
	
	  if (this._level !== level || this._strategy !== strategy) {
	    var self = this;
	    this.flush(binding.Z_SYNC_FLUSH, function() {
	      self._binding.params(level, strategy);
	      if (!self._hadError) {
	        self._level = level;
	        self._strategy = strategy;
	        if (callback) callback();
	      }
	    });
	  } else {
	    process.nextTick(callback);
	  }
	};
	
	Zlib.prototype.reset = function() {
	  return this._binding.reset();
	};
	
	// This is the _flush function called by the transform class,
	// internally, when the last chunk has been written.
	Zlib.prototype._flush = function(callback) {
	  this._transform(new Buffer(0), '', callback);
	};
	
	Zlib.prototype.flush = function(kind, callback) {
	  var ws = this._writableState;
	
	  if (typeof kind === 'function' || (kind === void 0 && !callback)) {
	    callback = kind;
	    kind = binding.Z_FULL_FLUSH;
	  }
	
	  if (ws.ended) {
	    if (callback)
	      process.nextTick(callback);
	  } else if (ws.ending) {
	    if (callback)
	      this.once('end', callback);
	  } else if (ws.needDrain) {
	    var self = this;
	    this.once('drain', function() {
	      self.flush(callback);
	    });
	  } else {
	    this._flushFlag = kind;
	    this.write(new Buffer(0), '', callback);
	  }
	};
	
	Zlib.prototype.close = function(callback) {
	  if (callback)
	    process.nextTick(callback);
	
	  if (this._closed)
	    return;
	
	  this._closed = true;
	
	  this._binding.close();
	
	  var self = this;
	  process.nextTick(function() {
	    self.emit('close');
	  });
	};
	
	Zlib.prototype._transform = function(chunk, encoding, cb) {
	  var flushFlag;
	  var ws = this._writableState;
	  var ending = ws.ending || ws.ended;
	  var last = ending && (!chunk || ws.length === chunk.length);
	
	  if (!chunk === null && !Buffer.isBuffer(chunk))
	    return cb(new Error('invalid input'));
	
	  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag.
	  // If it's explicitly flushing at some other time, then we use
	  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression
	  // goodness.
	  if (last)
	    flushFlag = binding.Z_FINISH;
	  else {
	    flushFlag = this._flushFlag;
	    // once we've flushed the last of the queue, stop flushing and
	    // go back to the normal behavior.
	    if (chunk.length >= ws.length) {
	      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;
	    }
	  }
	
	  var self = this;
	  this._processChunk(chunk, flushFlag, cb);
	};
	
	Zlib.prototype._processChunk = function(chunk, flushFlag, cb) {
	  var availInBefore = chunk && chunk.length;
	  var availOutBefore = this._chunkSize - this._offset;
	  var inOff = 0;
	
	  var self = this;
	
	  var async = typeof cb === 'function';
	
	  if (!async) {
	    var buffers = [];
	    var nread = 0;
	
	    var error;
	    this.on('error', function(er) {
	      error = er;
	    });
	
	    do {
	      var res = this._binding.writeSync(flushFlag,
	                                        chunk, // in
	                                        inOff, // in_off
	                                        availInBefore, // in_len
	                                        this._buffer, // out
	                                        this._offset, //out_off
	                                        availOutBefore); // out_len
	    } while (!this._hadError && callback(res[0], res[1]));
	
	    if (this._hadError) {
	      throw error;
	    }
	
	    var buf = Buffer.concat(buffers, nread);
	    this.close();
	
	    return buf;
	  }
	
	  var req = this._binding.write(flushFlag,
	                                chunk, // in
	                                inOff, // in_off
	                                availInBefore, // in_len
	                                this._buffer, // out
	                                this._offset, //out_off
	                                availOutBefore); // out_len
	
	  req.buffer = chunk;
	  req.callback = callback;
	
	  function callback(availInAfter, availOutAfter) {
	    if (self._hadError)
	      return;
	
	    var have = availOutBefore - availOutAfter;
	    assert(have >= 0, 'have should not go down');
	
	    if (have > 0) {
	      var out = self._buffer.slice(self._offset, self._offset + have);
	      self._offset += have;
	      // serve some output to the consumer.
	      if (async) {
	        self.push(out);
	      } else {
	        buffers.push(out);
	        nread += out.length;
	      }
	    }
	
	    // exhausted the output buffer, or used all the input create a new one.
	    if (availOutAfter === 0 || self._offset >= self._chunkSize) {
	      availOutBefore = self._chunkSize;
	      self._offset = 0;
	      self._buffer = new Buffer(self._chunkSize);
	    }
	
	    if (availOutAfter === 0) {
	      // Not actually done.  Need to reprocess.
	      // Also, update the availInBefore to the availInAfter value,
	      // so that if we have to hit it a third (fourth, etc.) time,
	      // it'll have the correct byte counts.
	      inOff += (availInBefore - availInAfter);
	      availInBefore = availInAfter;
	
	      if (!async)
	        return true;
	
	      var newReq = self._binding.write(flushFlag,
	                                       chunk,
	                                       inOff,
	                                       availInBefore,
	                                       self._buffer,
	                                       self._offset,
	                                       self._chunkSize);
	      newReq.callback = callback; // this same function
	      newReq.buffer = chunk;
	      return;
	    }
	
	    if (!async)
	      return false;
	
	    // finished with the chunk.
	    cb();
	  }
	};
	
	util.inherits(Deflate, Zlib);
	util.inherits(Inflate, Zlib);
	util.inherits(Gzip, Zlib);
	util.inherits(Gunzip, Zlib);
	util.inherits(DeflateRaw, Zlib);
	util.inherits(InflateRaw, Zlib);
	util.inherits(Unzip, Zlib);
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer, __webpack_require__(6)))

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(355)


/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	// a transform stream is a readable/writable stream where you do
	// something with the data.  Sometimes it's called a "filter",
	// but that's not a great name for it, since that implies a thing where
	// some bits pass through, and others are simply ignored.  (That would
	// be a valid example of a transform, of course.)
	//
	// While the output is causally related to the input, it's not a
	// necessarily symmetric or synchronous transformation.  For example,
	// a zlib stream might take multiple plain-text writes(), and then
	// emit a single compressed chunk some time in the future.
	//
	// Here's how this works:
	//
	// The Transform stream has all the aspects of the readable and writable
	// stream classes.  When you write(chunk), that calls _write(chunk,cb)
	// internally, and returns false if there's a lot of pending writes
	// buffered up.  When you call read(), that calls _read(n) until
	// there's enough pending readable data buffered up.
	//
	// In a transform stream, the written data is placed in a buffer.  When
	// _read(n) is called, it transforms the queued up data, calling the
	// buffered _write cb's as it consumes chunks.  If consuming a single
	// written chunk would result in multiple output chunks, then the first
	// outputted bit calls the readcb, and subsequent chunks just go into
	// the read buffer, and will cause it to emit 'readable' if necessary.
	//
	// This way, back-pressure is actually determined by the reading side,
	// since _read has to be called to start processing a new chunk.  However,
	// a pathological inflate type of transform can cause excessive buffering
	// here.  For example, imagine a stream where every byte of input is
	// interpreted as an integer from 0-255, and then results in that many
	// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
	// 1kb of data being output.  In this case, you could write a very small
	// amount of input, and end up with a very large amount of output.  In
	// such a pathological inflating mechanism, there'd be no way to tell
	// the system to stop doing the transform.  A single 4MB write could
	// cause the system to run out of memory.
	//
	// However, even in such a pathological case, only a single written chunk
	// would be consumed, and then the rest would wait (un-transformed) until
	// the results of the previous transformed chunk were consumed.
	
	'use strict';
	
	module.exports = Transform;
	
	var Duplex = __webpack_require__(356);
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	util.inherits(Transform, Duplex);
	
	function TransformState(stream) {
	  this.afterTransform = function (er, data) {
	    return afterTransform(stream, er, data);
	  };
	
	  this.needTransform = false;
	  this.transforming = false;
	  this.writecb = null;
	  this.writechunk = null;
	  this.writeencoding = null;
	}
	
	function afterTransform(stream, er, data) {
	  var ts = stream._transformState;
	  ts.transforming = false;
	
	  var cb = ts.writecb;
	
	  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));
	
	  ts.writechunk = null;
	  ts.writecb = null;
	
	  if (data !== null && data !== undefined) stream.push(data);
	
	  cb(er);
	
	  var rs = stream._readableState;
	  rs.reading = false;
	  if (rs.needReadable || rs.length < rs.highWaterMark) {
	    stream._read(rs.highWaterMark);
	  }
	}
	
	function Transform(options) {
	  if (!(this instanceof Transform)) return new Transform(options);
	
	  Duplex.call(this, options);
	
	  this._transformState = new TransformState(this);
	
	  var stream = this;
	
	  // start out asking for a readable event once data is transformed.
	  this._readableState.needReadable = true;
	
	  // we have implemented the _read method, and done the other things
	  // that Readable wants before the first _read call, so unset the
	  // sync guard flag.
	  this._readableState.sync = false;
	
	  if (options) {
	    if (typeof options.transform === 'function') this._transform = options.transform;
	
	    if (typeof options.flush === 'function') this._flush = options.flush;
	  }
	
	  // When the writable side finishes, then flush out anything remaining.
	  this.once('prefinish', function () {
	    if (typeof this._flush === 'function') this._flush(function (er, data) {
	      done(stream, er, data);
	    });else done(stream);
	  });
	}
	
	Transform.prototype.push = function (chunk, encoding) {
	  this._transformState.needTransform = false;
	  return Duplex.prototype.push.call(this, chunk, encoding);
	};
	
	// This is the part where you do stuff!
	// override this function in implementation classes.
	// 'chunk' is an input chunk.
	//
	// Call `push(newChunk)` to pass along transformed output
	// to the readable side.  You may call 'push' zero or more times.
	//
	// Call `cb(err)` when you are done with this chunk.  If you pass
	// an error, then that'll put the hurt on the whole operation.  If you
	// never call cb(), then you'll never get another chunk.
	Transform.prototype._transform = function (chunk, encoding, cb) {
	  throw new Error('_transform() is not implemented');
	};
	
	Transform.prototype._write = function (chunk, encoding, cb) {
	  var ts = this._transformState;
	  ts.writecb = cb;
	  ts.writechunk = chunk;
	  ts.writeencoding = encoding;
	  if (!ts.transforming) {
	    var rs = this._readableState;
	    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
	  }
	};
	
	// Doesn't matter what the args are here.
	// _transform does all the work.
	// That we got here means that the readable side wants more data.
	Transform.prototype._read = function (n) {
	  var ts = this._transformState;
	
	  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
	    ts.transforming = true;
	    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
	  } else {
	    // mark that we need a transform, so that any data that comes in
	    // will get processed, now that we've asked for it.
	    ts.needTransform = true;
	  }
	};
	
	function done(stream, er, data) {
	  if (er) return stream.emit('error', er);
	
	  if (data !== null && data !== undefined) stream.push(data);
	
	  // if there's nothing in the write buffer, then that means
	  // that nothing more will ever be provided
	  var ws = stream._writableState;
	  var ts = stream._transformState;
	
	  if (ws.length) throw new Error('Calling transform done when ws.length != 0');
	
	  if (ts.transforming) throw new Error('Calling transform done when still transforming');
	
	  return stream.push(null);
	}

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	// a duplex stream is just a stream that is both readable and writable.
	// Since JS doesn't have multiple prototypal inheritance, this class
	// prototypally inherits from Readable, and then parasitically from
	// Writable.
	
	'use strict';
	
	/*<replacement>*/
	
	var objectKeys = Object.keys || function (obj) {
	  var keys = [];
	  for (var key in obj) {
	    keys.push(key);
	  }return keys;
	};
	/*</replacement>*/
	
	module.exports = Duplex;
	
	/*<replacement>*/
	var processNextTick = __webpack_require__(292);
	/*</replacement>*/
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	var Readable = __webpack_require__(357);
	var Writable = __webpack_require__(361);
	
	util.inherits(Duplex, Readable);
	
	var keys = objectKeys(Writable.prototype);
	for (var v = 0; v < keys.length; v++) {
	  var method = keys[v];
	  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
	}
	
	function Duplex(options) {
	  if (!(this instanceof Duplex)) return new Duplex(options);
	
	  Readable.call(this, options);
	  Writable.call(this, options);
	
	  if (options && options.readable === false) this.readable = false;
	
	  if (options && options.writable === false) this.writable = false;
	
	  this.allowHalfOpen = true;
	  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;
	
	  this.once('end', onend);
	}
	
	// the no-half-open enforcer
	function onend() {
	  // if we allow half-open state, or if the writable side ended,
	  // then we're ok.
	  if (this.allowHalfOpen || this._writableState.ended) return;
	
	  // no more data can be written.
	  // But allow more writes to happen in this tick.
	  processNextTick(onEndNT, this);
	}
	
	function onEndNT(self) {
	  self.end();
	}
	
	function forEach(xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	module.exports = Readable;
	
	/*<replacement>*/
	var processNextTick = __webpack_require__(292);
	/*</replacement>*/
	
	/*<replacement>*/
	var isArray = __webpack_require__(358);
	/*</replacement>*/
	
	/*<replacement>*/
	var Duplex;
	/*</replacement>*/
	
	Readable.ReadableState = ReadableState;
	
	/*<replacement>*/
	var EE = __webpack_require__(288).EventEmitter;
	
	var EElistenerCount = function (emitter, type) {
	  return emitter.listeners(type).length;
	};
	/*</replacement>*/
	
	/*<replacement>*/
	var Stream;
	(function () {
	  try {
	    Stream = __webpack_require__(287);
	  } catch (_) {} finally {
	    if (!Stream) Stream = __webpack_require__(288).EventEmitter;
	  }
	})();
	/*</replacement>*/
	
	var Buffer = __webpack_require__(282).Buffer;
	/*<replacement>*/
	var bufferShim = __webpack_require__(294);
	/*</replacement>*/
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	/*<replacement>*/
	var debugUtil = __webpack_require__(359);
	var debug = void 0;
	if (debugUtil && debugUtil.debuglog) {
	  debug = debugUtil.debuglog('stream');
	} else {
	  debug = function () {};
	}
	/*</replacement>*/
	
	var BufferList = __webpack_require__(360);
	var StringDecoder;
	
	util.inherits(Readable, Stream);
	
	function prependListener(emitter, event, fn) {
	  // Sadly this is not cacheable as some libraries bundle their own
	  // event emitter implementation with them.
	  if (typeof emitter.prependListener === 'function') {
	    return emitter.prependListener(event, fn);
	  } else {
	    // This is a hack to make sure that our error handler is attached before any
	    // userland ones.  NEVER DO THIS. This is here only because this code needs
	    // to continue to work with older versions of Node.js that do not include
	    // the prependListener() method. The goal is to eventually remove this hack.
	    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
	  }
	}
	
	function ReadableState(options, stream) {
	  Duplex = Duplex || __webpack_require__(356);
	
	  options = options || {};
	
	  // object stream flag. Used to make read(n) ignore n and to
	  // make all the buffer merging and length checks go away
	  this.objectMode = !!options.objectMode;
	
	  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;
	
	  // the point at which it stops calling _read() to fill the buffer
	  // Note: 0 is a valid value, means "don't call _read preemptively ever"
	  var hwm = options.highWaterMark;
	  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;
	
	  // cast to ints.
	  this.highWaterMark = ~ ~this.highWaterMark;
	
	  // A linked list is used to store data chunks instead of an array because the
	  // linked list can remove elements from the beginning faster than
	  // array.shift()
	  this.buffer = new BufferList();
	  this.length = 0;
	  this.pipes = null;
	  this.pipesCount = 0;
	  this.flowing = null;
	  this.ended = false;
	  this.endEmitted = false;
	  this.reading = false;
	
	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;
	
	  // whenever we return null, then we set a flag to say
	  // that we're awaiting a 'readable' event emission.
	  this.needReadable = false;
	  this.emittedReadable = false;
	  this.readableListening = false;
	  this.resumeScheduled = false;
	
	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';
	
	  // when piping, we only care about 'readable' events that happen
	  // after read()ing all the bytes and not getting any pushback.
	  this.ranOut = false;
	
	  // the number of writers that are awaiting a drain event in .pipe()s
	  this.awaitDrain = 0;
	
	  // if true, a maybeReadMore has been scheduled
	  this.readingMore = false;
	
	  this.decoder = null;
	  this.encoding = null;
	  if (options.encoding) {
	    if (!StringDecoder) StringDecoder = __webpack_require__(303).StringDecoder;
	    this.decoder = new StringDecoder(options.encoding);
	    this.encoding = options.encoding;
	  }
	}
	
	function Readable(options) {
	  Duplex = Duplex || __webpack_require__(356);
	
	  if (!(this instanceof Readable)) return new Readable(options);
	
	  this._readableState = new ReadableState(options, this);
	
	  // legacy
	  this.readable = true;
	
	  if (options && typeof options.read === 'function') this._read = options.read;
	
	  Stream.call(this);
	}
	
	// Manually shove something into the read() buffer.
	// This returns true if the highWaterMark has not been hit yet,
	// similar to how Writable.write() returns true if you should
	// write() some more.
	Readable.prototype.push = function (chunk, encoding) {
	  var state = this._readableState;
	
	  if (!state.objectMode && typeof chunk === 'string') {
	    encoding = encoding || state.defaultEncoding;
	    if (encoding !== state.encoding) {
	      chunk = bufferShim.from(chunk, encoding);
	      encoding = '';
	    }
	  }
	
	  return readableAddChunk(this, state, chunk, encoding, false);
	};
	
	// Unshift should *always* be something directly out of read()
	Readable.prototype.unshift = function (chunk) {
	  var state = this._readableState;
	  return readableAddChunk(this, state, chunk, '', true);
	};
	
	Readable.prototype.isPaused = function () {
	  return this._readableState.flowing === false;
	};
	
	function readableAddChunk(stream, state, chunk, encoding, addToFront) {
	  var er = chunkInvalid(state, chunk);
	  if (er) {
	    stream.emit('error', er);
	  } else if (chunk === null) {
	    state.reading = false;
	    onEofChunk(stream, state);
	  } else if (state.objectMode || chunk && chunk.length > 0) {
	    if (state.ended && !addToFront) {
	      var e = new Error('stream.push() after EOF');
	      stream.emit('error', e);
	    } else if (state.endEmitted && addToFront) {
	      var _e = new Error('stream.unshift() after end event');
	      stream.emit('error', _e);
	    } else {
	      var skipAdd;
	      if (state.decoder && !addToFront && !encoding) {
	        chunk = state.decoder.write(chunk);
	        skipAdd = !state.objectMode && chunk.length === 0;
	      }
	
	      if (!addToFront) state.reading = false;
	
	      // Don't add to the buffer if we've decoded to an empty string chunk and
	      // we're not in object mode
	      if (!skipAdd) {
	        // if we want the data now, just emit it.
	        if (state.flowing && state.length === 0 && !state.sync) {
	          stream.emit('data', chunk);
	          stream.read(0);
	        } else {
	          // update the buffer info.
	          state.length += state.objectMode ? 1 : chunk.length;
	          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
	
	          if (state.needReadable) emitReadable(stream);
	        }
	      }
	
	      maybeReadMore(stream, state);
	    }
	  } else if (!addToFront) {
	    state.reading = false;
	  }
	
	  return needMoreData(state);
	}
	
	// if it's past the high water mark, we can push in some more.
	// Also, if we have no data yet, we can stand some
	// more bytes.  This is to work around cases where hwm=0,
	// such as the repl.  Also, if the push() triggered a
	// readable event, and the user called read(largeNumber) such that
	// needReadable was set, then we ought to push more, so that another
	// 'readable' event will be triggered.
	function needMoreData(state) {
	  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
	}
	
	// backwards compatibility.
	Readable.prototype.setEncoding = function (enc) {
	  if (!StringDecoder) StringDecoder = __webpack_require__(303).StringDecoder;
	  this._readableState.decoder = new StringDecoder(enc);
	  this._readableState.encoding = enc;
	  return this;
	};
	
	// Don't raise the hwm > 8MB
	var MAX_HWM = 0x800000;
	function computeNewHighWaterMark(n) {
	  if (n >= MAX_HWM) {
	    n = MAX_HWM;
	  } else {
	    // Get the next highest power of 2 to prevent increasing hwm excessively in
	    // tiny amounts
	    n--;
	    n |= n >>> 1;
	    n |= n >>> 2;
	    n |= n >>> 4;
	    n |= n >>> 8;
	    n |= n >>> 16;
	    n++;
	  }
	  return n;
	}
	
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function howMuchToRead(n, state) {
	  if (n <= 0 || state.length === 0 && state.ended) return 0;
	  if (state.objectMode) return 1;
	  if (n !== n) {
	    // Only flow one buffer at a time
	    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
	  }
	  // If we're asking for more than the current hwm, then raise the hwm.
	  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
	  if (n <= state.length) return n;
	  // Don't have enough
	  if (!state.ended) {
	    state.needReadable = true;
	    return 0;
	  }
	  return state.length;
	}
	
	// you can override either this method, or the async _read(n) below.
	Readable.prototype.read = function (n) {
	  debug('read', n);
	  n = parseInt(n, 10);
	  var state = this._readableState;
	  var nOrig = n;
	
	  if (n !== 0) state.emittedReadable = false;
	
	  // if we're doing read(0) to trigger a readable event, but we
	  // already have a bunch of data in the buffer, then just trigger
	  // the 'readable' event and move on.
	  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
	    debug('read: emitReadable', state.length, state.ended);
	    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
	    return null;
	  }
	
	  n = howMuchToRead(n, state);
	
	  // if we've ended, and we're now clear, then finish it up.
	  if (n === 0 && state.ended) {
	    if (state.length === 0) endReadable(this);
	    return null;
	  }
	
	  // All the actual chunk generation logic needs to be
	  // *below* the call to _read.  The reason is that in certain
	  // synthetic stream cases, such as passthrough streams, _read
	  // may be a completely synchronous operation which may change
	  // the state of the read buffer, providing enough data when
	  // before there was *not* enough.
	  //
	  // So, the steps are:
	  // 1. Figure out what the state of things will be after we do
	  // a read from the buffer.
	  //
	  // 2. If that resulting state will trigger a _read, then call _read.
	  // Note that this may be asynchronous, or synchronous.  Yes, it is
	  // deeply ugly to write APIs this way, but that still doesn't mean
	  // that the Readable class should behave improperly, as streams are
	  // designed to be sync/async agnostic.
	  // Take note if the _read call is sync or async (ie, if the read call
	  // has returned yet), so that we know whether or not it's safe to emit
	  // 'readable' etc.
	  //
	  // 3. Actually pull the requested chunks out of the buffer and return.
	
	  // if we need a readable event, then we need to do some reading.
	  var doRead = state.needReadable;
	  debug('need readable', doRead);
	
	  // if we currently have less than the highWaterMark, then also read some
	  if (state.length === 0 || state.length - n < state.highWaterMark) {
	    doRead = true;
	    debug('length less than watermark', doRead);
	  }
	
	  // however, if we've ended, then there's no point, and if we're already
	  // reading, then it's unnecessary.
	  if (state.ended || state.reading) {
	    doRead = false;
	    debug('reading or ended', doRead);
	  } else if (doRead) {
	    debug('do read');
	    state.reading = true;
	    state.sync = true;
	    // if the length is currently zero, then we *need* a readable event.
	    if (state.length === 0) state.needReadable = true;
	    // call internal read method
	    this._read(state.highWaterMark);
	    state.sync = false;
	    // If _read pushed data synchronously, then `reading` will be false,
	    // and we need to re-evaluate how much data we can return to the user.
	    if (!state.reading) n = howMuchToRead(nOrig, state);
	  }
	
	  var ret;
	  if (n > 0) ret = fromList(n, state);else ret = null;
	
	  if (ret === null) {
	    state.needReadable = true;
	    n = 0;
	  } else {
	    state.length -= n;
	  }
	
	  if (state.length === 0) {
	    // If we have nothing in the buffer, then we want to know
	    // as soon as we *do* get something into the buffer.
	    if (!state.ended) state.needReadable = true;
	
	    // If we tried to read() past the EOF, then emit end on the next tick.
	    if (nOrig !== n && state.ended) endReadable(this);
	  }
	
	  if (ret !== null) this.emit('data', ret);
	
	  return ret;
	};
	
	function chunkInvalid(state, chunk) {
	  var er = null;
	  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {
	    er = new TypeError('Invalid non-string/buffer chunk');
	  }
	  return er;
	}
	
	function onEofChunk(stream, state) {
	  if (state.ended) return;
	  if (state.decoder) {
	    var chunk = state.decoder.end();
	    if (chunk && chunk.length) {
	      state.buffer.push(chunk);
	      state.length += state.objectMode ? 1 : chunk.length;
	    }
	  }
	  state.ended = true;
	
	  // emit 'readable' now to make sure it gets picked up.
	  emitReadable(stream);
	}
	
	// Don't emit readable right away in sync mode, because this can trigger
	// another read() call => stack overflow.  This way, it might trigger
	// a nextTick recursion warning, but that's not so bad.
	function emitReadable(stream) {
	  var state = stream._readableState;
	  state.needReadable = false;
	  if (!state.emittedReadable) {
	    debug('emitReadable', state.flowing);
	    state.emittedReadable = true;
	    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
	  }
	}
	
	function emitReadable_(stream) {
	  debug('emit readable');
	  stream.emit('readable');
	  flow(stream);
	}
	
	// at this point, the user has presumably seen the 'readable' event,
	// and called read() to consume some data.  that may have triggered
	// in turn another _read(n) call, in which case reading = true if
	// it's in progress.
	// However, if we're not ended, or reading, and the length < hwm,
	// then go ahead and try to read some more preemptively.
	function maybeReadMore(stream, state) {
	  if (!state.readingMore) {
	    state.readingMore = true;
	    processNextTick(maybeReadMore_, stream, state);
	  }
	}
	
	function maybeReadMore_(stream, state) {
	  var len = state.length;
	  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
	    debug('maybeReadMore read 0');
	    stream.read(0);
	    if (len === state.length)
	      // didn't get any data, stop spinning.
	      break;else len = state.length;
	  }
	  state.readingMore = false;
	}
	
	// abstract method.  to be overridden in specific implementation classes.
	// call cb(er, data) where data is <= n in length.
	// for virtual (non-string, non-buffer) streams, "length" is somewhat
	// arbitrary, and perhaps not very meaningful.
	Readable.prototype._read = function (n) {
	  this.emit('error', new Error('_read() is not implemented'));
	};
	
	Readable.prototype.pipe = function (dest, pipeOpts) {
	  var src = this;
	  var state = this._readableState;
	
	  switch (state.pipesCount) {
	    case 0:
	      state.pipes = dest;
	      break;
	    case 1:
	      state.pipes = [state.pipes, dest];
	      break;
	    default:
	      state.pipes.push(dest);
	      break;
	  }
	  state.pipesCount += 1;
	  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
	
	  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
	
	  var endFn = doEnd ? onend : cleanup;
	  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);
	
	  dest.on('unpipe', onunpipe);
	  function onunpipe(readable) {
	    debug('onunpipe');
	    if (readable === src) {
	      cleanup();
	    }
	  }
	
	  function onend() {
	    debug('onend');
	    dest.end();
	  }
	
	  // when the dest drains, it reduces the awaitDrain counter
	  // on the source.  This would be more elegant with a .once()
	  // handler in flow(), but adding and removing repeatedly is
	  // too slow.
	  var ondrain = pipeOnDrain(src);
	  dest.on('drain', ondrain);
	
	  var cleanedUp = false;
	  function cleanup() {
	    debug('cleanup');
	    // cleanup event handlers once the pipe is broken
	    dest.removeListener('close', onclose);
	    dest.removeListener('finish', onfinish);
	    dest.removeListener('drain', ondrain);
	    dest.removeListener('error', onerror);
	    dest.removeListener('unpipe', onunpipe);
	    src.removeListener('end', onend);
	    src.removeListener('end', cleanup);
	    src.removeListener('data', ondata);
	
	    cleanedUp = true;
	
	    // if the reader is waiting for a drain event from this
	    // specific writer, then it would cause it to never start
	    // flowing again.
	    // So, if this is awaiting a drain, then we just call it now.
	    // If we don't know, then assume that we are waiting for one.
	    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
	  }
	
	  // If the user pushes more data while we're writing to dest then we'll end up
	  // in ondata again. However, we only want to increase awaitDrain once because
	  // dest will only emit one 'drain' event for the multiple writes.
	  // => Introduce a guard on increasing awaitDrain.
	  var increasedAwaitDrain = false;
	  src.on('data', ondata);
	  function ondata(chunk) {
	    debug('ondata');
	    increasedAwaitDrain = false;
	    var ret = dest.write(chunk);
	    if (false === ret && !increasedAwaitDrain) {
	      // If the user unpiped during `dest.write()`, it is possible
	      // to get stuck in a permanently paused state if that write
	      // also returned false.
	      // => Check whether `dest` is still a piping destination.
	      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
	        debug('false write response, pause', src._readableState.awaitDrain);
	        src._readableState.awaitDrain++;
	        increasedAwaitDrain = true;
	      }
	      src.pause();
	    }
	  }
	
	  // if the dest has an error, then stop piping into it.
	  // however, don't suppress the throwing behavior for this.
	  function onerror(er) {
	    debug('onerror', er);
	    unpipe();
	    dest.removeListener('error', onerror);
	    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
	  }
	
	  // Make sure our error handler is attached before userland ones.
	  prependListener(dest, 'error', onerror);
	
	  // Both close and finish should trigger unpipe, but only once.
	  function onclose() {
	    dest.removeListener('finish', onfinish);
	    unpipe();
	  }
	  dest.once('close', onclose);
	  function onfinish() {
	    debug('onfinish');
	    dest.removeListener('close', onclose);
	    unpipe();
	  }
	  dest.once('finish', onfinish);
	
	  function unpipe() {
	    debug('unpipe');
	    src.unpipe(dest);
	  }
	
	  // tell the dest that it's being piped to
	  dest.emit('pipe', src);
	
	  // start the flow if it hasn't been started already.
	  if (!state.flowing) {
	    debug('pipe resume');
	    src.resume();
	  }
	
	  return dest;
	};
	
	function pipeOnDrain(src) {
	  return function () {
	    var state = src._readableState;
	    debug('pipeOnDrain', state.awaitDrain);
	    if (state.awaitDrain) state.awaitDrain--;
	    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
	      state.flowing = true;
	      flow(src);
	    }
	  };
	}
	
	Readable.prototype.unpipe = function (dest) {
	  var state = this._readableState;
	
	  // if we're not piping anywhere, then do nothing.
	  if (state.pipesCount === 0) return this;
	
	  // just one destination.  most common case.
	  if (state.pipesCount === 1) {
	    // passed in one, but it's not the right one.
	    if (dest && dest !== state.pipes) return this;
	
	    if (!dest) dest = state.pipes;
	
	    // got a match.
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;
	    if (dest) dest.emit('unpipe', this);
	    return this;
	  }
	
	  // slow case. multiple pipe destinations.
	
	  if (!dest) {
	    // remove all.
	    var dests = state.pipes;
	    var len = state.pipesCount;
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;
	
	    for (var i = 0; i < len; i++) {
	      dests[i].emit('unpipe', this);
	    }return this;
	  }
	
	  // try to find the right one.
	  var index = indexOf(state.pipes, dest);
	  if (index === -1) return this;
	
	  state.pipes.splice(index, 1);
	  state.pipesCount -= 1;
	  if (state.pipesCount === 1) state.pipes = state.pipes[0];
	
	  dest.emit('unpipe', this);
	
	  return this;
	};
	
	// set up data events if they are asked for
	// Ensure readable listeners eventually get something
	Readable.prototype.on = function (ev, fn) {
	  var res = Stream.prototype.on.call(this, ev, fn);
	
	  if (ev === 'data') {
	    // Start flowing on next tick if stream isn't explicitly paused
	    if (this._readableState.flowing !== false) this.resume();
	  } else if (ev === 'readable') {
	    var state = this._readableState;
	    if (!state.endEmitted && !state.readableListening) {
	      state.readableListening = state.needReadable = true;
	      state.emittedReadable = false;
	      if (!state.reading) {
	        processNextTick(nReadingNextTick, this);
	      } else if (state.length) {
	        emitReadable(this, state);
	      }
	    }
	  }
	
	  return res;
	};
	Readable.prototype.addListener = Readable.prototype.on;
	
	function nReadingNextTick(self) {
	  debug('readable nexttick read 0');
	  self.read(0);
	}
	
	// pause() and resume() are remnants of the legacy readable stream API
	// If the user uses them, then switch into old mode.
	Readable.prototype.resume = function () {
	  var state = this._readableState;
	  if (!state.flowing) {
	    debug('resume');
	    state.flowing = true;
	    resume(this, state);
	  }
	  return this;
	};
	
	function resume(stream, state) {
	  if (!state.resumeScheduled) {
	    state.resumeScheduled = true;
	    processNextTick(resume_, stream, state);
	  }
	}
	
	function resume_(stream, state) {
	  if (!state.reading) {
	    debug('resume read 0');
	    stream.read(0);
	  }
	
	  state.resumeScheduled = false;
	  state.awaitDrain = 0;
	  stream.emit('resume');
	  flow(stream);
	  if (state.flowing && !state.reading) stream.read(0);
	}
	
	Readable.prototype.pause = function () {
	  debug('call pause flowing=%j', this._readableState.flowing);
	  if (false !== this._readableState.flowing) {
	    debug('pause');
	    this._readableState.flowing = false;
	    this.emit('pause');
	  }
	  return this;
	};
	
	function flow(stream) {
	  var state = stream._readableState;
	  debug('flow', state.flowing);
	  while (state.flowing && stream.read() !== null) {}
	}
	
	// wrap an old-style stream as the async data source.
	// This is *not* part of the readable stream interface.
	// It is an ugly unfortunate mess of history.
	Readable.prototype.wrap = function (stream) {
	  var state = this._readableState;
	  var paused = false;
	
	  var self = this;
	  stream.on('end', function () {
	    debug('wrapped end');
	    if (state.decoder && !state.ended) {
	      var chunk = state.decoder.end();
	      if (chunk && chunk.length) self.push(chunk);
	    }
	
	    self.push(null);
	  });
	
	  stream.on('data', function (chunk) {
	    debug('wrapped data');
	    if (state.decoder) chunk = state.decoder.write(chunk);
	
	    // don't skip over falsy values in objectMode
	    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;
	
	    var ret = self.push(chunk);
	    if (!ret) {
	      paused = true;
	      stream.pause();
	    }
	  });
	
	  // proxy all the other methods.
	  // important when wrapping filters and duplexes.
	  for (var i in stream) {
	    if (this[i] === undefined && typeof stream[i] === 'function') {
	      this[i] = function (method) {
	        return function () {
	          return stream[method].apply(stream, arguments);
	        };
	      }(i);
	    }
	  }
	
	  // proxy certain important events.
	  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
	  forEach(events, function (ev) {
	    stream.on(ev, self.emit.bind(self, ev));
	  });
	
	  // when we try to consume some more bytes, simply unpause the
	  // underlying stream.
	  self._read = function (n) {
	    debug('wrapped _read', n);
	    if (paused) {
	      paused = false;
	      stream.resume();
	    }
	  };
	
	  return self;
	};
	
	// exposed for testing purposes only.
	Readable._fromList = fromList;
	
	// Pluck off n bytes from an array of buffers.
	// Length is the combined lengths of all the buffers in the list.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function fromList(n, state) {
	  // nothing buffered
	  if (state.length === 0) return null;
	
	  var ret;
	  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
	    // read it all, truncate the list
	    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
	    state.buffer.clear();
	  } else {
	    // read part of list
	    ret = fromListPartial(n, state.buffer, state.decoder);
	  }
	
	  return ret;
	}
	
	// Extracts only enough buffered data to satisfy the amount requested.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function fromListPartial(n, list, hasStrings) {
	  var ret;
	  if (n < list.head.data.length) {
	    // slice is the same for buffers and strings
	    ret = list.head.data.slice(0, n);
	    list.head.data = list.head.data.slice(n);
	  } else if (n === list.head.data.length) {
	    // first chunk is a perfect match
	    ret = list.shift();
	  } else {
	    // result spans more than one buffer
	    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
	  }
	  return ret;
	}
	
	// Copies a specified amount of characters from the list of buffered data
	// chunks.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function copyFromBufferString(n, list) {
	  var p = list.head;
	  var c = 1;
	  var ret = p.data;
	  n -= ret.length;
	  while (p = p.next) {
	    var str = p.data;
	    var nb = n > str.length ? str.length : n;
	    if (nb === str.length) ret += str;else ret += str.slice(0, n);
	    n -= nb;
	    if (n === 0) {
	      if (nb === str.length) {
	        ++c;
	        if (p.next) list.head = p.next;else list.head = list.tail = null;
	      } else {
	        list.head = p;
	        p.data = str.slice(nb);
	      }
	      break;
	    }
	    ++c;
	  }
	  list.length -= c;
	  return ret;
	}
	
	// Copies a specified amount of bytes from the list of buffered data chunks.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.
	function copyFromBuffer(n, list) {
	  var ret = bufferShim.allocUnsafe(n);
	  var p = list.head;
	  var c = 1;
	  p.data.copy(ret);
	  n -= p.data.length;
	  while (p = p.next) {
	    var buf = p.data;
	    var nb = n > buf.length ? buf.length : n;
	    buf.copy(ret, ret.length - n, 0, nb);
	    n -= nb;
	    if (n === 0) {
	      if (nb === buf.length) {
	        ++c;
	        if (p.next) list.head = p.next;else list.head = list.tail = null;
	      } else {
	        list.head = p;
	        p.data = buf.slice(nb);
	      }
	      break;
	    }
	    ++c;
	  }
	  list.length -= c;
	  return ret;
	}
	
	function endReadable(stream) {
	  var state = stream._readableState;
	
	  // If we get here before consuming all the bytes, then that is a
	  // bug in node.  Should never happen.
	  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');
	
	  if (!state.endEmitted) {
	    state.ended = true;
	    processNextTick(endReadableNT, state, stream);
	  }
	}
	
	function endReadableNT(state, stream) {
	  // Check that we didn't get one last unshift.
	  if (!state.endEmitted && state.length === 0) {
	    state.endEmitted = true;
	    stream.readable = false;
	    stream.emit('end');
	  }
	}
	
	function forEach(xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}
	
	function indexOf(xs, x) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    if (xs[i] === x) return i;
	  }
	  return -1;
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))

/***/ },
/* 358 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ },
/* 359 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Buffer = __webpack_require__(282).Buffer;
	/*<replacement>*/
	var bufferShim = __webpack_require__(294);
	/*</replacement>*/
	
	module.exports = BufferList;
	
	function BufferList() {
	  this.head = null;
	  this.tail = null;
	  this.length = 0;
	}
	
	BufferList.prototype.push = function (v) {
	  var entry = { data: v, next: null };
	  if (this.length > 0) this.tail.next = entry;else this.head = entry;
	  this.tail = entry;
	  ++this.length;
	};
	
	BufferList.prototype.unshift = function (v) {
	  var entry = { data: v, next: this.head };
	  if (this.length === 0) this.tail = entry;
	  this.head = entry;
	  ++this.length;
	};
	
	BufferList.prototype.shift = function () {
	  if (this.length === 0) return;
	  var ret = this.head.data;
	  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
	  --this.length;
	  return ret;
	};
	
	BufferList.prototype.clear = function () {
	  this.head = this.tail = null;
	  this.length = 0;
	};
	
	BufferList.prototype.join = function (s) {
	  if (this.length === 0) return '';
	  var p = this.head;
	  var ret = '' + p.data;
	  while (p = p.next) {
	    ret += s + p.data;
	  }return ret;
	};
	
	BufferList.prototype.concat = function (n) {
	  if (this.length === 0) return bufferShim.alloc(0);
	  if (this.length === 1) return this.head.data;
	  var ret = bufferShim.allocUnsafe(n >>> 0);
	  var p = this.head;
	  var i = 0;
	  while (p) {
	    p.data.copy(ret, i);
	    i += p.data.length;
	    p = p.next;
	  }
	  return ret;
	};

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, setImmediate) {// A bit simpler than readable streams.
	// Implement an async ._write(chunk, encoding, cb), and it'll handle all
	// the drain event emission and buffering.
	
	'use strict';
	
	module.exports = Writable;
	
	/*<replacement>*/
	var processNextTick = __webpack_require__(292);
	/*</replacement>*/
	
	/*<replacement>*/
	var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
	/*</replacement>*/
	
	/*<replacement>*/
	var Duplex;
	/*</replacement>*/
	
	Writable.WritableState = WritableState;
	
	/*<replacement>*/
	var util = __webpack_require__(295);
	util.inherits = __webpack_require__(289);
	/*</replacement>*/
	
	/*<replacement>*/
	var internalUtil = {
	  deprecate: __webpack_require__(302)
	};
	/*</replacement>*/
	
	/*<replacement>*/
	var Stream;
	(function () {
	  try {
	    Stream = __webpack_require__(287);
	  } catch (_) {} finally {
	    if (!Stream) Stream = __webpack_require__(288).EventEmitter;
	  }
	})();
	/*</replacement>*/
	
	var Buffer = __webpack_require__(282).Buffer;
	/*<replacement>*/
	var bufferShim = __webpack_require__(294);
	/*</replacement>*/
	
	util.inherits(Writable, Stream);
	
	function nop() {}
	
	function WriteReq(chunk, encoding, cb) {
	  this.chunk = chunk;
	  this.encoding = encoding;
	  this.callback = cb;
	  this.next = null;
	}
	
	function WritableState(options, stream) {
	  Duplex = Duplex || __webpack_require__(356);
	
	  options = options || {};
	
	  // object stream flag to indicate whether or not this stream
	  // contains buffers or objects.
	  this.objectMode = !!options.objectMode;
	
	  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;
	
	  // the point at which write() starts returning false
	  // Note: 0 is a valid value, means that we always return false if
	  // the entire buffer is not flushed immediately on write()
	  var hwm = options.highWaterMark;
	  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;
	
	  // cast to ints.
	  this.highWaterMark = ~ ~this.highWaterMark;
	
	  // drain event flag.
	  this.needDrain = false;
	  // at the start of calling end()
	  this.ending = false;
	  // when end() has been called, and returned
	  this.ended = false;
	  // when 'finish' is emitted
	  this.finished = false;
	
	  // should we decode strings into buffers before passing to _write?
	  // this is here so that some node-core streams can optimize string
	  // handling at a lower level.
	  var noDecode = options.decodeStrings === false;
	  this.decodeStrings = !noDecode;
	
	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';
	
	  // not an actual buffer we keep track of, but a measurement
	  // of how much we're waiting to get pushed to some underlying
	  // socket or file.
	  this.length = 0;
	
	  // a flag to see when we're in the middle of a write.
	  this.writing = false;
	
	  // when true all writes will be buffered until .uncork() call
	  this.corked = 0;
	
	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;
	
	  // a flag to know if we're processing previously buffered items, which
	  // may call the _write() callback in the same tick, so that we don't
	  // end up in an overlapped onwrite situation.
	  this.bufferProcessing = false;
	
	  // the callback that's passed to _write(chunk,cb)
	  this.onwrite = function (er) {
	    onwrite(stream, er);
	  };
	
	  // the callback that the user supplies to write(chunk,encoding,cb)
	  this.writecb = null;
	
	  // the amount that is being written when _write is called.
	  this.writelen = 0;
	
	  this.bufferedRequest = null;
	  this.lastBufferedRequest = null;
	
	  // number of pending user-supplied write callbacks
	  // this must be 0 before 'finish' can be emitted
	  this.pendingcb = 0;
	
	  // emit prefinish if the only thing we're waiting for is _write cbs
	  // This is relevant for synchronous Transform streams
	  this.prefinished = false;
	
	  // True if the error was already emitted and should not be thrown again
	  this.errorEmitted = false;
	
	  // count buffered requests
	  this.bufferedRequestCount = 0;
	
	  // allocate the first CorkedRequest, there is always
	  // one allocated and free to use, and we maintain at most two
	  this.corkedRequestsFree = new CorkedRequest(this);
	}
	
	WritableState.prototype.getBuffer = function getBuffer() {
	  var current = this.bufferedRequest;
	  var out = [];
	  while (current) {
	    out.push(current);
	    current = current.next;
	  }
	  return out;
	};
	
	(function () {
	  try {
	    Object.defineProperty(WritableState.prototype, 'buffer', {
	      get: internalUtil.deprecate(function () {
	        return this.getBuffer();
	      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')
	    });
	  } catch (_) {}
	})();
	
	// Test _writableState for inheritance to account for Duplex streams,
	// whose prototype chain only points to Readable.
	var realHasInstance;
	if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
	  realHasInstance = Function.prototype[Symbol.hasInstance];
	  Object.defineProperty(Writable, Symbol.hasInstance, {
	    value: function (object) {
	      if (realHasInstance.call(this, object)) return true;
	
	      return object && object._writableState instanceof WritableState;
	    }
	  });
	} else {
	  realHasInstance = function (object) {
	    return object instanceof this;
	  };
	}
	
	function Writable(options) {
	  Duplex = Duplex || __webpack_require__(356);
	
	  // Writable ctor is applied to Duplexes, too.
	  // `realHasInstance` is necessary because using plain `instanceof`
	  // would return false, as no `_writableState` property is attached.
	
	  // Trying to use the custom `instanceof` for Writable here will also break the
	  // Node.js LazyTransform implementation, which has a non-trivial getter for
	  // `_writableState` that would lead to infinite recursion.
	  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
	    return new Writable(options);
	  }
	
	  this._writableState = new WritableState(options, this);
	
	  // legacy.
	  this.writable = true;
	
	  if (options) {
	    if (typeof options.write === 'function') this._write = options.write;
	
	    if (typeof options.writev === 'function') this._writev = options.writev;
	  }
	
	  Stream.call(this);
	}
	
	// Otherwise people can pipe Writable streams, which is just wrong.
	Writable.prototype.pipe = function () {
	  this.emit('error', new Error('Cannot pipe, not readable'));
	};
	
	function writeAfterEnd(stream, cb) {
	  var er = new Error('write after end');
	  // TODO: defer error events consistently everywhere, not just the cb
	  stream.emit('error', er);
	  processNextTick(cb, er);
	}
	
	// If we get something that is not a buffer, string, null, or undefined,
	// and we're not in objectMode, then that's an error.
	// Otherwise stream chunks are all considered to be of length=1, and the
	// watermarks determine how many objects to keep in the buffer, rather than
	// how many bytes or characters.
	function validChunk(stream, state, chunk, cb) {
	  var valid = true;
	  var er = false;
	  // Always throw error if a null is written
	  // if we are not in object mode then throw
	  // if it is not a buffer, string, or undefined.
	  if (chunk === null) {
	    er = new TypeError('May not write null values to stream');
	  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
	    er = new TypeError('Invalid non-string/buffer chunk');
	  }
	  if (er) {
	    stream.emit('error', er);
	    processNextTick(cb, er);
	    valid = false;
	  }
	  return valid;
	}
	
	Writable.prototype.write = function (chunk, encoding, cb) {
	  var state = this._writableState;
	  var ret = false;
	
	  if (typeof encoding === 'function') {
	    cb = encoding;
	    encoding = null;
	  }
	
	  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
	
	  if (typeof cb !== 'function') cb = nop;
	
	  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {
	    state.pendingcb++;
	    ret = writeOrBuffer(this, state, chunk, encoding, cb);
	  }
	
	  return ret;
	};
	
	Writable.prototype.cork = function () {
	  var state = this._writableState;
	
	  state.corked++;
	};
	
	Writable.prototype.uncork = function () {
	  var state = this._writableState;
	
	  if (state.corked) {
	    state.corked--;
	
	    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
	  }
	};
	
	Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
	  // node::ParseEncoding() requires lower case.
	  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
	  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
	  this._writableState.defaultEncoding = encoding;
	  return this;
	};
	
	function decodeChunk(state, chunk, encoding) {
	  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
	    chunk = bufferShim.from(chunk, encoding);
	  }
	  return chunk;
	}
	
	// if we're already writing something, then just put this
	// in the queue, and wait our turn.  Otherwise, call _write
	// If we return false, then we need a drain event, so set that flag.
	function writeOrBuffer(stream, state, chunk, encoding, cb) {
	  chunk = decodeChunk(state, chunk, encoding);
	
	  if (Buffer.isBuffer(chunk)) encoding = 'buffer';
	  var len = state.objectMode ? 1 : chunk.length;
	
	  state.length += len;
	
	  var ret = state.length < state.highWaterMark;
	  // we must ensure that previous needDrain will not be reset to false.
	  if (!ret) state.needDrain = true;
	
	  if (state.writing || state.corked) {
	    var last = state.lastBufferedRequest;
	    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);
	    if (last) {
	      last.next = state.lastBufferedRequest;
	    } else {
	      state.bufferedRequest = state.lastBufferedRequest;
	    }
	    state.bufferedRequestCount += 1;
	  } else {
	    doWrite(stream, state, false, len, chunk, encoding, cb);
	  }
	
	  return ret;
	}
	
	function doWrite(stream, state, writev, len, chunk, encoding, cb) {
	  state.writelen = len;
	  state.writecb = cb;
	  state.writing = true;
	  state.sync = true;
	  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
	  state.sync = false;
	}
	
	function onwriteError(stream, state, sync, er, cb) {
	  --state.pendingcb;
	  if (sync) processNextTick(cb, er);else cb(er);
	
	  stream._writableState.errorEmitted = true;
	  stream.emit('error', er);
	}
	
	function onwriteStateUpdate(state) {
	  state.writing = false;
	  state.writecb = null;
	  state.length -= state.writelen;
	  state.writelen = 0;
	}
	
	function onwrite(stream, er) {
	  var state = stream._writableState;
	  var sync = state.sync;
	  var cb = state.writecb;
	
	  onwriteStateUpdate(state);
	
	  if (er) onwriteError(stream, state, sync, er, cb);else {
	    // Check if we're actually ready to finish, but don't emit yet
	    var finished = needFinish(state);
	
	    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
	      clearBuffer(stream, state);
	    }
	
	    if (sync) {
	      /*<replacement>*/
	      asyncWrite(afterWrite, stream, state, finished, cb);
	      /*</replacement>*/
	    } else {
	        afterWrite(stream, state, finished, cb);
	      }
	  }
	}
	
	function afterWrite(stream, state, finished, cb) {
	  if (!finished) onwriteDrain(stream, state);
	  state.pendingcb--;
	  cb();
	  finishMaybe(stream, state);
	}
	
	// Must force callback to be called on nextTick, so that we don't
	// emit 'drain' before the write() consumer gets the 'false' return
	// value, and has a chance to attach a 'drain' listener.
	function onwriteDrain(stream, state) {
	  if (state.length === 0 && state.needDrain) {
	    state.needDrain = false;
	    stream.emit('drain');
	  }
	}
	
	// if there's something in the buffer waiting, then process it
	function clearBuffer(stream, state) {
	  state.bufferProcessing = true;
	  var entry = state.bufferedRequest;
	
	  if (stream._writev && entry && entry.next) {
	    // Fast case, write everything using _writev()
	    var l = state.bufferedRequestCount;
	    var buffer = new Array(l);
	    var holder = state.corkedRequestsFree;
	    holder.entry = entry;
	
	    var count = 0;
	    while (entry) {
	      buffer[count] = entry;
	      entry = entry.next;
	      count += 1;
	    }
	
	    doWrite(stream, state, true, state.length, buffer, '', holder.finish);
	
	    // doWrite is almost always async, defer these to save a bit of time
	    // as the hot path ends with doWrite
	    state.pendingcb++;
	    state.lastBufferedRequest = null;
	    if (holder.next) {
	      state.corkedRequestsFree = holder.next;
	      holder.next = null;
	    } else {
	      state.corkedRequestsFree = new CorkedRequest(state);
	    }
	  } else {
	    // Slow case, write chunks one-by-one
	    while (entry) {
	      var chunk = entry.chunk;
	      var encoding = entry.encoding;
	      var cb = entry.callback;
	      var len = state.objectMode ? 1 : chunk.length;
	
	      doWrite(stream, state, false, len, chunk, encoding, cb);
	      entry = entry.next;
	      // if we didn't call the onwrite immediately, then
	      // it means that we need to wait until it does.
	      // also, that means that the chunk and cb are currently
	      // being processed, so move the buffer counter past them.
	      if (state.writing) {
	        break;
	      }
	    }
	
	    if (entry === null) state.lastBufferedRequest = null;
	  }
	
	  state.bufferedRequestCount = 0;
	  state.bufferedRequest = entry;
	  state.bufferProcessing = false;
	}
	
	Writable.prototype._write = function (chunk, encoding, cb) {
	  cb(new Error('_write() is not implemented'));
	};
	
	Writable.prototype._writev = null;
	
	Writable.prototype.end = function (chunk, encoding, cb) {
	  var state = this._writableState;
	
	  if (typeof chunk === 'function') {
	    cb = chunk;
	    chunk = null;
	    encoding = null;
	  } else if (typeof encoding === 'function') {
	    cb = encoding;
	    encoding = null;
	  }
	
	  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);
	
	  // .end() fully uncorks
	  if (state.corked) {
	    state.corked = 1;
	    this.uncork();
	  }
	
	  // ignore unnecessary end() calls.
	  if (!state.ending && !state.finished) endWritable(this, state, cb);
	};
	
	function needFinish(state) {
	  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
	}
	
	function prefinish(stream, state) {
	  if (!state.prefinished) {
	    state.prefinished = true;
	    stream.emit('prefinish');
	  }
	}
	
	function finishMaybe(stream, state) {
	  var need = needFinish(state);
	  if (need) {
	    if (state.pendingcb === 0) {
	      prefinish(stream, state);
	      state.finished = true;
	      stream.emit('finish');
	    } else {
	      prefinish(stream, state);
	    }
	  }
	  return need;
	}
	
	function endWritable(stream, state, cb) {
	  state.ending = true;
	  finishMaybe(stream, state);
	  if (cb) {
	    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
	  }
	  state.ended = true;
	  stream.writable = false;
	}
	
	// It seems a linked list but it is not
	// there will be only 2 of these for each stream
	function CorkedRequest(state) {
	  var _this = this;
	
	  this.next = null;
	  this.entry = null;
	
	  this.finish = function (err) {
	    var entry = _this.entry;
	    _this.entry = null;
	    while (entry) {
	      var cb = entry.callback;
	      state.pendingcb--;
	      cb(err);
	      entry = entry.next;
	    }
	    if (state.corkedRequestsFree) {
	      state.corkedRequestsFree.next = _this;
	    } else {
	      state.corkedRequestsFree = _this;
	    }
	  };
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6), __webpack_require__(300).setImmediate))

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, Buffer) {var msg = __webpack_require__(363);
	var zstream = __webpack_require__(364);
	var zlib_deflate = __webpack_require__(365);
	var zlib_inflate = __webpack_require__(370);
	var constants = __webpack_require__(373);
	
	for (var key in constants) {
	  exports[key] = constants[key];
	}
	
	// zlib modes
	exports.NONE = 0;
	exports.DEFLATE = 1;
	exports.INFLATE = 2;
	exports.GZIP = 3;
	exports.GUNZIP = 4;
	exports.DEFLATERAW = 5;
	exports.INFLATERAW = 6;
	exports.UNZIP = 7;
	
	/**
	 * Emulate Node's zlib C++ layer for use by the JS layer in index.js
	 */
	function Zlib(mode) {
	  if (mode < exports.DEFLATE || mode > exports.UNZIP)
	    throw new TypeError("Bad argument");
	    
	  this.mode = mode;
	  this.init_done = false;
	  this.write_in_progress = false;
	  this.pending_close = false;
	  this.windowBits = 0;
	  this.level = 0;
	  this.memLevel = 0;
	  this.strategy = 0;
	  this.dictionary = null;
	}
	
	Zlib.prototype.init = function(windowBits, level, memLevel, strategy, dictionary) {
	  this.windowBits = windowBits;
	  this.level = level;
	  this.memLevel = memLevel;
	  this.strategy = strategy;
	  // dictionary not supported.
	  
	  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP)
	    this.windowBits += 16;
	    
	  if (this.mode === exports.UNZIP)
	    this.windowBits += 32;
	    
	  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW)
	    this.windowBits = -this.windowBits;
	    
	  this.strm = new zstream();
	  
	  switch (this.mode) {
	    case exports.DEFLATE:
	    case exports.GZIP:
	    case exports.DEFLATERAW:
	      var status = zlib_deflate.deflateInit2(
	        this.strm,
	        this.level,
	        exports.Z_DEFLATED,
	        this.windowBits,
	        this.memLevel,
	        this.strategy
	      );
	      break;
	    case exports.INFLATE:
	    case exports.GUNZIP:
	    case exports.INFLATERAW:
	    case exports.UNZIP:
	      var status  = zlib_inflate.inflateInit2(
	        this.strm,
	        this.windowBits
	      );
	      break;
	    default:
	      throw new Error("Unknown mode " + this.mode);
	  }
	  
	  if (status !== exports.Z_OK) {
	    this._error(status);
	    return;
	  }
	  
	  this.write_in_progress = false;
	  this.init_done = true;
	};
	
	Zlib.prototype.params = function() {
	  throw new Error("deflateParams Not supported");
	};
	
	Zlib.prototype._writeCheck = function() {
	  if (!this.init_done)
	    throw new Error("write before init");
	    
	  if (this.mode === exports.NONE)
	    throw new Error("already finalized");
	    
	  if (this.write_in_progress)
	    throw new Error("write already in progress");
	    
	  if (this.pending_close)
	    throw new Error("close is pending");
	};
	
	Zlib.prototype.write = function(flush, input, in_off, in_len, out, out_off, out_len) {    
	  this._writeCheck();
	  this.write_in_progress = true;
	  
	  var self = this;
	  process.nextTick(function() {
	    self.write_in_progress = false;
	    var res = self._write(flush, input, in_off, in_len, out, out_off, out_len);
	    self.callback(res[0], res[1]);
	    
	    if (self.pending_close)
	      self.close();
	  });
	  
	  return this;
	};
	
	// set method for Node buffers, used by pako
	function bufferSet(data, offset) {
	  for (var i = 0; i < data.length; i++) {
	    this[offset + i] = data[i];
	  }
	}
	
	Zlib.prototype.writeSync = function(flush, input, in_off, in_len, out, out_off, out_len) {
	  this._writeCheck();
	  return this._write(flush, input, in_off, in_len, out, out_off, out_len);
	};
	
	Zlib.prototype._write = function(flush, input, in_off, in_len, out, out_off, out_len) {
	  this.write_in_progress = true;
	  
	  if (flush !== exports.Z_NO_FLUSH &&
	      flush !== exports.Z_PARTIAL_FLUSH &&
	      flush !== exports.Z_SYNC_FLUSH &&
	      flush !== exports.Z_FULL_FLUSH &&
	      flush !== exports.Z_FINISH &&
	      flush !== exports.Z_BLOCK) {
	    throw new Error("Invalid flush value");
	  }
	  
	  if (input == null) {
	    input = new Buffer(0);
	    in_len = 0;
	    in_off = 0;
	  }
	  
	  if (out._set)
	    out.set = out._set;
	  else
	    out.set = bufferSet;
	  
	  var strm = this.strm;
	  strm.avail_in = in_len;
	  strm.input = input;
	  strm.next_in = in_off;
	  strm.avail_out = out_len;
	  strm.output = out;
	  strm.next_out = out_off;
	  
	  switch (this.mode) {
	    case exports.DEFLATE:
	    case exports.GZIP:
	    case exports.DEFLATERAW:
	      var status = zlib_deflate.deflate(strm, flush);
	      break;
	    case exports.UNZIP:
	    case exports.INFLATE:
	    case exports.GUNZIP:
	    case exports.INFLATERAW:
	      var status = zlib_inflate.inflate(strm, flush);
	      break;
	    default:
	      throw new Error("Unknown mode " + this.mode);
	  }
	  
	  if (status !== exports.Z_STREAM_END && status !== exports.Z_OK) {
	    this._error(status);
	  }
	  
	  this.write_in_progress = false;
	  return [strm.avail_in, strm.avail_out];
	};
	
	Zlib.prototype.close = function() {
	  if (this.write_in_progress) {
	    this.pending_close = true;
	    return;
	  }
	  
	  this.pending_close = false;
	  
	  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {
	    zlib_deflate.deflateEnd(this.strm);
	  } else {
	    zlib_inflate.inflateEnd(this.strm);
	  }
	  
	  this.mode = exports.NONE;
	};
	
	Zlib.prototype.reset = function() {
	  switch (this.mode) {
	    case exports.DEFLATE:
	    case exports.DEFLATERAW:
	      var status = zlib_deflate.deflateReset(this.strm);
	      break;
	    case exports.INFLATE:
	    case exports.INFLATERAW:
	      var status = zlib_inflate.inflateReset(this.strm);
	      break;
	  }
	  
	  if (status !== exports.Z_OK) {
	    this._error(status);
	  }
	};
	
	Zlib.prototype._error = function(status) {
	  this.onerror(msg[status] + ': ' + this.strm.msg, status);
	  
	  this.write_in_progress = false;
	  if (this.pending_close)
	    this.close();
	};
	
	exports.Zlib = Zlib;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6), __webpack_require__(282).Buffer))

/***/ },
/* 363 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = {
	  2:      'need dictionary',     /* Z_NEED_DICT       2  */
	  1:      'stream end',          /* Z_STREAM_END      1  */
	  0:      '',                    /* Z_OK              0  */
	  '-1':   'file error',          /* Z_ERRNO         (-1) */
	  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */
	  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */
	  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */
	  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */
	  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */
	};


/***/ },
/* 364 */
/***/ function(module, exports) {

	'use strict';
	
	
	function ZStream() {
	  /* next input byte */
	  this.input = null; // JS specific, because we have no pointers
	  this.next_in = 0;
	  /* number of bytes available at input */
	  this.avail_in = 0;
	  /* total number of input bytes read so far */
	  this.total_in = 0;
	  /* next output byte should be put there */
	  this.output = null; // JS specific, because we have no pointers
	  this.next_out = 0;
	  /* remaining free space at output */
	  this.avail_out = 0;
	  /* total number of bytes output so far */
	  this.total_out = 0;
	  /* last error message, NULL if no error */
	  this.msg = ''/*Z_NULL*/;
	  /* not visible by applications */
	  this.state = null;
	  /* best guess about the data type: binary or text */
	  this.data_type = 2/*Z_UNKNOWN*/;
	  /* adler32 value of the uncompressed data */
	  this.adler = 0;
	}
	
	module.exports = ZStream;


/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils   = __webpack_require__(366);
	var trees   = __webpack_require__(367);
	var adler32 = __webpack_require__(368);
	var crc32   = __webpack_require__(369);
	var msg     = __webpack_require__(363);
	
	/* Public constants ==========================================================*/
	/* ===========================================================================*/
	
	
	/* Allowed flush values; see deflate() and inflate() below for details */
	var Z_NO_FLUSH      = 0;
	var Z_PARTIAL_FLUSH = 1;
	//var Z_SYNC_FLUSH    = 2;
	var Z_FULL_FLUSH    = 3;
	var Z_FINISH        = 4;
	var Z_BLOCK         = 5;
	//var Z_TREES         = 6;
	
	
	/* Return codes for the compression/decompression functions. Negative values
	 * are errors, positive values are used for special but normal events.
	 */
	var Z_OK            = 0;
	var Z_STREAM_END    = 1;
	//var Z_NEED_DICT     = 2;
	//var Z_ERRNO         = -1;
	var Z_STREAM_ERROR  = -2;
	var Z_DATA_ERROR    = -3;
	//var Z_MEM_ERROR     = -4;
	var Z_BUF_ERROR     = -5;
	//var Z_VERSION_ERROR = -6;
	
	
	/* compression levels */
	//var Z_NO_COMPRESSION      = 0;
	//var Z_BEST_SPEED          = 1;
	//var Z_BEST_COMPRESSION    = 9;
	var Z_DEFAULT_COMPRESSION = -1;
	
	
	var Z_FILTERED            = 1;
	var Z_HUFFMAN_ONLY        = 2;
	var Z_RLE                 = 3;
	var Z_FIXED               = 4;
	var Z_DEFAULT_STRATEGY    = 0;
	
	/* Possible values of the data_type field (though see inflate()) */
	//var Z_BINARY              = 0;
	//var Z_TEXT                = 1;
	//var Z_ASCII               = 1; // = Z_TEXT
	var Z_UNKNOWN             = 2;
	
	
	/* The deflate compression method */
	var Z_DEFLATED  = 8;
	
	/*============================================================================*/
	
	
	var MAX_MEM_LEVEL = 9;
	/* Maximum value for memLevel in deflateInit2 */
	var MAX_WBITS = 15;
	/* 32K LZ77 window */
	var DEF_MEM_LEVEL = 8;
	
	
	var LENGTH_CODES  = 29;
	/* number of length codes, not counting the special END_BLOCK code */
	var LITERALS      = 256;
	/* number of literal bytes 0..255 */
	var L_CODES       = LITERALS + 1 + LENGTH_CODES;
	/* number of Literal or Length codes, including the END_BLOCK code */
	var D_CODES       = 30;
	/* number of distance codes */
	var BL_CODES      = 19;
	/* number of codes used to transfer the bit lengths */
	var HEAP_SIZE     = 2 * L_CODES + 1;
	/* maximum heap size */
	var MAX_BITS  = 15;
	/* All codes must not exceed MAX_BITS bits */
	
	var MIN_MATCH = 3;
	var MAX_MATCH = 258;
	var MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);
	
	var PRESET_DICT = 0x20;
	
	var INIT_STATE = 42;
	var EXTRA_STATE = 69;
	var NAME_STATE = 73;
	var COMMENT_STATE = 91;
	var HCRC_STATE = 103;
	var BUSY_STATE = 113;
	var FINISH_STATE = 666;
	
	var BS_NEED_MORE      = 1; /* block not completed, need more input or more output */
	var BS_BLOCK_DONE     = 2; /* block flush performed */
	var BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */
	var BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */
	
	var OS_CODE = 0x03; // Unix :) . Don't detect, use this default.
	
	function err(strm, errorCode) {
	  strm.msg = msg[errorCode];
	  return errorCode;
	}
	
	function rank(f) {
	  return ((f) << 1) - ((f) > 4 ? 9 : 0);
	}
	
	function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }
	
	
	/* =========================================================================
	 * Flush as much pending output as possible. All deflate() output goes
	 * through this function so some applications may wish to modify it
	 * to avoid allocating a large strm->output buffer and copying into it.
	 * (See also read_buf()).
	 */
	function flush_pending(strm) {
	  var s = strm.state;
	
	  //_tr_flush_bits(s);
	  var len = s.pending;
	  if (len > strm.avail_out) {
	    len = strm.avail_out;
	  }
	  if (len === 0) { return; }
	
	  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);
	  strm.next_out += len;
	  s.pending_out += len;
	  strm.total_out += len;
	  strm.avail_out -= len;
	  s.pending -= len;
	  if (s.pending === 0) {
	    s.pending_out = 0;
	  }
	}
	
	
	function flush_block_only(s, last) {
	  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);
	  s.block_start = s.strstart;
	  flush_pending(s.strm);
	}
	
	
	function put_byte(s, b) {
	  s.pending_buf[s.pending++] = b;
	}
	
	
	/* =========================================================================
	 * Put a short in the pending buffer. The 16-bit value is put in MSB order.
	 * IN assertion: the stream state is correct and there is enough room in
	 * pending_buf.
	 */
	function putShortMSB(s, b) {
	//  put_byte(s, (Byte)(b >> 8));
	//  put_byte(s, (Byte)(b & 0xff));
	  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;
	  s.pending_buf[s.pending++] = b & 0xff;
	}
	
	
	/* ===========================================================================
	 * Read a new buffer from the current input stream, update the adler32
	 * and total number of bytes read.  All deflate() input goes through
	 * this function so some applications may wish to modify it to avoid
	 * allocating a large strm->input buffer and copying from it.
	 * (See also flush_pending()).
	 */
	function read_buf(strm, buf, start, size) {
	  var len = strm.avail_in;
	
	  if (len > size) { len = size; }
	  if (len === 0) { return 0; }
	
	  strm.avail_in -= len;
	
	  // zmemcpy(buf, strm->next_in, len);
	  utils.arraySet(buf, strm.input, strm.next_in, len, start);
	  if (strm.state.wrap === 1) {
	    strm.adler = adler32(strm.adler, buf, len, start);
	  }
	
	  else if (strm.state.wrap === 2) {
	    strm.adler = crc32(strm.adler, buf, len, start);
	  }
	
	  strm.next_in += len;
	  strm.total_in += len;
	
	  return len;
	}
	
	
	/* ===========================================================================
	 * Set match_start to the longest match starting at the given string and
	 * return its length. Matches shorter or equal to prev_length are discarded,
	 * in which case the result is equal to prev_length and match_start is
	 * garbage.
	 * IN assertions: cur_match is the head of the hash chain for the current
	 *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1
	 * OUT assertion: the match length is not greater than s->lookahead.
	 */
	function longest_match(s, cur_match) {
	  var chain_length = s.max_chain_length;      /* max hash chain length */
	  var scan = s.strstart; /* current string */
	  var match;                       /* matched string */
	  var len;                           /* length of current match */
	  var best_len = s.prev_length;              /* best match length so far */
	  var nice_match = s.nice_match;             /* stop if match long enough */
	  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?
	      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;
	
	  var _win = s.window; // shortcut
	
	  var wmask = s.w_mask;
	  var prev  = s.prev;
	
	  /* Stop when cur_match becomes <= limit. To simplify the code,
	   * we prevent matches with the string of window index 0.
	   */
	
	  var strend = s.strstart + MAX_MATCH;
	  var scan_end1  = _win[scan + best_len - 1];
	  var scan_end   = _win[scan + best_len];
	
	  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
	   * It is easy to get rid of this optimization if necessary.
	   */
	  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");
	
	  /* Do not waste too much time if we already have a good match: */
	  if (s.prev_length >= s.good_match) {
	    chain_length >>= 2;
	  }
	  /* Do not look for matches beyond the end of the input. This is necessary
	   * to make deflate deterministic.
	   */
	  if (nice_match > s.lookahead) { nice_match = s.lookahead; }
	
	  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");
	
	  do {
	    // Assert(cur_match < s->strstart, "no future");
	    match = cur_match;
	
	    /* Skip to next match if the match length cannot increase
	     * or if the match length is less than 2.  Note that the checks below
	     * for insufficient lookahead only occur occasionally for performance
	     * reasons.  Therefore uninitialized memory will be accessed, and
	     * conditional jumps will be made that depend on those values.
	     * However the length of the match is limited to the lookahead, so
	     * the output of deflate is not affected by the uninitialized values.
	     */
	
	    if (_win[match + best_len]     !== scan_end  ||
	        _win[match + best_len - 1] !== scan_end1 ||
	        _win[match]                !== _win[scan] ||
	        _win[++match]              !== _win[scan + 1]) {
	      continue;
	    }
	
	    /* The check at best_len-1 can be removed because it will be made
	     * again later. (This heuristic is not always a win.)
	     * It is not necessary to compare scan[2] and match[2] since they
	     * are always equal when the other bytes match, given that
	     * the hash keys are equal and that HASH_BITS >= 8.
	     */
	    scan += 2;
	    match++;
	    // Assert(*scan == *match, "match[2]?");
	
	    /* We check for insufficient lookahead only every 8th comparison;
	     * the 256th check will be made at strstart+258.
	     */
	    do {
	      /*jshint noempty:false*/
	    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
	             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
	             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
	             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
	             scan < strend);
	
	    // Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");
	
	    len = MAX_MATCH - (strend - scan);
	    scan = strend - MAX_MATCH;
	
	    if (len > best_len) {
	      s.match_start = cur_match;
	      best_len = len;
	      if (len >= nice_match) {
	        break;
	      }
	      scan_end1  = _win[scan + best_len - 1];
	      scan_end   = _win[scan + best_len];
	    }
	  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);
	
	  if (best_len <= s.lookahead) {
	    return best_len;
	  }
	  return s.lookahead;
	}
	
	
	/* ===========================================================================
	 * Fill the window when the lookahead becomes insufficient.
	 * Updates strstart and lookahead.
	 *
	 * IN assertion: lookahead < MIN_LOOKAHEAD
	 * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD
	 *    At least one byte has been read, or avail_in == 0; reads are
	 *    performed for at least two bytes (required for the zip translate_eol
	 *    option -- not supported here).
	 */
	function fill_window(s) {
	  var _w_size = s.w_size;
	  var p, n, m, more, str;
	
	  //Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");
	
	  do {
	    more = s.window_size - s.lookahead - s.strstart;
	
	    // JS ints have 32 bit, block below not needed
	    /* Deal with !@#$% 64K limit: */
	    //if (sizeof(int) <= 2) {
	    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {
	    //        more = wsize;
	    //
	    //  } else if (more == (unsigned)(-1)) {
	    //        /* Very unlikely, but possible on 16 bit machine if
	    //         * strstart == 0 && lookahead == 1 (input done a byte at time)
	    //         */
	    //        more--;
	    //    }
	    //}
	
	
	    /* If the window is almost full and there is insufficient lookahead,
	     * move the upper half to the lower one to make room in the upper half.
	     */
	    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {
	
	      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);
	      s.match_start -= _w_size;
	      s.strstart -= _w_size;
	      /* we now have strstart >= MAX_DIST */
	      s.block_start -= _w_size;
	
	      /* Slide the hash table (could be avoided with 32 bit values
	       at the expense of memory usage). We slide even when level == 0
	       to keep the hash table consistent if we switch back to level > 0
	       later. (Using level 0 permanently is not an optimal usage of
	       zlib, so we don't care about this pathological case.)
	       */
	
	      n = s.hash_size;
	      p = n;
	      do {
	        m = s.head[--p];
	        s.head[p] = (m >= _w_size ? m - _w_size : 0);
	      } while (--n);
	
	      n = _w_size;
	      p = n;
	      do {
	        m = s.prev[--p];
	        s.prev[p] = (m >= _w_size ? m - _w_size : 0);
	        /* If n is not on any hash chain, prev[n] is garbage but
	         * its value will never be used.
	         */
	      } while (--n);
	
	      more += _w_size;
	    }
	    if (s.strm.avail_in === 0) {
	      break;
	    }
	
	    /* If there was no sliding:
	     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
	     *    more == window_size - lookahead - strstart
	     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
	     * => more >= window_size - 2*WSIZE + 2
	     * In the BIG_MEM or MMAP case (not yet supported),
	     *   window_size == input_size + MIN_LOOKAHEAD  &&
	     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
	     * Otherwise, window_size == 2*WSIZE so more >= 2.
	     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
	     */
	    //Assert(more >= 2, "more < 2");
	    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);
	    s.lookahead += n;
	
	    /* Initialize the hash value now that we have some input: */
	    if (s.lookahead + s.insert >= MIN_MATCH) {
	      str = s.strstart - s.insert;
	      s.ins_h = s.window[str];
	
	      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */
	      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;
	//#if MIN_MATCH != 3
	//        Call update_hash() MIN_MATCH-3 more times
	//#endif
	      while (s.insert) {
	        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
	        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;
	
	        s.prev[str & s.w_mask] = s.head[s.ins_h];
	        s.head[s.ins_h] = str;
	        str++;
	        s.insert--;
	        if (s.lookahead + s.insert < MIN_MATCH) {
	          break;
	        }
	      }
	    }
	    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
	     * but this is not important since only literal bytes will be emitted.
	     */
	
	  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);
	
	  /* If the WIN_INIT bytes after the end of the current data have never been
	   * written, then zero those bytes in order to avoid memory check reports of
	   * the use of uninitialized (or uninitialised as Julian writes) bytes by
	   * the longest match routines.  Update the high water mark for the next
	   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
	   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
	   */
	//  if (s.high_water < s.window_size) {
	//    var curr = s.strstart + s.lookahead;
	//    var init = 0;
	//
	//    if (s.high_water < curr) {
	//      /* Previous high water mark below current data -- zero WIN_INIT
	//       * bytes or up to end of window, whichever is less.
	//       */
	//      init = s.window_size - curr;
	//      if (init > WIN_INIT)
	//        init = WIN_INIT;
	//      zmemzero(s->window + curr, (unsigned)init);
	//      s->high_water = curr + init;
	//    }
	//    else if (s->high_water < (ulg)curr + WIN_INIT) {
	//      /* High water mark at or above current data, but below current data
	//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up
	//       * to end of window, whichever is less.
	//       */
	//      init = (ulg)curr + WIN_INIT - s->high_water;
	//      if (init > s->window_size - s->high_water)
	//        init = s->window_size - s->high_water;
	//      zmemzero(s->window + s->high_water, (unsigned)init);
	//      s->high_water += init;
	//    }
	//  }
	//
	//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,
	//    "not enough room for search");
	}
	
	/* ===========================================================================
	 * Copy without compression as much as possible from the input stream, return
	 * the current block state.
	 * This function does not insert new strings in the dictionary since
	 * uncompressible data is probably not useful. This function is used
	 * only for the level=0 compression option.
	 * NOTE: this function should be optimized to avoid extra copying from
	 * window to pending_buf.
	 */
	function deflate_stored(s, flush) {
	  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited
	   * to pending_buf_size, and each stored block has a 5 byte header:
	   */
	  var max_block_size = 0xffff;
	
	  if (max_block_size > s.pending_buf_size - 5) {
	    max_block_size = s.pending_buf_size - 5;
	  }
	
	  /* Copy as much as possible from input to output: */
	  for (;;) {
	    /* Fill the window as much as possible: */
	    if (s.lookahead <= 1) {
	
	      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||
	      //  s->block_start >= (long)s->w_size, "slide too late");
	//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||
	//        s.block_start >= s.w_size)) {
	//        throw  new Error("slide too late");
	//      }
	
	      fill_window(s);
	      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {
	        return BS_NEED_MORE;
	      }
	
	      if (s.lookahead === 0) {
	        break;
	      }
	      /* flush the current block */
	    }
	    //Assert(s->block_start >= 0L, "block gone");
	//    if (s.block_start < 0) throw new Error("block gone");
	
	    s.strstart += s.lookahead;
	    s.lookahead = 0;
	
	    /* Emit a stored block if pending_buf will be full: */
	    var max_start = s.block_start + max_block_size;
	
	    if (s.strstart === 0 || s.strstart >= max_start) {
	      /* strstart == 0 is possible when wraparound on 16-bit machine */
	      s.lookahead = s.strstart - max_start;
	      s.strstart = max_start;
	      /*** FLUSH_BLOCK(s, 0); ***/
	      flush_block_only(s, false);
	      if (s.strm.avail_out === 0) {
	        return BS_NEED_MORE;
	      }
	      /***/
	
	
	    }
	    /* Flush if we may have to slide, otherwise block_start may become
	     * negative and the data will be gone:
	     */
	    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {
	      /*** FLUSH_BLOCK(s, 0); ***/
	      flush_block_only(s, false);
	      if (s.strm.avail_out === 0) {
	        return BS_NEED_MORE;
	      }
	      /***/
	    }
	  }
	
	  s.insert = 0;
	
	  if (flush === Z_FINISH) {
	    /*** FLUSH_BLOCK(s, 1); ***/
	    flush_block_only(s, true);
	    if (s.strm.avail_out === 0) {
	      return BS_FINISH_STARTED;
	    }
	    /***/
	    return BS_FINISH_DONE;
	  }
	
	  if (s.strstart > s.block_start) {
	    /*** FLUSH_BLOCK(s, 0); ***/
	    flush_block_only(s, false);
	    if (s.strm.avail_out === 0) {
	      return BS_NEED_MORE;
	    }
	    /***/
	  }
	
	  return BS_NEED_MORE;
	}
	
	/* ===========================================================================
	 * Compress as much as possible from the input stream, return the current
	 * block state.
	 * This function does not perform lazy evaluation of matches and inserts
	 * new strings in the dictionary only for unmatched strings or for short
	 * matches. It is used only for the fast compression options.
	 */
	function deflate_fast(s, flush) {
	  var hash_head;        /* head of the hash chain */
	  var bflush;           /* set if current block must be flushed */
	
	  for (;;) {
	    /* Make sure that we always have enough lookahead, except
	     * at the end of the input file. We need MAX_MATCH bytes
	     * for the next match, plus MIN_MATCH bytes to insert the
	     * string following the next match.
	     */
	    if (s.lookahead < MIN_LOOKAHEAD) {
	      fill_window(s);
	      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
	        return BS_NEED_MORE;
	      }
	      if (s.lookahead === 0) {
	        break; /* flush the current block */
	      }
	    }
	
	    /* Insert the string window[strstart .. strstart+2] in the
	     * dictionary, and set hash_head to the head of the hash chain:
	     */
	    hash_head = 0/*NIL*/;
	    if (s.lookahead >= MIN_MATCH) {
	      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
	      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
	      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
	      s.head[s.ins_h] = s.strstart;
	      /***/
	    }
	
	    /* Find the longest match, discarding those <= prev_length.
	     * At this point we have always match_length < MIN_MATCH
	     */
	    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {
	      /* To simplify the code, we prevent matches with the string
	       * of window index 0 (in particular we have to avoid a match
	       * of the string with itself at the start of the input file).
	       */
	      s.match_length = longest_match(s, hash_head);
	      /* longest_match() sets match_start */
	    }
	    if (s.match_length >= MIN_MATCH) {
	      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only
	
	      /*** _tr_tally_dist(s, s.strstart - s.match_start,
	                     s.match_length - MIN_MATCH, bflush); ***/
	      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);
	
	      s.lookahead -= s.match_length;
	
	      /* Insert new strings in the hash table only if the match length
	       * is not too large. This saves time but degrades compression.
	       */
	      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {
	        s.match_length--; /* string at strstart already in table */
	        do {
	          s.strstart++;
	          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
	          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
	          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
	          s.head[s.ins_h] = s.strstart;
	          /***/
	          /* strstart never exceeds WSIZE-MAX_MATCH, so there are
	           * always MIN_MATCH bytes ahead.
	           */
	        } while (--s.match_length !== 0);
	        s.strstart++;
	      } else
	      {
	        s.strstart += s.match_length;
	        s.match_length = 0;
	        s.ins_h = s.window[s.strstart];
	        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */
	        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;
	
	//#if MIN_MATCH != 3
	//                Call UPDATE_HASH() MIN_MATCH-3 more times
	//#endif
	        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not
	         * matter since it will be recomputed at next deflate call.
	         */
	      }
	    } else {
	      /* No match, output a literal byte */
	      //Tracevv((stderr,"%c", s.window[s.strstart]));
	      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
	      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);
	
	      s.lookahead--;
	      s.strstart++;
	    }
	    if (bflush) {
	      /*** FLUSH_BLOCK(s, 0); ***/
	      flush_block_only(s, false);
	      if (s.strm.avail_out === 0) {
	        return BS_NEED_MORE;
	      }
	      /***/
	    }
	  }
	  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);
	  if (flush === Z_FINISH) {
	    /*** FLUSH_BLOCK(s, 1); ***/
	    flush_block_only(s, true);
	    if (s.strm.avail_out === 0) {
	      return BS_FINISH_STARTED;
	    }
	    /***/
	    return BS_FINISH_DONE;
	  }
	  if (s.last_lit) {
	    /*** FLUSH_BLOCK(s, 0); ***/
	    flush_block_only(s, false);
	    if (s.strm.avail_out === 0) {
	      return BS_NEED_MORE;
	    }
	    /***/
	  }
	  return BS_BLOCK_DONE;
	}
	
	/* ===========================================================================
	 * Same as above, but achieves better compression. We use a lazy
	 * evaluation for matches: a match is finally adopted only if there is
	 * no better match at the next window position.
	 */
	function deflate_slow(s, flush) {
	  var hash_head;          /* head of hash chain */
	  var bflush;              /* set if current block must be flushed */
	
	  var max_insert;
	
	  /* Process the input block. */
	  for (;;) {
	    /* Make sure that we always have enough lookahead, except
	     * at the end of the input file. We need MAX_MATCH bytes
	     * for the next match, plus MIN_MATCH bytes to insert the
	     * string following the next match.
	     */
	    if (s.lookahead < MIN_LOOKAHEAD) {
	      fill_window(s);
	      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
	        return BS_NEED_MORE;
	      }
	      if (s.lookahead === 0) { break; } /* flush the current block */
	    }
	
	    /* Insert the string window[strstart .. strstart+2] in the
	     * dictionary, and set hash_head to the head of the hash chain:
	     */
	    hash_head = 0/*NIL*/;
	    if (s.lookahead >= MIN_MATCH) {
	      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
	      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
	      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
	      s.head[s.ins_h] = s.strstart;
	      /***/
	    }
	
	    /* Find the longest match, discarding those <= prev_length.
	     */
	    s.prev_length = s.match_length;
	    s.prev_match = s.match_start;
	    s.match_length = MIN_MATCH - 1;
	
	    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&
	        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {
	      /* To simplify the code, we prevent matches with the string
	       * of window index 0 (in particular we have to avoid a match
	       * of the string with itself at the start of the input file).
	       */
	      s.match_length = longest_match(s, hash_head);
	      /* longest_match() sets match_start */
	
	      if (s.match_length <= 5 &&
	         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {
	
	        /* If prev_match is also MIN_MATCH, match_start is garbage
	         * but we will ignore the current match anyway.
	         */
	        s.match_length = MIN_MATCH - 1;
	      }
	    }
	    /* If there was a match at the previous step and the current
	     * match is not better, output the previous match:
	     */
	    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {
	      max_insert = s.strstart + s.lookahead - MIN_MATCH;
	      /* Do not insert strings in hash table beyond this. */
	
	      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);
	
	      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
	                     s.prev_length - MIN_MATCH, bflush);***/
	      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);
	      /* Insert in hash table all strings up to the end of the match.
	       * strstart-1 and strstart are already inserted. If there is not
	       * enough lookahead, the last two strings are not inserted in
	       * the hash table.
	       */
	      s.lookahead -= s.prev_length - 1;
	      s.prev_length -= 2;
	      do {
	        if (++s.strstart <= max_insert) {
	          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
	          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
	          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
	          s.head[s.ins_h] = s.strstart;
	          /***/
	        }
	      } while (--s.prev_length !== 0);
	      s.match_available = 0;
	      s.match_length = MIN_MATCH - 1;
	      s.strstart++;
	
	      if (bflush) {
	        /*** FLUSH_BLOCK(s, 0); ***/
	        flush_block_only(s, false);
	        if (s.strm.avail_out === 0) {
	          return BS_NEED_MORE;
	        }
	        /***/
	      }
	
	    } else if (s.match_available) {
	      /* If there was no match at the previous position, output a
	       * single literal. If there was a match but the current match
	       * is longer, truncate the previous match to a single literal.
	       */
	      //Tracevv((stderr,"%c", s->window[s->strstart-1]));
	      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
	      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);
	
	      if (bflush) {
	        /*** FLUSH_BLOCK_ONLY(s, 0) ***/
	        flush_block_only(s, false);
	        /***/
	      }
	      s.strstart++;
	      s.lookahead--;
	      if (s.strm.avail_out === 0) {
	        return BS_NEED_MORE;
	      }
	    } else {
	      /* There is no previous match to compare with, wait for
	       * the next step to decide.
	       */
	      s.match_available = 1;
	      s.strstart++;
	      s.lookahead--;
	    }
	  }
	  //Assert (flush != Z_NO_FLUSH, "no flush?");
	  if (s.match_available) {
	    //Tracevv((stderr,"%c", s->window[s->strstart-1]));
	    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
	    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);
	
	    s.match_available = 0;
	  }
	  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;
	  if (flush === Z_FINISH) {
	    /*** FLUSH_BLOCK(s, 1); ***/
	    flush_block_only(s, true);
	    if (s.strm.avail_out === 0) {
	      return BS_FINISH_STARTED;
	    }
	    /***/
	    return BS_FINISH_DONE;
	  }
	  if (s.last_lit) {
	    /*** FLUSH_BLOCK(s, 0); ***/
	    flush_block_only(s, false);
	    if (s.strm.avail_out === 0) {
	      return BS_NEED_MORE;
	    }
	    /***/
	  }
	
	  return BS_BLOCK_DONE;
	}
	
	
	/* ===========================================================================
	 * For Z_RLE, simply look for runs of bytes, generate matches only of distance
	 * one.  Do not maintain a hash table.  (It will be regenerated if this run of
	 * deflate switches away from Z_RLE.)
	 */
	function deflate_rle(s, flush) {
	  var bflush;            /* set if current block must be flushed */
	  var prev;              /* byte at distance one to match */
	  var scan, strend;      /* scan goes up to strend for length of run */
	
	  var _win = s.window;
	
	  for (;;) {
	    /* Make sure that we always have enough lookahead, except
	     * at the end of the input file. We need MAX_MATCH bytes
	     * for the longest run, plus one for the unrolled loop.
	     */
	    if (s.lookahead <= MAX_MATCH) {
	      fill_window(s);
	      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {
	        return BS_NEED_MORE;
	      }
	      if (s.lookahead === 0) { break; } /* flush the current block */
	    }
	
	    /* See how many times the previous byte repeats */
	    s.match_length = 0;
	    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {
	      scan = s.strstart - 1;
	      prev = _win[scan];
	      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {
	        strend = s.strstart + MAX_MATCH;
	        do {
	          /*jshint noempty:false*/
	        } while (prev === _win[++scan] && prev === _win[++scan] &&
	                 prev === _win[++scan] && prev === _win[++scan] &&
	                 prev === _win[++scan] && prev === _win[++scan] &&
	                 prev === _win[++scan] && prev === _win[++scan] &&
	                 scan < strend);
	        s.match_length = MAX_MATCH - (strend - scan);
	        if (s.match_length > s.lookahead) {
	          s.match_length = s.lookahead;
	        }
	      }
	      //Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");
	    }
	
	    /* Emit match if have run of MIN_MATCH or longer, else emit literal */
	    if (s.match_length >= MIN_MATCH) {
	      //check_match(s, s.strstart, s.strstart - 1, s.match_length);
	
	      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/
	      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);
	
	      s.lookahead -= s.match_length;
	      s.strstart += s.match_length;
	      s.match_length = 0;
	    } else {
	      /* No match, output a literal byte */
	      //Tracevv((stderr,"%c", s->window[s->strstart]));
	      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
	      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);
	
	      s.lookahead--;
	      s.strstart++;
	    }
	    if (bflush) {
	      /*** FLUSH_BLOCK(s, 0); ***/
	      flush_block_only(s, false);
	      if (s.strm.avail_out === 0) {
	        return BS_NEED_MORE;
	      }
	      /***/
	    }
	  }
	  s.insert = 0;
	  if (flush === Z_FINISH) {
	    /*** FLUSH_BLOCK(s, 1); ***/
	    flush_block_only(s, true);
	    if (s.strm.avail_out === 0) {
	      return BS_FINISH_STARTED;
	    }
	    /***/
	    return BS_FINISH_DONE;
	  }
	  if (s.last_lit) {
	    /*** FLUSH_BLOCK(s, 0); ***/
	    flush_block_only(s, false);
	    if (s.strm.avail_out === 0) {
	      return BS_NEED_MORE;
	    }
	    /***/
	  }
	  return BS_BLOCK_DONE;
	}
	
	/* ===========================================================================
	 * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
	 * (It will be regenerated if this run of deflate switches away from Huffman.)
	 */
	function deflate_huff(s, flush) {
	  var bflush;             /* set if current block must be flushed */
	
	  for (;;) {
	    /* Make sure that we have a literal to write. */
	    if (s.lookahead === 0) {
	      fill_window(s);
	      if (s.lookahead === 0) {
	        if (flush === Z_NO_FLUSH) {
	          return BS_NEED_MORE;
	        }
	        break;      /* flush the current block */
	      }
	    }
	
	    /* Output a literal byte */
	    s.match_length = 0;
	    //Tracevv((stderr,"%c", s->window[s->strstart]));
	    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
	    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);
	    s.lookahead--;
	    s.strstart++;
	    if (bflush) {
	      /*** FLUSH_BLOCK(s, 0); ***/
	      flush_block_only(s, false);
	      if (s.strm.avail_out === 0) {
	        return BS_NEED_MORE;
	      }
	      /***/
	    }
	  }
	  s.insert = 0;
	  if (flush === Z_FINISH) {
	    /*** FLUSH_BLOCK(s, 1); ***/
	    flush_block_only(s, true);
	    if (s.strm.avail_out === 0) {
	      return BS_FINISH_STARTED;
	    }
	    /***/
	    return BS_FINISH_DONE;
	  }
	  if (s.last_lit) {
	    /*** FLUSH_BLOCK(s, 0); ***/
	    flush_block_only(s, false);
	    if (s.strm.avail_out === 0) {
	      return BS_NEED_MORE;
	    }
	    /***/
	  }
	  return BS_BLOCK_DONE;
	}
	
	/* Values for max_lazy_match, good_match and max_chain_length, depending on
	 * the desired pack level (0..9). The values given below have been tuned to
	 * exclude worst case performance for pathological files. Better values may be
	 * found for specific files.
	 */
	function Config(good_length, max_lazy, nice_length, max_chain, func) {
	  this.good_length = good_length;
	  this.max_lazy = max_lazy;
	  this.nice_length = nice_length;
	  this.max_chain = max_chain;
	  this.func = func;
	}
	
	var configuration_table;
	
	configuration_table = [
	  /*      good lazy nice chain */
	  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */
	  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */
	  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */
	  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */
	
	  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */
	  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */
	  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */
	  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */
	  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */
	  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */
	];
	
	
	/* ===========================================================================
	 * Initialize the "longest match" routines for a new zlib stream
	 */
	function lm_init(s) {
	  s.window_size = 2 * s.w_size;
	
	  /*** CLEAR_HASH(s); ***/
	  zero(s.head); // Fill with NIL (= 0);
	
	  /* Set the default configuration parameters:
	   */
	  s.max_lazy_match = configuration_table[s.level].max_lazy;
	  s.good_match = configuration_table[s.level].good_length;
	  s.nice_match = configuration_table[s.level].nice_length;
	  s.max_chain_length = configuration_table[s.level].max_chain;
	
	  s.strstart = 0;
	  s.block_start = 0;
	  s.lookahead = 0;
	  s.insert = 0;
	  s.match_length = s.prev_length = MIN_MATCH - 1;
	  s.match_available = 0;
	  s.ins_h = 0;
	}
	
	
	function DeflateState() {
	  this.strm = null;            /* pointer back to this zlib stream */
	  this.status = 0;            /* as the name implies */
	  this.pending_buf = null;      /* output still pending */
	  this.pending_buf_size = 0;  /* size of pending_buf */
	  this.pending_out = 0;       /* next pending byte to output to the stream */
	  this.pending = 0;           /* nb of bytes in the pending buffer */
	  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
	  this.gzhead = null;         /* gzip header information to write */
	  this.gzindex = 0;           /* where in extra, name, or comment */
	  this.method = Z_DEFLATED; /* can only be DEFLATED */
	  this.last_flush = -1;   /* value of flush param for previous deflate call */
	
	  this.w_size = 0;  /* LZ77 window size (32K by default) */
	  this.w_bits = 0;  /* log2(w_size)  (8..16) */
	  this.w_mask = 0;  /* w_size - 1 */
	
	  this.window = null;
	  /* Sliding window. Input bytes are read into the second half of the window,
	   * and move to the first half later to keep a dictionary of at least wSize
	   * bytes. With this organization, matches are limited to a distance of
	   * wSize-MAX_MATCH bytes, but this ensures that IO is always
	   * performed with a length multiple of the block size.
	   */
	
	  this.window_size = 0;
	  /* Actual size of window: 2*wSize, except when the user input buffer
	   * is directly used as sliding window.
	   */
	
	  this.prev = null;
	  /* Link to older string with same hash index. To limit the size of this
	   * array to 64K, this link is maintained only for the last 32K strings.
	   * An index in this array is thus a window index modulo 32K.
	   */
	
	  this.head = null;   /* Heads of the hash chains or NIL. */
	
	  this.ins_h = 0;       /* hash index of string to be inserted */
	  this.hash_size = 0;   /* number of elements in hash table */
	  this.hash_bits = 0;   /* log2(hash_size) */
	  this.hash_mask = 0;   /* hash_size-1 */
	
	  this.hash_shift = 0;
	  /* Number of bits by which ins_h must be shifted at each input
	   * step. It must be such that after MIN_MATCH steps, the oldest
	   * byte no longer takes part in the hash key, that is:
	   *   hash_shift * MIN_MATCH >= hash_bits
	   */
	
	  this.block_start = 0;
	  /* Window position at the beginning of the current output block. Gets
	   * negative when the window is moved backwards.
	   */
	
	  this.match_length = 0;      /* length of best match */
	  this.prev_match = 0;        /* previous match */
	  this.match_available = 0;   /* set if previous match exists */
	  this.strstart = 0;          /* start of string to insert */
	  this.match_start = 0;       /* start of matching string */
	  this.lookahead = 0;         /* number of valid bytes ahead in window */
	
	  this.prev_length = 0;
	  /* Length of the best match at previous step. Matches not greater than this
	   * are discarded. This is used in the lazy match evaluation.
	   */
	
	  this.max_chain_length = 0;
	  /* To speed up deflation, hash chains are never searched beyond this
	   * length.  A higher limit improves compression ratio but degrades the
	   * speed.
	   */
	
	  this.max_lazy_match = 0;
	  /* Attempt to find a better match only when the current match is strictly
	   * smaller than this value. This mechanism is used only for compression
	   * levels >= 4.
	   */
	  // That's alias to max_lazy_match, don't use directly
	  //this.max_insert_length = 0;
	  /* Insert new strings in the hash table only if the match length is not
	   * greater than this length. This saves time but degrades compression.
	   * max_insert_length is used only for compression levels <= 3.
	   */
	
	  this.level = 0;     /* compression level (1..9) */
	  this.strategy = 0;  /* favor or force Huffman coding*/
	
	  this.good_match = 0;
	  /* Use a faster search when the previous match is longer than this */
	
	  this.nice_match = 0; /* Stop searching when current match exceeds this */
	
	              /* used by trees.c: */
	
	  /* Didn't use ct_data typedef below to suppress compiler warning */
	
	  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */
	  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */
	  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */
	
	  // Use flat array of DOUBLE size, with interleaved fata,
	  // because JS does not support effective
	  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);
	  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);
	  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);
	  zero(this.dyn_ltree);
	  zero(this.dyn_dtree);
	  zero(this.bl_tree);
	
	  this.l_desc   = null;         /* desc. for literal tree */
	  this.d_desc   = null;         /* desc. for distance tree */
	  this.bl_desc  = null;         /* desc. for bit length tree */
	
	  //ush bl_count[MAX_BITS+1];
	  this.bl_count = new utils.Buf16(MAX_BITS + 1);
	  /* number of codes at each bit length for an optimal tree */
	
	  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */
	  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */
	  zero(this.heap);
	
	  this.heap_len = 0;               /* number of elements in the heap */
	  this.heap_max = 0;               /* element of largest frequency */
	  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
	   * The same heap array is used to build all trees.
	   */
	
	  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];
	  zero(this.depth);
	  /* Depth of each subtree used as tie breaker for trees of equal frequency
	   */
	
	  this.l_buf = 0;          /* buffer index for literals or lengths */
	
	  this.lit_bufsize = 0;
	  /* Size of match buffer for literals/lengths.  There are 4 reasons for
	   * limiting lit_bufsize to 64K:
	   *   - frequencies can be kept in 16 bit counters
	   *   - if compression is not successful for the first block, all input
	   *     data is still in the window so we can still emit a stored block even
	   *     when input comes from standard input.  (This can also be done for
	   *     all blocks if lit_bufsize is not greater than 32K.)
	   *   - if compression is not successful for a file smaller than 64K, we can
	   *     even emit a stored file instead of a stored block (saving 5 bytes).
	   *     This is applicable only for zip (not gzip or zlib).
	   *   - creating new Huffman trees less frequently may not provide fast
	   *     adaptation to changes in the input data statistics. (Take for
	   *     example a binary file with poorly compressible code followed by
	   *     a highly compressible string table.) Smaller buffer sizes give
	   *     fast adaptation but have of course the overhead of transmitting
	   *     trees more frequently.
	   *   - I can't count above 4
	   */
	
	  this.last_lit = 0;      /* running index in l_buf */
	
	  this.d_buf = 0;
	  /* Buffer index for distances. To simplify the code, d_buf and l_buf have
	   * the same number of elements. To use different lengths, an extra flag
	   * array would be necessary.
	   */
	
	  this.opt_len = 0;       /* bit length of current block with optimal trees */
	  this.static_len = 0;    /* bit length of current block with static trees */
	  this.matches = 0;       /* number of string matches in current block */
	  this.insert = 0;        /* bytes at end of window left to insert */
	
	
	  this.bi_buf = 0;
	  /* Output buffer. bits are inserted starting at the bottom (least
	   * significant bits).
	   */
	  this.bi_valid = 0;
	  /* Number of valid bits in bi_buf.  All bits above the last valid bit
	   * are always zero.
	   */
	
	  // Used for window memory init. We safely ignore it for JS. That makes
	  // sense only for pointers and memory check tools.
	  //this.high_water = 0;
	  /* High water mark offset in window for initialized bytes -- bytes above
	   * this are set to zero in order to avoid memory check warnings when
	   * longest match routines access bytes past the input.  This is then
	   * updated to the new high water mark.
	   */
	}
	
	
	function deflateResetKeep(strm) {
	  var s;
	
	  if (!strm || !strm.state) {
	    return err(strm, Z_STREAM_ERROR);
	  }
	
	  strm.total_in = strm.total_out = 0;
	  strm.data_type = Z_UNKNOWN;
	
	  s = strm.state;
	  s.pending = 0;
	  s.pending_out = 0;
	
	  if (s.wrap < 0) {
	    s.wrap = -s.wrap;
	    /* was made negative by deflate(..., Z_FINISH); */
	  }
	  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);
	  strm.adler = (s.wrap === 2) ?
	    0  // crc32(0, Z_NULL, 0)
	  :
	    1; // adler32(0, Z_NULL, 0)
	  s.last_flush = Z_NO_FLUSH;
	  trees._tr_init(s);
	  return Z_OK;
	}
	
	
	function deflateReset(strm) {
	  var ret = deflateResetKeep(strm);
	  if (ret === Z_OK) {
	    lm_init(strm.state);
	  }
	  return ret;
	}
	
	
	function deflateSetHeader(strm, head) {
	  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
	  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }
	  strm.state.gzhead = head;
	  return Z_OK;
	}
	
	
	function deflateInit2(strm, level, method, windowBits, memLevel, strategy) {
	  if (!strm) { // === Z_NULL
	    return Z_STREAM_ERROR;
	  }
	  var wrap = 1;
	
	  if (level === Z_DEFAULT_COMPRESSION) {
	    level = 6;
	  }
	
	  if (windowBits < 0) { /* suppress zlib wrapper */
	    wrap = 0;
	    windowBits = -windowBits;
	  }
	
	  else if (windowBits > 15) {
	    wrap = 2;           /* write gzip wrapper instead */
	    windowBits -= 16;
	  }
	
	
	  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||
	    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||
	    strategy < 0 || strategy > Z_FIXED) {
	    return err(strm, Z_STREAM_ERROR);
	  }
	
	
	  if (windowBits === 8) {
	    windowBits = 9;
	  }
	  /* until 256-byte window bug fixed */
	
	  var s = new DeflateState();
	
	  strm.state = s;
	  s.strm = strm;
	
	  s.wrap = wrap;
	  s.gzhead = null;
	  s.w_bits = windowBits;
	  s.w_size = 1 << s.w_bits;
	  s.w_mask = s.w_size - 1;
	
	  s.hash_bits = memLevel + 7;
	  s.hash_size = 1 << s.hash_bits;
	  s.hash_mask = s.hash_size - 1;
	  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);
	
	  s.window = new utils.Buf8(s.w_size * 2);
	  s.head = new utils.Buf16(s.hash_size);
	  s.prev = new utils.Buf16(s.w_size);
	
	  // Don't need mem init magic for JS.
	  //s.high_water = 0;  /* nothing written to s->window yet */
	
	  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */
	
	  s.pending_buf_size = s.lit_bufsize * 4;
	
	  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);
	  //s->pending_buf = (uchf *) overlay;
	  s.pending_buf = new utils.Buf8(s.pending_buf_size);
	
	  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)
	  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);
	  s.d_buf = 1 * s.lit_bufsize;
	
	  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;
	  s.l_buf = (1 + 2) * s.lit_bufsize;
	
	  s.level = level;
	  s.strategy = strategy;
	  s.method = method;
	
	  return deflateReset(strm);
	}
	
	function deflateInit(strm, level) {
	  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);
	}
	
	
	function deflate(strm, flush) {
	  var old_flush, s;
	  var beg, val; // for gzip header write only
	
	  if (!strm || !strm.state ||
	    flush > Z_BLOCK || flush < 0) {
	    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;
	  }
	
	  s = strm.state;
	
	  if (!strm.output ||
	      (!strm.input && strm.avail_in !== 0) ||
	      (s.status === FINISH_STATE && flush !== Z_FINISH)) {
	    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);
	  }
	
	  s.strm = strm; /* just in case */
	  old_flush = s.last_flush;
	  s.last_flush = flush;
	
	  /* Write the header */
	  if (s.status === INIT_STATE) {
	
	    if (s.wrap === 2) { // GZIP header
	      strm.adler = 0;  //crc32(0L, Z_NULL, 0);
	      put_byte(s, 31);
	      put_byte(s, 139);
	      put_byte(s, 8);
	      if (!s.gzhead) { // s->gzhead == Z_NULL
	        put_byte(s, 0);
	        put_byte(s, 0);
	        put_byte(s, 0);
	        put_byte(s, 0);
	        put_byte(s, 0);
	        put_byte(s, s.level === 9 ? 2 :
	                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
	                     4 : 0));
	        put_byte(s, OS_CODE);
	        s.status = BUSY_STATE;
	      }
	      else {
	        put_byte(s, (s.gzhead.text ? 1 : 0) +
	                    (s.gzhead.hcrc ? 2 : 0) +
	                    (!s.gzhead.extra ? 0 : 4) +
	                    (!s.gzhead.name ? 0 : 8) +
	                    (!s.gzhead.comment ? 0 : 16)
	                );
	        put_byte(s, s.gzhead.time & 0xff);
	        put_byte(s, (s.gzhead.time >> 8) & 0xff);
	        put_byte(s, (s.gzhead.time >> 16) & 0xff);
	        put_byte(s, (s.gzhead.time >> 24) & 0xff);
	        put_byte(s, s.level === 9 ? 2 :
	                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
	                     4 : 0));
	        put_byte(s, s.gzhead.os & 0xff);
	        if (s.gzhead.extra && s.gzhead.extra.length) {
	          put_byte(s, s.gzhead.extra.length & 0xff);
	          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);
	        }
	        if (s.gzhead.hcrc) {
	          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);
	        }
	        s.gzindex = 0;
	        s.status = EXTRA_STATE;
	      }
	    }
	    else // DEFLATE header
	    {
	      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;
	      var level_flags = -1;
	
	      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {
	        level_flags = 0;
	      } else if (s.level < 6) {
	        level_flags = 1;
	      } else if (s.level === 6) {
	        level_flags = 2;
	      } else {
	        level_flags = 3;
	      }
	      header |= (level_flags << 6);
	      if (s.strstart !== 0) { header |= PRESET_DICT; }
	      header += 31 - (header % 31);
	
	      s.status = BUSY_STATE;
	      putShortMSB(s, header);
	
	      /* Save the adler32 of the preset dictionary: */
	      if (s.strstart !== 0) {
	        putShortMSB(s, strm.adler >>> 16);
	        putShortMSB(s, strm.adler & 0xffff);
	      }
	      strm.adler = 1; // adler32(0L, Z_NULL, 0);
	    }
	  }
	
	//#ifdef GZIP
	  if (s.status === EXTRA_STATE) {
	    if (s.gzhead.extra/* != Z_NULL*/) {
	      beg = s.pending;  /* start of bytes to update crc */
	
	      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {
	        if (s.pending === s.pending_buf_size) {
	          if (s.gzhead.hcrc && s.pending > beg) {
	            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
	          }
	          flush_pending(strm);
	          beg = s.pending;
	          if (s.pending === s.pending_buf_size) {
	            break;
	          }
	        }
	        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);
	        s.gzindex++;
	      }
	      if (s.gzhead.hcrc && s.pending > beg) {
	        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
	      }
	      if (s.gzindex === s.gzhead.extra.length) {
	        s.gzindex = 0;
	        s.status = NAME_STATE;
	      }
	    }
	    else {
	      s.status = NAME_STATE;
	    }
	  }
	  if (s.status === NAME_STATE) {
	    if (s.gzhead.name/* != Z_NULL*/) {
	      beg = s.pending;  /* start of bytes to update crc */
	      //int val;
	
	      do {
	        if (s.pending === s.pending_buf_size) {
	          if (s.gzhead.hcrc && s.pending > beg) {
	            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
	          }
	          flush_pending(strm);
	          beg = s.pending;
	          if (s.pending === s.pending_buf_size) {
	            val = 1;
	            break;
	          }
	        }
	        // JS specific: little magic to add zero terminator to end of string
	        if (s.gzindex < s.gzhead.name.length) {
	          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;
	        } else {
	          val = 0;
	        }
	        put_byte(s, val);
	      } while (val !== 0);
	
	      if (s.gzhead.hcrc && s.pending > beg) {
	        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
	      }
	      if (val === 0) {
	        s.gzindex = 0;
	        s.status = COMMENT_STATE;
	      }
	    }
	    else {
	      s.status = COMMENT_STATE;
	    }
	  }
	  if (s.status === COMMENT_STATE) {
	    if (s.gzhead.comment/* != Z_NULL*/) {
	      beg = s.pending;  /* start of bytes to update crc */
	      //int val;
	
	      do {
	        if (s.pending === s.pending_buf_size) {
	          if (s.gzhead.hcrc && s.pending > beg) {
	            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
	          }
	          flush_pending(strm);
	          beg = s.pending;
	          if (s.pending === s.pending_buf_size) {
	            val = 1;
	            break;
	          }
	        }
	        // JS specific: little magic to add zero terminator to end of string
	        if (s.gzindex < s.gzhead.comment.length) {
	          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;
	        } else {
	          val = 0;
	        }
	        put_byte(s, val);
	      } while (val !== 0);
	
	      if (s.gzhead.hcrc && s.pending > beg) {
	        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
	      }
	      if (val === 0) {
	        s.status = HCRC_STATE;
	      }
	    }
	    else {
	      s.status = HCRC_STATE;
	    }
	  }
	  if (s.status === HCRC_STATE) {
	    if (s.gzhead.hcrc) {
	      if (s.pending + 2 > s.pending_buf_size) {
	        flush_pending(strm);
	      }
	      if (s.pending + 2 <= s.pending_buf_size) {
	        put_byte(s, strm.adler & 0xff);
	        put_byte(s, (strm.adler >> 8) & 0xff);
	        strm.adler = 0; //crc32(0L, Z_NULL, 0);
	        s.status = BUSY_STATE;
	      }
	    }
	    else {
	      s.status = BUSY_STATE;
	    }
	  }
	//#endif
	
	  /* Flush as much pending output as possible */
	  if (s.pending !== 0) {
	    flush_pending(strm);
	    if (strm.avail_out === 0) {
	      /* Since avail_out is 0, deflate will be called again with
	       * more output space, but possibly with both pending and
	       * avail_in equal to zero. There won't be anything to do,
	       * but this is not an error situation so make sure we
	       * return OK instead of BUF_ERROR at next call of deflate:
	       */
	      s.last_flush = -1;
	      return Z_OK;
	    }
	
	    /* Make sure there is something to do and avoid duplicate consecutive
	     * flushes. For repeated and useless calls with Z_FINISH, we keep
	     * returning Z_STREAM_END instead of Z_BUF_ERROR.
	     */
	  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&
	    flush !== Z_FINISH) {
	    return err(strm, Z_BUF_ERROR);
	  }
	
	  /* User must not provide more input after the first FINISH: */
	  if (s.status === FINISH_STATE && strm.avail_in !== 0) {
	    return err(strm, Z_BUF_ERROR);
	  }
	
	  /* Start a new block or continue the current one.
	   */
	  if (strm.avail_in !== 0 || s.lookahead !== 0 ||
	    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {
	    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :
	      (s.strategy === Z_RLE ? deflate_rle(s, flush) :
	        configuration_table[s.level].func(s, flush));
	
	    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
	      s.status = FINISH_STATE;
	    }
	    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
	      if (strm.avail_out === 0) {
	        s.last_flush = -1;
	        /* avoid BUF_ERROR next call, see above */
	      }
	      return Z_OK;
	      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call
	       * of deflate should use the same flush parameter to make sure
	       * that the flush is complete. So we don't have to output an
	       * empty block here, this will be done at next call. This also
	       * ensures that for a very small output buffer, we emit at most
	       * one empty block.
	       */
	    }
	    if (bstate === BS_BLOCK_DONE) {
	      if (flush === Z_PARTIAL_FLUSH) {
	        trees._tr_align(s);
	      }
	      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */
	
	        trees._tr_stored_block(s, 0, 0, false);
	        /* For a full flush, this empty block will be recognized
	         * as a special marker by inflate_sync().
	         */
	        if (flush === Z_FULL_FLUSH) {
	          /*** CLEAR_HASH(s); ***/             /* forget history */
	          zero(s.head); // Fill with NIL (= 0);
	
	          if (s.lookahead === 0) {
	            s.strstart = 0;
	            s.block_start = 0;
	            s.insert = 0;
	          }
	        }
	      }
	      flush_pending(strm);
	      if (strm.avail_out === 0) {
	        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */
	        return Z_OK;
	      }
	    }
	  }
	  //Assert(strm->avail_out > 0, "bug2");
	  //if (strm.avail_out <= 0) { throw new Error("bug2");}
	
	  if (flush !== Z_FINISH) { return Z_OK; }
	  if (s.wrap <= 0) { return Z_STREAM_END; }
	
	  /* Write the trailer */
	  if (s.wrap === 2) {
	    put_byte(s, strm.adler & 0xff);
	    put_byte(s, (strm.adler >> 8) & 0xff);
	    put_byte(s, (strm.adler >> 16) & 0xff);
	    put_byte(s, (strm.adler >> 24) & 0xff);
	    put_byte(s, strm.total_in & 0xff);
	    put_byte(s, (strm.total_in >> 8) & 0xff);
	    put_byte(s, (strm.total_in >> 16) & 0xff);
	    put_byte(s, (strm.total_in >> 24) & 0xff);
	  }
	  else
	  {
	    putShortMSB(s, strm.adler >>> 16);
	    putShortMSB(s, strm.adler & 0xffff);
	  }
	
	  flush_pending(strm);
	  /* If avail_out is zero, the application will call deflate again
	   * to flush the rest.
	   */
	  if (s.wrap > 0) { s.wrap = -s.wrap; }
	  /* write the trailer only once! */
	  return s.pending !== 0 ? Z_OK : Z_STREAM_END;
	}
	
	function deflateEnd(strm) {
	  var status;
	
	  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
	    return Z_STREAM_ERROR;
	  }
	
	  status = strm.state.status;
	  if (status !== INIT_STATE &&
	    status !== EXTRA_STATE &&
	    status !== NAME_STATE &&
	    status !== COMMENT_STATE &&
	    status !== HCRC_STATE &&
	    status !== BUSY_STATE &&
	    status !== FINISH_STATE
	  ) {
	    return err(strm, Z_STREAM_ERROR);
	  }
	
	  strm.state = null;
	
	  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;
	}
	
	
	/* =========================================================================
	 * Initializes the compression dictionary from the given byte
	 * sequence without producing any compressed output.
	 */
	function deflateSetDictionary(strm, dictionary) {
	  var dictLength = dictionary.length;
	
	  var s;
	  var str, n;
	  var wrap;
	  var avail;
	  var next;
	  var input;
	  var tmpDict;
	
	  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
	    return Z_STREAM_ERROR;
	  }
	
	  s = strm.state;
	  wrap = s.wrap;
	
	  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {
	    return Z_STREAM_ERROR;
	  }
	
	  /* when using zlib wrappers, compute Adler-32 for provided dictionary */
	  if (wrap === 1) {
	    /* adler32(strm->adler, dictionary, dictLength); */
	    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);
	  }
	
	  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */
	
	  /* if dictionary would fill window, just replace the history */
	  if (dictLength >= s.w_size) {
	    if (wrap === 0) {            /* already empty otherwise */
	      /*** CLEAR_HASH(s); ***/
	      zero(s.head); // Fill with NIL (= 0);
	      s.strstart = 0;
	      s.block_start = 0;
	      s.insert = 0;
	    }
	    /* use the tail */
	    // dictionary = dictionary.slice(dictLength - s.w_size);
	    tmpDict = new utils.Buf8(s.w_size);
	    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);
	    dictionary = tmpDict;
	    dictLength = s.w_size;
	  }
	  /* insert dictionary into window and hash */
	  avail = strm.avail_in;
	  next = strm.next_in;
	  input = strm.input;
	  strm.avail_in = dictLength;
	  strm.next_in = 0;
	  strm.input = dictionary;
	  fill_window(s);
	  while (s.lookahead >= MIN_MATCH) {
	    str = s.strstart;
	    n = s.lookahead - (MIN_MATCH - 1);
	    do {
	      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
	      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;
	
	      s.prev[str & s.w_mask] = s.head[s.ins_h];
	
	      s.head[s.ins_h] = str;
	      str++;
	    } while (--n);
	    s.strstart = str;
	    s.lookahead = MIN_MATCH - 1;
	    fill_window(s);
	  }
	  s.strstart += s.lookahead;
	  s.block_start = s.strstart;
	  s.insert = s.lookahead;
	  s.lookahead = 0;
	  s.match_length = s.prev_length = MIN_MATCH - 1;
	  s.match_available = 0;
	  strm.next_in = next;
	  strm.input = input;
	  strm.avail_in = avail;
	  s.wrap = wrap;
	  return Z_OK;
	}
	
	
	exports.deflateInit = deflateInit;
	exports.deflateInit2 = deflateInit2;
	exports.deflateReset = deflateReset;
	exports.deflateResetKeep = deflateResetKeep;
	exports.deflateSetHeader = deflateSetHeader;
	exports.deflate = deflate;
	exports.deflateEnd = deflateEnd;
	exports.deflateSetDictionary = deflateSetDictionary;
	exports.deflateInfo = 'pako deflate (from Nodeca project)';
	
	/* Not implemented
	exports.deflateBound = deflateBound;
	exports.deflateCopy = deflateCopy;
	exports.deflateParams = deflateParams;
	exports.deflatePending = deflatePending;
	exports.deflatePrime = deflatePrime;
	exports.deflateTune = deflateTune;
	*/


/***/ },
/* 366 */
/***/ function(module, exports) {

	'use strict';
	
	
	var TYPED_OK =  (typeof Uint8Array !== 'undefined') &&
	                (typeof Uint16Array !== 'undefined') &&
	                (typeof Int32Array !== 'undefined');
	
	
	exports.assign = function (obj /*from1, from2, from3, ...*/) {
	  var sources = Array.prototype.slice.call(arguments, 1);
	  while (sources.length) {
	    var source = sources.shift();
	    if (!source) { continue; }
	
	    if (typeof source !== 'object') {
	      throw new TypeError(source + 'must be non-object');
	    }
	
	    for (var p in source) {
	      if (source.hasOwnProperty(p)) {
	        obj[p] = source[p];
	      }
	    }
	  }
	
	  return obj;
	};
	
	
	// reduce buffer size, avoiding mem copy
	exports.shrinkBuf = function (buf, size) {
	  if (buf.length === size) { return buf; }
	  if (buf.subarray) { return buf.subarray(0, size); }
	  buf.length = size;
	  return buf;
	};
	
	
	var fnTyped = {
	  arraySet: function (dest, src, src_offs, len, dest_offs) {
	    if (src.subarray && dest.subarray) {
	      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);
	      return;
	    }
	    // Fallback to ordinary array
	    for (var i = 0; i < len; i++) {
	      dest[dest_offs + i] = src[src_offs + i];
	    }
	  },
	  // Join array of chunks to single array.
	  flattenChunks: function (chunks) {
	    var i, l, len, pos, chunk, result;
	
	    // calculate data length
	    len = 0;
	    for (i = 0, l = chunks.length; i < l; i++) {
	      len += chunks[i].length;
	    }
	
	    // join chunks
	    result = new Uint8Array(len);
	    pos = 0;
	    for (i = 0, l = chunks.length; i < l; i++) {
	      chunk = chunks[i];
	      result.set(chunk, pos);
	      pos += chunk.length;
	    }
	
	    return result;
	  }
	};
	
	var fnUntyped = {
	  arraySet: function (dest, src, src_offs, len, dest_offs) {
	    for (var i = 0; i < len; i++) {
	      dest[dest_offs + i] = src[src_offs + i];
	    }
	  },
	  // Join array of chunks to single array.
	  flattenChunks: function (chunks) {
	    return [].concat.apply([], chunks);
	  }
	};
	
	
	// Enable/Disable typed arrays use, for testing
	//
	exports.setTyped = function (on) {
	  if (on) {
	    exports.Buf8  = Uint8Array;
	    exports.Buf16 = Uint16Array;
	    exports.Buf32 = Int32Array;
	    exports.assign(exports, fnTyped);
	  } else {
	    exports.Buf8  = Array;
	    exports.Buf16 = Array;
	    exports.Buf32 = Array;
	    exports.assign(exports, fnUntyped);
	  }
	};
	
	exports.setTyped(TYPED_OK);


/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	var utils = __webpack_require__(366);
	
	/* Public constants ==========================================================*/
	/* ===========================================================================*/
	
	
	//var Z_FILTERED          = 1;
	//var Z_HUFFMAN_ONLY      = 2;
	//var Z_RLE               = 3;
	var Z_FIXED               = 4;
	//var Z_DEFAULT_STRATEGY  = 0;
	
	/* Possible values of the data_type field (though see inflate()) */
	var Z_BINARY              = 0;
	var Z_TEXT                = 1;
	//var Z_ASCII             = 1; // = Z_TEXT
	var Z_UNKNOWN             = 2;
	
	/*============================================================================*/
	
	
	function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }
	
	// From zutil.h
	
	var STORED_BLOCK = 0;
	var STATIC_TREES = 1;
	var DYN_TREES    = 2;
	/* The three kinds of block type */
	
	var MIN_MATCH    = 3;
	var MAX_MATCH    = 258;
	/* The minimum and maximum match lengths */
	
	// From deflate.h
	/* ===========================================================================
	 * Internal compression state.
	 */
	
	var LENGTH_CODES  = 29;
	/* number of length codes, not counting the special END_BLOCK code */
	
	var LITERALS      = 256;
	/* number of literal bytes 0..255 */
	
	var L_CODES       = LITERALS + 1 + LENGTH_CODES;
	/* number of Literal or Length codes, including the END_BLOCK code */
	
	var D_CODES       = 30;
	/* number of distance codes */
	
	var BL_CODES      = 19;
	/* number of codes used to transfer the bit lengths */
	
	var HEAP_SIZE     = 2 * L_CODES + 1;
	/* maximum heap size */
	
	var MAX_BITS      = 15;
	/* All codes must not exceed MAX_BITS bits */
	
	var Buf_size      = 16;
	/* size of bit buffer in bi_buf */
	
	
	/* ===========================================================================
	 * Constants
	 */
	
	var MAX_BL_BITS = 7;
	/* Bit length codes must not exceed MAX_BL_BITS bits */
	
	var END_BLOCK   = 256;
	/* end of block literal code */
	
	var REP_3_6     = 16;
	/* repeat previous bit length 3-6 times (2 bits of repeat count) */
	
	var REPZ_3_10   = 17;
	/* repeat a zero length 3-10 times  (3 bits of repeat count) */
	
	var REPZ_11_138 = 18;
	/* repeat a zero length 11-138 times  (7 bits of repeat count) */
	
	/* eslint-disable comma-spacing,array-bracket-spacing */
	var extra_lbits =   /* extra bits for each length code */
	  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];
	
	var extra_dbits =   /* extra bits for each distance code */
	  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];
	
	var extra_blbits =  /* extra bits for each bit length code */
	  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];
	
	var bl_order =
	  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
	/* eslint-enable comma-spacing,array-bracket-spacing */
	
	/* The lengths of the bit length codes are sent in order of decreasing
	 * probability, to avoid transmitting the lengths for unused bit length codes.
	 */
	
	/* ===========================================================================
	 * Local data. These are initialized only once.
	 */
	
	// We pre-fill arrays with 0 to avoid uninitialized gaps
	
	var DIST_CODE_LEN = 512; /* see definition of array dist_code below */
	
	// !!!! Use flat array insdead of structure, Freq = i*2, Len = i*2+1
	var static_ltree  = new Array((L_CODES + 2) * 2);
	zero(static_ltree);
	/* The static literal tree. Since the bit lengths are imposed, there is no
	 * need for the L_CODES extra codes used during heap construction. However
	 * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
	 * below).
	 */
	
	var static_dtree  = new Array(D_CODES * 2);
	zero(static_dtree);
	/* The static distance tree. (Actually a trivial tree since all codes use
	 * 5 bits.)
	 */
	
	var _dist_code    = new Array(DIST_CODE_LEN);
	zero(_dist_code);
	/* Distance codes. The first 256 values correspond to the distances
	 * 3 .. 258, the last 256 values correspond to the top 8 bits of
	 * the 15 bit distances.
	 */
	
	var _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);
	zero(_length_code);
	/* length code for each normalized match length (0 == MIN_MATCH) */
	
	var base_length   = new Array(LENGTH_CODES);
	zero(base_length);
	/* First normalized length for each code (0 = MIN_MATCH) */
	
	var base_dist     = new Array(D_CODES);
	zero(base_dist);
	/* First normalized distance for each code (0 = distance of 1) */
	
	
	function StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {
	
	  this.static_tree  = static_tree;  /* static tree or NULL */
	  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */
	  this.extra_base   = extra_base;   /* base index for extra_bits */
	  this.elems        = elems;        /* max number of elements in the tree */
	  this.max_length   = max_length;   /* max bit length for the codes */
	
	  // show if `static_tree` has data or dummy - needed for monomorphic objects
	  this.has_stree    = static_tree && static_tree.length;
	}
	
	
	var static_l_desc;
	var static_d_desc;
	var static_bl_desc;
	
	
	function TreeDesc(dyn_tree, stat_desc) {
	  this.dyn_tree = dyn_tree;     /* the dynamic tree */
	  this.max_code = 0;            /* largest code with non zero frequency */
	  this.stat_desc = stat_desc;   /* the corresponding static tree */
	}
	
	
	
	function d_code(dist) {
	  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];
	}
	
	
	/* ===========================================================================
	 * Output a short LSB first on the stream.
	 * IN assertion: there is enough room in pendingBuf.
	 */
	function put_short(s, w) {
	//    put_byte(s, (uch)((w) & 0xff));
	//    put_byte(s, (uch)((ush)(w) >> 8));
	  s.pending_buf[s.pending++] = (w) & 0xff;
	  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;
	}
	
	
	/* ===========================================================================
	 * Send a value on a given number of bits.
	 * IN assertion: length <= 16 and value fits in length bits.
	 */
	function send_bits(s, value, length) {
	  if (s.bi_valid > (Buf_size - length)) {
	    s.bi_buf |= (value << s.bi_valid) & 0xffff;
	    put_short(s, s.bi_buf);
	    s.bi_buf = value >> (Buf_size - s.bi_valid);
	    s.bi_valid += length - Buf_size;
	  } else {
	    s.bi_buf |= (value << s.bi_valid) & 0xffff;
	    s.bi_valid += length;
	  }
	}
	
	
	function send_code(s, c, tree) {
	  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);
	}
	
	
	/* ===========================================================================
	 * Reverse the first len bits of a code, using straightforward code (a faster
	 * method would use a table)
	 * IN assertion: 1 <= len <= 15
	 */
	function bi_reverse(code, len) {
	  var res = 0;
	  do {
	    res |= code & 1;
	    code >>>= 1;
	    res <<= 1;
	  } while (--len > 0);
	  return res >>> 1;
	}
	
	
	/* ===========================================================================
	 * Flush the bit buffer, keeping at most 7 bits in it.
	 */
	function bi_flush(s) {
	  if (s.bi_valid === 16) {
	    put_short(s, s.bi_buf);
	    s.bi_buf = 0;
	    s.bi_valid = 0;
	
	  } else if (s.bi_valid >= 8) {
	    s.pending_buf[s.pending++] = s.bi_buf & 0xff;
	    s.bi_buf >>= 8;
	    s.bi_valid -= 8;
	  }
	}
	
	
	/* ===========================================================================
	 * Compute the optimal bit lengths for a tree and update the total bit length
	 * for the current block.
	 * IN assertion: the fields freq and dad are set, heap[heap_max] and
	 *    above are the tree nodes sorted by increasing frequency.
	 * OUT assertions: the field len is set to the optimal bit length, the
	 *     array bl_count contains the frequencies for each bit length.
	 *     The length opt_len is updated; static_len is also updated if stree is
	 *     not null.
	 */
	function gen_bitlen(s, desc)
	//    deflate_state *s;
	//    tree_desc *desc;    /* the tree descriptor */
	{
	  var tree            = desc.dyn_tree;
	  var max_code        = desc.max_code;
	  var stree           = desc.stat_desc.static_tree;
	  var has_stree       = desc.stat_desc.has_stree;
	  var extra           = desc.stat_desc.extra_bits;
	  var base            = desc.stat_desc.extra_base;
	  var max_length      = desc.stat_desc.max_length;
	  var h;              /* heap index */
	  var n, m;           /* iterate over the tree elements */
	  var bits;           /* bit length */
	  var xbits;          /* extra bits */
	  var f;              /* frequency */
	  var overflow = 0;   /* number of elements with bit length too large */
	
	  for (bits = 0; bits <= MAX_BITS; bits++) {
	    s.bl_count[bits] = 0;
	  }
	
	  /* In a first pass, compute the optimal bit lengths (which may
	   * overflow in the case of the bit length tree).
	   */
	  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */
	
	  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {
	    n = s.heap[h];
	    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;
	    if (bits > max_length) {
	      bits = max_length;
	      overflow++;
	    }
	    tree[n * 2 + 1]/*.Len*/ = bits;
	    /* We overwrite tree[n].Dad which is no longer needed */
	
	    if (n > max_code) { continue; } /* not a leaf node */
	
	    s.bl_count[bits]++;
	    xbits = 0;
	    if (n >= base) {
	      xbits = extra[n - base];
	    }
	    f = tree[n * 2]/*.Freq*/;
	    s.opt_len += f * (bits + xbits);
	    if (has_stree) {
	      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);
	    }
	  }
	  if (overflow === 0) { return; }
	
	  // Trace((stderr,"\nbit length overflow\n"));
	  /* This happens for example on obj2 and pic of the Calgary corpus */
	
	  /* Find the first bit length which could increase: */
	  do {
	    bits = max_length - 1;
	    while (s.bl_count[bits] === 0) { bits--; }
	    s.bl_count[bits]--;      /* move one leaf down the tree */
	    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */
	    s.bl_count[max_length]--;
	    /* The brother of the overflow item also moves one step up,
	     * but this does not affect bl_count[max_length]
	     */
	    overflow -= 2;
	  } while (overflow > 0);
	
	  /* Now recompute all bit lengths, scanning in increasing frequency.
	   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
	   * lengths instead of fixing only the wrong ones. This idea is taken
	   * from 'ar' written by Haruhiko Okumura.)
	   */
	  for (bits = max_length; bits !== 0; bits--) {
	    n = s.bl_count[bits];
	    while (n !== 0) {
	      m = s.heap[--h];
	      if (m > max_code) { continue; }
	      if (tree[m * 2 + 1]/*.Len*/ !== bits) {
	        // Trace((stderr,"code %d bits %d->%d\n", m, tree[m].Len, bits));
	        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;
	        tree[m * 2 + 1]/*.Len*/ = bits;
	      }
	      n--;
	    }
	  }
	}
	
	
	/* ===========================================================================
	 * Generate the codes for a given tree and bit counts (which need not be
	 * optimal).
	 * IN assertion: the array bl_count contains the bit length statistics for
	 * the given tree and the field len is set for all tree elements.
	 * OUT assertion: the field code is set for all tree elements of non
	 *     zero code length.
	 */
	function gen_codes(tree, max_code, bl_count)
	//    ct_data *tree;             /* the tree to decorate */
	//    int max_code;              /* largest code with non zero frequency */
	//    ushf *bl_count;            /* number of codes at each bit length */
	{
	  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */
	  var code = 0;              /* running code value */
	  var bits;                  /* bit index */
	  var n;                     /* code index */
	
	  /* The distribution counts are first used to generate the code values
	   * without bit reversal.
	   */
	  for (bits = 1; bits <= MAX_BITS; bits++) {
	    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;
	  }
	  /* Check that the bit counts in bl_count are consistent. The last code
	   * must be all ones.
	   */
	  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,
	  //        "inconsistent bit counts");
	  //Tracev((stderr,"\ngen_codes: max_code %d ", max_code));
	
	  for (n = 0;  n <= max_code; n++) {
	    var len = tree[n * 2 + 1]/*.Len*/;
	    if (len === 0) { continue; }
	    /* Now reverse the bits */
	    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);
	
	    //Tracecv(tree != static_ltree, (stderr,"\nn %3d %c l %2d c %4x (%x) ",
	    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));
	  }
	}
	
	
	/* ===========================================================================
	 * Initialize the various 'constant' tables.
	 */
	function tr_static_init() {
	  var n;        /* iterates over tree elements */
	  var bits;     /* bit counter */
	  var length;   /* length value */
	  var code;     /* code value */
	  var dist;     /* distance index */
	  var bl_count = new Array(MAX_BITS + 1);
	  /* number of codes at each bit length for an optimal tree */
	
	  // do check in _tr_init()
	  //if (static_init_done) return;
	
	  /* For some embedded targets, global variables are not initialized: */
	/*#ifdef NO_INIT_GLOBAL_POINTERS
	  static_l_desc.static_tree = static_ltree;
	  static_l_desc.extra_bits = extra_lbits;
	  static_d_desc.static_tree = static_dtree;
	  static_d_desc.extra_bits = extra_dbits;
	  static_bl_desc.extra_bits = extra_blbits;
	#endif*/
	
	  /* Initialize the mapping length (0..255) -> length code (0..28) */
	  length = 0;
	  for (code = 0; code < LENGTH_CODES - 1; code++) {
	    base_length[code] = length;
	    for (n = 0; n < (1 << extra_lbits[code]); n++) {
	      _length_code[length++] = code;
	    }
	  }
	  //Assert (length == 256, "tr_static_init: length != 256");
	  /* Note that the length 255 (match length 258) can be represented
	   * in two different ways: code 284 + 5 bits or code 285, so we
	   * overwrite length_code[255] to use the best encoding:
	   */
	  _length_code[length - 1] = code;
	
	  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */
	  dist = 0;
	  for (code = 0; code < 16; code++) {
	    base_dist[code] = dist;
	    for (n = 0; n < (1 << extra_dbits[code]); n++) {
	      _dist_code[dist++] = code;
	    }
	  }
	  //Assert (dist == 256, "tr_static_init: dist != 256");
	  dist >>= 7; /* from now on, all distances are divided by 128 */
	  for (; code < D_CODES; code++) {
	    base_dist[code] = dist << 7;
	    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {
	      _dist_code[256 + dist++] = code;
	    }
	  }
	  //Assert (dist == 256, "tr_static_init: 256+dist != 512");
	
	  /* Construct the codes of the static literal tree */
	  for (bits = 0; bits <= MAX_BITS; bits++) {
	    bl_count[bits] = 0;
	  }
	
	  n = 0;
	  while (n <= 143) {
	    static_ltree[n * 2 + 1]/*.Len*/ = 8;
	    n++;
	    bl_count[8]++;
	  }
	  while (n <= 255) {
	    static_ltree[n * 2 + 1]/*.Len*/ = 9;
	    n++;
	    bl_count[9]++;
	  }
	  while (n <= 279) {
	    static_ltree[n * 2 + 1]/*.Len*/ = 7;
	    n++;
	    bl_count[7]++;
	  }
	  while (n <= 287) {
	    static_ltree[n * 2 + 1]/*.Len*/ = 8;
	    n++;
	    bl_count[8]++;
	  }
	  /* Codes 286 and 287 do not exist, but we must include them in the
	   * tree construction to get a canonical Huffman tree (longest code
	   * all ones)
	   */
	  gen_codes(static_ltree, L_CODES + 1, bl_count);
	
	  /* The static distance tree is trivial: */
	  for (n = 0; n < D_CODES; n++) {
	    static_dtree[n * 2 + 1]/*.Len*/ = 5;
	    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);
	  }
	
	  // Now data ready and we can init static trees
	  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);
	  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);
	  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);
	
	  //static_init_done = true;
	}
	
	
	/* ===========================================================================
	 * Initialize a new block.
	 */
	function init_block(s) {
	  var n; /* iterates over tree elements */
	
	  /* Initialize the trees. */
	  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }
	  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }
	  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }
	
	  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;
	  s.opt_len = s.static_len = 0;
	  s.last_lit = s.matches = 0;
	}
	
	
	/* ===========================================================================
	 * Flush the bit buffer and align the output on a byte boundary
	 */
	function bi_windup(s)
	{
	  if (s.bi_valid > 8) {
	    put_short(s, s.bi_buf);
	  } else if (s.bi_valid > 0) {
	    //put_byte(s, (Byte)s->bi_buf);
	    s.pending_buf[s.pending++] = s.bi_buf;
	  }
	  s.bi_buf = 0;
	  s.bi_valid = 0;
	}
	
	/* ===========================================================================
	 * Copy a stored block, storing first the length and its
	 * one's complement if requested.
	 */
	function copy_block(s, buf, len, header)
	//DeflateState *s;
	//charf    *buf;    /* the input data */
	//unsigned len;     /* its length */
	//int      header;  /* true if block header must be written */
	{
	  bi_windup(s);        /* align on byte boundary */
	
	  if (header) {
	    put_short(s, len);
	    put_short(s, ~len);
	  }
	//  while (len--) {
	//    put_byte(s, *buf++);
	//  }
	  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);
	  s.pending += len;
	}
	
	/* ===========================================================================
	 * Compares to subtrees, using the tree depth as tie breaker when
	 * the subtrees have equal frequency. This minimizes the worst case length.
	 */
	function smaller(tree, n, m, depth) {
	  var _n2 = n * 2;
	  var _m2 = m * 2;
	  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||
	         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));
	}
	
	/* ===========================================================================
	 * Restore the heap property by moving down the tree starting at node k,
	 * exchanging a node with the smallest of its two sons if necessary, stopping
	 * when the heap property is re-established (each father smaller than its
	 * two sons).
	 */
	function pqdownheap(s, tree, k)
	//    deflate_state *s;
	//    ct_data *tree;  /* the tree to restore */
	//    int k;               /* node to move down */
	{
	  var v = s.heap[k];
	  var j = k << 1;  /* left son of k */
	  while (j <= s.heap_len) {
	    /* Set j to the smallest of the two sons: */
	    if (j < s.heap_len &&
	      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {
	      j++;
	    }
	    /* Exit if v is smaller than both sons */
	    if (smaller(tree, v, s.heap[j], s.depth)) { break; }
	
	    /* Exchange v with the smallest son */
	    s.heap[k] = s.heap[j];
	    k = j;
	
	    /* And continue down the tree, setting j to the left son of k */
	    j <<= 1;
	  }
	  s.heap[k] = v;
	}
	
	
	// inlined manually
	// var SMALLEST = 1;
	
	/* ===========================================================================
	 * Send the block data compressed using the given Huffman trees
	 */
	function compress_block(s, ltree, dtree)
	//    deflate_state *s;
	//    const ct_data *ltree; /* literal tree */
	//    const ct_data *dtree; /* distance tree */
	{
	  var dist;           /* distance of matched string */
	  var lc;             /* match length or unmatched char (if dist == 0) */
	  var lx = 0;         /* running index in l_buf */
	  var code;           /* the code to send */
	  var extra;          /* number of extra bits to send */
	
	  if (s.last_lit !== 0) {
	    do {
	      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);
	      lc = s.pending_buf[s.l_buf + lx];
	      lx++;
	
	      if (dist === 0) {
	        send_code(s, lc, ltree); /* send a literal byte */
	        //Tracecv(isgraph(lc), (stderr," '%c' ", lc));
	      } else {
	        /* Here, lc is the match length - MIN_MATCH */
	        code = _length_code[lc];
	        send_code(s, code + LITERALS + 1, ltree); /* send the length code */
	        extra = extra_lbits[code];
	        if (extra !== 0) {
	          lc -= base_length[code];
	          send_bits(s, lc, extra);       /* send the extra length bits */
	        }
	        dist--; /* dist is now the match distance - 1 */
	        code = d_code(dist);
	        //Assert (code < D_CODES, "bad d_code");
	
	        send_code(s, code, dtree);       /* send the distance code */
	        extra = extra_dbits[code];
	        if (extra !== 0) {
	          dist -= base_dist[code];
	          send_bits(s, dist, extra);   /* send the extra distance bits */
	        }
	      } /* literal or match pair ? */
	
	      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */
	      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,
	      //       "pendingBuf overflow");
	
	    } while (lx < s.last_lit);
	  }
	
	  send_code(s, END_BLOCK, ltree);
	}
	
	
	/* ===========================================================================
	 * Construct one Huffman tree and assigns the code bit strings and lengths.
	 * Update the total bit length for the current block.
	 * IN assertion: the field freq is set for all tree elements.
	 * OUT assertions: the fields len and code are set to the optimal bit length
	 *     and corresponding code. The length opt_len is updated; static_len is
	 *     also updated if stree is not null. The field max_code is set.
	 */
	function build_tree(s, desc)
	//    deflate_state *s;
	//    tree_desc *desc; /* the tree descriptor */
	{
	  var tree     = desc.dyn_tree;
	  var stree    = desc.stat_desc.static_tree;
	  var has_stree = desc.stat_desc.has_stree;
	  var elems    = desc.stat_desc.elems;
	  var n, m;          /* iterate over heap elements */
	  var max_code = -1; /* largest code with non zero frequency */
	  var node;          /* new node being created */
	
	  /* Construct the initial heap, with least frequent element in
	   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
	   * heap[0] is not used.
	   */
	  s.heap_len = 0;
	  s.heap_max = HEAP_SIZE;
	
	  for (n = 0; n < elems; n++) {
	    if (tree[n * 2]/*.Freq*/ !== 0) {
	      s.heap[++s.heap_len] = max_code = n;
	      s.depth[n] = 0;
	
	    } else {
	      tree[n * 2 + 1]/*.Len*/ = 0;
	    }
	  }
	
	  /* The pkzip format requires that at least one distance code exists,
	   * and that at least one bit should be sent even if there is only one
	   * possible code. So to avoid special checks later on we force at least
	   * two codes of non zero frequency.
	   */
	  while (s.heap_len < 2) {
	    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);
	    tree[node * 2]/*.Freq*/ = 1;
	    s.depth[node] = 0;
	    s.opt_len--;
	
	    if (has_stree) {
	      s.static_len -= stree[node * 2 + 1]/*.Len*/;
	    }
	    /* node is 0 or 1 so it does not have extra bits */
	  }
	  desc.max_code = max_code;
	
	  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
	   * establish sub-heaps of increasing lengths:
	   */
	  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }
	
	  /* Construct the Huffman tree by repeatedly combining the least two
	   * frequent nodes.
	   */
	  node = elems;              /* next internal node of the tree */
	  do {
	    //pqremove(s, tree, n);  /* n = node of least frequency */
	    /*** pqremove ***/
	    n = s.heap[1/*SMALLEST*/];
	    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];
	    pqdownheap(s, tree, 1/*SMALLEST*/);
	    /***/
	
	    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */
	
	    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */
	    s.heap[--s.heap_max] = m;
	
	    /* Create a new node father of n and m */
	    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;
	    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;
	    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;
	
	    /* and insert the new node in the heap */
	    s.heap[1/*SMALLEST*/] = node++;
	    pqdownheap(s, tree, 1/*SMALLEST*/);
	
	  } while (s.heap_len >= 2);
	
	  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];
	
	  /* At this point, the fields freq and dad are set. We can now
	   * generate the bit lengths.
	   */
	  gen_bitlen(s, desc);
	
	  /* The field len is now set, we can generate the bit codes */
	  gen_codes(tree, max_code, s.bl_count);
	}
	
	
	/* ===========================================================================
	 * Scan a literal or distance tree to determine the frequencies of the codes
	 * in the bit length tree.
	 */
	function scan_tree(s, tree, max_code)
	//    deflate_state *s;
	//    ct_data *tree;   /* the tree to be scanned */
	//    int max_code;    /* and its largest code of non zero frequency */
	{
	  var n;                     /* iterates over all tree elements */
	  var prevlen = -1;          /* last emitted length */
	  var curlen;                /* length of current code */
	
	  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */
	
	  var count = 0;             /* repeat count of the current code */
	  var max_count = 7;         /* max repeat count */
	  var min_count = 4;         /* min repeat count */
	
	  if (nextlen === 0) {
	    max_count = 138;
	    min_count = 3;
	  }
	  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */
	
	  for (n = 0; n <= max_code; n++) {
	    curlen = nextlen;
	    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;
	
	    if (++count < max_count && curlen === nextlen) {
	      continue;
	
	    } else if (count < min_count) {
	      s.bl_tree[curlen * 2]/*.Freq*/ += count;
	
	    } else if (curlen !== 0) {
	
	      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }
	      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;
	
	    } else if (count <= 10) {
	      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;
	
	    } else {
	      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;
	    }
	
	    count = 0;
	    prevlen = curlen;
	
	    if (nextlen === 0) {
	      max_count = 138;
	      min_count = 3;
	
	    } else if (curlen === nextlen) {
	      max_count = 6;
	      min_count = 3;
	
	    } else {
	      max_count = 7;
	      min_count = 4;
	    }
	  }
	}
	
	
	/* ===========================================================================
	 * Send a literal or distance tree in compressed form, using the codes in
	 * bl_tree.
	 */
	function send_tree(s, tree, max_code)
	//    deflate_state *s;
	//    ct_data *tree; /* the tree to be scanned */
	//    int max_code;       /* and its largest code of non zero frequency */
	{
	  var n;                     /* iterates over all tree elements */
	  var prevlen = -1;          /* last emitted length */
	  var curlen;                /* length of current code */
	
	  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */
	
	  var count = 0;             /* repeat count of the current code */
	  var max_count = 7;         /* max repeat count */
	  var min_count = 4;         /* min repeat count */
	
	  /* tree[max_code+1].Len = -1; */  /* guard already set */
	  if (nextlen === 0) {
	    max_count = 138;
	    min_count = 3;
	  }
	
	  for (n = 0; n <= max_code; n++) {
	    curlen = nextlen;
	    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;
	
	    if (++count < max_count && curlen === nextlen) {
	      continue;
	
	    } else if (count < min_count) {
	      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);
	
	    } else if (curlen !== 0) {
	      if (curlen !== prevlen) {
	        send_code(s, curlen, s.bl_tree);
	        count--;
	      }
	      //Assert(count >= 3 && count <= 6, " 3_6?");
	      send_code(s, REP_3_6, s.bl_tree);
	      send_bits(s, count - 3, 2);
	
	    } else if (count <= 10) {
	      send_code(s, REPZ_3_10, s.bl_tree);
	      send_bits(s, count - 3, 3);
	
	    } else {
	      send_code(s, REPZ_11_138, s.bl_tree);
	      send_bits(s, count - 11, 7);
	    }
	
	    count = 0;
	    prevlen = curlen;
	    if (nextlen === 0) {
	      max_count = 138;
	      min_count = 3;
	
	    } else if (curlen === nextlen) {
	      max_count = 6;
	      min_count = 3;
	
	    } else {
	      max_count = 7;
	      min_count = 4;
	    }
	  }
	}
	
	
	/* ===========================================================================
	 * Construct the Huffman tree for the bit lengths and return the index in
	 * bl_order of the last bit length code to send.
	 */
	function build_bl_tree(s) {
	  var max_blindex;  /* index of last bit length code of non zero freq */
	
	  /* Determine the bit length frequencies for literal and distance trees */
	  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);
	  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);
	
	  /* Build the bit length tree: */
	  build_tree(s, s.bl_desc);
	  /* opt_len now includes the length of the tree representations, except
	   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
	   */
	
	  /* Determine the number of bit length codes to send. The pkzip format
	   * requires that at least 4 bit length codes be sent. (appnote.txt says
	   * 3 but the actual value used is 4.)
	   */
	  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {
	    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {
	      break;
	    }
	  }
	  /* Update opt_len to include the bit length tree and counts */
	  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;
	  //Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",
	  //        s->opt_len, s->static_len));
	
	  return max_blindex;
	}
	
	
	/* ===========================================================================
	 * Send the header for a block using dynamic Huffman trees: the counts, the
	 * lengths of the bit length codes, the literal tree and the distance tree.
	 * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.
	 */
	function send_all_trees(s, lcodes, dcodes, blcodes)
	//    deflate_state *s;
	//    int lcodes, dcodes, blcodes; /* number of codes for each tree */
	{
	  var rank;                    /* index in bl_order */
	
	  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");
	  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,
	  //        "too many codes");
	  //Tracev((stderr, "\nbl counts: "));
	  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */
	  send_bits(s, dcodes - 1,   5);
	  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */
	  for (rank = 0; rank < blcodes; rank++) {
	    //Tracev((stderr, "\nbl code %2d ", bl_order[rank]));
	    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);
	  }
	  //Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));
	
	  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */
	  //Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));
	
	  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */
	  //Tracev((stderr, "\ndist tree: sent %ld", s->bits_sent));
	}
	
	
	/* ===========================================================================
	 * Check if the data type is TEXT or BINARY, using the following algorithm:
	 * - TEXT if the two conditions below are satisfied:
	 *    a) There are no non-portable control characters belonging to the
	 *       "black list" (0..6, 14..25, 28..31).
	 *    b) There is at least one printable character belonging to the
	 *       "white list" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).
	 * - BINARY otherwise.
	 * - The following partially-portable control characters form a
	 *   "gray list" that is ignored in this detection algorithm:
	 *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).
	 * IN assertion: the fields Freq of dyn_ltree are set.
	 */
	function detect_data_type(s) {
	  /* black_mask is the bit mask of black-listed bytes
	   * set bits 0..6, 14..25, and 28..31
	   * 0xf3ffc07f = binary 11110011111111111100000001111111
	   */
	  var black_mask = 0xf3ffc07f;
	  var n;
	
	  /* Check for non-textual ("black-listed") bytes. */
	  for (n = 0; n <= 31; n++, black_mask >>>= 1) {
	    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {
	      return Z_BINARY;
	    }
	  }
	
	  /* Check for textual ("white-listed") bytes. */
	  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||
	      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {
	    return Z_TEXT;
	  }
	  for (n = 32; n < LITERALS; n++) {
	    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {
	      return Z_TEXT;
	    }
	  }
	
	  /* There are no "black-listed" or "white-listed" bytes:
	   * this stream either is empty or has tolerated ("gray-listed") bytes only.
	   */
	  return Z_BINARY;
	}
	
	
	var static_init_done = false;
	
	/* ===========================================================================
	 * Initialize the tree data structures for a new zlib stream.
	 */
	function _tr_init(s)
	{
	
	  if (!static_init_done) {
	    tr_static_init();
	    static_init_done = true;
	  }
	
	  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);
	  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);
	  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);
	
	  s.bi_buf = 0;
	  s.bi_valid = 0;
	
	  /* Initialize the first block of the first file: */
	  init_block(s);
	}
	
	
	/* ===========================================================================
	 * Send a stored block
	 */
	function _tr_stored_block(s, buf, stored_len, last)
	//DeflateState *s;
	//charf *buf;       /* input block */
	//ulg stored_len;   /* length of input block */
	//int last;         /* one if this is the last block for a file */
	{
	  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */
	  copy_block(s, buf, stored_len, true); /* with header */
	}
	
	
	/* ===========================================================================
	 * Send one empty static block to give enough lookahead for inflate.
	 * This takes 10 bits, of which 7 may remain in the bit buffer.
	 */
	function _tr_align(s) {
	  send_bits(s, STATIC_TREES << 1, 3);
	  send_code(s, END_BLOCK, static_ltree);
	  bi_flush(s);
	}
	
	
	/* ===========================================================================
	 * Determine the best encoding for the current block: dynamic trees, static
	 * trees or store, and output the encoded block to the zip file.
	 */
	function _tr_flush_block(s, buf, stored_len, last)
	//DeflateState *s;
	//charf *buf;       /* input block, or NULL if too old */
	//ulg stored_len;   /* length of input block */
	//int last;         /* one if this is the last block for a file */
	{
	  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */
	  var max_blindex = 0;        /* index of last bit length code of non zero freq */
	
	  /* Build the Huffman trees unless a stored block is forced */
	  if (s.level > 0) {
	
	    /* Check if the file is binary or text */
	    if (s.strm.data_type === Z_UNKNOWN) {
	      s.strm.data_type = detect_data_type(s);
	    }
	
	    /* Construct the literal and distance trees */
	    build_tree(s, s.l_desc);
	    // Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,
	    //        s->static_len));
	
	    build_tree(s, s.d_desc);
	    // Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,
	    //        s->static_len));
	    /* At this point, opt_len and static_len are the total bit lengths of
	     * the compressed block data, excluding the tree representations.
	     */
	
	    /* Build the bit length tree for the above two trees, and get the index
	     * in bl_order of the last bit length code to send.
	     */
	    max_blindex = build_bl_tree(s);
	
	    /* Determine the best encoding. Compute the block lengths in bytes. */
	    opt_lenb = (s.opt_len + 3 + 7) >>> 3;
	    static_lenb = (s.static_len + 3 + 7) >>> 3;
	
	    // Tracev((stderr, "\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",
	    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,
	    //        s->last_lit));
	
	    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }
	
	  } else {
	    // Assert(buf != (char*)0, "lost buf");
	    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */
	  }
	
	  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {
	    /* 4: two words for the lengths */
	
	    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
	     * Otherwise we can't have processed more than WSIZE input bytes since
	     * the last block flush, because compression would have been
	     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
	     * transform a block into a stored block.
	     */
	    _tr_stored_block(s, buf, stored_len, last);
	
	  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {
	
	    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);
	    compress_block(s, static_ltree, static_dtree);
	
	  } else {
	    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);
	    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);
	    compress_block(s, s.dyn_ltree, s.dyn_dtree);
	  }
	  // Assert (s->compressed_len == s->bits_sent, "bad compressed size");
	  /* The above check is made mod 2^32, for files larger than 512 MB
	   * and uLong implemented on 32 bits.
	   */
	  init_block(s);
	
	  if (last) {
	    bi_windup(s);
	  }
	  // Tracev((stderr,"\ncomprlen %lu(%lu) ", s->compressed_len>>3,
	  //       s->compressed_len-7*last));
	}
	
	/* ===========================================================================
	 * Save the match info and tally the frequency counts. Return true if
	 * the current block must be flushed.
	 */
	function _tr_tally(s, dist, lc)
	//    deflate_state *s;
	//    unsigned dist;  /* distance of matched string */
	//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */
	{
	  //var out_length, in_length, dcode;
	
	  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;
	  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;
	
	  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;
	  s.last_lit++;
	
	  if (dist === 0) {
	    /* lc is the unmatched char */
	    s.dyn_ltree[lc * 2]/*.Freq*/++;
	  } else {
	    s.matches++;
	    /* Here, lc is the match length - MIN_MATCH */
	    dist--;             /* dist = match distance - 1 */
	    //Assert((ush)dist < (ush)MAX_DIST(s) &&
	    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&
	    //       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");
	
	    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;
	    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;
	  }
	
	// (!) This block is disabled in zlib defailts,
	// don't enable it for binary compatibility
	
	//#ifdef TRUNCATE_BLOCK
	//  /* Try to guess if it is profitable to stop the current block here */
	//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {
	//    /* Compute an upper bound for the compressed length */
	//    out_length = s.last_lit*8;
	//    in_length = s.strstart - s.block_start;
	//
	//    for (dcode = 0; dcode < D_CODES; dcode++) {
	//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);
	//    }
	//    out_length >>>= 3;
	//    //Tracev((stderr,"\nlast_lit %u, in %ld, out ~%ld(%ld%%) ",
	//    //       s->last_lit, in_length, out_length,
	//    //       100L - out_length*100L/in_length));
	//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {
	//      return true;
	//    }
	//  }
	//#endif
	
	  return (s.last_lit === s.lit_bufsize - 1);
	  /* We avoid equality with lit_bufsize because of wraparound at 64K
	   * on 16 bit machines and because stored blocks are restricted to
	   * 64K-1 bytes.
	   */
	}
	
	exports._tr_init  = _tr_init;
	exports._tr_stored_block = _tr_stored_block;
	exports._tr_flush_block  = _tr_flush_block;
	exports._tr_tally = _tr_tally;
	exports._tr_align = _tr_align;


/***/ },
/* 368 */
/***/ function(module, exports) {

	'use strict';
	
	// Note: adler32 takes 12% for level 0 and 2% for level 6.
	// It doesn't worth to make additional optimizationa as in original.
	// Small size is preferable.
	
	function adler32(adler, buf, len, pos) {
	  var s1 = (adler & 0xffff) |0,
	      s2 = ((adler >>> 16) & 0xffff) |0,
	      n = 0;
	
	  while (len !== 0) {
	    // Set limit ~ twice less than 5552, to keep
	    // s2 in 31-bits, because we force signed ints.
	    // in other case %= will fail.
	    n = len > 2000 ? 2000 : len;
	    len -= n;
	
	    do {
	      s1 = (s1 + buf[pos++]) |0;
	      s2 = (s2 + s1) |0;
	    } while (--n);
	
	    s1 %= 65521;
	    s2 %= 65521;
	  }
	
	  return (s1 | (s2 << 16)) |0;
	}
	
	
	module.exports = adler32;


/***/ },
/* 369 */
/***/ function(module, exports) {

	'use strict';
	
	// Note: we can't get significant speed boost here.
	// So write code to minimize size - no pregenerated tables
	// and array tools dependencies.
	
	
	// Use ordinary array, since untyped makes no boost here
	function makeTable() {
	  var c, table = [];
	
	  for (var n = 0; n < 256; n++) {
	    c = n;
	    for (var k = 0; k < 8; k++) {
	      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));
	    }
	    table[n] = c;
	  }
	
	  return table;
	}
	
	// Create table on load. Just 255 signed longs. Not a problem.
	var crcTable = makeTable();
	
	
	function crc32(crc, buf, len, pos) {
	  var t = crcTable,
	      end = pos + len;
	
	  crc ^= -1;
	
	  for (var i = pos; i < end; i++) {
	    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];
	  }
	
	  return (crc ^ (-1)); // >>> 0;
	}
	
	
	module.exports = crc32;


/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	var utils         = __webpack_require__(366);
	var adler32       = __webpack_require__(368);
	var crc32         = __webpack_require__(369);
	var inflate_fast  = __webpack_require__(371);
	var inflate_table = __webpack_require__(372);
	
	var CODES = 0;
	var LENS = 1;
	var DISTS = 2;
	
	/* Public constants ==========================================================*/
	/* ===========================================================================*/
	
	
	/* Allowed flush values; see deflate() and inflate() below for details */
	//var Z_NO_FLUSH      = 0;
	//var Z_PARTIAL_FLUSH = 1;
	//var Z_SYNC_FLUSH    = 2;
	//var Z_FULL_FLUSH    = 3;
	var Z_FINISH        = 4;
	var Z_BLOCK         = 5;
	var Z_TREES         = 6;
	
	
	/* Return codes for the compression/decompression functions. Negative values
	 * are errors, positive values are used for special but normal events.
	 */
	var Z_OK            = 0;
	var Z_STREAM_END    = 1;
	var Z_NEED_DICT     = 2;
	//var Z_ERRNO         = -1;
	var Z_STREAM_ERROR  = -2;
	var Z_DATA_ERROR    = -3;
	var Z_MEM_ERROR     = -4;
	var Z_BUF_ERROR     = -5;
	//var Z_VERSION_ERROR = -6;
	
	/* The deflate compression method */
	var Z_DEFLATED  = 8;
	
	
	/* STATES ====================================================================*/
	/* ===========================================================================*/
	
	
	var    HEAD = 1;       /* i: waiting for magic header */
	var    FLAGS = 2;      /* i: waiting for method and flags (gzip) */
	var    TIME = 3;       /* i: waiting for modification time (gzip) */
	var    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */
	var    EXLEN = 5;      /* i: waiting for extra length (gzip) */
	var    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */
	var    NAME = 7;       /* i: waiting for end of file name (gzip) */
	var    COMMENT = 8;    /* i: waiting for end of comment (gzip) */
	var    HCRC = 9;       /* i: waiting for header crc (gzip) */
	var    DICTID = 10;    /* i: waiting for dictionary check value */
	var    DICT = 11;      /* waiting for inflateSetDictionary() call */
	var        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */
	var        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */
	var        STORED = 14;    /* i: waiting for stored size (length and complement) */
	var        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */
	var        COPY = 16;      /* i/o: waiting for input or output to copy stored block */
	var        TABLE = 17;     /* i: waiting for dynamic block table lengths */
	var        LENLENS = 18;   /* i: waiting for code length code lengths */
	var        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */
	var            LEN_ = 20;      /* i: same as LEN below, but only first time in */
	var            LEN = 21;       /* i: waiting for length/lit/eob code */
	var            LENEXT = 22;    /* i: waiting for length extra bits */
	var            DIST = 23;      /* i: waiting for distance code */
	var            DISTEXT = 24;   /* i: waiting for distance extra bits */
	var            MATCH = 25;     /* o: waiting for output space to copy string */
	var            LIT = 26;       /* o: waiting for output space to write literal */
	var    CHECK = 27;     /* i: waiting for 32-bit check value */
	var    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */
	var    DONE = 29;      /* finished check, done -- remain here until reset */
	var    BAD = 30;       /* got a data error -- remain here until reset */
	var    MEM = 31;       /* got an inflate() memory error -- remain here until reset */
	var    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */
	
	/* ===========================================================================*/
	
	
	
	var ENOUGH_LENS = 852;
	var ENOUGH_DISTS = 592;
	//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);
	
	var MAX_WBITS = 15;
	/* 32K LZ77 window */
	var DEF_WBITS = MAX_WBITS;
	
	
	function zswap32(q) {
	  return  (((q >>> 24) & 0xff) +
	          ((q >>> 8) & 0xff00) +
	          ((q & 0xff00) << 8) +
	          ((q & 0xff) << 24));
	}
	
	
	function InflateState() {
	  this.mode = 0;             /* current inflate mode */
	  this.last = false;          /* true if processing last block */
	  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
	  this.havedict = false;      /* true if dictionary provided */
	  this.flags = 0;             /* gzip header method and flags (0 if zlib) */
	  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */
	  this.check = 0;             /* protected copy of check value */
	  this.total = 0;             /* protected copy of output count */
	  // TODO: may be {}
	  this.head = null;           /* where to save gzip header information */
	
	  /* sliding window */
	  this.wbits = 0;             /* log base 2 of requested window size */
	  this.wsize = 0;             /* window size or zero if not using window */
	  this.whave = 0;             /* valid bytes in the window */
	  this.wnext = 0;             /* window write index */
	  this.window = null;         /* allocated sliding window, if needed */
	
	  /* bit accumulator */
	  this.hold = 0;              /* input bit accumulator */
	  this.bits = 0;              /* number of bits in "in" */
	
	  /* for string and stored block copying */
	  this.length = 0;            /* literal or length of data to copy */
	  this.offset = 0;            /* distance back to copy string from */
	
	  /* for table and code decoding */
	  this.extra = 0;             /* extra bits needed */
	
	  /* fixed and dynamic code tables */
	  this.lencode = null;          /* starting table for length/literal codes */
	  this.distcode = null;         /* starting table for distance codes */
	  this.lenbits = 0;           /* index bits for lencode */
	  this.distbits = 0;          /* index bits for distcode */
	
	  /* dynamic table building */
	  this.ncode = 0;             /* number of code length code lengths */
	  this.nlen = 0;              /* number of length code lengths */
	  this.ndist = 0;             /* number of distance code lengths */
	  this.have = 0;              /* number of code lengths in lens[] */
	  this.next = null;              /* next available space in codes[] */
	
	  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */
	  this.work = new utils.Buf16(288); /* work area for code table building */
	
	  /*
	   because we don't have pointers in js, we use lencode and distcode directly
	   as buffers so we don't need codes
	  */
	  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */
	  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */
	  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */
	  this.sane = 0;                   /* if false, allow invalid distance too far */
	  this.back = 0;                   /* bits back of last unprocessed length/lit */
	  this.was = 0;                    /* initial length of match */
	}
	
	function inflateResetKeep(strm) {
	  var state;
	
	  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
	  state = strm.state;
	  strm.total_in = strm.total_out = state.total = 0;
	  strm.msg = ''; /*Z_NULL*/
	  if (state.wrap) {       /* to support ill-conceived Java test suite */
	    strm.adler = state.wrap & 1;
	  }
	  state.mode = HEAD;
	  state.last = 0;
	  state.havedict = 0;
	  state.dmax = 32768;
	  state.head = null/*Z_NULL*/;
	  state.hold = 0;
	  state.bits = 0;
	  //state.lencode = state.distcode = state.next = state.codes;
	  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);
	  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);
	
	  state.sane = 1;
	  state.back = -1;
	  //Tracev((stderr, "inflate: reset\n"));
	  return Z_OK;
	}
	
	function inflateReset(strm) {
	  var state;
	
	  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
	  state = strm.state;
	  state.wsize = 0;
	  state.whave = 0;
	  state.wnext = 0;
	  return inflateResetKeep(strm);
	
	}
	
	function inflateReset2(strm, windowBits) {
	  var wrap;
	  var state;
	
	  /* get the state */
	  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
	  state = strm.state;
	
	  /* extract wrap request from windowBits parameter */
	  if (windowBits < 0) {
	    wrap = 0;
	    windowBits = -windowBits;
	  }
	  else {
	    wrap = (windowBits >> 4) + 1;
	    if (windowBits < 48) {
	      windowBits &= 15;
	    }
	  }
	
	  /* set number of window bits, free window if different */
	  if (windowBits && (windowBits < 8 || windowBits > 15)) {
	    return Z_STREAM_ERROR;
	  }
	  if (state.window !== null && state.wbits !== windowBits) {
	    state.window = null;
	  }
	
	  /* update state and reset the rest of it */
	  state.wrap = wrap;
	  state.wbits = windowBits;
	  return inflateReset(strm);
	}
	
	function inflateInit2(strm, windowBits) {
	  var ret;
	  var state;
	
	  if (!strm) { return Z_STREAM_ERROR; }
	  //strm.msg = Z_NULL;                 /* in case we return an error */
	
	  state = new InflateState();
	
	  //if (state === Z_NULL) return Z_MEM_ERROR;
	  //Tracev((stderr, "inflate: allocated\n"));
	  strm.state = state;
	  state.window = null/*Z_NULL*/;
	  ret = inflateReset2(strm, windowBits);
	  if (ret !== Z_OK) {
	    strm.state = null/*Z_NULL*/;
	  }
	  return ret;
	}
	
	function inflateInit(strm) {
	  return inflateInit2(strm, DEF_WBITS);
	}
	
	
	/*
	 Return state with length and distance decoding tables and index sizes set to
	 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
	 If BUILDFIXED is defined, then instead this routine builds the tables the
	 first time it's called, and returns those tables the first time and
	 thereafter.  This reduces the size of the code by about 2K bytes, in
	 exchange for a little execution time.  However, BUILDFIXED should not be
	 used for threaded applications, since the rewriting of the tables and virgin
	 may not be thread-safe.
	 */
	var virgin = true;
	
	var lenfix, distfix; // We have no pointers in JS, so keep tables separate
	
	function fixedtables(state) {
	  /* build fixed huffman tables if first call (may not be thread safe) */
	  if (virgin) {
	    var sym;
	
	    lenfix = new utils.Buf32(512);
	    distfix = new utils.Buf32(32);
	
	    /* literal/length table */
	    sym = 0;
	    while (sym < 144) { state.lens[sym++] = 8; }
	    while (sym < 256) { state.lens[sym++] = 9; }
	    while (sym < 280) { state.lens[sym++] = 7; }
	    while (sym < 288) { state.lens[sym++] = 8; }
	
	    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });
	
	    /* distance table */
	    sym = 0;
	    while (sym < 32) { state.lens[sym++] = 5; }
	
	    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });
	
	    /* do this just once */
	    virgin = false;
	  }
	
	  state.lencode = lenfix;
	  state.lenbits = 9;
	  state.distcode = distfix;
	  state.distbits = 5;
	}
	
	
	/*
	 Update the window with the last wsize (normally 32K) bytes written before
	 returning.  If window does not exist yet, create it.  This is only called
	 when a window is already in use, or when output has been written during this
	 inflate call, but the end of the deflate stream has not been reached yet.
	 It is also called to create a window for dictionary data when a dictionary
	 is loaded.
	
	 Providing output buffers larger than 32K to inflate() should provide a speed
	 advantage, since only the last 32K of output is copied to the sliding window
	 upon return from inflate(), and since all distances after the first 32K of
	 output will fall in the output data, making match copies simpler and faster.
	 The advantage may be dependent on the size of the processor's data caches.
	 */
	function updatewindow(strm, src, end, copy) {
	  var dist;
	  var state = strm.state;
	
	  /* if it hasn't been done already, allocate space for the window */
	  if (state.window === null) {
	    state.wsize = 1 << state.wbits;
	    state.wnext = 0;
	    state.whave = 0;
	
	    state.window = new utils.Buf8(state.wsize);
	  }
	
	  /* copy state->wsize or less output bytes into the circular window */
	  if (copy >= state.wsize) {
	    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);
	    state.wnext = 0;
	    state.whave = state.wsize;
	  }
	  else {
	    dist = state.wsize - state.wnext;
	    if (dist > copy) {
	      dist = copy;
	    }
	    //zmemcpy(state->window + state->wnext, end - copy, dist);
	    utils.arraySet(state.window, src, end - copy, dist, state.wnext);
	    copy -= dist;
	    if (copy) {
	      //zmemcpy(state->window, end - copy, copy);
	      utils.arraySet(state.window, src, end - copy, copy, 0);
	      state.wnext = copy;
	      state.whave = state.wsize;
	    }
	    else {
	      state.wnext += dist;
	      if (state.wnext === state.wsize) { state.wnext = 0; }
	      if (state.whave < state.wsize) { state.whave += dist; }
	    }
	  }
	  return 0;
	}
	
	function inflate(strm, flush) {
	  var state;
	  var input, output;          // input/output buffers
	  var next;                   /* next input INDEX */
	  var put;                    /* next output INDEX */
	  var have, left;             /* available input and output */
	  var hold;                   /* bit buffer */
	  var bits;                   /* bits in bit buffer */
	  var _in, _out;              /* save starting available input and output */
	  var copy;                   /* number of stored or match bytes to copy */
	  var from;                   /* where to copy match bytes from */
	  var from_source;
	  var here = 0;               /* current decoding table entry */
	  var here_bits, here_op, here_val; // paked "here" denormalized (JS specific)
	  //var last;                   /* parent table entry */
	  var last_bits, last_op, last_val; // paked "last" denormalized (JS specific)
	  var len;                    /* length to copy for repeats, bits to drop */
	  var ret;                    /* return code */
	  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */
	  var opts;
	
	  var n; // temporary var for NEED_BITS
	
	  var order = /* permutation of code lengths */
	    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];
	
	
	  if (!strm || !strm.state || !strm.output ||
	      (!strm.input && strm.avail_in !== 0)) {
	    return Z_STREAM_ERROR;
	  }
	
	  state = strm.state;
	  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */
	
	
	  //--- LOAD() ---
	  put = strm.next_out;
	  output = strm.output;
	  left = strm.avail_out;
	  next = strm.next_in;
	  input = strm.input;
	  have = strm.avail_in;
	  hold = state.hold;
	  bits = state.bits;
	  //---
	
	  _in = have;
	  _out = left;
	  ret = Z_OK;
	
	  inf_leave: // goto emulation
	  for (;;) {
	    switch (state.mode) {
	    case HEAD:
	      if (state.wrap === 0) {
	        state.mode = TYPEDO;
	        break;
	      }
	      //=== NEEDBITS(16);
	      while (bits < 16) {
	        if (have === 0) { break inf_leave; }
	        have--;
	        hold += input[next++] << bits;
	        bits += 8;
	      }
	      //===//
	      if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */
	        state.check = 0/*crc32(0L, Z_NULL, 0)*/;
	        //=== CRC2(state.check, hold);
	        hbuf[0] = hold & 0xff;
	        hbuf[1] = (hold >>> 8) & 0xff;
	        state.check = crc32(state.check, hbuf, 2, 0);
	        //===//
	
	        //=== INITBITS();
	        hold = 0;
	        bits = 0;
	        //===//
	        state.mode = FLAGS;
	        break;
	      }
	      state.flags = 0;           /* expect zlib header */
	      if (state.head) {
	        state.head.done = false;
	      }
	      if (!(state.wrap & 1) ||   /* check if zlib header allowed */
	        (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {
	        strm.msg = 'incorrect header check';
	        state.mode = BAD;
	        break;
	      }
	      if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {
	        strm.msg = 'unknown compression method';
	        state.mode = BAD;
	        break;
	      }
	      //--- DROPBITS(4) ---//
	      hold >>>= 4;
	      bits -= 4;
	      //---//
	      len = (hold & 0x0f)/*BITS(4)*/ + 8;
	      if (state.wbits === 0) {
	        state.wbits = len;
	      }
	      else if (len > state.wbits) {
	        strm.msg = 'invalid window size';
	        state.mode = BAD;
	        break;
	      }
	      state.dmax = 1 << len;
	      //Tracev((stderr, "inflate:   zlib header ok\n"));
	      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
	      state.mode = hold & 0x200 ? DICTID : TYPE;
	      //=== INITBITS();
	      hold = 0;
	      bits = 0;
	      //===//
	      break;
	    case FLAGS:
	      //=== NEEDBITS(16); */
	      while (bits < 16) {
	        if (have === 0) { break inf_leave; }
	        have--;
	        hold += input[next++] << bits;
	        bits += 8;
	      }
	      //===//
	      state.flags = hold;
	      if ((state.flags & 0xff) !== Z_DEFLATED) {
	        strm.msg = 'unknown compression method';
	        state.mode = BAD;
	        break;
	      }
	      if (state.flags & 0xe000) {
	        strm.msg = 'unknown header flags set';
	        state.mode = BAD;
	        break;
	      }
	      if (state.head) {
	        state.head.text = ((hold >> 8) & 1);
	      }
	      if (state.flags & 0x0200) {
	        //=== CRC2(state.check, hold);
	        hbuf[0] = hold & 0xff;
	        hbuf[1] = (hold >>> 8) & 0xff;
	        state.check = crc32(state.check, hbuf, 2, 0);
	        //===//
	      }
	      //=== INITBITS();
	      hold = 0;
	      bits = 0;
	      //===//
	      state.mode = TIME;
	      /* falls through */
	    case TIME:
	      //=== NEEDBITS(32); */
	      while (bits < 32) {
	        if (have === 0) { break inf_leave; }
	        have--;
	        hold += input[next++] << bits;
	        bits += 8;
	      }
	      //===//
	      if (state.head) {
	        state.head.time = hold;
	      }
	      if (state.flags & 0x0200) {
	        //=== CRC4(state.check, hold)
	        hbuf[0] = hold & 0xff;
	        hbuf[1] = (hold >>> 8) & 0xff;
	        hbuf[2] = (hold >>> 16) & 0xff;
	        hbuf[3] = (hold >>> 24) & 0xff;
	        state.check = crc32(state.check, hbuf, 4, 0);
	        //===
	      }
	      //=== INITBITS();
	      hold = 0;
	      bits = 0;
	      //===//
	      state.mode = OS;
	      /* falls through */
	    case OS:
	      //=== NEEDBITS(16); */
	      while (bits < 16) {
	        if (have === 0) { break inf_leave; }
	        have--;
	        hold += input[next++] << bits;
	        bits += 8;
	      }
	      //===//
	      if (state.head) {
	        state.head.xflags = (hold & 0xff);
	        state.head.os = (hold >> 8);
	      }
	      if (state.flags & 0x0200) {
	        //=== CRC2(state.check, hold);
	        hbuf[0] = hold & 0xff;
	        hbuf[1] = (hold >>> 8) & 0xff;
	        state.check = crc32(state.check, hbuf, 2, 0);
	        //===//
	      }
	      //=== INITBITS();
	      hold = 0;
	      bits = 0;
	      //===//
	      state.mode = EXLEN;
	      /* falls through */
	    case EXLEN:
	      if (state.flags & 0x0400) {
	        //=== NEEDBITS(16); */
	        while (bits < 16) {
	          if (have === 0) { break inf_leave; }
	          have--;
	          hold += input[next++] << bits;
	          bits += 8;
	        }
	        //===//
	        state.length = hold;
	        if (state.head) {
	          state.head.extra_len = hold;
	        }
	        if (state.flags & 0x0200) {
	          //=== CRC2(state.check, hold);
	          hbuf[0] = hold & 0xff;
	          hbuf[1] = (hold >>> 8) & 0xff;
	          state.check = crc32(state.check, hbuf, 2, 0);
	          //===//
	        }
	        //=== INITBITS();
	        hold = 0;
	        bits = 0;
	        //===//
	      }
	      else if (state.head) {
	        state.head.extra = null/*Z_NULL*/;
	      }
	      state.mode = EXTRA;
	      /* falls through */
	    case EXTRA:
	      if (state.flags & 0x0400) {
	        copy = state.length;
	        if (copy > have) { copy = have; }
	        if (copy) {
	          if (state.head) {
	            len = state.head.extra_len - state.length;
	            if (!state.head.extra) {
	              // Use untyped array for more conveniend processing later
	              state.head.extra = new Array(state.head.extra_len);
	            }
	            utils.arraySet(
	              state.head.extra,
	              input,
	              next,
	              // extra field is limited to 65536 bytes
	              // - no need for additional size check
	              copy,
	              /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
	              len
	            );
	            //zmemcpy(state.head.extra + len, next,
	            //        len + copy > state.head.extra_max ?
	            //        state.head.extra_max - len : copy);
	          }
	          if (state.flags & 0x0200) {
	            state.check = crc32(state.check, input, copy, next);
	          }
	          have -= copy;
	          next += copy;
	          state.length -= copy;
	        }
	        if (state.length) { break inf_leave; }
	      }
	      state.length = 0;
	      state.mode = NAME;
	      /* falls through */
	    case NAME:
	      if (state.flags & 0x0800) {
	        if (have === 0) { break inf_leave; }
	        copy = 0;
	        do {
	          // TODO: 2 or 1 bytes?
	          len = input[next + copy++];
	          /* use constant limit because in js we should not preallocate memory */
	          if (state.head && len &&
	              (state.length < 65536 /*state.head.name_max*/)) {
	            state.head.name += String.fromCharCode(len);
	          }
	        } while (len && copy < have);
	
	        if (state.flags & 0x0200) {
	          state.check = crc32(state.check, input, copy, next);
	        }
	        have -= copy;
	        next += copy;
	        if (len) { break inf_leave; }
	      }
	      else if (state.head) {
	        state.head.name = null;
	      }
	      state.length = 0;
	      state.mode = COMMENT;
	      /* falls through */
	    case COMMENT:
	      if (state.flags & 0x1000) {
	        if (have === 0) { break inf_leave; }
	        copy = 0;
	        do {
	          len = input[next + copy++];
	          /* use constant limit because in js we should not preallocate memory */
	          if (state.head && len &&
	              (state.length < 65536 /*state.head.comm_max*/)) {
	            state.head.comment += String.fromCharCode(len);
	          }
	        } while (len && copy < have);
	        if (state.flags & 0x0200) {
	          state.check = crc32(state.check, input, copy, next);
	        }
	        have -= copy;
	        next += copy;
	        if (len) { break inf_leave; }
	      }
	      else if (state.head) {
	        state.head.comment = null;
	      }
	      state.mode = HCRC;
	      /* falls through */
	    case HCRC:
	      if (state.flags & 0x0200) {
	        //=== NEEDBITS(16); */
	        while (bits < 16) {
	          if (have === 0) { break inf_leave; }
	          have--;
	          hold += input[next++] << bits;
	          bits += 8;
	        }
	        //===//
	        if (hold !== (state.check & 0xffff)) {
	          strm.msg = 'header crc mismatch';
	          state.mode = BAD;
	          break;
	        }
	        //=== INITBITS();
	        hold = 0;
	        bits = 0;
	        //===//
	      }
	      if (state.head) {
	        state.head.hcrc = ((state.flags >> 9) & 1);
	        state.head.done = true;
	      }
	      strm.adler = state.check = 0;
	      state.mode = TYPE;
	      break;
	    case DICTID:
	      //=== NEEDBITS(32); */
	      while (bits < 32) {
	        if (have === 0) { break inf_leave; }
	        have--;
	        hold += input[next++] << bits;
	        bits += 8;
	      }
	      //===//
	      strm.adler = state.check = zswap32(hold);
	      //=== INITBITS();
	      hold = 0;
	      bits = 0;
	      //===//
	      state.mode = DICT;
	      /* falls through */
	    case DICT:
	      if (state.havedict === 0) {
	        //--- RESTORE() ---
	        strm.next_out = put;
	        strm.avail_out = left;
	        strm.next_in = next;
	        strm.avail_in = have;
	        state.hold = hold;
	        state.bits = bits;
	        //---
	        return Z_NEED_DICT;
	      }
	      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
	      state.mode = TYPE;
	      /* falls through */
	    case TYPE:
	      if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }
	      /* falls through */
	    case TYPEDO:
	      if (state.last) {
	        //--- BYTEBITS() ---//
	        hold >>>= bits & 7;
	        bits -= bits & 7;
	        //---//
	        state.mode = CHECK;
	        break;
	      }
	      //=== NEEDBITS(3); */
	      while (bits < 3) {
	        if (have === 0) { break inf_leave; }
	        have--;
	        hold += input[next++] << bits;
	        bits += 8;
	      }
	      //===//
	      state.last = (hold & 0x01)/*BITS(1)*/;
	      //--- DROPBITS(1) ---//
	      hold >>>= 1;
	      bits -= 1;
	      //---//
	
	      switch ((hold & 0x03)/*BITS(2)*/) {
	      case 0:                             /* stored block */
	        //Tracev((stderr, "inflate:     stored block%s\n",
	        //        state.last ? " (last)" : ""));
	        state.mode = STORED;
	        break;
	      case 1:                             /* fixed block */
	        fixedtables(state);
	        //Tracev((stderr, "inflate:     fixed codes block%s\n",
	        //        state.last ? " (last)" : ""));
	        state.mode = LEN_;             /* decode codes */
	        if (flush === Z_TREES) {
	          //--- DROPBITS(2) ---//
	          hold >>>= 2;
	          bits -= 2;
	          //---//
	          break inf_leave;
	        }
	        break;
	      case 2:                             /* dynamic block */
	        //Tracev((stderr, "inflate:     dynamic codes block%s\n",
	        //        state.last ? " (last)" : ""));
	        state.mode = TABLE;
	        break;
	      case 3:
	        strm.msg = 'invalid block type';
	        state.mode = BAD;
	      }
	      //--- DROPBITS(2) ---//
	      hold >>>= 2;
	      bits -= 2;
	      //---//
	      break;
	    case STORED:
	      //--- BYTEBITS() ---// /* go to byte boundary */
	      hold >>>= bits & 7;
	      bits -= bits & 7;
	      //---//
	      //=== NEEDBITS(32); */
	      while (bits < 32) {
	        if (have === 0) { break inf_leave; }
	        have--;
	        hold += input[next++] << bits;
	        bits += 8;
	      }
	      //===//
	      if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {
	        strm.msg = 'invalid stored block lengths';
	        state.mode = BAD;
	        break;
	      }
	      state.length = hold & 0xffff;
	      //Tracev((stderr, "inflate:       stored length %u\n",
	      //        state.length));
	      //=== INITBITS();
	      hold = 0;
	      bits = 0;
	      //===//
	      state.mode = COPY_;
	      if (flush === Z_TREES) { break inf_leave; }
	      /* falls through */
	    case COPY_:
	      state.mode = COPY;
	      /* falls through */
	    case COPY:
	      copy = state.length;
	      if (copy) {
	        if (copy > have) { copy = have; }
	        if (copy > left) { copy = left; }
	        if (copy === 0) { break inf_leave; }
	        //--- zmemcpy(put, next, copy); ---
	        utils.arraySet(output, input, next, copy, put);
	        //---//
	        have -= copy;
	        next += copy;
	        left -= copy;
	        put += copy;
	        state.length -= copy;
	        break;
	      }
	      //Tracev((stderr, "inflate:       stored end\n"));
	      state.mode = TYPE;
	      break;
	    case TABLE:
	      //=== NEEDBITS(14); */
	      while (bits < 14) {
	        if (have === 0) { break inf_leave; }
	        have--;
	        hold += input[next++] << bits;
	        bits += 8;
	      }
	      //===//
	      state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;
	      //--- DROPBITS(5) ---//
	      hold >>>= 5;
	      bits -= 5;
	      //---//
	      state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;
	      //--- DROPBITS(5) ---//
	      hold >>>= 5;
	      bits -= 5;
	      //---//
	      state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;
	      //--- DROPBITS(4) ---//
	      hold >>>= 4;
	      bits -= 4;
	      //---//
	//#ifndef PKZIP_BUG_WORKAROUND
	      if (state.nlen > 286 || state.ndist > 30) {
	        strm.msg = 'too many length or distance symbols';
	        state.mode = BAD;
	        break;
	      }
	//#endif
	      //Tracev((stderr, "inflate:       table sizes ok\n"));
	      state.have = 0;
	      state.mode = LENLENS;
	      /* falls through */
	    case LENLENS:
	      while (state.have < state.ncode) {
	        //=== NEEDBITS(3);
	        while (bits < 3) {
	          if (have === 0) { break inf_leave; }
	          have--;
	          hold += input[next++] << bits;
	          bits += 8;
	        }
	        //===//
	        state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);
	        //--- DROPBITS(3) ---//
	        hold >>>= 3;
	        bits -= 3;
	        //---//
	      }
	      while (state.have < 19) {
	        state.lens[order[state.have++]] = 0;
	      }
	      // We have separate tables & no pointers. 2 commented lines below not needed.
	      //state.next = state.codes;
	      //state.lencode = state.next;
	      // Switch to use dynamic table
	      state.lencode = state.lendyn;
	      state.lenbits = 7;
	
	      opts = { bits: state.lenbits };
	      ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);
	      state.lenbits = opts.bits;
	
	      if (ret) {
	        strm.msg = 'invalid code lengths set';
	        state.mode = BAD;
	        break;
	      }
	      //Tracev((stderr, "inflate:       code lengths ok\n"));
	      state.have = 0;
	      state.mode = CODELENS;
	      /* falls through */
	    case CODELENS:
	      while (state.have < state.nlen + state.ndist) {
	        for (;;) {
	          here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/
	          here_bits = here >>> 24;
	          here_op = (here >>> 16) & 0xff;
	          here_val = here & 0xffff;
	
	          if ((here_bits) <= bits) { break; }
	          //--- PULLBYTE() ---//
	          if (have === 0) { break inf_leave; }
	          have--;
	          hold += input[next++] << bits;
	          bits += 8;
	          //---//
	        }
	        if (here_val < 16) {
	          //--- DROPBITS(here.bits) ---//
	          hold >>>= here_bits;
	          bits -= here_bits;
	          //---//
	          state.lens[state.have++] = here_val;
	        }
	        else {
	          if (here_val === 16) {
	            //=== NEEDBITS(here.bits + 2);
	            n = here_bits + 2;
	            while (bits < n) {
	              if (have === 0) { break inf_leave; }
	              have--;
	              hold += input[next++] << bits;
	              bits += 8;
	            }
	            //===//
	            //--- DROPBITS(here.bits) ---//
	            hold >>>= here_bits;
	            bits -= here_bits;
	            //---//
	            if (state.have === 0) {
	              strm.msg = 'invalid bit length repeat';
	              state.mode = BAD;
	              break;
	            }
	            len = state.lens[state.have - 1];
	            copy = 3 + (hold & 0x03);//BITS(2);
	            //--- DROPBITS(2) ---//
	            hold >>>= 2;
	            bits -= 2;
	            //---//
	          }
	          else if (here_val === 17) {
	            //=== NEEDBITS(here.bits + 3);
	            n = here_bits + 3;
	            while (bits < n) {
	              if (have === 0) { break inf_leave; }
	              have--;
	              hold += input[next++] << bits;
	              bits += 8;
	            }
	            //===//
	            //--- DROPBITS(here.bits) ---//
	            hold >>>= here_bits;
	            bits -= here_bits;
	            //---//
	            len = 0;
	            copy = 3 + (hold & 0x07);//BITS(3);
	            //--- DROPBITS(3) ---//
	            hold >>>= 3;
	            bits -= 3;
	            //---//
	          }
	          else {
	            //=== NEEDBITS(here.bits + 7);
	            n = here_bits + 7;
	            while (bits < n) {
	              if (have === 0) { break inf_leave; }
	              have--;
	              hold += input[next++] << bits;
	              bits += 8;
	            }
	            //===//
	            //--- DROPBITS(here.bits) ---//
	            hold >>>= here_bits;
	            bits -= here_bits;
	            //---//
	            len = 0;
	            copy = 11 + (hold & 0x7f);//BITS(7);
	            //--- DROPBITS(7) ---//
	            hold >>>= 7;
	            bits -= 7;
	            //---//
	          }
	          if (state.have + copy > state.nlen + state.ndist) {
	            strm.msg = 'invalid bit length repeat';
	            state.mode = BAD;
	            break;
	          }
	          while (copy--) {
	            state.lens[state.have++] = len;
	          }
	        }
	      }
	
	      /* handle error breaks in while */
	      if (state.mode === BAD) { break; }
	
	      /* check for end-of-block code (better have one) */
	      if (state.lens[256] === 0) {
	        strm.msg = 'invalid code -- missing end-of-block';
	        state.mode = BAD;
	        break;
	      }
	
	      /* build code tables -- note: do not change the lenbits or distbits
	         values here (9 and 6) without reading the comments in inftrees.h
	         concerning the ENOUGH constants, which depend on those values */
	      state.lenbits = 9;
	
	      opts = { bits: state.lenbits };
	      ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);
	      // We have separate tables & no pointers. 2 commented lines below not needed.
	      // state.next_index = opts.table_index;
	      state.lenbits = opts.bits;
	      // state.lencode = state.next;
	
	      if (ret) {
	        strm.msg = 'invalid literal/lengths set';
	        state.mode = BAD;
	        break;
	      }
	
	      state.distbits = 6;
	      //state.distcode.copy(state.codes);
	      // Switch to use dynamic table
	      state.distcode = state.distdyn;
	      opts = { bits: state.distbits };
	      ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);
	      // We have separate tables & no pointers. 2 commented lines below not needed.
	      // state.next_index = opts.table_index;
	      state.distbits = opts.bits;
	      // state.distcode = state.next;
	
	      if (ret) {
	        strm.msg = 'invalid distances set';
	        state.mode = BAD;
	        break;
	      }
	      //Tracev((stderr, 'inflate:       codes ok\n'));
	      state.mode = LEN_;
	      if (flush === Z_TREES) { break inf_leave; }
	      /* falls through */
	    case LEN_:
	      state.mode = LEN;
	      /* falls through */
	    case LEN:
	      if (have >= 6 && left >= 258) {
	        //--- RESTORE() ---
	        strm.next_out = put;
	        strm.avail_out = left;
	        strm.next_in = next;
	        strm.avail_in = have;
	        state.hold = hold;
	        state.bits = bits;
	        //---
	        inflate_fast(strm, _out);
	        //--- LOAD() ---
	        put = strm.next_out;
	        output = strm.output;
	        left = strm.avail_out;
	        next = strm.next_in;
	        input = strm.input;
	        have = strm.avail_in;
	        hold = state.hold;
	        bits = state.bits;
	        //---
	
	        if (state.mode === TYPE) {
	          state.back = -1;
	        }
	        break;
	      }
	      state.back = 0;
	      for (;;) {
	        here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/
	        here_bits = here >>> 24;
	        here_op = (here >>> 16) & 0xff;
	        here_val = here & 0xffff;
	
	        if (here_bits <= bits) { break; }
	        //--- PULLBYTE() ---//
	        if (have === 0) { break inf_leave; }
	        have--;
	        hold += input[next++] << bits;
	        bits += 8;
	        //---//
	      }
	      if (here_op && (here_op & 0xf0) === 0) {
	        last_bits = here_bits;
	        last_op = here_op;
	        last_val = here_val;
	        for (;;) {
	          here = state.lencode[last_val +
	                  ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
	          here_bits = here >>> 24;
	          here_op = (here >>> 16) & 0xff;
	          here_val = here & 0xffff;
	
	          if ((last_bits + here_bits) <= bits) { break; }
	          //--- PULLBYTE() ---//
	          if (have === 0) { break inf_leave; }
	          have--;
	          hold += input[next++] << bits;
	          bits += 8;
	          //---//
	        }
	        //--- DROPBITS(last.bits) ---//
	        hold >>>= last_bits;
	        bits -= last_bits;
	        //---//
	        state.back += last_bits;
	      }
	      //--- DROPBITS(here.bits) ---//
	      hold >>>= here_bits;
	      bits -= here_bits;
	      //---//
	      state.back += here_bits;
	      state.length = here_val;
	      if (here_op === 0) {
	        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
	        //        "inflate:         literal '%c'\n" :
	        //        "inflate:         literal 0x%02x\n", here.val));
	        state.mode = LIT;
	        break;
	      }
	      if (here_op & 32) {
	        //Tracevv((stderr, "inflate:         end of block\n"));
	        state.back = -1;
	        state.mode = TYPE;
	        break;
	      }
	      if (here_op & 64) {
	        strm.msg = 'invalid literal/length code';
	        state.mode = BAD;
	        break;
	      }
	      state.extra = here_op & 15;
	      state.mode = LENEXT;
	      /* falls through */
	    case LENEXT:
	      if (state.extra) {
	        //=== NEEDBITS(state.extra);
	        n = state.extra;
	        while (bits < n) {
	          if (have === 0) { break inf_leave; }
	          have--;
	          hold += input[next++] << bits;
	          bits += 8;
	        }
	        //===//
	        state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
	        //--- DROPBITS(state.extra) ---//
	        hold >>>= state.extra;
	        bits -= state.extra;
	        //---//
	        state.back += state.extra;
	      }
	      //Tracevv((stderr, "inflate:         length %u\n", state.length));
	      state.was = state.length;
	      state.mode = DIST;
	      /* falls through */
	    case DIST:
	      for (;;) {
	        here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/
	        here_bits = here >>> 24;
	        here_op = (here >>> 16) & 0xff;
	        here_val = here & 0xffff;
	
	        if ((here_bits) <= bits) { break; }
	        //--- PULLBYTE() ---//
	        if (have === 0) { break inf_leave; }
	        have--;
	        hold += input[next++] << bits;
	        bits += 8;
	        //---//
	      }
	      if ((here_op & 0xf0) === 0) {
	        last_bits = here_bits;
	        last_op = here_op;
	        last_val = here_val;
	        for (;;) {
	          here = state.distcode[last_val +
	                  ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
	          here_bits = here >>> 24;
	          here_op = (here >>> 16) & 0xff;
	          here_val = here & 0xffff;
	
	          if ((last_bits + here_bits) <= bits) { break; }
	          //--- PULLBYTE() ---//
	          if (have === 0) { break inf_leave; }
	          have--;
	          hold += input[next++] << bits;
	          bits += 8;
	          //---//
	        }
	        //--- DROPBITS(last.bits) ---//
	        hold >>>= last_bits;
	        bits -= last_bits;
	        //---//
	        state.back += last_bits;
	      }
	      //--- DROPBITS(here.bits) ---//
	      hold >>>= here_bits;
	      bits -= here_bits;
	      //---//
	      state.back += here_bits;
	      if (here_op & 64) {
	        strm.msg = 'invalid distance code';
	        state.mode = BAD;
	        break;
	      }
	      state.offset = here_val;
	      state.extra = (here_op) & 15;
	      state.mode = DISTEXT;
	      /* falls through */
	    case DISTEXT:
	      if (state.extra) {
	        //=== NEEDBITS(state.extra);
	        n = state.extra;
	        while (bits < n) {
	          if (have === 0) { break inf_leave; }
	          have--;
	          hold += input[next++] << bits;
	          bits += 8;
	        }
	        //===//
	        state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
	        //--- DROPBITS(state.extra) ---//
	        hold >>>= state.extra;
	        bits -= state.extra;
	        //---//
	        state.back += state.extra;
	      }
	//#ifdef INFLATE_STRICT
	      if (state.offset > state.dmax) {
	        strm.msg = 'invalid distance too far back';
	        state.mode = BAD;
	        break;
	      }
	//#endif
	      //Tracevv((stderr, "inflate:         distance %u\n", state.offset));
	      state.mode = MATCH;
	      /* falls through */
	    case MATCH:
	      if (left === 0) { break inf_leave; }
	      copy = _out - left;
	      if (state.offset > copy) {         /* copy from window */
	        copy = state.offset - copy;
	        if (copy > state.whave) {
	          if (state.sane) {
	            strm.msg = 'invalid distance too far back';
	            state.mode = BAD;
	            break;
	          }
	// (!) This block is disabled in zlib defailts,
	// don't enable it for binary compatibility
	//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
	//          Trace((stderr, "inflate.c too far\n"));
	//          copy -= state.whave;
	//          if (copy > state.length) { copy = state.length; }
	//          if (copy > left) { copy = left; }
	//          left -= copy;
	//          state.length -= copy;
	//          do {
	//            output[put++] = 0;
	//          } while (--copy);
	//          if (state.length === 0) { state.mode = LEN; }
	//          break;
	//#endif
	        }
	        if (copy > state.wnext) {
	          copy -= state.wnext;
	          from = state.wsize - copy;
	        }
	        else {
	          from = state.wnext - copy;
	        }
	        if (copy > state.length) { copy = state.length; }
	        from_source = state.window;
	      }
	      else {                              /* copy from output */
	        from_source = output;
	        from = put - state.offset;
	        copy = state.length;
	      }
	      if (copy > left) { copy = left; }
	      left -= copy;
	      state.length -= copy;
	      do {
	        output[put++] = from_source[from++];
	      } while (--copy);
	      if (state.length === 0) { state.mode = LEN; }
	      break;
	    case LIT:
	      if (left === 0) { break inf_leave; }
	      output[put++] = state.length;
	      left--;
	      state.mode = LEN;
	      break;
	    case CHECK:
	      if (state.wrap) {
	        //=== NEEDBITS(32);
	        while (bits < 32) {
	          if (have === 0) { break inf_leave; }
	          have--;
	          // Use '|' insdead of '+' to make sure that result is signed
	          hold |= input[next++] << bits;
	          bits += 8;
	        }
	        //===//
	        _out -= left;
	        strm.total_out += _out;
	        state.total += _out;
	        if (_out) {
	          strm.adler = state.check =
	              /*UPDATE(state.check, put - _out, _out);*/
	              (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));
	
	        }
	        _out = left;
	        // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too
	        if ((state.flags ? hold : zswap32(hold)) !== state.check) {
	          strm.msg = 'incorrect data check';
	          state.mode = BAD;
	          break;
	        }
	        //=== INITBITS();
	        hold = 0;
	        bits = 0;
	        //===//
	        //Tracev((stderr, "inflate:   check matches trailer\n"));
	      }
	      state.mode = LENGTH;
	      /* falls through */
	    case LENGTH:
	      if (state.wrap && state.flags) {
	        //=== NEEDBITS(32);
	        while (bits < 32) {
	          if (have === 0) { break inf_leave; }
	          have--;
	          hold += input[next++] << bits;
	          bits += 8;
	        }
	        //===//
	        if (hold !== (state.total & 0xffffffff)) {
	          strm.msg = 'incorrect length check';
	          state.mode = BAD;
	          break;
	        }
	        //=== INITBITS();
	        hold = 0;
	        bits = 0;
	        //===//
	        //Tracev((stderr, "inflate:   length matches trailer\n"));
	      }
	      state.mode = DONE;
	      /* falls through */
	    case DONE:
	      ret = Z_STREAM_END;
	      break inf_leave;
	    case BAD:
	      ret = Z_DATA_ERROR;
	      break inf_leave;
	    case MEM:
	      return Z_MEM_ERROR;
	    case SYNC:
	      /* falls through */
	    default:
	      return Z_STREAM_ERROR;
	    }
	  }
	
	  // inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"
	
	  /*
	     Return from inflate(), updating the total counts and the check value.
	     If there was no progress during the inflate() call, return a buffer
	     error.  Call updatewindow() to create and/or update the window state.
	     Note: a memory error from inflate() is non-recoverable.
	   */
	
	  //--- RESTORE() ---
	  strm.next_out = put;
	  strm.avail_out = left;
	  strm.next_in = next;
	  strm.avail_in = have;
	  state.hold = hold;
	  state.bits = bits;
	  //---
	
	  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&
	                      (state.mode < CHECK || flush !== Z_FINISH))) {
	    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {
	      state.mode = MEM;
	      return Z_MEM_ERROR;
	    }
	  }
	  _in -= strm.avail_in;
	  _out -= strm.avail_out;
	  strm.total_in += _in;
	  strm.total_out += _out;
	  state.total += _out;
	  if (state.wrap && _out) {
	    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
	      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));
	  }
	  strm.data_type = state.bits + (state.last ? 64 : 0) +
	                    (state.mode === TYPE ? 128 : 0) +
	                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
	  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {
	    ret = Z_BUF_ERROR;
	  }
	  return ret;
	}
	
	function inflateEnd(strm) {
	
	  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {
	    return Z_STREAM_ERROR;
	  }
	
	  var state = strm.state;
	  if (state.window) {
	    state.window = null;
	  }
	  strm.state = null;
	  return Z_OK;
	}
	
	function inflateGetHeader(strm, head) {
	  var state;
	
	  /* check state */
	  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
	  state = strm.state;
	  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }
	
	  /* save header structure */
	  state.head = head;
	  head.done = false;
	  return Z_OK;
	}
	
	function inflateSetDictionary(strm, dictionary) {
	  var dictLength = dictionary.length;
	
	  var state;
	  var dictid;
	  var ret;
	
	  /* check state */
	  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }
	  state = strm.state;
	
	  if (state.wrap !== 0 && state.mode !== DICT) {
	    return Z_STREAM_ERROR;
	  }
	
	  /* check for correct dictionary identifier */
	  if (state.mode === DICT) {
	    dictid = 1; /* adler32(0, null, 0)*/
	    /* dictid = adler32(dictid, dictionary, dictLength); */
	    dictid = adler32(dictid, dictionary, dictLength, 0);
	    if (dictid !== state.check) {
	      return Z_DATA_ERROR;
	    }
	  }
	  /* copy dictionary to window using updatewindow(), which will amend the
	   existing dictionary if appropriate */
	  ret = updatewindow(strm, dictionary, dictLength, dictLength);
	  if (ret) {
	    state.mode = MEM;
	    return Z_MEM_ERROR;
	  }
	  state.havedict = 1;
	  // Tracev((stderr, "inflate:   dictionary set\n"));
	  return Z_OK;
	}
	
	exports.inflateReset = inflateReset;
	exports.inflateReset2 = inflateReset2;
	exports.inflateResetKeep = inflateResetKeep;
	exports.inflateInit = inflateInit;
	exports.inflateInit2 = inflateInit2;
	exports.inflate = inflate;
	exports.inflateEnd = inflateEnd;
	exports.inflateGetHeader = inflateGetHeader;
	exports.inflateSetDictionary = inflateSetDictionary;
	exports.inflateInfo = 'pako inflate (from Nodeca project)';
	
	/* Not implemented
	exports.inflateCopy = inflateCopy;
	exports.inflateGetDictionary = inflateGetDictionary;
	exports.inflateMark = inflateMark;
	exports.inflatePrime = inflatePrime;
	exports.inflateSync = inflateSync;
	exports.inflateSyncPoint = inflateSyncPoint;
	exports.inflateUndermine = inflateUndermine;
	*/


/***/ },
/* 371 */
/***/ function(module, exports) {

	'use strict';
	
	// See state defs from inflate.js
	var BAD = 30;       /* got a data error -- remain here until reset */
	var TYPE = 12;      /* i: waiting for type bits, including last-flag bit */
	
	/*
	   Decode literal, length, and distance codes and write out the resulting
	   literal and match bytes until either not enough input or output is
	   available, an end-of-block is encountered, or a data error is encountered.
	   When large enough input and output buffers are supplied to inflate(), for
	   example, a 16K input buffer and a 64K output buffer, more than 95% of the
	   inflate execution time is spent in this routine.
	
	   Entry assumptions:
	
	        state.mode === LEN
	        strm.avail_in >= 6
	        strm.avail_out >= 258
	        start >= strm.avail_out
	        state.bits < 8
	
	   On return, state.mode is one of:
	
	        LEN -- ran out of enough output space or enough available input
	        TYPE -- reached end of block code, inflate() to interpret next block
	        BAD -- error in block data
	
	   Notes:
	
	    - The maximum input bits used by a length/distance pair is 15 bits for the
	      length code, 5 bits for the length extra, 15 bits for the distance code,
	      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
	      Therefore if strm.avail_in >= 6, then there is enough input to avoid
	      checking for available input while decoding.
	
	    - The maximum bytes that a single length/distance pair can output is 258
	      bytes, which is the maximum length that can be coded.  inflate_fast()
	      requires strm.avail_out >= 258 for each loop to avoid checking for
	      output space.
	 */
	module.exports = function inflate_fast(strm, start) {
	  var state;
	  var _in;                    /* local strm.input */
	  var last;                   /* have enough input while in < last */
	  var _out;                   /* local strm.output */
	  var beg;                    /* inflate()'s initial strm.output */
	  var end;                    /* while out < end, enough space available */
	//#ifdef INFLATE_STRICT
	  var dmax;                   /* maximum distance from zlib header */
	//#endif
	  var wsize;                  /* window size or zero if not using window */
	  var whave;                  /* valid bytes in the window */
	  var wnext;                  /* window write index */
	  // Use `s_window` instead `window`, avoid conflict with instrumentation tools
	  var s_window;               /* allocated sliding window, if wsize != 0 */
	  var hold;                   /* local strm.hold */
	  var bits;                   /* local strm.bits */
	  var lcode;                  /* local strm.lencode */
	  var dcode;                  /* local strm.distcode */
	  var lmask;                  /* mask for first level of length codes */
	  var dmask;                  /* mask for first level of distance codes */
	  var here;                   /* retrieved table entry */
	  var op;                     /* code bits, operation, extra bits, or */
	                              /*  window position, window bytes to copy */
	  var len;                    /* match length, unused bytes */
	  var dist;                   /* match distance */
	  var from;                   /* where to copy match from */
	  var from_source;
	
	
	  var input, output; // JS specific, because we have no pointers
	
	  /* copy state to local variables */
	  state = strm.state;
	  //here = state.here;
	  _in = strm.next_in;
	  input = strm.input;
	  last = _in + (strm.avail_in - 5);
	  _out = strm.next_out;
	  output = strm.output;
	  beg = _out - (start - strm.avail_out);
	  end = _out + (strm.avail_out - 257);
	//#ifdef INFLATE_STRICT
	  dmax = state.dmax;
	//#endif
	  wsize = state.wsize;
	  whave = state.whave;
	  wnext = state.wnext;
	  s_window = state.window;
	  hold = state.hold;
	  bits = state.bits;
	  lcode = state.lencode;
	  dcode = state.distcode;
	  lmask = (1 << state.lenbits) - 1;
	  dmask = (1 << state.distbits) - 1;
	
	
	  /* decode literals and length/distances until end-of-block or not enough
	     input data or output space */
	
	  top:
	  do {
	    if (bits < 15) {
	      hold += input[_in++] << bits;
	      bits += 8;
	      hold += input[_in++] << bits;
	      bits += 8;
	    }
	
	    here = lcode[hold & lmask];
	
	    dolen:
	    for (;;) { // Goto emulation
	      op = here >>> 24/*here.bits*/;
	      hold >>>= op;
	      bits -= op;
	      op = (here >>> 16) & 0xff/*here.op*/;
	      if (op === 0) {                          /* literal */
	        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
	        //        "inflate:         literal '%c'\n" :
	        //        "inflate:         literal 0x%02x\n", here.val));
	        output[_out++] = here & 0xffff/*here.val*/;
	      }
	      else if (op & 16) {                     /* length base */
	        len = here & 0xffff/*here.val*/;
	        op &= 15;                           /* number of extra bits */
	        if (op) {
	          if (bits < op) {
	            hold += input[_in++] << bits;
	            bits += 8;
	          }
	          len += hold & ((1 << op) - 1);
	          hold >>>= op;
	          bits -= op;
	        }
	        //Tracevv((stderr, "inflate:         length %u\n", len));
	        if (bits < 15) {
	          hold += input[_in++] << bits;
	          bits += 8;
	          hold += input[_in++] << bits;
	          bits += 8;
	        }
	        here = dcode[hold & dmask];
	
	        dodist:
	        for (;;) { // goto emulation
	          op = here >>> 24/*here.bits*/;
	          hold >>>= op;
	          bits -= op;
	          op = (here >>> 16) & 0xff/*here.op*/;
	
	          if (op & 16) {                      /* distance base */
	            dist = here & 0xffff/*here.val*/;
	            op &= 15;                       /* number of extra bits */
	            if (bits < op) {
	              hold += input[_in++] << bits;
	              bits += 8;
	              if (bits < op) {
	                hold += input[_in++] << bits;
	                bits += 8;
	              }
	            }
	            dist += hold & ((1 << op) - 1);
	//#ifdef INFLATE_STRICT
	            if (dist > dmax) {
	              strm.msg = 'invalid distance too far back';
	              state.mode = BAD;
	              break top;
	            }
	//#endif
	            hold >>>= op;
	            bits -= op;
	            //Tracevv((stderr, "inflate:         distance %u\n", dist));
	            op = _out - beg;                /* max distance in output */
	            if (dist > op) {                /* see if copy from window */
	              op = dist - op;               /* distance back in window */
	              if (op > whave) {
	                if (state.sane) {
	                  strm.msg = 'invalid distance too far back';
	                  state.mode = BAD;
	                  break top;
	                }
	
	// (!) This block is disabled in zlib defailts,
	// don't enable it for binary compatibility
	//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
	//                if (len <= op - whave) {
	//                  do {
	//                    output[_out++] = 0;
	//                  } while (--len);
	//                  continue top;
	//                }
	//                len -= op - whave;
	//                do {
	//                  output[_out++] = 0;
	//                } while (--op > whave);
	//                if (op === 0) {
	//                  from = _out - dist;
	//                  do {
	//                    output[_out++] = output[from++];
	//                  } while (--len);
	//                  continue top;
	//                }
	//#endif
	              }
	              from = 0; // window index
	              from_source = s_window;
	              if (wnext === 0) {           /* very common case */
	                from += wsize - op;
	                if (op < len) {         /* some from window */
	                  len -= op;
	                  do {
	                    output[_out++] = s_window[from++];
	                  } while (--op);
	                  from = _out - dist;  /* rest from output */
	                  from_source = output;
	                }
	              }
	              else if (wnext < op) {      /* wrap around window */
	                from += wsize + wnext - op;
	                op -= wnext;
	                if (op < len) {         /* some from end of window */
	                  len -= op;
	                  do {
	                    output[_out++] = s_window[from++];
	                  } while (--op);
	                  from = 0;
	                  if (wnext < len) {  /* some from start of window */
	                    op = wnext;
	                    len -= op;
	                    do {
	                      output[_out++] = s_window[from++];
	                    } while (--op);
	                    from = _out - dist;      /* rest from output */
	                    from_source = output;
	                  }
	                }
	              }
	              else {                      /* contiguous in window */
	                from += wnext - op;
	                if (op < len) {         /* some from window */
	                  len -= op;
	                  do {
	                    output[_out++] = s_window[from++];
	                  } while (--op);
	                  from = _out - dist;  /* rest from output */
	                  from_source = output;
	                }
	              }
	              while (len > 2) {
	                output[_out++] = from_source[from++];
	                output[_out++] = from_source[from++];
	                output[_out++] = from_source[from++];
	                len -= 3;
	              }
	              if (len) {
	                output[_out++] = from_source[from++];
	                if (len > 1) {
	                  output[_out++] = from_source[from++];
	                }
	              }
	            }
	            else {
	              from = _out - dist;          /* copy direct from output */
	              do {                        /* minimum length is three */
	                output[_out++] = output[from++];
	                output[_out++] = output[from++];
	                output[_out++] = output[from++];
	                len -= 3;
	              } while (len > 2);
	              if (len) {
	                output[_out++] = output[from++];
	                if (len > 1) {
	                  output[_out++] = output[from++];
	                }
	              }
	            }
	          }
	          else if ((op & 64) === 0) {          /* 2nd level distance code */
	            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
	            continue dodist;
	          }
	          else {
	            strm.msg = 'invalid distance code';
	            state.mode = BAD;
	            break top;
	          }
	
	          break; // need to emulate goto via "continue"
	        }
	      }
	      else if ((op & 64) === 0) {              /* 2nd level length code */
	        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
	        continue dolen;
	      }
	      else if (op & 32) {                     /* end-of-block */
	        //Tracevv((stderr, "inflate:         end of block\n"));
	        state.mode = TYPE;
	        break top;
	      }
	      else {
	        strm.msg = 'invalid literal/length code';
	        state.mode = BAD;
	        break top;
	      }
	
	      break; // need to emulate goto via "continue"
	    }
	  } while (_in < last && _out < end);
	
	  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */
	  len = bits >> 3;
	  _in -= len;
	  bits -= len << 3;
	  hold &= (1 << bits) - 1;
	
	  /* update state and return */
	  strm.next_in = _in;
	  strm.next_out = _out;
	  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));
	  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));
	  state.hold = hold;
	  state.bits = bits;
	  return;
	};


/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	var utils = __webpack_require__(366);
	
	var MAXBITS = 15;
	var ENOUGH_LENS = 852;
	var ENOUGH_DISTS = 592;
	//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);
	
	var CODES = 0;
	var LENS = 1;
	var DISTS = 2;
	
	var lbase = [ /* Length codes 257..285 base */
	  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,
	  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0
	];
	
	var lext = [ /* Length codes 257..285 extra */
	  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
	  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78
	];
	
	var dbase = [ /* Distance codes 0..29 base */
	  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,
	  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,
	  8193, 12289, 16385, 24577, 0, 0
	];
	
	var dext = [ /* Distance codes 0..29 extra */
	  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
	  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
	  28, 28, 29, 29, 64, 64
	];
	
	module.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)
	{
	  var bits = opts.bits;
	      //here = opts.here; /* table entry for duplication */
	
	  var len = 0;               /* a code's length in bits */
	  var sym = 0;               /* index of code symbols */
	  var min = 0, max = 0;          /* minimum and maximum code lengths */
	  var root = 0;              /* number of index bits for root table */
	  var curr = 0;              /* number of index bits for current table */
	  var drop = 0;              /* code bits to drop for sub-table */
	  var left = 0;                   /* number of prefix codes available */
	  var used = 0;              /* code entries in table used */
	  var huff = 0;              /* Huffman code */
	  var incr;              /* for incrementing code, index */
	  var fill;              /* index for replicating entries */
	  var low;               /* low bits for current root entry */
	  var mask;              /* mask for low root bits */
	  var next;             /* next available space in table */
	  var base = null;     /* base value table to use */
	  var base_index = 0;
	//  var shoextra;    /* extra bits table to use */
	  var end;                    /* use base and extra for symbol > end */
	  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */
	  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */
	  var extra = null;
	  var extra_index = 0;
	
	  var here_bits, here_op, here_val;
	
	  /*
	   Process a set of code lengths to create a canonical Huffman code.  The
	   code lengths are lens[0..codes-1].  Each length corresponds to the
	   symbols 0..codes-1.  The Huffman code is generated by first sorting the
	   symbols by length from short to long, and retaining the symbol order
	   for codes with equal lengths.  Then the code starts with all zero bits
	   for the first code of the shortest length, and the codes are integer
	   increments for the same length, and zeros are appended as the length
	   increases.  For the deflate format, these bits are stored backwards
	   from their more natural integer increment ordering, and so when the
	   decoding tables are built in the large loop below, the integer codes
	   are incremented backwards.
	
	   This routine assumes, but does not check, that all of the entries in
	   lens[] are in the range 0..MAXBITS.  The caller must assure this.
	   1..MAXBITS is interpreted as that code length.  zero means that that
	   symbol does not occur in this code.
	
	   The codes are sorted by computing a count of codes for each length,
	   creating from that a table of starting indices for each length in the
	   sorted table, and then entering the symbols in order in the sorted
	   table.  The sorted table is work[], with that space being provided by
	   the caller.
	
	   The length counts are used for other purposes as well, i.e. finding
	   the minimum and maximum length codes, determining if there are any
	   codes at all, checking for a valid set of lengths, and looking ahead
	   at length counts to determine sub-table sizes when building the
	   decoding tables.
	   */
	
	  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */
	  for (len = 0; len <= MAXBITS; len++) {
	    count[len] = 0;
	  }
	  for (sym = 0; sym < codes; sym++) {
	    count[lens[lens_index + sym]]++;
	  }
	
	  /* bound code lengths, force root to be within code lengths */
	  root = bits;
	  for (max = MAXBITS; max >= 1; max--) {
	    if (count[max] !== 0) { break; }
	  }
	  if (root > max) {
	    root = max;
	  }
	  if (max === 0) {                     /* no symbols to code at all */
	    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */
	    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;
	    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;
	    table[table_index++] = (1 << 24) | (64 << 16) | 0;
	
	
	    //table.op[opts.table_index] = 64;
	    //table.bits[opts.table_index] = 1;
	    //table.val[opts.table_index++] = 0;
	    table[table_index++] = (1 << 24) | (64 << 16) | 0;
	
	    opts.bits = 1;
	    return 0;     /* no symbols, but wait for decoding to report error */
	  }
	  for (min = 1; min < max; min++) {
	    if (count[min] !== 0) { break; }
	  }
	  if (root < min) {
	    root = min;
	  }
	
	  /* check for an over-subscribed or incomplete set of lengths */
	  left = 1;
	  for (len = 1; len <= MAXBITS; len++) {
	    left <<= 1;
	    left -= count[len];
	    if (left < 0) {
	      return -1;
	    }        /* over-subscribed */
	  }
	  if (left > 0 && (type === CODES || max !== 1)) {
	    return -1;                      /* incomplete set */
	  }
	
	  /* generate offsets into symbol table for each length for sorting */
	  offs[1] = 0;
	  for (len = 1; len < MAXBITS; len++) {
	    offs[len + 1] = offs[len] + count[len];
	  }
	
	  /* sort symbols by length, by symbol order within each length */
	  for (sym = 0; sym < codes; sym++) {
	    if (lens[lens_index + sym] !== 0) {
	      work[offs[lens[lens_index + sym]]++] = sym;
	    }
	  }
	
	  /*
	   Create and fill in decoding tables.  In this loop, the table being
	   filled is at next and has curr index bits.  The code being used is huff
	   with length len.  That code is converted to an index by dropping drop
	   bits off of the bottom.  For codes where len is less than drop + curr,
	   those top drop + curr - len bits are incremented through all values to
	   fill the table with replicated entries.
	
	   root is the number of index bits for the root table.  When len exceeds
	   root, sub-tables are created pointed to by the root entry with an index
	   of the low root bits of huff.  This is saved in low to check for when a
	   new sub-table should be started.  drop is zero when the root table is
	   being filled, and drop is root when sub-tables are being filled.
	
	   When a new sub-table is needed, it is necessary to look ahead in the
	   code lengths to determine what size sub-table is needed.  The length
	   counts are used for this, and so count[] is decremented as codes are
	   entered in the tables.
	
	   used keeps track of how many table entries have been allocated from the
	   provided *table space.  It is checked for LENS and DIST tables against
	   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
	   the initial root table size constants.  See the comments in inftrees.h
	   for more information.
	
	   sym increments through all symbols, and the loop terminates when
	   all codes of length max, i.e. all codes, have been processed.  This
	   routine permits incomplete codes, so another loop after this one fills
	   in the rest of the decoding tables with invalid code markers.
	   */
	
	  /* set up for code type */
	  // poor man optimization - use if-else instead of switch,
	  // to avoid deopts in old v8
	  if (type === CODES) {
	    base = extra = work;    /* dummy value--not used */
	    end = 19;
	
	  } else if (type === LENS) {
	    base = lbase;
	    base_index -= 257;
	    extra = lext;
	    extra_index -= 257;
	    end = 256;
	
	  } else {                    /* DISTS */
	    base = dbase;
	    extra = dext;
	    end = -1;
	  }
	
	  /* initialize opts for loop */
	  huff = 0;                   /* starting code */
	  sym = 0;                    /* starting code symbol */
	  len = min;                  /* starting code length */
	  next = table_index;              /* current table to fill in */
	  curr = root;                /* current table index bits */
	  drop = 0;                   /* current bits to drop from code for index */
	  low = -1;                   /* trigger new sub-table when len > root */
	  used = 1 << root;          /* use root table entries */
	  mask = used - 1;            /* mask for comparing low */
	
	  /* check available table space */
	  if ((type === LENS && used > ENOUGH_LENS) ||
	    (type === DISTS && used > ENOUGH_DISTS)) {
	    return 1;
	  }
	
	  var i = 0;
	  /* process all codes and make table entries */
	  for (;;) {
	    i++;
	    /* create table entry */
	    here_bits = len - drop;
	    if (work[sym] < end) {
	      here_op = 0;
	      here_val = work[sym];
	    }
	    else if (work[sym] > end) {
	      here_op = extra[extra_index + work[sym]];
	      here_val = base[base_index + work[sym]];
	    }
	    else {
	      here_op = 32 + 64;         /* end of block */
	      here_val = 0;
	    }
	
	    /* replicate for those indices with low len bits equal to huff */
	    incr = 1 << (len - drop);
	    fill = 1 << curr;
	    min = fill;                 /* save offset to next table */
	    do {
	      fill -= incr;
	      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;
	    } while (fill !== 0);
	
	    /* backwards increment the len-bit code huff */
	    incr = 1 << (len - 1);
	    while (huff & incr) {
	      incr >>= 1;
	    }
	    if (incr !== 0) {
	      huff &= incr - 1;
	      huff += incr;
	    } else {
	      huff = 0;
	    }
	
	    /* go to next symbol, update count, len */
	    sym++;
	    if (--count[len] === 0) {
	      if (len === max) { break; }
	      len = lens[lens_index + work[sym]];
	    }
	
	    /* create new sub-table if needed */
	    if (len > root && (huff & mask) !== low) {
	      /* if first time, transition to sub-tables */
	      if (drop === 0) {
	        drop = root;
	      }
	
	      /* increment past last table */
	      next += min;            /* here min is 1 << curr */
	
	      /* determine length of next table */
	      curr = len - drop;
	      left = 1 << curr;
	      while (curr + drop < max) {
	        left -= count[curr + drop];
	        if (left <= 0) { break; }
	        curr++;
	        left <<= 1;
	      }
	
	      /* check for enough space */
	      used += 1 << curr;
	      if ((type === LENS && used > ENOUGH_LENS) ||
	        (type === DISTS && used > ENOUGH_DISTS)) {
	        return 1;
	      }
	
	      /* point entry in root table to sub-table */
	      low = huff & mask;
	      /*table.op[low] = curr;
	      table.bits[low] = root;
	      table.val[low] = next - opts.table_index;*/
	      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;
	    }
	  }
	
	  /* fill in remaining table entry if code is incomplete (guaranteed to have
	   at most one remaining entry, since if the code is incomplete, the
	   maximum code length that was allowed to get this far is one bit) */
	  if (huff !== 0) {
	    //table.op[next + huff] = 64;            /* invalid code marker */
	    //table.bits[next + huff] = len - drop;
	    //table.val[next + huff] = 0;
	    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;
	  }
	
	  /* set return parameters */
	  //opts.table_index += used;
	  opts.bits = root;
	  return 0;
	};


/***/ },
/* 373 */
/***/ function(module, exports) {

	'use strict';
	
	
	module.exports = {
	
	  /* Allowed flush values; see deflate() and inflate() below for details */
	  Z_NO_FLUSH:         0,
	  Z_PARTIAL_FLUSH:    1,
	  Z_SYNC_FLUSH:       2,
	  Z_FULL_FLUSH:       3,
	  Z_FINISH:           4,
	  Z_BLOCK:            5,
	  Z_TREES:            6,
	
	  /* Return codes for the compression/decompression functions. Negative values
	  * are errors, positive values are used for special but normal events.
	  */
	  Z_OK:               0,
	  Z_STREAM_END:       1,
	  Z_NEED_DICT:        2,
	  Z_ERRNO:           -1,
	  Z_STREAM_ERROR:    -2,
	  Z_DATA_ERROR:      -3,
	  //Z_MEM_ERROR:     -4,
	  Z_BUF_ERROR:       -5,
	  //Z_VERSION_ERROR: -6,
	
	  /* compression levels */
	  Z_NO_COMPRESSION:         0,
	  Z_BEST_SPEED:             1,
	  Z_BEST_COMPRESSION:       9,
	  Z_DEFAULT_COMPRESSION:   -1,
	
	
	  Z_FILTERED:               1,
	  Z_HUFFMAN_ONLY:           2,
	  Z_RLE:                    3,
	  Z_FIXED:                  4,
	  Z_DEFAULT_STRATEGY:       0,
	
	  /* Possible values of the data_type field (though see inflate()) */
	  Z_BINARY:                 0,
	  Z_TEXT:                   1,
	  //Z_ASCII:                1, // = Z_TEXT (deprecated)
	  Z_UNKNOWN:                2,
	
	  /* The deflate compression method */
	  Z_DEFLATED:               8
	  //Z_NULL:                 null // Use -1 or null inline, depending on var type
	};


/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, Buffer) {'use strict';
	
	
	var util = __webpack_require__(197);
	var Stream = __webpack_require__(287);
	
	
	var ChunkStream = module.exports = function() {
	  Stream.call(this);
	
	  this._buffers = [];
	  this._buffered = 0;
	
	  this._reads = [];
	  this._paused = false;
	
	  this._encoding = 'utf8';
	  this.writable = true;
	};
	util.inherits(ChunkStream, Stream);
	
	
	ChunkStream.prototype.read = function(length, callback) {
	
	  this._reads.push({
	    length: Math.abs(length),  // if length < 0 then at most this length
	    allowLess: length < 0,
	    func: callback
	  });
	
	  process.nextTick(function() {
	    this._process();
	
	    // its paused and there is not enought data then ask for more
	    if (this._paused && this._reads.length > 0) {
	      this._paused = false;
	
	      this.emit('drain');
	    }
	  }.bind(this));
	};
	
	ChunkStream.prototype.write = function(data, encoding) {
	
	  if (!this.writable) {
	    this.emit('error', new Error('Stream not writable'));
	    return false;
	  }
	
	  var dataBuffer;
	  if (Buffer.isBuffer(data)) {
	    dataBuffer = data;
	  }
	  else {
	    dataBuffer = new Buffer(data, encoding || this._encoding);
	  }
	
	  this._buffers.push(dataBuffer);
	  this._buffered += dataBuffer.length;
	
	  this._process();
	
	  // ok if there are no more read requests
	  if (this._reads && this._reads.length === 0) {
	    this._paused = true;
	  }
	
	  return this.writable && !this._paused;
	};
	
	ChunkStream.prototype.end = function(data, encoding) {
	
	  if (data) {
	    this.write(data, encoding);
	  }
	
	  this.writable = false;
	
	  // already destroyed
	  if (!this._buffers) {
	    return;
	  }
	
	  // enqueue or handle end
	  if (this._buffers.length === 0) {
	    this._end();
	  }
	  else {
	    this._buffers.push(null);
	    this._process();
	  }
	};
	
	ChunkStream.prototype.destroySoon = ChunkStream.prototype.end;
	
	ChunkStream.prototype._end = function() {
	
	  if (this._reads.length > 0) {
	    this.emit('error',
	      new Error('There are some read requests waitng on finished stream')
	    );
	  }
	
	  this.destroy();
	};
	
	ChunkStream.prototype.destroy = function() {
	
	  if (!this._buffers) {
	    return;
	  }
	
	  this.writable = false;
	  this._reads = null;
	  this._buffers = null;
	
	  this.emit('close');
	};
	
	ChunkStream.prototype._processReadAllowingLess = function(read) {
	  // ok there is any data so that we can satisfy this request
	  this._reads.shift(); // == read
	
	  // first we need to peek into first buffer
	  var smallerBuf = this._buffers[0];
	
	  // ok there is more data than we need
	  if (smallerBuf.length > read.length) {
	
	    this._buffered -= read.length;
	    this._buffers[0] = smallerBuf.slice(read.length);
	
	    read.func.call(this, smallerBuf.slice(0, read.length));
	
	  }
	  else {
	    // ok this is less than maximum length so use it all
	    this._buffered -= smallerBuf.length;
	    this._buffers.shift(); // == smallerBuf
	
	    read.func.call(this, smallerBuf);
	  }
	};
	
	ChunkStream.prototype._processRead = function(read) {
	  this._reads.shift(); // == read
	
	  var pos = 0;
	  var count = 0;
	  var data = new Buffer(read.length);
	
	  // create buffer for all data
	  while (pos < read.length) {
	
	    var buf = this._buffers[count++];
	    var len = Math.min(buf.length, read.length - pos);
	
	    buf.copy(data, pos, 0, len);
	    pos += len;
	
	    // last buffer wasn't used all so just slice it and leave
	    if (len !== buf.length) {
	      this._buffers[--count] = buf.slice(len);
	    }
	  }
	
	  // remove all used buffers
	  if (count > 0) {
	    this._buffers.splice(0, count);
	  }
	
	  this._buffered -= read.length;
	
	  read.func.call(this, data);
	};
	
	ChunkStream.prototype._process = function() {
	
	  try {
	    // as long as there is any data and read requests
	    while (this._buffered > 0 && this._reads && this._reads.length > 0) {
	
	      var read = this._reads[0];
	
	      // read any data (but no more than length)
	      if (read.allowLess) {
	        this._processReadAllowingLess(read);
	
	      }
	      else if (this._buffered >= read.length) {
	        // ok we can meet some expectations
	
	        this._processRead(read);
	      }
	      else {
	        // not enought data to satisfy first request in queue
	        // so we need to wait for more
	        break;
	      }
	    }
	
	    if (this._buffers && this._buffers.length > 0 && this._buffers[0] === null) {
	      this._end();
	    }
	  }
	  catch (ex) {
	    this.emit('error', ex);
	  }
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6), __webpack_require__(282).Buffer))

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';
	
	var util = __webpack_require__(197);
	var ChunkStream = __webpack_require__(374);
	var Filter = __webpack_require__(376);
	
	
	var FilterAsync = module.exports = function(bitmapInfo) {
	  ChunkStream.call(this);
	
	  var buffers = [];
	  var that = this;
	  this._filter = new Filter(bitmapInfo, {
	    read: this.read.bind(this),
	    write: function(buffer) {
	      buffers.push(buffer);
	    },
	    complete: function() {
	      that.emit('complete', Buffer.concat(buffers));
	    }
	  });
	
	  this._filter.start();
	};
	util.inherits(FilterAsync, ChunkStream);
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';
	
	var interlaceUtils = __webpack_require__(377);
	var paethPredictor = __webpack_require__(378);
	
	function getByteWidth(width, bpp, depth) {
	  var byteWidth = width * bpp;
	  if (depth !== 8) {
	    byteWidth = Math.ceil(byteWidth / (8 / depth));
	  }
	  return byteWidth;
	}
	
	var Filter = module.exports = function(bitmapInfo, dependencies) {
	
	  var width = bitmapInfo.width;
	  var height = bitmapInfo.height;
	  var interlace = bitmapInfo.interlace;
	  var bpp = bitmapInfo.bpp;
	  var depth = bitmapInfo.depth;
	
	  this.read = dependencies.read;
	  this.write = dependencies.write;
	  this.complete = dependencies.complete;
	
	  this._imageIndex = 0;
	  this._images = [];
	  if (interlace) {
	    var passes = interlaceUtils.getImagePasses(width, height);
	    for (var i = 0; i < passes.length; i++) {
	      this._images.push({
	        byteWidth: getByteWidth(passes[i].width, bpp, depth),
	        height: passes[i].height,
	        lineIndex: 0
	      });
	    }
	  }
	  else {
	    this._images.push({
	      byteWidth: getByteWidth(width, bpp, depth),
	      height: height,
	      lineIndex: 0
	    });
	  }
	
	  // when filtering the line we look at the pixel to the left
	  // the spec also says it is done on a byte level regardless of the number of pixels
	  // so if the depth is byte compatible (8 or 16) we subtract the bpp in order to compare back
	  // a pixel rather than just a different byte part. However if we are sub byte, we ignore.
	  if (depth === 8) {
	    this._xComparison = bpp;
	  }
	  else if (depth === 16) {
	    this._xComparison = bpp * 2;
	  }
	  else {
	    this._xComparison = 1;
	  }
	};
	
	Filter.prototype.start = function() {
	  this.read(this._images[this._imageIndex].byteWidth + 1, this._reverseFilterLine.bind(this));
	};
	
	Filter.prototype._unFilterType1 = function(rawData, unfilteredLine, byteWidth) {
	
	  var xComparison = this._xComparison;
	  var xBiggerThan = xComparison - 1;
	
	  for (var x = 0; x < byteWidth; x++) {
	    var rawByte = rawData[1 + x];
	    var f1Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;
	    unfilteredLine[x] = rawByte + f1Left;
	  }
	};
	
	Filter.prototype._unFilterType2 = function(rawData, unfilteredLine, byteWidth) {
	
	  var lastLine = this._lastLine;
	
	  for (var x = 0; x < byteWidth; x++) {
	    var rawByte = rawData[1 + x];
	    var f2Up = lastLine ? lastLine[x] : 0;
	    unfilteredLine[x] = rawByte + f2Up;
	  }
	};
	
	Filter.prototype._unFilterType3 = function(rawData, unfilteredLine, byteWidth) {
	
	  var xComparison = this._xComparison;
	  var xBiggerThan = xComparison - 1;
	  var lastLine = this._lastLine;
	
	  for (var x = 0; x < byteWidth; x++) {
	    var rawByte = rawData[1 + x];
	    var f3Up = lastLine ? lastLine[x] : 0;
	    var f3Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;
	    var f3Add = Math.floor((f3Left + f3Up) / 2);
	    unfilteredLine[x] = rawByte + f3Add;
	  }
	};
	
	Filter.prototype._unFilterType4 = function(rawData, unfilteredLine, byteWidth) {
	
	  var xComparison = this._xComparison;
	  var xBiggerThan = xComparison - 1;
	  var lastLine = this._lastLine;
	
	  for (var x = 0; x < byteWidth; x++) {
	    var rawByte = rawData[1 + x];
	    var f4Up = lastLine ? lastLine[x] : 0;
	    var f4Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;
	    var f4UpLeft = x > xBiggerThan && lastLine ? lastLine[x - xComparison] : 0;
	    var f4Add = paethPredictor(f4Left, f4Up, f4UpLeft);
	    unfilteredLine[x] = rawByte + f4Add;
	  }
	};
	
	Filter.prototype._reverseFilterLine = function(rawData) {
	
	  var filter = rawData[0];
	  var unfilteredLine;
	  var currentImage = this._images[this._imageIndex];
	  var byteWidth = currentImage.byteWidth;
	
	  if (filter === 0) {
	    unfilteredLine = rawData.slice(1, byteWidth + 1);
	  }
	  else {
	
	    unfilteredLine = new Buffer(byteWidth);
	
	    switch (filter) {
	      case 1:
	        this._unFilterType1(rawData, unfilteredLine, byteWidth);
	        break;
	      case 2:
	        this._unFilterType2(rawData, unfilteredLine, byteWidth);
	        break;
	      case 3:
	        this._unFilterType3(rawData, unfilteredLine, byteWidth);
	        break;
	      case 4:
	        this._unFilterType4(rawData, unfilteredLine, byteWidth);
	        break;
	      default:
	        throw new Error('Unrecognised filter type - ' + filter);
	    }
	  }
	
	  this.write(unfilteredLine);
	
	  currentImage.lineIndex++;
	  if (currentImage.lineIndex >= currentImage.height) {
	    this._lastLine = null;
	    this._imageIndex++;
	    currentImage = this._images[this._imageIndex];
	  }
	  else {
	    this._lastLine = unfilteredLine;
	  }
	
	  if (currentImage) {
	    // read, using the byte width that may be from the new current image
	    this.read(currentImage.byteWidth + 1, this._reverseFilterLine.bind(this));
	  }
	  else {
	    this._lastLine = null;
	    this.complete();
	  }
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 377 */
/***/ function(module, exports) {

	'use strict';
	
	// Adam 7
	//   0 1 2 3 4 5 6 7
	// 0 x 6 4 6 x 6 4 6
	// 1 7 7 7 7 7 7 7 7
	// 2 5 6 5 6 5 6 5 6
	// 3 7 7 7 7 7 7 7 7
	// 4 3 6 4 6 3 6 4 6
	// 5 7 7 7 7 7 7 7 7
	// 6 5 6 5 6 5 6 5 6
	// 7 7 7 7 7 7 7 7 7
	
	
	var imagePasses = [
	  { // pass 1 - 1px
	    x: [0],
	    y: [0]
	  },
	  { // pass 2 - 1px
	    x: [4],
	    y: [0]
	  },
	  { // pass 3 - 2px
	    x: [0, 4],
	    y: [4]
	  },
	  { // pass 4 - 4px
	    x: [2, 6],
	    y: [0, 4]
	  },
	  { // pass 5 - 8px
	    x: [0, 2, 4, 6],
	    y: [2, 6]
	  },
	  { // pass 6 - 16px
	    x: [1, 3, 5, 7],
	    y: [0, 2, 4, 6]
	  },
	  { // pass 7 - 32px
	    x: [0, 1, 2, 3, 4, 5, 6, 7],
	    y: [1, 3, 5, 7]
	  }
	];
	
	exports.getImagePasses = function(width, height) {
	  var images = [];
	  var xLeftOver = width % 8;
	  var yLeftOver = height % 8;
	  var xRepeats = (width - xLeftOver) / 8;
	  var yRepeats = (height - yLeftOver) / 8;
	  for (var i = 0; i < imagePasses.length; i++) {
	    var pass = imagePasses[i];
	    var passWidth = xRepeats * pass.x.length;
	    var passHeight = yRepeats * pass.y.length;
	    for (var j = 0; j < pass.x.length; j++) {
	      if (pass.x[j] < xLeftOver) {
	        passWidth++;
	      }
	      else {
	        break;
	      }
	    }
	    for (j = 0; j < pass.y.length; j++) {
	      if (pass.y[j] < yLeftOver) {
	        passHeight++;
	      }
	      else {
	        break;
	      }
	    }
	    if (passWidth > 0 && passHeight > 0) {
	      images.push({ width: passWidth, height: passHeight, index: i });
	    }
	  }
	  return images;
	};
	
	exports.getInterlaceIterator = function(width) {
	  return function(x, y, pass) {
	    var outerXLeftOver = x % imagePasses[pass].x.length;
	    var outerX = (((x - outerXLeftOver) / imagePasses[pass].x.length) * 8) + imagePasses[pass].x[outerXLeftOver];
	    var outerYLeftOver = y % imagePasses[pass].y.length;
	    var outerY = (((y - outerYLeftOver) / imagePasses[pass].y.length) * 8) + imagePasses[pass].y[outerYLeftOver];
	    return (outerX * 4) + (outerY * width * 4);
	  };
	};

/***/ },
/* 378 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = function paethPredictor(left, above, upLeft) {
	
	  var paeth = left + above - upLeft;
	  var pLeft = Math.abs(paeth - left);
	  var pAbove = Math.abs(paeth - above);
	  var pUpLeft = Math.abs(paeth - upLeft);
	
	  if (pLeft <= pAbove && pLeft <= pUpLeft) {
	    return left;
	  }
	  if (pAbove <= pUpLeft) {
	    return above;
	  }
	  return upLeft;
	};

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';
	
	var constants = __webpack_require__(380);
	var CrcCalculator = __webpack_require__(381);
	
	
	var Parser = module.exports = function(options, dependencies) {
	
	  this._options = options;
	  options.checkCRC = options.checkCRC !== false;
	
	  this._hasIHDR = false;
	  this._hasIEND = false;
	
	  // input flags/metadata
	  this._palette = [];
	  this._colorType = 0;
	
	  this._chunks = {};
	  this._chunks[constants.TYPE_IHDR] = this._handleIHDR.bind(this);
	  this._chunks[constants.TYPE_IEND] = this._handleIEND.bind(this);
	  this._chunks[constants.TYPE_IDAT] = this._handleIDAT.bind(this);
	  this._chunks[constants.TYPE_PLTE] = this._handlePLTE.bind(this);
	  this._chunks[constants.TYPE_tRNS] = this._handleTRNS.bind(this);
	  this._chunks[constants.TYPE_gAMA] = this._handleGAMA.bind(this);
	
	  this.read = dependencies.read;
	  this.error = dependencies.error;
	  this.metadata = dependencies.metadata;
	  this.gamma = dependencies.gamma;
	  this.transColor = dependencies.transColor;
	  this.palette = dependencies.palette;
	  this.parsed = dependencies.parsed;
	  this.inflateData = dependencies.inflateData;
	  this.inflateData = dependencies.inflateData;
	  this.finished = dependencies.finished;
	};
	
	Parser.prototype.start = function() {
	  this.read(constants.PNG_SIGNATURE.length,
	    this._parseSignature.bind(this)
	  );
	};
	
	Parser.prototype._parseSignature = function(data) {
	
	  var signature = constants.PNG_SIGNATURE;
	
	  for (var i = 0; i < signature.length; i++) {
	    if (data[i] !== signature[i]) {
	      this.error(new Error('Invalid file signature'));
	      return;
	    }
	  }
	  this.read(8, this._parseChunkBegin.bind(this));
	};
	
	Parser.prototype._parseChunkBegin = function(data) {
	
	  // chunk content length
	  var length = data.readUInt32BE(0);
	
	  // chunk type
	  var type = data.readUInt32BE(4);
	  var name = '';
	  for (var i = 4; i < 8; i++) {
	    name += String.fromCharCode(data[i]);
	  }
	
	  //console.log('chunk ', name, length);
	
	  // chunk flags
	  var ancillary = Boolean(data[4] & 0x20); // or critical
	//    priv = Boolean(data[5] & 0x20), // or public
	//    safeToCopy = Boolean(data[7] & 0x20); // or unsafe
	
	  if (!this._hasIHDR && type !== constants.TYPE_IHDR) {
	    this.error(new Error('Expected IHDR on beggining'));
	    return;
	  }
	
	  this._crc = new CrcCalculator();
	  this._crc.write(new Buffer(name));
	
	  if (this._chunks[type]) {
	    return this._chunks[type](length);
	  }
	
	  if (!ancillary) {
	    this.error(new Error('Unsupported critical chunk type ' + name));
	    return;
	  }
	
	  this.read(length + 4, this._skipChunk.bind(this));
	};
	
	Parser.prototype._skipChunk = function(/*data*/) {
	  this.read(8, this._parseChunkBegin.bind(this));
	};
	
	Parser.prototype._handleChunkEnd = function() {
	  this.read(4, this._parseChunkEnd.bind(this));
	};
	
	Parser.prototype._parseChunkEnd = function(data) {
	
	  var fileCrc = data.readInt32BE(0);
	  var calcCrc = this._crc.crc32();
	
	  // check CRC
	  if (this._options.checkCRC && calcCrc !== fileCrc) {
	    this.error(new Error('Crc error - ' + fileCrc + ' - ' + calcCrc));
	    return;
	  }
	
	  if (!this._hasIEND) {
	    this.read(8, this._parseChunkBegin.bind(this));
	  }
	};
	
	Parser.prototype._handleIHDR = function(length) {
	  this.read(length, this._parseIHDR.bind(this));
	};
	Parser.prototype._parseIHDR = function(data) {
	
	  this._crc.write(data);
	
	  var width = data.readUInt32BE(0);
	  var height = data.readUInt32BE(4);
	  var depth = data[8];
	  var colorType = data[9]; // bits: 1 palette, 2 color, 4 alpha
	  var compr = data[10];
	  var filter = data[11];
	  var interlace = data[12];
	
	  // console.log('    width', width, 'height', height,
	  //     'depth', depth, 'colorType', colorType,
	  //     'compr', compr, 'filter', filter, 'interlace', interlace
	  // );
	
	  if (depth !== 8 && depth !== 4 && depth !== 2 && depth !== 1 && depth !== 16) {
	    this.error(new Error('Unsupported bit depth ' + depth));
	    return;
	  }
	  if (!(colorType in constants.COLORTYPE_TO_BPP_MAP)) {
	    this.error(new Error('Unsupported color type'));
	    return;
	  }
	  if (compr !== 0) {
	    this.error(new Error('Unsupported compression method'));
	    return;
	  }
	  if (filter !== 0) {
	    this.error(new Error('Unsupported filter method'));
	    return;
	  }
	  if (interlace !== 0 && interlace !== 1) {
	    this.error(new Error('Unsupported interlace method'));
	    return;
	  }
	
	  this._colorType = colorType;
	
	  var bpp = constants.COLORTYPE_TO_BPP_MAP[this._colorType];
	
	  this._hasIHDR = true;
	
	  this.metadata({
	    width: width,
	    height: height,
	    depth: depth,
	    interlace: Boolean(interlace),
	    palette: Boolean(colorType & constants.COLORTYPE_PALETTE),
	    color: Boolean(colorType & constants.COLORTYPE_COLOR),
	    alpha: Boolean(colorType & constants.COLORTYPE_ALPHA),
	    bpp: bpp,
	    colorType: colorType
	  });
	
	  this._handleChunkEnd();
	};
	
	
	Parser.prototype._handlePLTE = function(length) {
	  this.read(length, this._parsePLTE.bind(this));
	};
	Parser.prototype._parsePLTE = function(data) {
	
	  this._crc.write(data);
	
	  var entries = Math.floor(data.length / 3);
	  // console.log('Palette:', entries);
	
	  for (var i = 0; i < entries; i++) {
	    this._palette.push([
	      data[i * 3],
	      data[i * 3 + 1],
	      data[i * 3 + 2],
	      0xff
	    ]);
	  }
	
	  this.palette(this._palette);
	
	  this._handleChunkEnd();
	};
	
	Parser.prototype._handleTRNS = function(length) {
	  this.read(length, this._parseTRNS.bind(this));
	};
	Parser.prototype._parseTRNS = function(data) {
	
	  this._crc.write(data);
	
	  // palette
	  if (this._colorType === constants.COLORTYPE_PALETTE_COLOR) {
	    if (this._palette.length === 0) {
	      this.error(new Error('Transparency chunk must be after palette'));
	      return;
	    }
	    if (data.length > this._palette.length) {
	      this.error(new Error('More transparent colors than palette size'));
	      return;
	    }
	    for (var i = 0; i < data.length; i++) {
	      this._palette[i][3] = data[i];
	    }
	    this.palette(this._palette);
	  }
	
	  // for colorType 0 (grayscale) and 2 (rgb)
	  // there might be one gray/color defined as transparent
	  if (this._colorType === constants.COLORTYPE_GRAYSCALE) {
	    // grey, 2 bytes
	    this.transColor([data.readUInt16BE(0)]);
	  }
	  if (this._colorType === constants.COLORTYPE_COLOR) {
	    this.transColor([data.readUInt16BE(0), data.readUInt16BE(2), data.readUInt16BE(4)]);
	  }
	
	  this._handleChunkEnd();
	};
	
	Parser.prototype._handleGAMA = function(length) {
	  this.read(length, this._parseGAMA.bind(this));
	};
	Parser.prototype._parseGAMA = function(data) {
	
	  this._crc.write(data);
	  this.gamma(data.readUInt32BE(0) / constants.GAMMA_DIVISION);
	
	  this._handleChunkEnd();
	};
	
	Parser.prototype._handleIDAT = function(length) {
	  this.read(-length, this._parseIDAT.bind(this, length));
	};
	Parser.prototype._parseIDAT = function(length, data) {
	
	  this._crc.write(data);
	
	  if (this._colorType === constants.COLORTYPE_PALETTE_COLOR && this._palette.length === 0) {
	    throw new Error('Expected palette not found');
	  }
	
	  this.inflateData(data);
	  var leftOverLength = length - data.length;
	
	  if (leftOverLength > 0) {
	    this._handleIDAT(leftOverLength);
	  }
	  else {
	    this._handleChunkEnd();
	  }
	};
	
	Parser.prototype._handleIEND = function(length) {
	  this.read(length, this._parseIEND.bind(this));
	};
	Parser.prototype._parseIEND = function(data) {
	
	  this._crc.write(data);
	
	  this._hasIEND = true;
	  this._handleChunkEnd();
	
	  if (this.finished) {
	    this.finished();
	  }
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 380 */
/***/ function(module, exports) {

	'use strict';
	
	
	module.exports = {
	
	  PNG_SIGNATURE: [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a],
	
	  TYPE_IHDR: 0x49484452,
	  TYPE_IEND: 0x49454e44,
	  TYPE_IDAT: 0x49444154,
	  TYPE_PLTE: 0x504c5445,
	  TYPE_tRNS: 0x74524e53, // eslint-disable-line camelcase
	  TYPE_gAMA: 0x67414d41, // eslint-disable-line camelcase
	
	  // color-type bits
	  COLORTYPE_GRAYSCALE: 0,
	  COLORTYPE_PALETTE: 1,
	  COLORTYPE_COLOR: 2,
	  COLORTYPE_ALPHA: 4, // e.g. grayscale and alpha
	
	  // color-type combinations
	  COLORTYPE_PALETTE_COLOR: 3,
	  COLORTYPE_COLOR_ALPHA: 6,
	
	  COLORTYPE_TO_BPP_MAP: {
	    0: 1,
	    2: 3,
	    3: 1,
	    4: 2,
	    6: 4
	  },
	
	  GAMMA_DIVISION: 100000
	};


/***/ },
/* 381 */
/***/ function(module, exports) {

	'use strict';
	
	var crcTable = [];
	
	(function() {
	  for (var i = 0; i < 256; i++) {
	    var currentCrc = i;
	    for (var j = 0; j < 8; j++) {
	      if (currentCrc & 1) {
	        currentCrc = 0xedb88320 ^ (currentCrc >>> 1);
	      }
	      else {
	        currentCrc = currentCrc >>> 1;
	      }
	    }
	    crcTable[i] = currentCrc;
	  }
	}());
	
	var CrcCalculator = module.exports = function() {
	  this._crc = -1;
	};
	
	CrcCalculator.prototype.write = function(data) {
	
	  for (var i = 0; i < data.length; i++) {
	    this._crc = crcTable[(this._crc ^ data[i]) & 0xff] ^ (this._crc >>> 8);
	  }
	  return true;
	};
	
	CrcCalculator.prototype.crc32 = function() {
	  return this._crc ^ -1;
	};
	
	
	CrcCalculator.crc32 = function(buf) {
	
	  var crc = -1;
	  for (var i = 0; i < buf.length; i++) {
	    crc = crcTable[(crc ^ buf[i]) & 0xff] ^ (crc >>> 8);
	  }
	  return crc ^ -1;
	};


/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';
	
	var interlaceUtils = __webpack_require__(377);
	
	var pixelBppMap = {
	  1: { // L
	    0: 0,
	    1: 0,
	    2: 0,
	    3: 0xff
	  },
	  2: { // LA
	    0: 0,
	    1: 0,
	    2: 0,
	    3: 1
	  },
	  3: { // RGB
	    0: 0,
	    1: 1,
	    2: 2,
	    3: 0xff
	  },
	  4: { // RGBA
	    0: 0,
	    1: 1,
	    2: 2,
	    3: 3
	  }
	};
	
	function bitRetriever(data, depth) {
	
	  var leftOver = [];
	  var i = 0;
	
	  function split() {
	    if (i === data.length) {
	      throw new Error('Ran out of data');
	    }
	    var byte = data[i];
	    i++;
	    var byte8, byte7, byte6, byte5, byte4, byte3, byte2, byte1;
	    switch (depth) {
	      default:
	        throw new Error('unrecognised depth');
	      case 16:
	        byte2 = data[i];
	        i++;
	        leftOver.push(((byte << 8) + byte2));
	        break;
	      case 4:
	        byte2 = byte & 0x0f;
	        byte1 = byte >> 4;
	        leftOver.push(byte1, byte2);
	        break;
	      case 2:
	        byte4 = byte & 3;
	        byte3 = byte >> 2 & 3;
	        byte2 = byte >> 4 & 3;
	        byte1 = byte >> 6 & 3;
	        leftOver.push(byte1, byte2, byte3, byte4);
	        break;
	      case 1:
	        byte8 = byte & 1;
	        byte7 = byte >> 1 & 1;
	        byte6 = byte >> 2 & 1;
	        byte5 = byte >> 3 & 1;
	        byte4 = byte >> 4 & 1;
	        byte3 = byte >> 5 & 1;
	        byte2 = byte >> 6 & 1;
	        byte1 = byte >> 7 & 1;
	        leftOver.push(byte1, byte2, byte3, byte4, byte5, byte6, byte7, byte8);
	        break;
	    }
	  }
	
	  return {
	    get: function(count) {
	      while (leftOver.length < count) {
	        split();
	      }
	      var returner = leftOver.slice(0, count);
	      leftOver = leftOver.slice(count);
	      return returner;
	    },
	    resetAfterLine: function() {
	      leftOver.length = 0;
	    },
	    end: function() {
	      if (i !== data.length) {
	        throw new Error('extra data found');
	      }
	    }
	  };
	}
	
	function mapImage8Bit(image, pxData, getPxPos, bpp, data, rawPos) { // eslint-disable-line max-params
	  var imageWidth = image.width;
	  var imageHeight = image.height;
	  var imagePass = image.index;
	  for (var y = 0; y < imageHeight; y++) {
	    for (var x = 0; x < imageWidth; x++) {
	      var pxPos = getPxPos(x, y, imagePass);
	
	      for (var i = 0; i < 4; i++) {
	        var idx = pixelBppMap[bpp][i];
	        if (i === data.length) {
	          throw new Error('Ran out of data');
	        }
	        pxData[pxPos + i] = idx !== 0xff ? data[idx + rawPos] : 0xff;
	      }
	      rawPos += bpp; //eslint-disable-line no-param-reassign
	    }
	  }
	  return rawPos;
	}
	
	function mapImageCustomBit(image, pxData, getPxPos, bpp, bits, maxBit) { // eslint-disable-line max-params
	  var imageWidth = image.width;
	  var imageHeight = image.height;
	  var imagePass = image.index;
	  for (var y = 0; y < imageHeight; y++) {
	    for (var x = 0; x < imageWidth; x++) {
	      var pixelData = bits.get(bpp);
	      var pxPos = getPxPos(x, y, imagePass);
	
	      for (var i = 0; i < 4; i++) {
	        var idx = pixelBppMap[bpp][i];
	        pxData[pxPos + i] = idx !== 0xff ? pixelData[idx] : maxBit;
	      }
	    }
	    bits.resetAfterLine();
	  }
	}
	
	exports.dataToBitMap = function(data, bitmapInfo) {
	
	  var width = bitmapInfo.width;
	  var height = bitmapInfo.height;
	  var depth = bitmapInfo.depth;
	  var bpp = bitmapInfo.bpp;
	  var interlace = bitmapInfo.interlace;
	
	  if (depth !== 8) {
	    var bits = bitRetriever(data, depth);
	  }
	  var pxData;
	  if (depth <= 8) {
	    pxData = new Buffer(width * height * 4);
	  }
	  else {
	    pxData = new Uint16Array(width * height * 4);
	  }
	  var maxBit = Math.pow(2, depth) - 1;
	  var rawPos = 0;
	  var images;
	  var getPxPos;
	
	  if (interlace) {
	    images = interlaceUtils.getImagePasses(width, height);
	    getPxPos = interlaceUtils.getInterlaceIterator(width, height);
	  }
	  else {
	    var nonInterlacedPxPos = 0;
	    getPxPos = function() {
	      var returner = nonInterlacedPxPos;
	      nonInterlacedPxPos += 4;
	      return returner;
	    };
	    images = [{ width: width, height: height }];
	  }
	
	  for (var imageIndex = 0; imageIndex < images.length; imageIndex++) {
	    if (depth === 8) {
	      rawPos = mapImage8Bit(images[imageIndex], pxData, getPxPos, bpp, data, rawPos);
	    }
	    else {
	      mapImageCustomBit(images[imageIndex], pxData, getPxPos, bpp, bits, maxBit);
	    }
	  }
	  if (depth === 8) {
	    if (rawPos !== data.length) {
	      throw new Error('extra data found');
	    }
	  }
	  else {
	    bits.end();
	  }
	
	  return pxData;
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';
	
	function dePalette(indata, outdata, width, height, palette) {
	  var pxPos = 0;
	  // use values from palette
	  for (var y = 0; y < height; y++) {
	    for (var x = 0; x < width; x++) {
	      var color = palette[indata[pxPos]];
	
	      if (!color) {
	        throw new Error('index ' + indata[pxPos] + ' not in palette');
	      }
	
	      for (var i = 0; i < 4; i++) {
	        outdata[pxPos + i] = color[i];
	      }
	      pxPos += 4;
	    }
	  }
	}
	
	function replaceTransparentColor(indata, outdata, width, height, transColor) {
	  var pxPos = 0;
	  for (var y = 0; y < height; y++) {
	    for (var x = 0; x < width; x++) {
	      var makeTrans = false;
	
	      if (transColor.length === 1) {
	        if (transColor[0] === indata[pxPos]) {
	          makeTrans = true;
	        }
	      }
	      else if (transColor[0] === indata[pxPos] && transColor[1] === indata[pxPos + 1] && transColor[2] === indata[pxPos + 2]) {
	        makeTrans = true;
	      }
	      if (makeTrans) {
	        for (var i = 0; i < 4; i++) {
	          outdata[pxPos + i] = 0;
	        }
	      }
	      pxPos += 4;
	    }
	  }
	}
	
	function scaleDepth(indata, outdata, width, height, depth) {
	  var maxOutSample = 255;
	  var maxInSample = Math.pow(2, depth) - 1;
	  var pxPos = 0;
	
	  for (var y = 0; y < height; y++) {
	    for (var x = 0; x < width; x++) {
	      for (var i = 0; i < 4; i++) {
	        outdata[pxPos + i] = Math.floor((indata[pxPos + i] * maxOutSample) / maxInSample + 0.5);
	      }
	      pxPos += 4;
	    }
	  }
	}
	
	module.exports = function(indata, imageData) {
	
	  var depth = imageData.depth;
	  var width = imageData.width;
	  var height = imageData.height;
	  var colorType = imageData.colorType;
	  var transColor = imageData.transColor;
	  var palette = imageData.palette;
	
	  var outdata = indata; // only different for 16 bits
	
	  if (colorType === 3) { // paletted
	    dePalette(indata, outdata, width, height, palette);
	  }
	  else {
	    if (transColor) {
	      replaceTransparentColor(indata, outdata, width, height, transColor);
	    }
	    // if it needs scaling
	    if (depth !== 8) {
	      // if we need to change the buffer size
	      if (depth === 16) {
	        outdata = new Buffer(width * height * 4);
	      }
	      scaleDepth(indata, outdata, width, height, depth);
	    }
	  }
	  return outdata;
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';
	
	var util = __webpack_require__(197);
	var Stream = __webpack_require__(287);
	var constants = __webpack_require__(380);
	var Packer = __webpack_require__(385);
	
	var PackerAsync = module.exports = function(opt) {
	  Stream.call(this);
	
	  var options = opt || {};
	
	  this._packer = new Packer(options);
	  this._deflate = this._packer.createDeflate();
	
	  this.readable = true;
	};
	util.inherits(PackerAsync, Stream);
	
	
	PackerAsync.prototype.pack = function(data, width, height, gamma) {
	  // Signature
	  this.emit('data', new Buffer(constants.PNG_SIGNATURE));
	  this.emit('data', this._packer.packIHDR(width, height));
	
	  if (gamma) {
	    this.emit('data', this._packer.packGAMA(gamma));
	  }
	
	  var filteredData = this._packer.filterData(data, width, height);
	
	  // compress it
	  this._deflate.on('error', this.emit.bind(this, 'error'));
	
	  this._deflate.on('data', function(compressedData) {
	    this.emit('data', this._packer.packIDAT(compressedData));
	  }.bind(this));
	
	  this._deflate.on('end', function() {
	    this.emit('data', this._packer.packIEND());
	    this.emit('end');
	  }.bind(this));
	
	  this._deflate.end(filteredData);
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';
	
	var constants = __webpack_require__(380);
	var CrcStream = __webpack_require__(381);
	var bitPacker = __webpack_require__(386);
	var filter = __webpack_require__(387);
	var zlib = __webpack_require__(353);
	
	var Packer = module.exports = function(options) {
	  this._options = options;
	
	  options.deflateChunkSize = options.deflateChunkSize || 32 * 1024;
	  options.deflateLevel = options.deflateLevel != null ? options.deflateLevel : 9;
	  options.deflateStrategy = options.deflateStrategy != null ? options.deflateStrategy : 3;
	  options.inputHasAlpha = options.inputHasAlpha != null ? options.inputHasAlpha : true;
	  options.deflateFactory = options.deflateFactory || zlib.createDeflate;
	  options.bitDepth = options.bitDepth || 8;
	  options.colorType = (typeof options.colorType === 'number') ? options.colorType : constants.COLORTYPE_COLOR_ALPHA;
	
	  if (options.colorType !== constants.COLORTYPE_COLOR && options.colorType !== constants.COLORTYPE_COLOR_ALPHA) {
	    throw new Error('option color type:' + options.colorType + ' is not supported at present');
	  }
	  if (options.bitDepth !== 8) {
	    throw new Error('option bit depth:' + options.bitDepth + ' is not supported at present');
	  }
	};
	
	Packer.prototype.getDeflateOptions = function() {
	  return {
	    chunkSize: this._options.deflateChunkSize,
	    level: this._options.deflateLevel,
	    strategy: this._options.deflateStrategy
	  };
	};
	
	Packer.prototype.createDeflate = function() {
	  return this._options.deflateFactory(this.getDeflateOptions());
	};
	
	Packer.prototype.filterData = function(data, width, height) {
	  // convert to correct format for filtering (e.g. right bpp and bit depth)
	  var packedData = bitPacker(data, width, height, this._options);
	
	  // filter pixel data
	  var bpp = constants.COLORTYPE_TO_BPP_MAP[this._options.colorType];
	  var filteredData = filter(packedData, width, height, this._options, bpp);
	  return filteredData;
	};
	
	Packer.prototype._packChunk = function(type, data) {
	
	  var len = (data ? data.length : 0);
	  var buf = new Buffer(len + 12);
	
	  buf.writeUInt32BE(len, 0);
	  buf.writeUInt32BE(type, 4);
	
	  if (data) {
	    data.copy(buf, 8);
	  }
	
	  buf.writeInt32BE(CrcStream.crc32(buf.slice(4, buf.length - 4)), buf.length - 4);
	  return buf;
	};
	
	Packer.prototype.packGAMA = function(gamma) {
	  var buf = new Buffer(4);
	  buf.writeUInt32BE(Math.floor(gamma * constants.GAMMA_DIVISION), 0);
	  return this._packChunk(constants.TYPE_gAMA, buf);
	};
	
	Packer.prototype.packIHDR = function(width, height) {
	
	  var buf = new Buffer(13);
	  buf.writeUInt32BE(width, 0);
	  buf.writeUInt32BE(height, 4);
	  buf[8] = this._options.bitDepth;  // Bit depth
	  buf[9] = this._options.colorType; // colorType
	  buf[10] = 0; // compression
	  buf[11] = 0; // filter
	  buf[12] = 0; // interlace
	
	  return this._packChunk(constants.TYPE_IHDR, buf);
	};
	
	Packer.prototype.packIDAT = function(data) {
	  return this._packChunk(constants.TYPE_IDAT, data);
	};
	
	Packer.prototype.packIEND = function() {
	  return this._packChunk(constants.TYPE_IEND, null);
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';
	
	var constants = __webpack_require__(380);
	
	module.exports = function(data, width, height, options) {
	  var outHasAlpha = options.colorType === constants.COLORTYPE_COLOR_ALPHA;
	  if (options.inputHasAlpha && outHasAlpha) {
	    return data;
	  }
	  if (!options.inputHasAlpha && !outHasAlpha) {
	    return data;
	  }
	
	  var outBpp = outHasAlpha ? 4 : 3;
	  var outData = new Buffer(width * height * outBpp);
	  var inBpp = options.inputHasAlpha ? 4 : 3;
	  var inIndex = 0;
	  var outIndex = 0;
	
	  var bgColor = options.bgColor || {};
	  if (bgColor.red === undefined) {
	    bgColor.red = 255;
	  }
	  if (bgColor.green === undefined) {
	    bgColor.green = 255;
	  }
	  if (bgColor.blue === undefined) {
	    bgColor.blue = 255;
	  }
	
	  for (var y = 0; y < height; y++) {
	    for (var x = 0; x < width; x++) {
	      var red = data[inIndex];
	      var green = data[inIndex + 1];
	      var blue = data[inIndex + 2];
	
	      var alpha;
	      if (options.inputHasAlpha) {
	        alpha = data[inIndex + 3];
	        if (!outHasAlpha) {
	          alpha /= 255;
	          red = Math.min(Math.max(Math.round((1 - alpha) * bgColor.red + alpha * red), 0), 255);
	          green = Math.min(Math.max(Math.round((1 - alpha) * bgColor.green + alpha * green), 0), 255);
	          blue = Math.min(Math.max(Math.round((1 - alpha) * bgColor.blue + alpha * blue), 0), 255);
	        }
	      }
	      else {
	        alpha = 255;
	      }
	
	      outData[outIndex] = red;
	      outData[outIndex + 1] = green;
	      outData[outIndex + 2] = blue;
	      if (outHasAlpha) {
	        outData[outIndex + 3] = alpha;
	      }
	
	      inIndex += inBpp;
	      outIndex += outBpp;
	    }
	  }
	
	  return outData;
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';
	
	var paethPredictor = __webpack_require__(378);
	
	function filterNone(pxData, pxPos, byteWidth, rawData, rawPos) {
	  pxData.copy(rawData, rawPos, pxPos, pxPos + byteWidth);
	}
	
	function filterSumNone(pxData, pxPos, byteWidth) {
	
	  var sum = 0;
	  var length = pxPos + byteWidth;
	
	  for (var i = pxPos; i < length; i++) {
	    sum += Math.abs(pxData[i]);
	  }
	  return sum;
	}
	
	function filterSub(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {
	
	  for (var x = 0; x < byteWidth; x++) {
	
	    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;
	    var val = pxData[pxPos + x] - left;
	
	    rawData[rawPos + x] = val;
	  }
	}
	
	function filterSumSub(pxData, pxPos, byteWidth, bpp) {
	
	  var sum = 0;
	  for (var x = 0; x < byteWidth; x++) {
	
	    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;
	    var val = pxData[pxPos + x] - left;
	
	    sum += Math.abs(val);
	  }
	
	  return sum;
	}
	
	function filterUp(pxData, pxPos, byteWidth, rawData, rawPos) {
	
	  for (var x = 0; x < byteWidth; x++) {
	
	    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;
	    var val = pxData[pxPos + x] - up;
	
	    rawData[rawPos + x] = val;
	  }
	}
	
	function filterSumUp(pxData, pxPos, byteWidth) {
	
	  var sum = 0;
	  var length = pxPos + byteWidth;
	  for (var x = pxPos; x < length; x++) {
	
	    var up = pxPos > 0 ? pxData[x - byteWidth] : 0;
	    var val = pxData[x] - up;
	
	    sum += Math.abs(val);
	  }
	
	  return sum;
	}
	
	function filterAvg(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {
	
	  for (var x = 0; x < byteWidth; x++) {
	
	    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;
	    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;
	    var val = pxData[pxPos + x] - ((left + up) >> 1);
	
	    rawData[rawPos + x] = val;
	  }
	}
	
	function filterSumAvg(pxData, pxPos, byteWidth, bpp) {
	
	  var sum = 0;
	  for (var x = 0; x < byteWidth; x++) {
	
	    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;
	    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;
	    var val = pxData[pxPos + x] - ((left + up) >> 1);
	
	    sum += Math.abs(val);
	  }
	
	  return sum;
	}
	
	function filterPaeth(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {
	
	  for (var x = 0; x < byteWidth; x++) {
	
	    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;
	    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;
	    var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;
	    var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);
	
	    rawData[rawPos + x] = val;
	  }
	}
	
	function filterSumPaeth(pxData, pxPos, byteWidth, bpp) {
	  var sum = 0;
	  for (var x = 0; x < byteWidth; x++) {
	
	    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;
	    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;
	    var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;
	    var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);
	
	    sum += Math.abs(val);
	  }
	
	  return sum;
	}
	
	var filters = {
	  0: filterNone,
	  1: filterSub,
	  2: filterUp,
	  3: filterAvg,
	  4: filterPaeth
	};
	
	var filterSums = {
	  0: filterSumNone,
	  1: filterSumSub,
	  2: filterSumUp,
	  3: filterSumAvg,
	  4: filterSumPaeth
	};
	
	module.exports = function(pxData, width, height, options, bpp) {
	
	  var filterTypes;
	  if (!('filterType' in options) || options.filterType === -1) {
	    filterTypes = [0, 1, 2, 3, 4];
	  }
	  else if (typeof options.filterType === 'number') {
	    filterTypes = [options.filterType];
	  }
	  else {
	    throw new Error('unrecognised filter types');
	  }
	
	  var byteWidth = width * bpp;
	  var rawPos = 0;
	  var pxPos = 0;
	  var rawData = new Buffer((byteWidth + 1) * height);
	  var sel = filterTypes[0];
	
	  for (var y = 0; y < height; y++) {
	
	    if (filterTypes.length > 1) {
	      // find best filter for this line (with lowest sum of values)
	      var min = Infinity;
	
	      for (var i = 0; i < filterTypes.length; i++) {
	        var sum = filterSums[filterTypes[i]](pxData, pxPos, byteWidth, bpp);
	        if (sum < min) {
	          sel = filterTypes[i];
	          min = sum;
	        }
	      }
	    }
	
	    rawData[rawPos] = sel;
	    rawPos++;
	    filters[sel](pxData, pxPos, byteWidth, rawData, rawPos, bpp);
	    rawPos += byteWidth;
	    pxPos += byteWidth;
	  }
	  return rawData;
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	var parse = __webpack_require__(389);
	var pack = __webpack_require__(392);
	
	
	exports.read = function(buffer, options) {
	
	  return parse(buffer, options || {});
	};
	
	exports.write = function(png) {
	
	  return pack(png);
	};


/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';
	
	var hasSyncZlib = true;
	var zlib = __webpack_require__(353);
	if (!zlib.deflateSync) {
	  hasSyncZlib = false;
	}
	var SyncReader = __webpack_require__(390);
	var FilterSync = __webpack_require__(391);
	var Parser = __webpack_require__(379);
	var bitmapper = __webpack_require__(382);
	var formatNormaliser = __webpack_require__(383);
	
	
	module.exports = function(buffer, options) {
	
	  if (!hasSyncZlib) {
	    throw new Error('To use the sync capability of this library in old node versions, please also add a dependency on node-zlb-backport');
	  }
	
	  var err;
	  function handleError(_err_) {
	    err = _err_;
	  }
	
	  var metaData;
	  function handleMetaData(_metaData_) {
	    metaData = _metaData_;
	  }
	
	  function handleTransColor(transColor) {
	    metaData.transColor = transColor;
	  }
	
	  function handlePalette(palette) {
	    metaData.palette = palette;
	  }
	
	  var gamma;
	  function handleGamma(_gamma_) {
	    gamma = _gamma_;
	  }
	
	  var inflateDataList = [];
	  function handleInflateData(inflatedData) {
	    inflateDataList.push(inflatedData);
	  }
	
	  var reader = new SyncReader(buffer);
	
	  var parser = new Parser(options, {
	    read: reader.read.bind(reader),
	    error: handleError,
	    metadata: handleMetaData,
	    gamma: handleGamma,
	    palette: handlePalette,
	    transColor: handleTransColor,
	    inflateData: handleInflateData
	  });
	
	  parser.start();
	  reader.process();
	
	  if (err) {
	    throw err;
	  }
	
	  //join together the inflate datas
	  var inflateData = Buffer.concat(inflateDataList);
	  inflateDataList.length = 0;
	
	  var inflatedData = zlib.inflateSync(inflateData);
	  inflateData = null;
	
	  if (!inflatedData || !inflatedData.length) {
	    throw new Error('bad png - invalid inflate data response');
	  }
	
	  var unfilteredData = FilterSync.process(inflatedData, metaData);
	  inflateData = null;
	
	  var bitmapData = bitmapper.dataToBitMap(unfilteredData, metaData);
	  unfilteredData = null;
	
	  var normalisedBitmapData = formatNormaliser(bitmapData, metaData);
	
	  metaData.data = normalisedBitmapData;
	  metaData.gamma = gamma || 0;
	
	  return metaData;
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 390 */
/***/ function(module, exports) {

	'use strict';
	
	var SyncReader = module.exports = function(buffer) {
	
	  this._buffer = buffer;
	  this._reads = [];
	};
	
	SyncReader.prototype.read = function(length, callback) {
	
	  this._reads.push({
	    length: Math.abs(length),  // if length < 0 then at most this length
	    allowLess: length < 0,
	    func: callback
	  });
	};
	
	SyncReader.prototype.process = function() {
	
	  // as long as there is any data and read requests
	  while (this._reads.length > 0 && this._buffer.length) {
	
	    var read = this._reads[0];
	
	    if (this._buffer.length && (this._buffer.length >= read.length || read.allowLess)) {
	
	      // ok there is any data so that we can satisfy this request
	      this._reads.shift(); // == read
	
	      var buf = this._buffer;
	
	      this._buffer = buf.slice(read.length);
	
	      read.func.call(this, buf.slice(0, read.length));
	
	    }
	    else {
	      break;
	    }
	
	  }
	
	  if (this._reads.length > 0) {
	    return new Error('There are some read requests waitng on finished stream');
	  }
	
	  if (this._buffer.length > 0) {
	    return new Error('unrecognised content at end of stream');
	  }
	
	};


/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';
	
	var SyncReader = __webpack_require__(390);
	var Filter = __webpack_require__(376);
	
	
	exports.process = function(inBuffer, bitmapInfo) {
	
	  var outBuffers = [];
	  var reader = new SyncReader(inBuffer);
	  var filter = new Filter(bitmapInfo, {
	    read: reader.read.bind(reader),
	    write: function(bufferPart) {
	      outBuffers.push(bufferPart);
	    },
	    complete: function() {
	    }
	  });
	
	  filter.start();
	  reader.process();
	
	  return Buffer.concat(outBuffers);
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';
	
	var hasSyncZlib = true;
	var zlib = __webpack_require__(353);
	if (!zlib.deflateSync) {
	  hasSyncZlib = false;
	}
	var constants = __webpack_require__(380);
	var Packer = __webpack_require__(385);
	
	module.exports = function(metaData, opt) {
	
	  if (!hasSyncZlib) {
	    throw new Error('To use the sync capability of this library in old node versions, please also add a dependency on node-zlb-backport');
	  }
	
	  var options = opt || {};
	
	  var packer = new Packer(options);
	
	  var chunks = [];
	
	  // Signature
	  chunks.push(new Buffer(constants.PNG_SIGNATURE));
	
	  // Header
	  chunks.push(packer.packIHDR(metaData.width, metaData.height));
	
	  if (metaData.gamma) {
	    chunks.push(packer.packGAMA(metaData.gamma));
	  }
	
	  var filteredData = packer.filterData(metaData.data, metaData.width, metaData.height);
	
	  // compress it
	  var compressedData = zlib.deflateSync(filteredData, packer.getDeflateOptions());
	  filteredData = null;
	
	  if (!compressedData || !compressedData.length) {
	    throw new Error('bad png - invalid compressed data response');
	  }
	  chunks.push(packer.packIDAT(compressedData));
	
	  // End
	  chunks.push(packer.packIEND());
	
	  return Buffer.concat(chunks);
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(282).Buffer))

/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	"use strict"
	
	var compile = __webpack_require__(324)
	
	var EmptyProc = {
	  body: "",
	  args: [],
	  thisVars: [],
	  localVars: []
	}
	
	function fixup(x) {
	  if(!x) {
	    return EmptyProc
	  }
	  for(var i=0; i<x.args.length; ++i) {
	    var a = x.args[i]
	    if(i === 0) {
	      x.args[i] = {name: a, lvalue:true, rvalue: !!x.rvalue, count:x.count||1 }
	    } else {
	      x.args[i] = {name: a, lvalue:false, rvalue:true, count: 1}
	    }
	  }
	  if(!x.thisVars) {
	    x.thisVars = []
	  }
	  if(!x.localVars) {
	    x.localVars = []
	  }
	  return x
	}
	
	function pcompile(user_args) {
	  return compile({
	    args:     user_args.args,
	    pre:      fixup(user_args.pre),
	    body:     fixup(user_args.body),
	    post:     fixup(user_args.proc),
	    funcName: user_args.funcName
	  })
	}
	
	function makeOp(user_args) {
	  var args = []
	  for(var i=0; i<user_args.args.length; ++i) {
	    args.push("a"+i)
	  }
	  var wrapper = new Function("P", [
	    "return function ", user_args.funcName, "_ndarrayops(", args.join(","), ") {P(", args.join(","), ");return a0}"
	  ].join(""))
	  return wrapper(pcompile(user_args))
	}
	
	var assign_ops = {
	  add:  "+",
	  sub:  "-",
	  mul:  "*",
	  div:  "/",
	  mod:  "%",
	  band: "&",
	  bor:  "|",
	  bxor: "^",
	  lshift: "<<",
	  rshift: ">>",
	  rrshift: ">>>"
	}
	;(function(){
	  for(var id in assign_ops) {
	    var op = assign_ops[id]
	    exports[id] = makeOp({
	      args: ["array","array","array"],
	      body: {args:["a","b","c"],
	             body: "a=b"+op+"c"},
	      funcName: id
	    })
	    exports[id+"eq"] = makeOp({
	      args: ["array","array"],
	      body: {args:["a","b"],
	             body:"a"+op+"=b"},
	      rvalue: true,
	      funcName: id+"eq"
	    })
	    exports[id+"s"] = makeOp({
	      args: ["array", "array", "scalar"],
	      body: {args:["a","b","s"],
	             body:"a=b"+op+"s"},
	      funcName: id+"s"
	    })
	    exports[id+"seq"] = makeOp({
	      args: ["array","scalar"],
	      body: {args:["a","s"],
	             body:"a"+op+"=s"},
	      rvalue: true,
	      funcName: id+"seq"
	    })
	  }
	})();
	
	var unary_ops = {
	  not: "!",
	  bnot: "~",
	  neg: "-",
	  recip: "1.0/"
	}
	;(function(){
	  for(var id in unary_ops) {
	    var op = unary_ops[id]
	    exports[id] = makeOp({
	      args: ["array", "array"],
	      body: {args:["a","b"],
	             body:"a="+op+"b"},
	      funcName: id
	    })
	    exports[id+"eq"] = makeOp({
	      args: ["array"],
	      body: {args:["a"],
	             body:"a="+op+"a"},
	      rvalue: true,
	      count: 2,
	      funcName: id+"eq"
	    })
	  }
	})();
	
	var binary_ops = {
	  and: "&&",
	  or: "||",
	  eq: "===",
	  neq: "!==",
	  lt: "<",
	  gt: ">",
	  leq: "<=",
	  geq: ">="
	}
	;(function() {
	  for(var id in binary_ops) {
	    var op = binary_ops[id]
	    exports[id] = makeOp({
	      args: ["array","array","array"],
	      body: {args:["a", "b", "c"],
	             body:"a=b"+op+"c"},
	      funcName: id
	    })
	    exports[id+"s"] = makeOp({
	      args: ["array","array","scalar"],
	      body: {args:["a", "b", "s"],
	             body:"a=b"+op+"s"},
	      funcName: id+"s"
	    })
	    exports[id+"eq"] = makeOp({
	      args: ["array", "array"],
	      body: {args:["a", "b"],
	             body:"a=a"+op+"b"},
	      rvalue:true,
	      count:2,
	      funcName: id+"eq"
	    })
	    exports[id+"seq"] = makeOp({
	      args: ["array", "scalar"],
	      body: {args:["a","s"],
	             body:"a=a"+op+"s"},
	      rvalue:true,
	      count:2,
	      funcName: id+"seq"
	    })
	  }
	})();
	
	var math_unary = [
	  "abs",
	  "acos",
	  "asin",
	  "atan",
	  "ceil",
	  "cos",
	  "exp",
	  "floor",
	  "log",
	  "round",
	  "sin",
	  "sqrt",
	  "tan"
	]
	;(function() {
	  for(var i=0; i<math_unary.length; ++i) {
	    var f = math_unary[i]
	    exports[f] = makeOp({
	                    args: ["array", "array"],
	                    pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                    body: {args:["a","b"], body:"a=this_f(b)", thisVars:["this_f"]},
	                    funcName: f
	                  })
	    exports[f+"eq"] = makeOp({
	                      args: ["array"],
	                      pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                      body: {args: ["a"], body:"a=this_f(a)", thisVars:["this_f"]},
	                      rvalue: true,
	                      count: 2,
	                      funcName: f+"eq"
	                    })
	  }
	})();
	
	var math_comm = [
	  "max",
	  "min",
	  "atan2",
	  "pow"
	]
	;(function(){
	  for(var i=0; i<math_comm.length; ++i) {
	    var f= math_comm[i]
	    exports[f] = makeOp({
	                  args:["array", "array", "array"],
	                  pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                  body: {args:["a","b","c"], body:"a=this_f(b,c)", thisVars:["this_f"]},
	                  funcName: f
	                })
	    exports[f+"s"] = makeOp({
	                  args:["array", "array", "scalar"],
	                  pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                  body: {args:["a","b","c"], body:"a=this_f(b,c)", thisVars:["this_f"]},
	                  funcName: f+"s"
	                  })
	    exports[f+"eq"] = makeOp({ args:["array", "array"],
	                  pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                  body: {args:["a","b"], body:"a=this_f(a,b)", thisVars:["this_f"]},
	                  rvalue: true,
	                  count: 2,
	                  funcName: f+"eq"
	                  })
	    exports[f+"seq"] = makeOp({ args:["array", "scalar"],
	                  pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                  body: {args:["a","b"], body:"a=this_f(a,b)", thisVars:["this_f"]},
	                  rvalue:true,
	                  count:2,
	                  funcName: f+"seq"
	                  })
	  }
	})();
	
	var math_noncomm = [
	  "atan2",
	  "pow"
	]
	;(function(){
	  for(var i=0; i<math_noncomm.length; ++i) {
	    var f= math_noncomm[i]
	    exports[f+"op"] = makeOp({
	                  args:["array", "array", "array"],
	                  pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                  body: {args:["a","b","c"], body:"a=this_f(c,b)", thisVars:["this_f"]},
	                  funcName: f+"op"
	                })
	    exports[f+"ops"] = makeOp({
	                  args:["array", "array", "scalar"],
	                  pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                  body: {args:["a","b","c"], body:"a=this_f(c,b)", thisVars:["this_f"]},
	                  funcName: f+"ops"
	                  })
	    exports[f+"opeq"] = makeOp({ args:["array", "array"],
	                  pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                  body: {args:["a","b"], body:"a=this_f(b,a)", thisVars:["this_f"]},
	                  rvalue: true,
	                  count: 2,
	                  funcName: f+"opeq"
	                  })
	    exports[f+"opseq"] = makeOp({ args:["array", "scalar"],
	                  pre: {args:[], body:"this_f=Math."+f, thisVars:["this_f"]},
	                  body: {args:["a","b"], body:"a=this_f(b,a)", thisVars:["this_f"]},
	                  rvalue:true,
	                  count:2,
	                  funcName: f+"opseq"
	                  })
	  }
	})();
	
	exports.any = compile({
	  args:["array"],
	  pre: EmptyProc,
	  body: {args:[{name:"a", lvalue:false, rvalue:true, count:1}], body: "if(a){return true}", localVars: [], thisVars: []},
	  post: {args:[], localVars:[], thisVars:[], body:"return false"},
	  funcName: "any"
	})
	
	exports.all = compile({
	  args:["array"],
	  pre: EmptyProc,
	  body: {args:[{name:"x", lvalue:false, rvalue:true, count:1}], body: "if(!x){return false}", localVars: [], thisVars: []},
	  post: {args:[], localVars:[], thisVars:[], body:"return true"},
	  funcName: "all"
	})
	
	exports.sum = compile({
	  args:["array"],
	  pre: {args:[], localVars:[], thisVars:["this_s"], body:"this_s=0"},
	  body: {args:[{name:"a", lvalue:false, rvalue:true, count:1}], body: "this_s+=a", localVars: [], thisVars: ["this_s"]},
	  post: {args:[], localVars:[], thisVars:["this_s"], body:"return this_s"},
	  funcName: "sum"
	})
	
	exports.prod = compile({
	  args:["array"],
	  pre: {args:[], localVars:[], thisVars:["this_s"], body:"this_s=1"},
	  body: {args:[{name:"a", lvalue:false, rvalue:true, count:1}], body: "this_s*=a", localVars: [], thisVars: ["this_s"]},
	  post: {args:[], localVars:[], thisVars:["this_s"], body:"return this_s"},
	  funcName: "prod"
	})
	
	exports.norm2squared = compile({
	  args:["array"],
	  pre: {args:[], localVars:[], thisVars:["this_s"], body:"this_s=0"},
	  body: {args:[{name:"a", lvalue:false, rvalue:true, count:2}], body: "this_s+=a*a", localVars: [], thisVars: ["this_s"]},
	  post: {args:[], localVars:[], thisVars:["this_s"], body:"return this_s"},
	  funcName: "norm2squared"
	})
	  
	exports.norm2 = compile({
	  args:["array"],
	  pre: {args:[], localVars:[], thisVars:["this_s"], body:"this_s=0"},
	  body: {args:[{name:"a", lvalue:false, rvalue:true, count:2}], body: "this_s+=a*a", localVars: [], thisVars: ["this_s"]},
	  post: {args:[], localVars:[], thisVars:["this_s"], body:"return Math.sqrt(this_s)"},
	  funcName: "norm2"
	})
	  
	
	exports.norminf = compile({
	  args:["array"],
	  pre: {args:[], localVars:[], thisVars:["this_s"], body:"this_s=0"},
	  body: {args:[{name:"a", lvalue:false, rvalue:true, count:4}], body:"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}", localVars: [], thisVars: ["this_s"]},
	  post: {args:[], localVars:[], thisVars:["this_s"], body:"return this_s"},
	  funcName: "norminf"
	})
	
	exports.norm1 = compile({
	  args:["array"],
	  pre: {args:[], localVars:[], thisVars:["this_s"], body:"this_s=0"},
	  body: {args:[{name:"a", lvalue:false, rvalue:true, count:3}], body: "this_s+=a<0?-a:a", localVars: [], thisVars: ["this_s"]},
	  post: {args:[], localVars:[], thisVars:["this_s"], body:"return this_s"},
	  funcName: "norm1"
	})
	
	exports.sup = compile({
	  args: [ "array" ],
	  pre:
	   { body: "this_h=-Infinity",
	     args: [],
	     thisVars: [ "this_h" ],
	     localVars: [] },
	  body:
	   { body: "if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_",
	     args: [{"name":"_inline_1_arg0_","lvalue":false,"rvalue":true,"count":2} ],
	     thisVars: [ "this_h" ],
	     localVars: [] },
	  post:
	   { body: "return this_h",
	     args: [],
	     thisVars: [ "this_h" ],
	     localVars: [] }
	 })
	
	exports.inf = compile({
	  args: [ "array" ],
	  pre:
	   { body: "this_h=Infinity",
	     args: [],
	     thisVars: [ "this_h" ],
	     localVars: [] },
	  body:
	   { body: "if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_",
	     args: [{"name":"_inline_1_arg0_","lvalue":false,"rvalue":true,"count":2} ],
	     thisVars: [ "this_h" ],
	     localVars: [] },
	  post:
	   { body: "return this_h",
	     args: [],
	     thisVars: [ "this_h" ],
	     localVars: [] }
	 })
	
	exports.argmin = compile({
	  args:["index","array","shape"],
	  pre:{
	    body:"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}",
	    args:[
	      {name:"_inline_0_arg0_",lvalue:false,rvalue:false,count:0},
	      {name:"_inline_0_arg1_",lvalue:false,rvalue:false,count:0},
	      {name:"_inline_0_arg2_",lvalue:false,rvalue:true,count:1}
	      ],
	    thisVars:["this_i","this_v"],
	    localVars:[]},
	  body:{
	    body:"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",
	    args:[
	      {name:"_inline_1_arg0_",lvalue:false,rvalue:true,count:2},
	      {name:"_inline_1_arg1_",lvalue:false,rvalue:true,count:2}],
	    thisVars:["this_i","this_v"],
	    localVars:["_inline_1_k"]},
	  post:{
	    body:"{return this_i}",
	    args:[],
	    thisVars:["this_i"],
	    localVars:[]}
	})
	
	exports.argmax = compile({
	  args:["index","array","shape"],
	  pre:{
	    body:"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}",
	    args:[
	      {name:"_inline_0_arg0_",lvalue:false,rvalue:false,count:0},
	      {name:"_inline_0_arg1_",lvalue:false,rvalue:false,count:0},
	      {name:"_inline_0_arg2_",lvalue:false,rvalue:true,count:1}
	      ],
	    thisVars:["this_i","this_v"],
	    localVars:[]},
	  body:{
	    body:"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",
	    args:[
	      {name:"_inline_1_arg0_",lvalue:false,rvalue:true,count:2},
	      {name:"_inline_1_arg1_",lvalue:false,rvalue:true,count:2}],
	    thisVars:["this_i","this_v"],
	    localVars:["_inline_1_k"]},
	  post:{
	    body:"{return this_i}",
	    args:[],
	    thisVars:["this_i"],
	    localVars:[]}
	})  
	
	exports.random = makeOp({
	  args: ["array"],
	  pre: {args:[], body:"this_f=Math.random", thisVars:["this_f"]},
	  body: {args: ["a"], body:"a=this_f()", thisVars:["this_f"]},
	  funcName: "random"
	})
	
	exports.assign = makeOp({
	  args:["array", "array"],
	  body: {args:["a", "b"], body:"a=b"},
	  funcName: "assign" })
	
	exports.assigns = makeOp({
	  args:["array", "scalar"],
	  body: {args:["a", "b"], body:"a=b"},
	  funcName: "assigns" })
	
	
	exports.equals = compile({
	  args:["array", "array"],
	  pre: EmptyProc,
	  body: {args:[{name:"x", lvalue:false, rvalue:true, count:1},
	               {name:"y", lvalue:false, rvalue:true, count:1}], 
	        body: "if(x!==y){return false}", 
	        localVars: [], 
	        thisVars: []},
	  post: {args:[], localVars:[], thisVars:[], body:"return true"},
	  funcName: "equals"
	})
	
	


/***/ },
/* 394 */
/***/ function(module, exports) {



/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.loadFiles = loadFiles;
	exports.loadImages = loadImages;
	exports.loadTextures = loadTextures;
	exports.loadProgram = loadProgram;
	exports.loadModel = loadModel;
	exports.parseModel = parseModel;
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _platform = __webpack_require__(278);
	
	var _webgl = __webpack_require__(187);
	
	var _core = __webpack_require__(258);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /* eslint-disable guard-for-in, complexity, no-try-catch */
	
	
	function noop() {}
	
	/*
	 * Loads (Requests) multiple files asynchronously
	 */
	function loadFiles(_ref) {
	  var urls = _ref.urls,
	      _ref$onProgress = _ref.onProgress,
	      onProgress = _ref$onProgress === undefined ? noop : _ref$onProgress,
	      opts = _objectWithoutProperties(_ref, ['urls', 'onProgress']);
	
	  (0, _assert2.default)(urls.every(function (url) {
	    return typeof url === 'string';
	  }), 'loadImages: {urls} must be array of strings');
	  var count = 0;
	  return Promise.all(urls.map(function (url) {
	    var promise = (0, _platform.loadFile)(_extends({ url: url }, opts));
	    promise.then(function (file) {
	      return onProgress({
	        progress: ++count / urls.length,
	        count: count,
	        total: urls.length,
	        url: url
	      });
	    });
	    return promise;
	  }));
	}
	
	/*
	 * Loads (requests) multiple images asynchronously
	 */
	function loadImages(_ref2) {
	  var urls = _ref2.urls,
	      _ref2$onProgress = _ref2.onProgress,
	      onProgress = _ref2$onProgress === undefined ? noop : _ref2$onProgress,
	      opts = _objectWithoutProperties(_ref2, ['urls', 'onProgress']);
	
	  (0, _assert2.default)(urls.every(function (url) {
	    return typeof url === 'string';
	  }), 'loadImages: {urls} must be array of strings');
	  var count = 0;
	  return Promise.all(urls.map(function (url) {
	    var promise = (0, _platform.loadImage)(url);
	    promise.then(function (file) {
	      return onProgress({
	        progress: ++count / urls.length,
	        count: count,
	        total: urls.length,
	        url: url
	      });
	    });
	    return promise;
	  }));
	}
	
	function loadTextures(gl, _ref3) {
	  var urls = _ref3.urls,
	      _ref3$onProgress = _ref3.onProgress,
	      onProgress = _ref3$onProgress === undefined ? noop : _ref3$onProgress,
	      opts = _objectWithoutProperties(_ref3, ['urls', 'onProgress']);
	
	  (0, _assert2.default)(urls.every(function (url) {
	    return typeof url === 'string';
	  }), 'loadTextures: {urls} must be array of strings');
	  return loadImages(_extends({ urls: urls, onProgress: onProgress }, opts)).then(function (images) {
	    return images.map(function (img, i) {
	      var params = Array.isArray(opts.parameters) ? opts.parameters[i] : opts.parameters;
	      params = params === undefined ? {} : params;
	      return new _webgl.Texture2D(gl, _extends({
	        id: urls[i]
	      }, params, {
	        data: img
	      }));
	    });
	  });
	}
	
	function loadProgram(gl, _ref4) {
	  var vs = _ref4.vs,
	      fs = _ref4.fs,
	      _ref4$onProgress = _ref4.onProgress,
	      onProgress = _ref4$onProgress === undefined ? noop : _ref4$onProgress,
	      opts = _objectWithoutProperties(_ref4, ['vs', 'fs', 'onProgress']);
	
	  return loadFiles(_extends({ urls: [vs, fs], onProgress: onProgress }, opts)).then(function (_ref5) {
	    var _ref6 = _slicedToArray(_ref5, 2),
	        vsText = _ref6[0],
	        fsText = _ref6[1];
	
	    return new _webgl.Program(gl, _extends({ vs: vsText, fs: fsText }, opts));
	  });
	}
	
	// Loads a simple JSON format
	function loadModel(gl, _ref7) {
	  var url = _ref7.url,
	      _ref7$onProgress = _ref7.onProgress,
	      onProgress = _ref7$onProgress === undefined ? noop : _ref7$onProgress,
	      opts = _objectWithoutProperties(_ref7, ['url', 'onProgress']);
	
	  return loadFiles(_extends({ urls: [url], onProgress: onProgress }, opts)).then(function (_ref8) {
	    var _ref9 = _slicedToArray(_ref8, 1),
	        file = _ref9[0];
	
	    return parseModel(gl, _extends({ file: file }, opts));
	  });
	}
	
	function parseModel(gl, _ref10) {
	  var file = _ref10.file,
	      _ref10$program = _ref10.program,
	      program = _ref10$program === undefined ? new _webgl.Program(gl) : _ref10$program,
	      opts = _objectWithoutProperties(_ref10, ['file', 'program']);
	
	  var json = typeof file === 'string' ? parseJSON(file) : file;
	  // Remove any attributes so that we can create a geometry
	  // TODO - change format to put these in geometry sub object?
	  var attributes = {};
	  var modelOptions = {};
	  for (var key in json) {
	    var value = json[key];
	    if (Array.isArray(value)) {
	      attributes[key] = key === 'indices' ? new Uint16Array(value) : new Float32Array(value);
	    } else {
	      modelOptions[key] = value;
	    }
	  }
	
	  return new _core.Model(_extends({
	    program: program,
	    geometry: new _core.Geometry({ attributes: attributes })
	  }, modelOptions, opts));
	}
	
	function parseJSON(file) {
	  try {
	    return JSON.parse(file);
	  } catch (error) {
	    throw new Error('Failed to parse JSON: ' + error);
	  }
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pby9sb2FkLWZpbGVzLmpzIl0sIm5hbWVzIjpbImxvYWRGaWxlcyIsImxvYWRJbWFnZXMiLCJsb2FkVGV4dHVyZXMiLCJsb2FkUHJvZ3JhbSIsImxvYWRNb2RlbCIsInBhcnNlTW9kZWwiLCJub29wIiwidXJscyIsIm9uUHJvZ3Jlc3MiLCJvcHRzIiwiZXZlcnkiLCJ1cmwiLCJjb3VudCIsIlByb21pc2UiLCJhbGwiLCJtYXAiLCJwcm9taXNlIiwidGhlbiIsInByb2dyZXNzIiwibGVuZ3RoIiwidG90YWwiLCJnbCIsImltYWdlcyIsImltZyIsImkiLCJwYXJhbXMiLCJBcnJheSIsImlzQXJyYXkiLCJwYXJhbWV0ZXJzIiwidW5kZWZpbmVkIiwiaWQiLCJkYXRhIiwidnMiLCJmcyIsInZzVGV4dCIsImZzVGV4dCIsImZpbGUiLCJwcm9ncmFtIiwianNvbiIsInBhcnNlSlNPTiIsImF0dHJpYnV0ZXMiLCJtb2RlbE9wdGlvbnMiLCJrZXkiLCJ2YWx1ZSIsIlVpbnQxNkFycmF5IiwiRmxvYXQzMkFycmF5IiwiZ2VvbWV0cnkiLCJKU09OIiwicGFyc2UiLCJlcnJvciIsIkVycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O1FBV2dCQSxTLEdBQUFBLFM7UUFxQkFDLFUsR0FBQUEsVTtRQWtCQUMsWSxHQUFBQSxZO1FBZ0JBQyxXLEdBQUFBLFc7UUFRQUMsUyxHQUFBQSxTO1FBU0FDLFUsR0FBQUEsVTs7QUFsRmhCOzs7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Nk5BSkE7OztBQU1BLFNBQVNDLElBQVQsR0FBZ0IsQ0FBRTs7QUFFbEI7OztBQUdPLFNBQVNOLFNBQVQsT0FBdUQ7QUFBQSxNQUFuQ08sSUFBbUMsUUFBbkNBLElBQW1DO0FBQUEsNkJBQTdCQyxVQUE2QjtBQUFBLE1BQTdCQSxVQUE2QixtQ0FBaEJGLElBQWdCO0FBQUEsTUFBUEcsSUFBTzs7QUFDNUQsd0JBQU9GLEtBQUtHLEtBQUwsQ0FBVztBQUFBLFdBQU8sT0FBT0MsR0FBUCxLQUFlLFFBQXRCO0FBQUEsR0FBWCxDQUFQLEVBQ0UsNkNBREY7QUFFQSxNQUFJQyxRQUFRLENBQVo7QUFDQSxTQUFPQyxRQUFRQyxHQUFSLENBQVlQLEtBQUtRLEdBQUwsQ0FDakIsZUFBTztBQUNMLFFBQU1DLFVBQVUsbUNBQVVMLFFBQVYsSUFBa0JGLElBQWxCLEVBQWhCO0FBQ0FPLFlBQVFDLElBQVIsQ0FBYTtBQUFBLGFBQVFULFdBQVc7QUFDOUJVLGtCQUFVLEVBQUVOLEtBQUYsR0FBVUwsS0FBS1ksTUFESztBQUU5QlAsb0JBRjhCO0FBRzlCUSxlQUFPYixLQUFLWSxNQUhrQjtBQUk5QlI7QUFKOEIsT0FBWCxDQUFSO0FBQUEsS0FBYjtBQU1BLFdBQU9LLE9BQVA7QUFDRCxHQVZnQixDQUFaLENBQVA7QUFZRDs7QUFFRDs7O0FBR08sU0FBU2YsVUFBVCxRQUF3RDtBQUFBLE1BQW5DTSxJQUFtQyxTQUFuQ0EsSUFBbUM7QUFBQSwrQkFBN0JDLFVBQTZCO0FBQUEsTUFBN0JBLFVBQTZCLG9DQUFoQkYsSUFBZ0I7QUFBQSxNQUFQRyxJQUFPOztBQUM3RCx3QkFBT0YsS0FBS0csS0FBTCxDQUFXO0FBQUEsV0FBTyxPQUFPQyxHQUFQLEtBQWUsUUFBdEI7QUFBQSxHQUFYLENBQVAsRUFDRSw2Q0FERjtBQUVBLE1BQUlDLFFBQVEsQ0FBWjtBQUNBLFNBQU9DLFFBQVFDLEdBQVIsQ0FBWVAsS0FBS1EsR0FBTCxDQUNqQixlQUFPO0FBQ0wsUUFBTUMsVUFBVSx5QkFBVUwsR0FBVixDQUFoQjtBQUNBSyxZQUFRQyxJQUFSLENBQWE7QUFBQSxhQUFRVCxXQUFXO0FBQzlCVSxrQkFBVSxFQUFFTixLQUFGLEdBQVVMLEtBQUtZLE1BREs7QUFFOUJQLG9CQUY4QjtBQUc5QlEsZUFBT2IsS0FBS1ksTUFIa0I7QUFJOUJSO0FBSjhCLE9BQVgsQ0FBUjtBQUFBLEtBQWI7QUFNQSxXQUFPSyxPQUFQO0FBQ0QsR0FWZ0IsQ0FBWixDQUFQO0FBWUQ7O0FBRU0sU0FBU2QsWUFBVCxDQUFzQm1CLEVBQXRCLFNBQThEO0FBQUEsTUFBbkNkLElBQW1DLFNBQW5DQSxJQUFtQztBQUFBLCtCQUE3QkMsVUFBNkI7QUFBQSxNQUE3QkEsVUFBNkIsb0NBQWhCRixJQUFnQjtBQUFBLE1BQVBHLElBQU87O0FBQ25FLHdCQUFPRixLQUFLRyxLQUFMLENBQVc7QUFBQSxXQUFPLE9BQU9DLEdBQVAsS0FBZSxRQUF0QjtBQUFBLEdBQVgsQ0FBUCxFQUNFLCtDQURGO0FBRUEsU0FBT1Ysc0JBQVlNLFVBQVosRUFBa0JDLHNCQUFsQixJQUFpQ0MsSUFBakMsR0FDTlEsSUFETSxDQUNEO0FBQUEsV0FBVUssT0FBT1AsR0FBUCxDQUFXLFVBQUNRLEdBQUQsRUFBTUMsQ0FBTixFQUFZO0FBQ3JDLFVBQUlDLFNBQVNDLE1BQU1DLE9BQU4sQ0FBY2xCLEtBQUttQixVQUFuQixJQUNYbkIsS0FBS21CLFVBQUwsQ0FBZ0JKLENBQWhCLENBRFcsR0FDVWYsS0FBS21CLFVBRDVCO0FBRUFILGVBQVNBLFdBQVdJLFNBQVgsR0FBdUIsRUFBdkIsR0FBNEJKLE1BQXJDO0FBQ0EsYUFBTyxxQkFBY0osRUFBZDtBQUNMUyxZQUFJdkIsS0FBS2lCLENBQUw7QUFEQyxTQUVGQyxNQUZFO0FBR0xNLGNBQU1SO0FBSEQsU0FBUDtBQUtELEtBVGUsQ0FBVjtBQUFBLEdBREMsQ0FBUDtBQVdEOztBQUVNLFNBQVNwQixXQUFULENBQXFCa0IsRUFBckIsU0FBK0Q7QUFBQSxNQUFyQ1csRUFBcUMsU0FBckNBLEVBQXFDO0FBQUEsTUFBakNDLEVBQWlDLFNBQWpDQSxFQUFpQztBQUFBLCtCQUE3QnpCLFVBQTZCO0FBQUEsTUFBN0JBLFVBQTZCLG9DQUFoQkYsSUFBZ0I7QUFBQSxNQUFQRyxJQUFPOztBQUNwRSxTQUFPVCxxQkFBV08sTUFBTSxDQUFDeUIsRUFBRCxFQUFLQyxFQUFMLENBQWpCLEVBQTJCekIsc0JBQTNCLElBQTBDQyxJQUExQyxHQUNOUSxJQURNLENBRUw7QUFBQTtBQUFBLFFBQUVpQixNQUFGO0FBQUEsUUFBVUMsTUFBVjs7QUFBQSxXQUFzQixtQkFBWWQsRUFBWixhQUFpQlcsSUFBSUUsTUFBckIsRUFBNkJELElBQUlFLE1BQWpDLElBQTRDMUIsSUFBNUMsRUFBdEI7QUFBQSxHQUZLLENBQVA7QUFJRDs7QUFFRDtBQUNPLFNBQVNMLFNBQVQsQ0FBbUJpQixFQUFuQixTQUlKO0FBQUEsTUFIRFYsR0FHQyxTQUhEQSxHQUdDO0FBQUEsK0JBRkRILFVBRUM7QUFBQSxNQUZEQSxVQUVDLG9DQUZZRixJQUVaO0FBQUEsTUFERUcsSUFDRjs7QUFDRCxTQUFPVCxxQkFBV08sTUFBTSxDQUFDSSxHQUFELENBQWpCLEVBQXdCSCxzQkFBeEIsSUFBdUNDLElBQXZDLEdBQ05RLElBRE0sQ0FDRDtBQUFBO0FBQUEsUUFBRW1CLElBQUY7O0FBQUEsV0FBWS9CLFdBQVdnQixFQUFYLGFBQWdCZSxVQUFoQixJQUF5QjNCLElBQXpCLEVBQVo7QUFBQSxHQURDLENBQVA7QUFFRDs7QUFFTSxTQUFTSixVQUFULENBQW9CZ0IsRUFBcEIsVUFJSjtBQUFBLE1BSERlLElBR0MsVUFIREEsSUFHQztBQUFBLDhCQUZEQyxPQUVDO0FBQUEsTUFGREEsT0FFQyxrQ0FGUyxtQkFBWWhCLEVBQVosQ0FFVDtBQUFBLE1BREVaLElBQ0Y7O0FBQ0QsTUFBTTZCLE9BQU8sT0FBT0YsSUFBUCxLQUFnQixRQUFoQixHQUEyQkcsVUFBVUgsSUFBVixDQUEzQixHQUE2Q0EsSUFBMUQ7QUFDQTtBQUNBO0FBQ0EsTUFBTUksYUFBYSxFQUFuQjtBQUNBLE1BQU1DLGVBQWUsRUFBckI7QUFDQSxPQUFLLElBQU1DLEdBQVgsSUFBa0JKLElBQWxCLEVBQXdCO0FBQ3RCLFFBQU1LLFFBQVFMLEtBQUtJLEdBQUwsQ0FBZDtBQUNBLFFBQUloQixNQUFNQyxPQUFOLENBQWNnQixLQUFkLENBQUosRUFBMEI7QUFDeEJILGlCQUFXRSxHQUFYLElBQWtCQSxRQUFRLFNBQVIsR0FDaEIsSUFBSUUsV0FBSixDQUFnQkQsS0FBaEIsQ0FEZ0IsR0FDUyxJQUFJRSxZQUFKLENBQWlCRixLQUFqQixDQUQzQjtBQUVELEtBSEQsTUFHTztBQUNMRixtQkFBYUMsR0FBYixJQUFvQkMsS0FBcEI7QUFDRDtBQUNGOztBQUVELFNBQU87QUFDTE4sb0JBREs7QUFFTFMsY0FBVSxtQkFBYSxFQUFDTixzQkFBRCxFQUFiO0FBRkwsS0FHRkMsWUFIRSxFQUlGaEMsSUFKRSxFQUFQO0FBTUQ7O0FBRUQsU0FBUzhCLFNBQVQsQ0FBbUJILElBQW5CLEVBQXlCO0FBQ3ZCLE1BQUk7QUFDRixXQUFPVyxLQUFLQyxLQUFMLENBQVdaLElBQVgsQ0FBUDtBQUNELEdBRkQsQ0FFRSxPQUFPYSxLQUFQLEVBQWM7QUFDZCxVQUFNLElBQUlDLEtBQUosNEJBQW1DRCxLQUFuQyxDQUFOO0FBQ0Q7QUFDRiIsImZpbGUiOiJsb2FkLWZpbGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgZ3VhcmQtZm9yLWluLCBjb21wbGV4aXR5LCBuby10cnktY2F0Y2ggKi9cbmltcG9ydCBhc3NlcnQgZnJvbSAnYXNzZXJ0JztcbmltcG9ydCB7bG9hZEZpbGUsIGxvYWRJbWFnZX0gZnJvbSAnLi9wbGF0Zm9ybSc7XG5pbXBvcnQge1Byb2dyYW0sIFRleHR1cmUyRH0gZnJvbSAnLi4vd2ViZ2wnO1xuaW1wb3J0IHtHZW9tZXRyeSwgTW9kZWx9IGZyb20gJy4uL2NvcmUnO1xuXG5mdW5jdGlvbiBub29wKCkge31cblxuLypcbiAqIExvYWRzIChSZXF1ZXN0cykgbXVsdGlwbGUgZmlsZXMgYXN5bmNocm9ub3VzbHlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxvYWRGaWxlcyh7dXJscywgb25Qcm9ncmVzcyA9IG5vb3AsIC4uLm9wdHN9KSB7XG4gIGFzc2VydCh1cmxzLmV2ZXJ5KHVybCA9PiB0eXBlb2YgdXJsID09PSAnc3RyaW5nJyksXG4gICAgJ2xvYWRJbWFnZXM6IHt1cmxzfSBtdXN0IGJlIGFycmF5IG9mIHN0cmluZ3MnKTtcbiAgbGV0IGNvdW50ID0gMDtcbiAgcmV0dXJuIFByb21pc2UuYWxsKHVybHMubWFwKFxuICAgIHVybCA9PiB7XG4gICAgICBjb25zdCBwcm9taXNlID0gbG9hZEZpbGUoe3VybCwgLi4ub3B0c30pO1xuICAgICAgcHJvbWlzZS50aGVuKGZpbGUgPT4gb25Qcm9ncmVzcyh7XG4gICAgICAgIHByb2dyZXNzOiArK2NvdW50IC8gdXJscy5sZW5ndGgsXG4gICAgICAgIGNvdW50LFxuICAgICAgICB0b3RhbDogdXJscy5sZW5ndGgsXG4gICAgICAgIHVybFxuICAgICAgfSkpO1xuICAgICAgcmV0dXJuIHByb21pc2U7XG4gICAgfVxuICApKTtcbn1cblxuLypcbiAqIExvYWRzIChyZXF1ZXN0cykgbXVsdGlwbGUgaW1hZ2VzIGFzeW5jaHJvbm91c2x5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsb2FkSW1hZ2VzKHt1cmxzLCBvblByb2dyZXNzID0gbm9vcCwgLi4ub3B0c30pIHtcbiAgYXNzZXJ0KHVybHMuZXZlcnkodXJsID0+IHR5cGVvZiB1cmwgPT09ICdzdHJpbmcnKSxcbiAgICAnbG9hZEltYWdlczoge3VybHN9IG11c3QgYmUgYXJyYXkgb2Ygc3RyaW5ncycpO1xuICBsZXQgY291bnQgPSAwO1xuICByZXR1cm4gUHJvbWlzZS5hbGwodXJscy5tYXAoXG4gICAgdXJsID0+IHtcbiAgICAgIGNvbnN0IHByb21pc2UgPSBsb2FkSW1hZ2UodXJsKTtcbiAgICAgIHByb21pc2UudGhlbihmaWxlID0+IG9uUHJvZ3Jlc3Moe1xuICAgICAgICBwcm9ncmVzczogKytjb3VudCAvIHVybHMubGVuZ3RoLFxuICAgICAgICBjb3VudCxcbiAgICAgICAgdG90YWw6IHVybHMubGVuZ3RoLFxuICAgICAgICB1cmxcbiAgICAgIH0pKTtcbiAgICAgIHJldHVybiBwcm9taXNlO1xuICAgIH1cbiAgKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2FkVGV4dHVyZXMoZ2wsIHt1cmxzLCBvblByb2dyZXNzID0gbm9vcCwgLi4ub3B0c30pIHtcbiAgYXNzZXJ0KHVybHMuZXZlcnkodXJsID0+IHR5cGVvZiB1cmwgPT09ICdzdHJpbmcnKSxcbiAgICAnbG9hZFRleHR1cmVzOiB7dXJsc30gbXVzdCBiZSBhcnJheSBvZiBzdHJpbmdzJyk7XG4gIHJldHVybiBsb2FkSW1hZ2VzKHt1cmxzLCBvblByb2dyZXNzLCAuLi5vcHRzfSlcbiAgLnRoZW4oaW1hZ2VzID0+IGltYWdlcy5tYXAoKGltZywgaSkgPT4ge1xuICAgIGxldCBwYXJhbXMgPSBBcnJheS5pc0FycmF5KG9wdHMucGFyYW1ldGVycykgP1xuICAgICAgb3B0cy5wYXJhbWV0ZXJzW2ldIDogb3B0cy5wYXJhbWV0ZXJzO1xuICAgIHBhcmFtcyA9IHBhcmFtcyA9PT0gdW5kZWZpbmVkID8ge30gOiBwYXJhbXM7XG4gICAgcmV0dXJuIG5ldyBUZXh0dXJlMkQoZ2wsIHtcbiAgICAgIGlkOiB1cmxzW2ldLFxuICAgICAgLi4ucGFyYW1zLFxuICAgICAgZGF0YTogaW1nXG4gICAgfSk7XG4gIH0pKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRQcm9ncmFtKGdsLCB7dnMsIGZzLCBvblByb2dyZXNzID0gbm9vcCwgLi4ub3B0c30pIHtcbiAgcmV0dXJuIGxvYWRGaWxlcyh7dXJsczogW3ZzLCBmc10sIG9uUHJvZ3Jlc3MsIC4uLm9wdHN9KVxuICAudGhlbihcbiAgICAoW3ZzVGV4dCwgZnNUZXh0XSkgPT4gbmV3IFByb2dyYW0oZ2wsIHt2czogdnNUZXh0LCBmczogZnNUZXh0LCAuLi5vcHRzfSlcbiAgKTtcbn1cblxuLy8gTG9hZHMgYSBzaW1wbGUgSlNPTiBmb3JtYXRcbmV4cG9ydCBmdW5jdGlvbiBsb2FkTW9kZWwoZ2wsIHtcbiAgdXJsLFxuICBvblByb2dyZXNzID0gbm9vcCxcbiAgLi4ub3B0c1xufSkge1xuICByZXR1cm4gbG9hZEZpbGVzKHt1cmxzOiBbdXJsXSwgb25Qcm9ncmVzcywgLi4ub3B0c30pXG4gIC50aGVuKChbZmlsZV0pID0+IHBhcnNlTW9kZWwoZ2wsIHtmaWxlLCAuLi5vcHRzfSkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VNb2RlbChnbCwge1xuICBmaWxlLFxuICBwcm9ncmFtID0gbmV3IFByb2dyYW0oZ2wpLFxuICAuLi5vcHRzXG59KSB7XG4gIGNvbnN0IGpzb24gPSB0eXBlb2YgZmlsZSA9PT0gJ3N0cmluZycgPyBwYXJzZUpTT04oZmlsZSkgOiBmaWxlO1xuICAvLyBSZW1vdmUgYW55IGF0dHJpYnV0ZXMgc28gdGhhdCB3ZSBjYW4gY3JlYXRlIGEgZ2VvbWV0cnlcbiAgLy8gVE9ETyAtIGNoYW5nZSBmb3JtYXQgdG8gcHV0IHRoZXNlIGluIGdlb21ldHJ5IHN1YiBvYmplY3Q/XG4gIGNvbnN0IGF0dHJpYnV0ZXMgPSB7fTtcbiAgY29uc3QgbW9kZWxPcHRpb25zID0ge307XG4gIGZvciAoY29uc3Qga2V5IGluIGpzb24pIHtcbiAgICBjb25zdCB2YWx1ZSA9IGpzb25ba2V5XTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIGF0dHJpYnV0ZXNba2V5XSA9IGtleSA9PT0gJ2luZGljZXMnID9cbiAgICAgICAgbmV3IFVpbnQxNkFycmF5KHZhbHVlKSA6IG5ldyBGbG9hdDMyQXJyYXkodmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBtb2RlbE9wdGlvbnNba2V5XSA9IHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgTW9kZWwoe1xuICAgIHByb2dyYW0sXG4gICAgZ2VvbWV0cnk6IG5ldyBHZW9tZXRyeSh7YXR0cmlidXRlc30pLFxuICAgIC4uLm1vZGVsT3B0aW9ucyxcbiAgICAuLi5vcHRzXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBwYXJzZUpTT04oZmlsZSkge1xuICB0cnkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKGZpbGUpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHBhcnNlIEpTT046ICR7ZXJyb3J9YCk7XG4gIH1cbn1cbiJdfQ==

/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.LayerManager = exports.AttributeManager = exports.Layer = undefined;
	
	var _layer = __webpack_require__(397);
	
	Object.defineProperty(exports, 'Layer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_layer).default;
	  }
	});
	
	var _attributeManager = __webpack_require__(398);
	
	Object.defineProperty(exports, 'AttributeManager', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_attributeManager).default;
	  }
	});
	
	var _layerManager = __webpack_require__(404);
	
	Object.defineProperty(exports, 'LayerManager', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_layerManager).default;
	  }
	});
	
	var _objectIterator = __webpack_require__(400);
	
	Object.keys(_objectIterator).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _objectIterator[key];
	    }
	  });
	});
	
	__webpack_require__(410);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Object iteration helper
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvaW5kZXguanMiXSwibmFtZXMiOlsiZGVmYXVsdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OzBDQUlRQSxPOzs7Ozs7Ozs7cURBQ0FBLE87Ozs7Ozs7OztpREFDQUEsTzs7Ozs7O0FBR1I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQVJBOzs7O0FBT0EiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTZXQgdXAgZGVjay5nbCBnbG9iYWwgc3RhdGVcbmltcG9ydCAnLi9pbml0JztcblxuLy8gRXhwb3J0IGNvcmUgb2JqZWN0c1xuZXhwb3J0IHtkZWZhdWx0IGFzIExheWVyfSBmcm9tICcuL2xheWVyJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBBdHRyaWJ1dGVNYW5hZ2VyfSBmcm9tICcuL2F0dHJpYnV0ZS1tYW5hZ2VyJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBMYXllck1hbmFnZXJ9IGZyb20gJy4vbGF5ZXItbWFuYWdlcic7XG5cbi8vIE9iamVjdCBpdGVyYXRpb24gaGVscGVyXG5leHBvcnQgKiBmcm9tICcuL3V0aWxzL29iamVjdC1pdGVyYXRvcic7XG4iXX0=

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // Copyright (c) 2015 Uber Technologies, Inc.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the "Software"), to deal
	// in the Software without restriction, including without limitation the rights
	// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	// copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	// THE SOFTWARE.
	/* global window */
	
	
	var _attributeManager = __webpack_require__(398);
	
	var _attributeManager2 = _interopRequireDefault(_attributeManager);
	
	var _luma = __webpack_require__(185);
	
	var _utils = __webpack_require__(399);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/*
	 * @param {string} props.id - layer name
	 * @param {array}  props.data - array of data instances
	 * @param {bool} props.opacity - opacity of the layer
	 */
	var DEFAULT_PROPS = {
	  data: [],
	  dataIterator: null,
	  dataComparator: null,
	  numInstances: undefined,
	  visible: true,
	  pickable: false,
	  opacity: 0.8,
	  onHover: function onHover() {},
	  onClick: function onClick() {},
	  getValue: function getValue(x) {
	    return x;
	  },
	  // Update triggers: a key change detection mechanism in deck.gl
	  // See layer documentation
	  updateTriggers: {}
	};
	
	var counter = 0;
	
	var Layer = function () {
	  /**
	   * @classdesc
	   * Base Layer class
	   *
	   * @class
	   * @param {object} props - See docs above
	   */
	  function Layer(props) {
	    _classCallCheck(this, Layer);
	
	    props = _extends({}, DEFAULT_PROPS, props, {
	      // Accept null as data - otherwise apps will need to add ugly checks
	      data: props.data || [],
	      id: props.id || this.constructor.layerName
	    });
	
	    this.id = props.id;
	    this.count = counter++;
	    this.props = props;
	    this.oldProps = null;
	    this.state = null;
	    this.context = null;
	    Object.seal(this);
	
	    this.validateRequiredProp('id', function (x) {
	      return typeof x === 'string';
	    });
	    this.validateRequiredProp('data');
	    // TODO - allow app to supply dataIterator prop?
	    if (props.data) {
	      (0, _utils.addIterator)(props.data);
	      if (!props.data[Symbol.iterator]) {
	        _utils.log.once(0, 'data prop must have iterator');
	      }
	    }
	
	    this._validateDeprecatedProps();
	  }
	
	  _createClass(Layer, [{
	    key: 'toString',
	    value: function toString() {
	      var className = this.constructor.name;
	      return className !== this.props.id ? '<' + className + ':\'' + this.props.id + '\'>' : '<' + className + '>';
	    }
	
	    // //////////////////////////////////////////////////
	    // LIFECYCLE METHODS, overridden by the layer subclasses
	
	    // Called once to set up the initial state
	    // App can create WebGL resources
	
	  }, {
	    key: 'initializeState',
	    value: function initializeState() {
	      throw new Error('Layer ' + this + ' has not defined initializeState');
	    }
	
	    // Called once when layer is no longer matched and state will be discarded
	    // App can destroy WebGL resources
	
	  }, {
	    key: 'finalizeState',
	    value: function finalizeState() {}
	  }, {
	    key: 'shouldUpdateState',
	    value: function shouldUpdateState(_ref) {
	      var oldProps = _ref.oldProps,
	          props = _ref.props,
	          oldContext = _ref.oldContext,
	          context = _ref.context,
	          changeFlags = _ref.changeFlags;
	
	      return changeFlags.somethingChanged;
	    }
	
	    // Default implementation, all attributeManager will be updated
	
	  }, {
	    key: 'updateState',
	    value: function updateState(_ref2) {
	      var oldProps = _ref2.oldProps,
	          props = _ref2.props,
	          oldContext = _ref2.oldContext,
	          context = _ref2.context,
	          changeFlags = _ref2.changeFlags;
	
	      if (changeFlags.dataChanged && this.state.attributeManager) {
	        this.state.attributeManager.invalidateAll();
	      }
	    }
	
	    // Implement to generate sublayers
	
	  }, {
	    key: 'renderLayers',
	    value: function renderLayers() {
	      return null;
	    }
	
	    // If state has a model, draw it with supplied uniforms
	
	  }, {
	    key: 'draw',
	    value: function draw(_ref3) {
	      var _ref3$uniforms = _ref3.uniforms,
	          uniforms = _ref3$uniforms === undefined ? {} : _ref3$uniforms;
	
	      if (this.state.model) {
	        this.state.model.render(uniforms);
	      }
	    }
	
	    // If state has a model, draw it with supplied uniforms
	    /* eslint-disable max-statements */
	
	  }, {
	    key: 'pick',
	    value: function pick(_ref4) {
	      var info = _ref4.info,
	          uniforms = _ref4.uniforms,
	          pickEnableUniforms = _ref4.pickEnableUniforms,
	          pickDisableUniforms = _ref4.pickDisableUniforms,
	          mode = _ref4.mode;
	      var gl = this.context.gl;
	      var model = this.state.model;
	
	
	      if (model) {
	        model.setUniforms(pickEnableUniforms);
	        model.render(uniforms);
	        model.setUniforms(pickDisableUniforms);
	
	        // Read color in the central pixel, to be mapped with picking colors
	
	        var _info$devicePixel = _slicedToArray(info.devicePixel, 2),
	            x = _info$devicePixel[0],
	            y = _info$devicePixel[1];
	
	        var color = new Uint8Array(4);
	        gl.readPixels(x, y, 1, 1, _luma.GL.RGBA, _luma.GL.UNSIGNED_BYTE, color);
	
	        // Index < 0 means nothing selected
	        info.index = this.decodePickingColor(color);
	        info.color = color;
	
	        // TODO - selectedPickingColor should be removed?
	        if (mode === 'hover') {
	          var selectedPickingColor = new Float32Array(3);
	          selectedPickingColor[0] = color[0];
	          selectedPickingColor[1] = color[1];
	          selectedPickingColor[2] = color[2];
	          this.setUniforms({ selectedPickingColor: selectedPickingColor });
	        }
	      }
	    }
	    /* eslint-enable max-statements */
	
	    // END LIFECYCLE METHODS
	    // //////////////////////////////////////////////////
	
	    // Public API
	
	    // Updates selected state members and marks the object for redraw
	
	  }, {
	    key: 'setState',
	    value: function setState(updateObject) {
	      Object.assign(this.state, updateObject);
	      this.state.needsRedraw = true;
	    }
	  }, {
	    key: 'setNeedsRedraw',
	    value: function setNeedsRedraw() {
	      var redraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
	
	      if (this.state) {
	        this.state.needsRedraw = redraw;
	      }
	    }
	
	    // PROJECTION METHODS
	
	    /**
	     * Projects a point with current map state (lat, lon, zoom, pitch, bearing)
	     *
	     * Note: Position conversion is done in shader, so in many cases there is no need
	     * for this function
	     * @param {Array|TypedArray} lngLat - long and lat values
	     * @return {Array|TypedArray} - x, y coordinates
	     */
	
	  }, {
	    key: 'project',
	    value: function project(lngLat) {
	      var viewport = this.context.viewport;
	
	      (0, _assert2.default)(Array.isArray(lngLat), 'Layer.project needs [lng,lat]');
	      return viewport.project(lngLat);
	    }
	  }, {
	    key: 'unproject',
	    value: function unproject(xy) {
	      var viewport = this.context.viewport;
	
	      (0, _assert2.default)(Array.isArray(xy), 'Layer.unproject needs [x,y]');
	      return viewport.unproject(xy);
	    }
	  }, {
	    key: 'projectFlat',
	    value: function projectFlat(lngLat) {
	      var viewport = this.context.viewport;
	
	      (0, _assert2.default)(Array.isArray(lngLat), 'Layer.project needs [lng,lat]');
	      return viewport.projectFlat(lngLat);
	    }
	  }, {
	    key: 'unprojectFlat',
	    value: function unprojectFlat(xy) {
	      var viewport = this.context.viewport;
	
	      (0, _assert2.default)(Array.isArray(xy), 'Layer.unproject needs [x,y]');
	      return viewport.unprojectFlat(xy);
	    }
	  }, {
	    key: 'screenToDevicePixels',
	    value: function screenToDevicePixels(screenPixels) {
	      var devicePixelRatio = typeof window !== 'undefined' ? window.devicePixelRatio : 1;
	      return screenPixels * devicePixelRatio;
	    }
	
	    /**
	     * Returns the picking color that doesn't match any subfeature
	     * Use if some graphics do not belong to any pickable subfeature
	     * @return {Array} - a black color
	     */
	
	  }, {
	    key: 'nullPickingColor',
	    value: function nullPickingColor() {
	      return [0, 0, 0];
	    }
	
	    /**
	     * Returns the picking color that doesn't match any subfeature
	     * Use if some graphics do not belong to any pickable subfeature
	     * @param {int} i - index to be decoded
	     * @return {Array} - the decoded color
	     */
	
	  }, {
	    key: 'encodePickingColor',
	    value: function encodePickingColor(i) {
	      return [(i + 1) % 256, Math.floor((i + 1) / 256) % 256, Math.floor((i + 1) / 256 / 256) % 256];
	    }
	
	    /**
	     * Returns the picking color that doesn't match any subfeature
	     * Use if some graphics do not belong to any pickable subfeature
	     * @param {Uint8Array} color - color array to be decoded
	     * @return {Array} - the decoded picking color
	     */
	
	  }, {
	    key: 'decodePickingColor',
	    value: function decodePickingColor(color) {
	      (0, _assert2.default)(color instanceof Uint8Array);
	
	      var _color = _slicedToArray(color, 3),
	          i1 = _color[0],
	          i2 = _color[1],
	          i3 = _color[2];
	      // 1 was added to seperate from no selection
	
	
	      var index = i1 + i2 * 256 + i3 * 65536 - 1;
	      return index;
	    }
	  }, {
	    key: 'calculateInstancePickingColors',
	    value: function calculateInstancePickingColors(attribute, _ref5) {
	      var numInstances = _ref5.numInstances;
	      var value = attribute.value,
	          size = attribute.size;
	      // add 1 to index to seperate from no selection
	
	      for (var i = 0; i < numInstances; i++) {
	        var pickingColor = this.encodePickingColor(i);
	        value[i * size + 0] = pickingColor[0];
	        value[i * size + 1] = pickingColor[1];
	        value[i * size + 2] = pickingColor[2];
	      }
	    }
	
	    // DATA ACCESS API
	    // Data can use iterators and may not be random access
	
	    // Use iteration (the only required capability on data) to get first element
	
	  }, {
	    key: 'getFirstObject',
	    value: function getFirstObject() {
	      var data = this.props.data;
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var object = _step.value;
	
	          return object;
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	
	      return null;
	    }
	
	    // INTERNAL METHODS
	
	    // Deduces numer of instances. Intention is to support:
	    // - Explicit setting of numInstances
	    // - Auto-deduction for ES6 containers that define a size member
	    // - Auto-deduction for Classic Arrays via the built-in length attribute
	    // - Auto-deduction via arrays
	
	  }, {
	    key: 'getNumInstances',
	    value: function getNumInstances(props) {
	      props = props || this.props;
	
	      // First check if the layer has set its own value
	      if (this.state && this.state.numInstances !== undefined) {
	        return this.state.numInstances;
	      }
	
	      // Check if app has provided an explicit value
	      if (props.numInstances !== undefined) {
	        return props.numInstances;
	      }
	
	      var _props = props,
	          data = _props.data;
	
	      // Check if ES6 collection "count" function is available
	
	      if (data && typeof data.count === 'function') {
	        return data.count();
	      }
	
	      // Check if ES6 collection "size" attribute is set
	      if (data && data.size !== undefined) {
	        return data.size;
	      }
	
	      // Check if array length attribute is set
	      // Note: checking this last since some ES6 collections (Immutable.js)
	      // emit profuse warnings when trying to access `length` attribute
	      if (data && data.length !== undefined) {
	        return data.length;
	      }
	
	      throw new Error('Could not deduce numInstances');
	    }
	
	    // LAYER MANAGER API
	    // Should only be called by the deck.gl LayerManager class
	
	    // Called by layer manager when a new layer is found
	    /* eslint-disable max-statements */
	
	  }, {
	    key: 'initializeLayer',
	    value: function initializeLayer(updateParams) {
	      (0, _assert2.default)(this.context.gl, 'Layer context missing gl');
	      (0, _assert2.default)(!this.state, 'Layer missing state');
	
	      this.state = {};
	
	      // Initialize state only once
	      this.setState({
	        attributeManager: new _attributeManager2.default({ id: this.props.id }),
	        model: null,
	        needsRedraw: true,
	        dataChanged: true
	      });
	
	      // Add attribute manager loggers if provided
	      this.state.attributeManager.setLogFunctions(this.props);
	
	      var attributeManager = this.state.attributeManager;
	      // All instanced layers get instancePickingColors attribute by default
	      // Their shaders can use it to render a picking scene
	      // TODO - this slows down non instanced layers
	
	      attributeManager.addInstanced({
	        instancePickingColors: {
	          type: _luma.GL.UNSIGNED_BYTE,
	          size: 3,
	          update: this.calculateInstancePickingColors
	        }
	      });
	
	      // Call subclass lifecycle methods
	      this.initializeState();
	      this.updateState(updateParams);
	      // End subclass lifecycle methods
	
	      // Add any subclass attributes
	      this._updateAttributes(this.props);
	      this._updateBaseUniforms();
	
	      var model = this.state.model;
	
	      if (model) {
	        model.setInstanceCount(this.getNumInstances());
	        model.id = this.props.id;
	        model.program.id = this.props.id + '-program';
	        model.geometry.id = this.props.id + '-geometry';
	        model.setAttributes(attributeManager.getAttributes());
	      }
	    }
	
	    // Called by layer manager when existing layer is getting new props
	
	  }, {
	    key: 'updateLayer',
	    value: function updateLayer(updateParams) {
	      // Check for deprecated method
	      if (this.shouldUpdate) {
	        _utils.log.once(0, 'deck.gl v3 shouldUpdate deprecated. Use shouldUpdateState in ' + this);
	      }
	
	      // Call subclass lifecycle method
	      var stateNeedsUpdate = this.shouldUpdateState(updateParams);
	      // End lifecycle method
	
	      if (stateNeedsUpdate) {
	
	        // Call deprecated lifecycle method if defined
	        var hasRedefinedMethod = this.willReceiveProps && this.willReceiveProps !== Layer.prototype.willReceiveProps;
	        if (hasRedefinedMethod) {
	          _utils.log.once(0, 'deck.gl v3 willReceiveProps deprecated. Use updateState in ' + this);
	          var oldProps = updateParams.oldProps,
	              props = updateParams.props,
	              changeFlags = updateParams.changeFlags;
	
	          this.setState(changeFlags);
	          this.willReceiveProps(oldProps, props, changeFlags);
	          this.setState({
	            dataChanged: false,
	            viewportChanged: false
	          });
	        }
	        // End lifecycle method
	
	        // Call subclass lifecycle method
	        this.updateState(updateParams);
	        // End lifecycle method
	
	        // Run the attribute updaters
	        this._updateAttributes(updateParams.newProps);
	        this._updateBaseUniforms();
	
	        if (this.state.model) {
	          this.state.model.setInstanceCount(this.getNumInstances());
	        }
	      }
	    }
	    /* eslint-enable max-statements */
	
	    // Called by manager when layer is about to be disposed
	    // Note: not guaranteed to be called on application shutdown
	
	  }, {
	    key: 'finalizeLayer',
	    value: function finalizeLayer() {
	      // Call subclass lifecycle method
	      this.finalizeState();
	      // End lifecycle method
	    }
	
	    // Calculates uniforms
	
	  }, {
	    key: 'drawLayer',
	    value: function drawLayer(_ref6) {
	      var _ref6$uniforms = _ref6.uniforms,
	          uniforms = _ref6$uniforms === undefined ? {} : _ref6$uniforms,
	          _ref6$layerIndex = _ref6.layerIndex,
	          layerIndex = _ref6$layerIndex === undefined ? 0 : _ref6$layerIndex;
	
	      (0, _assert2.default)(this.context.viewport, 'Layer missing context.viewport');
	      var viewportUniforms = this.context.viewport.getUniforms(this.props);
	      uniforms = _extends({}, uniforms, viewportUniforms, { layerIndex: layerIndex });
	      // Call subclass lifecycle method
	      this.draw({ uniforms: uniforms });
	      // End lifecycle method
	    }
	  }, {
	    key: 'pickLayer',
	    value: function pickLayer(_ref7) {
	      var _ref7$uniforms = _ref7.uniforms,
	          uniforms = _ref7$uniforms === undefined ? {} : _ref7$uniforms,
	          opts = _objectWithoutProperties(_ref7, ['uniforms']);
	
	      var viewportUniforms = this.context.viewport.getUniforms(this.props);
	      uniforms = _extends({}, uniforms, viewportUniforms, { renderPickingBuffer: true });
	      // Call subclass lifecycle method
	      return this.pick(_extends({ uniforms: uniforms }, opts));
	      // End lifecycle method
	    }
	  }, {
	    key: 'diffProps',
	    value: function diffProps(oldProps, newProps, context) {
	      // If any props have changed, ignoring updateTriggers objects
	      // (updateTriggers are expected to be a new object on every update)
	      var propsChangedReason = (0, _utils.compareProps)({
	        newProps: newProps,
	        oldProps: oldProps,
	        ignoreProps: { data: null, updateTriggers: null }
	      });
	
	      var dataChangedReason = this._diffDataProps(oldProps, newProps);
	
	      var propsChanged = Boolean(propsChangedReason);
	      var dataChanged = Boolean(dataChangedReason);
	      var viewportChanged = context.viewportChanged;
	      var somethingChanged = propsChanged || dataChanged || viewportChanged;
	
	      // If data hasn't changed, check update triggers
	      if (!dataChanged) {
	        this._diffUpdateTriggers(oldProps, newProps);
	      } else {
	        _utils.log.log(1, 'dataChanged: ' + dataChanged);
	      }
	
	      return {
	        propsChanged: propsChanged,
	        dataChanged: dataChanged,
	        viewportChanged: viewportChanged,
	        somethingChanged: somethingChanged,
	        reason: dataChangedReason || propsChangedReason
	      };
	    }
	
	    // Checks state of attributes and model
	    // TODO - is attribute manager needed? - Model should be enough.
	
	  }, {
	    key: 'getNeedsRedraw',
	    value: function getNeedsRedraw() {
	      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref8$clearRedrawFlag = _ref8.clearRedrawFlags,
	          clearRedrawFlags = _ref8$clearRedrawFlag === undefined ? false : _ref8$clearRedrawFlag;
	
	      // this method may be called by the render loop as soon a the layer
	      // has been created, so guard against uninitialized state
	      if (!this.state) {
	        return false;
	      }
	
	      var redraw = false;
	      redraw = redraw || this.state.needsRedraw;
	      this.state.needsRedraw = this.state.needsRedraw && !clearRedrawFlags;
	
	      var _state = this.state,
	          attributeManager = _state.attributeManager,
	          model = _state.model;
	
	      redraw = redraw || attributeManager && attributeManager.getNeedsRedraw({ clearRedrawFlags: clearRedrawFlags });
	      redraw = redraw || model && model.getNeedsRedraw({ clearRedrawFlags: clearRedrawFlags });
	
	      return redraw;
	    }
	
	    // PRIVATE METHODS
	
	    // The comparison of the data prop requires special handling
	    // the dataComparator should be used if supplied
	
	  }, {
	    key: '_diffDataProps',
	    value: function _diffDataProps(oldProps, newProps) {
	      // Support optional app defined comparison of data
	      var dataComparator = newProps.dataComparator;
	
	      if (dataComparator) {
	        if (!dataComparator(newProps.data, oldProps.data)) {
	          return 'Data comparator detected a change';
	        }
	        // Otherwise, do a shallow equal on props
	      } else if (newProps.data !== oldProps.data) {
	        return 'A new data container was supplied';
	      }
	
	      return null;
	    }
	
	    // Checks if any update triggers have changed, and invalidate
	    // attributes accordingly.
	    /* eslint-disable max-statements */
	
	  }, {
	    key: '_diffUpdateTriggers',
	    value: function _diffUpdateTriggers(oldProps, newProps) {
	      var attributeManager = this.state.attributeManager;
	
	      if (!attributeManager) {
	        return false;
	      }
	
	      var change = false;
	
	      for (var propName in newProps.updateTriggers) {
	        var oldTriggers = oldProps.updateTriggers[propName];
	        var newTriggers = newProps.updateTriggers[propName];
	        var diffReason = (0, _utils.compareProps)({
	          oldProps: oldTriggers,
	          newProps: newTriggers
	        });
	        if (diffReason) {
	          if (propName === 'all') {
	            _utils.log.log(1, 'updateTriggers invalidating all attributes: ' + diffReason);
	            attributeManager.invalidateAll();
	            change = true;
	          } else {
	            _utils.log.log(1, 'updateTriggers invalidating attribute ' + propName + ': ' + diffReason);
	            attributeManager.invalidate(propName);
	            change = true;
	          }
	        }
	      }
	
	      return change;
	    }
	    /* eslint-enable max-statements */
	
	  }, {
	    key: 'validateRequiredProp',
	    value: function validateRequiredProp(propertyName, condition) {
	      var value = this.props[propertyName];
	      if (value === undefined) {
	        throw new Error('Property ' + propertyName + ' undefined in layer ' + this);
	      }
	      if (condition && !condition(value)) {
	        throw new Error('Bad property ' + propertyName + ' in layer ' + this);
	      }
	    }
	
	    // Calls attribute manager to update any WebGL attributes
	
	  }, {
	    key: '_updateAttributes',
	    value: function _updateAttributes(props) {
	      var _state2 = this.state,
	          attributeManager = _state2.attributeManager,
	          model = _state2.model;
	
	      if (!attributeManager) {
	        return;
	      }
	
	      var numInstances = this.getNumInstances(props);
	      // Figure out data length
	      attributeManager.update({
	        numInstances: numInstances,
	        bufferMap: props,
	        context: this,
	        // Don't worry about non-attribute props
	        ignoreUnknownAttributes: true
	      });
	      if (model) {
	        var changedAttributes = attributeManager.getChangedAttributes({ clearChangedFlags: true });
	        model.setAttributes(changedAttributes);
	      }
	    }
	  }, {
	    key: '_updateBaseUniforms',
	    value: function _updateBaseUniforms() {
	      this.setUniforms({
	        // apply gamma to opacity to make it visually "linear"
	        opacity: Math.pow(this.props.opacity, 1 / 2.2),
	        ONE: 1.0
	      });
	    }
	
	    // DEPRECATED METHODS
	    // shouldUpdate() {}
	
	  }, {
	    key: 'willReceiveProps',
	    value: function willReceiveProps() {}
	
	    // Updates selected state members and marks the object for redraw
	
	  }, {
	    key: 'setUniforms',
	    value: function setUniforms(uniformMap) {
	      if (this.state.model) {
	        this.state.model.setUniforms(uniformMap);
	      }
	      // TODO - set needsRedraw on the model?
	      this.state.needsRedraw = true;
	      (0, _utils.log)(3, 'layer.setUniforms', uniformMap);
	    }
	  }, {
	    key: '_validateDeprecatedProps',
	    value: function _validateDeprecatedProps() {
	      if (this.props.isPickable !== undefined) {
	        _utils.log.once(0, 'No isPickable prop in deckgl v3 - use pickable instead');
	      }
	
	      // TODO - inject viewport from overlay instead of creating for each layer?
	      var hasViewportProps =
	      // this.props.width !== undefined ||
	      // this.props.height !== undefined ||
	      this.props.latitude !== undefined || this.props.longitude !== undefined || this.props.zoom !== undefined || this.props.pitch !== undefined || this.props.bearing !== undefined;
	      if (hasViewportProps) {
	        /* eslint-disable no-console */
	        // /* global console */
	        _utils.log.once(0, 'deck.gl v3 no longer needs viewport props in Layer ' + this);
	      }
	    }
	  }]);
	
	  return Layer;
	}();
	
	exports.default = Layer;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* eslint-disable guard-for-in */
	
	
	var _luma = __webpack_require__(185);
	
	var _utils = __webpack_require__(399);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function noop() {}
	
	var AttributeManager = function () {
	  /**
	   * @classdesc
	   * Automated attribute generation and management. Suitable when a set of
	   * vertex shader attributes are generated by iteration over a data array,
	   * and updates to these attributes are needed either when the data itself
	   * changes, or when other data relevant to the calculations change.
	   *
	   * - First the application registers descriptions of its dynamic vertex
	   *   attributes using AttributeManager.add().
	   * - Then, when any change that affects attributes is detected by the
	   *   application, the app will call AttributeManager.invalidate().
	   * - Finally before it renders, it calls AttributeManager.update() to
	   *   ensure that attributes are automatically rebuilt if anything has been
	   *   invalidated.
	   *
	   * The application provided update functions describe how attributes
	   * should be updated from a data array and are expected to traverse
	   * that data array (or iterable) and fill in the attribute's typed array.
	   *
	   * Note that the attribute manager intentionally does not do advanced
	   * change detection, but instead makes it easy to build such detection
	   * by offering the ability to "invalidate" each attribute separately.
	   *
	   * Summary:
	   * - keeps track of valid state for each attribute
	   * - auto reallocates attributes when needed
	   * - auto updates attributes with registered updater functions
	   * - allows overriding with application supplied buffers
	   *
	   * Limitations:
	   * - There are currently no provisions for only invalidating a range of
	   *   indices in an attribute.
	   *
	   * @class
	   * @param {Object} [props]
	   * @param {String} [props.id] - identifier (for debugging)
	   */
	  function AttributeManager() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$id = _ref.id,
	        id = _ref$id === undefined ? 'attribute-manager' : _ref$id,
	        otherProps = _objectWithoutProperties(_ref, ['id']);
	
	    _classCallCheck(this, AttributeManager);
	
	    this.id = id;
	    this.attributes = {};
	    this.allocedInstances = -1;
	    this.needsRedraw = true;
	    this.userData = {};
	
	    this.onUpdateStart = noop;
	    this.onUpdateEnd = noop;
	    this.onLog = this._defaultLog;
	
	    // For debugging sanity, prevent uninitialized members
	    Object.seal(this);
	  }
	
	  /**
	   * Adds attributes
	   * Takes a map of attribute descriptor objects
	   * - keys are attribute names
	   * - values are objects with attribute fields
	   *
	   * attribute.size - number of elements per object
	   * attribute.updater - number of elements
	   * attribute.instanced=0 - is this is an instanced attribute (a.k.a. divisor)
	   * attribute.noAlloc=false - if this attribute should not be allocated
	   *
	   * @example
	   * attributeManager.add({
	   *   positions: {size: 2, update: calculatePositions}
	   *   colors: {size: 3, update: calculateColors}
	   * });
	   *
	   * @param {Object} attributes - attribute map (see above)
	   * @param {Object} updaters - separate map of update functions (deprecated)
	   */
	
	
	  _createClass(AttributeManager, [{
	    key: 'add',
	    value: function add(attributes) {
	      var updaters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      this._add(attributes, updaters);
	    }
	
	    // Marks an attribute for update
	
	  }, {
	    key: 'invalidate',
	    value: function invalidate(attributeName) {
	      var attributes = this.attributes;
	
	      var attribute = attributes[attributeName];
	      if (!attribute) {
	        var message = 'invalidating non-existent attribute ' + attributeName + ' for ' + this.id + '\n';
	        message += 'Valid attributes: ' + Object.keys(attributes).join(', ');
	        (0, _assert2.default)(attribute, message);
	      }
	      attribute.needsUpdate = true;
	      // For performance tuning
	      this.onLog(1, 'invalidated attribute ' + attributeName + ' for ' + this.id);
	    }
	  }, {
	    key: 'invalidateAll',
	    value: function invalidateAll() {
	      var attributes = this.attributes;
	
	      for (var attributeName in attributes) {
	        this.invalidate(attributeName);
	      }
	    }
	
	    /**
	     * Ensure all attribute buffers are updated from props or data.
	     *
	     * Note: Any preallocated buffers in "buffers" matching registered attribute
	     * names will be used. No update will happen in this case.
	     * Note: Calls onUpdateStart and onUpdateEnd log callbacks before and after.
	     *
	     * @param {Object} opts - options
	     * @param {Object} opts.data - data (iterable object)
	     * @param {Object} opts.numInstances - count of data
	     * @param {Object} opts.buffers = {} - pre-allocated buffers
	     * @param {Object} opts.props - passed to updaters
	     * @param {Object} opts.context - Used as "this" context for updaters
	     */
	
	  }, {
	    key: 'update',
	    value: function update() {
	      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          data = _ref2.data,
	          numInstances = _ref2.numInstances,
	          _ref2$buffers = _ref2.buffers,
	          buffers = _ref2$buffers === undefined ? {} : _ref2$buffers,
	          _ref2$props = _ref2.props,
	          props = _ref2$props === undefined ? {} : _ref2$props,
	          _ref2$context = _ref2.context,
	          context = _ref2$context === undefined ? {} : _ref2$context,
	          opts = _objectWithoutProperties(_ref2, ['data', 'numInstances', 'buffers', 'props', 'context']);
	
	      // First apply any application provided buffers
	      this._checkExternalBuffers(buffers, opts);
	      this._setExternalBuffers(buffers);
	
	      // Only initiate alloc/update (and logging) if actually needed
	      if (this._analyzeBuffers({ numInstances: numInstances })) {
	        this.onUpdateStart(this.id);
	        this._updateBuffers({ numInstances: numInstances, data: data, props: props, context: context });
	        this.onUpdateEnd(this.id);
	      }
	    }
	
	    /**
	     * Sets log functions to help trace or time attribute updates.
	     * Default logging uses luma logger.
	     *
	     * Note that the app may not be in control of when update is called,
	     * so hooks are provided for update start and end.
	     *
	     * @param {Object} [opts]
	     * @param {String} [opts.onLog=] - called to print
	     * @param {String} [opts.onUpdateStart=] - called before update() starts
	     * @param {String} [opts.onUpdateEnd=] - called after update() ends
	     */
	
	  }, {
	    key: 'setLogFunctions',
	    value: function setLogFunctions() {
	      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          onLog = _ref3.onLog,
	          onUpdateStart = _ref3.onUpdateStart,
	          onUpdateEnd = _ref3.onUpdateEnd;
	
	      this.onLog = onLog !== undefined ? onLog : this.onLog;
	      this.onUpdateStart = onUpdateStart !== undefined ? onUpdateStart : this.onUpdateStart;
	      this.onUpdateEnd = onUpdateEnd !== undefined ? onUpdateEnd : this.onUpdateEnd;
	    }
	
	    /**
	     * Returns all attribute descriptors
	     * Note: Format matches luma.gl Model/Program.setAttributes()
	     * @return {Object} attributes - descriptors
	     */
	
	  }, {
	    key: 'getAttributes',
	    value: function getAttributes() {
	      return this.attributes;
	    }
	
	    /**
	     * Returns changed attribute descriptors
	     * This indicates which WebGLBuggers need to be updated
	     * @return {Object} attributes - descriptors
	     */
	
	  }, {
	    key: 'getChangedAttributes',
	    value: function getChangedAttributes(_ref4) {
	      var _ref4$clearChangedFla = _ref4.clearChangedFlags,
	          clearChangedFlags = _ref4$clearChangedFla === undefined ? false : _ref4$clearChangedFla;
	      var attributes = this.attributes;
	
	      var changedAttributes = {};
	      for (var attributeName in attributes) {
	        var attribute = attributes[attributeName];
	        if (attribute.changed) {
	          attribute.changed = attribute.changed && !clearChangedFlags;
	          changedAttributes[attributeName] = attribute;
	        }
	      }
	      return changedAttributes;
	    }
	
	    /**
	     * Returns the redraw flag, optionally clearing it.
	     * Redraw flag will be set if any attributes attributes changed since
	     * flag was last cleared.
	     *
	     * @param {Object} [opts]
	     * @param {String} [opts.clearRedrawFlags=false] - whether to clear the flag
	     * @return {Boolean} - whether a redraw is needed.
	     */
	
	  }, {
	    key: 'getNeedsRedraw',
	    value: function getNeedsRedraw() {
	      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref5$clearRedrawFlag = _ref5.clearRedrawFlags,
	          clearRedrawFlags = _ref5$clearRedrawFlag === undefined ? false : _ref5$clearRedrawFlag;
	
	      var redraw = this.needsRedraw;
	      redraw = redraw || this.needsRedraw;
	      this.needsRedraw = this.needsRedraw && !clearRedrawFlags;
	      return redraw;
	    }
	
	    /**
	     * Sets the redraw flag.
	     * @param {Boolean} redraw=true
	     * @return {AttributeManager} - for chaining
	     */
	
	  }, {
	    key: 'setNeedsRedraw',
	    value: function setNeedsRedraw() {
	      var redraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
	
	      this.needsRedraw = true;
	      return this;
	    }
	
	    // DEPRECATED METHODS
	
	    /**
	     * @deprecated since version 2.5, use add() instead
	     * Adds attributes
	     * @param {Object} attributes - attribute map (see above)
	     * @param {Object} updaters - separate map of update functions (deprecated)
	     */
	
	  }, {
	    key: 'addDynamic',
	    value: function addDynamic(attributes) {
	      var updaters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      this._add(attributes, updaters);
	    }
	
	    /**
	     * @deprecated since version 2.5, use add() instead
	     * Adds attributes
	     * @param {Object} attributes - attribute map (see above)
	     * @param {Object} updaters - separate map of update functions (deprecated)
	     */
	
	  }, {
	    key: 'addInstanced',
	    value: function addInstanced(attributes) {
	      var updaters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      this._add(attributes, updaters, { instanced: 1 });
	    }
	
	    // PRIVATE METHODS
	
	    // Default logger
	
	  }, {
	    key: '_defaultLog',
	    value: function _defaultLog(level, message) {
	      _utils.log.log(level, message);
	    }
	
	    // Used to register an attribute
	
	  }, {
	    key: '_add',
	    value: function _add(attributes) {
	      var updaters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      var _extraProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	      var newAttributes = {};
	
	      for (var attributeName in attributes) {
	        // support for separate update function map
	        // For now, just copy any attributes from that map into the main map
	        // TODO - Attribute maps are a deprecated feature, remove
	        if (attributeName in updaters) {
	          attributes[attributeName] = _extends({}, attributes[attributeName], updaters[attributeName]);
	        }
	
	        var attribute = attributes[attributeName];
	
	        // Check all fields and generate helpful error messages
	        this._validate(attributeName, attribute);
	
	        // Initialize the attribute descriptor, with WebGL and metadata fields
	        var attributeData = _extends({
	          // Ensure that fields are present before Object.seal()
	          target: undefined,
	          isIndexed: false,
	
	          // Reserved for application
	          userData: {}
	
	        }, attribute, {
	
	          // State
	          isExternalBuffer: false,
	          needsAlloc: false,
	          needsUpdate: false,
	          changed: false,
	
	          // Luma fields
	          size: attribute.size,
	          value: attribute.value || null
	
	        }, _extraProps);
	        // Sanity - no app fields on our attributes. Use userData instead.
	        Object.seal(attributeData);
	
	        // Add to both attributes list (for registration with model)
	        this.attributes[attributeName] = attributeData;
	      }
	
	      Object.assign(this.attributes, newAttributes);
	    }
	  }, {
	    key: '_validate',
	    value: function _validate(attributeName, attribute) {
	      (0, _assert2.default)(typeof attribute.size === 'number', 'Attribute definition for ' + attributeName + ' missing size');
	
	      // Check the updater
	      (0, _assert2.default)(typeof attribute.update === 'function' || attribute.noAlloc, 'Attribute updater for ' + attributeName + ' missing update method');
	    }
	
	    // Checks that any attribute buffers in props are valid
	    // Note: This is just to help app catch mistakes
	
	  }, {
	    key: '_checkExternalBuffers',
	    value: function _checkExternalBuffers() {
	      var bufferMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	      var attributes = this.attributes;
	
	      for (var attributeName in bufferMap) {
	        var attribute = attributes[attributeName];
	        if (!attribute && !opts.ignoreUnknownAttributes) {
	          throw new Error('Unknown attribute prop ' + attributeName);
	        }
	        // const buffer = bufferMap[attributeName];
	        // TODO - check buffer type
	      }
	    }
	
	    // Set the buffers for the supplied attributes
	    // Update attribute buffers from any attributes in props
	    // Detach any previously set buffers, marking all
	    // Attributes for auto allocation
	    /* eslint-disable max-statements */
	
	  }, {
	    key: '_setExternalBuffers',
	    value: function _setExternalBuffers(bufferMap) {
	      var attributes = this.attributes,
	          numInstances = this.numInstances;
	
	      // Copy the refs of any supplied buffers in the props
	
	      for (var attributeName in attributes) {
	        var attribute = attributes[attributeName];
	        var buffer = bufferMap[attributeName];
	        attribute.isExternalBuffer = false;
	        if (buffer) {
	          if (!(buffer instanceof Float32Array)) {
	            throw new Error('Attribute properties must be of type Float32Array');
	          }
	          if (attribute.auto && buffer.length <= numInstances * attribute.size) {
	            throw new Error('Attribute prop array must match length and size');
	          }
	
	          attribute.isExternalBuffer = true;
	          attribute.needsUpdate = false;
	          if (attribute.value !== buffer) {
	            attribute.value = buffer;
	            attribute.changed = true;
	            this.needsRedraw = true;
	          }
	        }
	      }
	    }
	    /* eslint-enable max-statements */
	
	    /* Checks that typed arrays for attributes are big enough
	     * sets alloc flag if not
	     * @return {Boolean} whether any updates are needed
	     */
	
	  }, {
	    key: '_analyzeBuffers',
	    value: function _analyzeBuffers(_ref6) {
	      var numInstances = _ref6.numInstances;
	      var attributes = this.attributes;
	
	      (0, _assert2.default)(numInstances !== undefined, 'numInstances not defined');
	
	      // Track whether any allocations or updates are needed
	      var needsUpdate = false;
	
	      for (var attributeName in attributes) {
	        var attribute = attributes[attributeName];
	        if (!attribute.isExternalBuffer) {
	          // Do we need to reallocate the attribute's typed array?
	          var needsAlloc = attribute.value === null || attribute.value.length / attribute.size < numInstances;
	          if (needsAlloc && attribute.update) {
	            attribute.needsAlloc = true;
	            needsUpdate = true;
	          }
	          if (attribute.needsUpdate) {
	            needsUpdate = true;
	          }
	        }
	      }
	
	      return needsUpdate;
	    }
	
	    /**
	     * @private
	     * Calls update on any buffers that need update
	     * TODO? - If app supplied all attributes, no need to iterate over data
	     *
	     * @param {Object} opts - options
	     * @param {Object} opts.data - data (iterable object)
	     * @param {Object} opts.numInstances - count of data
	     * @param {Object} opts.buffers = {} - pre-allocated buffers
	     * @param {Object} opts.props - passed to updaters
	     * @param {Object} opts.context - Used as "this" context for updaters
	     */
	    /* eslint-disable max-statements */
	
	  }, {
	    key: '_updateBuffers',
	    value: function _updateBuffers(_ref7) {
	      var numInstances = _ref7.numInstances,
	          data = _ref7.data,
	          props = _ref7.props,
	          context = _ref7.context;
	      var attributes = this.attributes;
	
	      // Allocate at least one element to ensure a valid buffer
	
	      var allocCount = Math.max(numInstances, 1);
	
	      for (var attributeName in attributes) {
	        var attribute = attributes[attributeName];
	
	        // Allocate a new typed array if needed
	        if (attribute.needsAlloc) {
	          var ArrayType = (0, _luma.glArrayFromType)(attribute.type || _luma.GL.FLOAT);
	          attribute.value = new ArrayType(attribute.size * allocCount);
	          this.onLog(2, this.id + ':' + attributeName + ' allocated ' + allocCount);
	          attribute.needsAlloc = false;
	          attribute.needsUpdate = true;
	        }
	
	        // Call updater function if needed
	        if (attribute.needsUpdate) {
	          var update = attribute.update;
	
	          if (update) {
	            this.onLog(2, this.id + ':' + attributeName + ' updating ' + numInstances);
	            update.call(context, attribute, { data: data, props: props, numInstances: numInstances });
	          } else {
	            this.onLog(2, this.id + ':' + attributeName + ' missing update function');
	          }
	          attribute.needsUpdate = false;
	          attribute.changed = true;
	          this.needsRedraw = true;
	        }
	      }
	
	      this.allocedInstances = allocCount;
	    }
	    /* eslint-enable max-statements */
	
	  }]);
	
	  return AttributeManager;
	}();
	
	exports.default = AttributeManager;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _objectIterator = __webpack_require__(400);
	
	Object.keys(_objectIterator).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _objectIterator[key];
	    }
	  });
	});
	
	var _compareObjects = __webpack_require__(401);
	
	Object.keys(_compareObjects).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _compareObjects[key];
	    }
	  });
	});
	
	var _log = __webpack_require__(402);
	
	Object.defineProperty(exports, 'log', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_log).default;
	  }
	});
	
	var _fp = __webpack_require__(403);
	
	Object.keys(_fp).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _fp[key];
	    }
	  });
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvdXRpbHMvaW5kZXguanMiXSwibmFtZXMiOlsiZGVmYXVsdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7Ozs7d0NBQ1FBLE87Ozs7OztBQUNSO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vb2JqZWN0LWl0ZXJhdG9yJztcbmV4cG9ydCAqIGZyb20gJy4vY29tcGFyZS1vYmplY3RzJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBsb2d9IGZyb20gJy4vbG9nJztcbmV4cG9ydCAqIGZyb20gJy4vZnA2NCc7XG4iXX0=

/***/ },
/* 400 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.makeObjectValueIterator = makeObjectValueIterator;
	exports.addIterator = addIterator;
	exports.isPlainObject = isPlainObject;
	
	var _marked = [makeObjectValueIterator].map(regeneratorRuntime.mark);
	
	// Enable classic JavaScript object maps to be used as data
	
	function makeObjectValueIterator(obj) {
	  var key;
	  return regeneratorRuntime.wrap(function makeObjectValueIterator$(_context) {
	    while (1) {
	      switch (_context.prev = _context.next) {
	        case 0:
	          _context.t0 = regeneratorRuntime.keys(obj);
	
	        case 1:
	          if ((_context.t1 = _context.t0()).done) {
	            _context.next = 8;
	            break;
	          }
	
	          key = _context.t1.value;
	
	          if (!obj.hasOwnProperty(key)) {
	            _context.next = 6;
	            break;
	          }
	
	          _context.next = 6;
	          return obj[key];
	
	        case 6:
	          _context.next = 1;
	          break;
	
	        case 8:
	        case 'end':
	          return _context.stop();
	      }
	    }
	  }, _marked[0], this);
	}
	
	function addIterator(object) {
	  if (isPlainObject(object) && !object[Symbol.iterator]) {
	    object[Symbol.iterator] = function iterator() {
	      return makeObjectValueIterator(object);
	    };
	  }
	}
	
	function isPlainObject(o) {
	  return o !== null && (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && o.constructor === Object;
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvdXRpbHMvb2JqZWN0LWl0ZXJhdG9yLmpzIl0sIm5hbWVzIjpbIm1ha2VPYmplY3RWYWx1ZUl0ZXJhdG9yIiwiYWRkSXRlcmF0b3IiLCJpc1BsYWluT2JqZWN0Iiwib2JqIiwia2V5IiwiaGFzT3duUHJvcGVydHkiLCJvYmplY3QiLCJTeW1ib2wiLCJpdGVyYXRvciIsIm8iLCJjb25zdHJ1Y3RvciIsIk9iamVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7UUFFaUJBLHVCLEdBQUFBLHVCO1FBUURDLFcsR0FBQUEsVztRQVFBQyxhLEdBQUFBLGE7O2VBaEJDRix1Qjs7QUFGakI7O0FBRU8sU0FBVUEsdUJBQVYsQ0FBa0NHLEdBQWxDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGdEQUNhQSxHQURiOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQ01DLGFBRE47O0FBQUEsZUFFQ0QsSUFBSUUsY0FBSixDQUFtQkQsR0FBbkIsQ0FGRDtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLGlCQUdLRCxJQUFJQyxHQUFKLENBSEw7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQVFBLFNBQVNILFdBQVQsQ0FBcUJLLE1BQXJCLEVBQTZCO0FBQ2xDLE1BQUlKLGNBQWNJLE1BQWQsS0FBeUIsQ0FBQ0EsT0FBT0MsT0FBT0MsUUFBZCxDQUE5QixFQUF1RDtBQUNyREYsV0FBT0MsT0FBT0MsUUFBZCxJQUEwQixTQUFTQSxRQUFULEdBQW9CO0FBQzVDLGFBQU9SLHdCQUF3Qk0sTUFBeEIsQ0FBUDtBQUNELEtBRkQ7QUFHRDtBQUNGOztBQUVNLFNBQVNKLGFBQVQsQ0FBdUJPLENBQXZCLEVBQTBCO0FBQy9CLFNBQU9BLE1BQU0sSUFBTixJQUFjLFFBQU9BLENBQVAseUNBQU9BLENBQVAsT0FBYSxRQUEzQixJQUF1Q0EsRUFBRUMsV0FBRixLQUFrQkMsTUFBaEU7QUFDRCIsImZpbGUiOiJvYmplY3QtaXRlcmF0b3IuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBFbmFibGUgY2xhc3NpYyBKYXZhU2NyaXB0IG9iamVjdCBtYXBzIHRvIGJlIHVzZWQgYXMgZGF0YVxuXG5leHBvcnQgZnVuY3Rpb24qIG1ha2VPYmplY3RWYWx1ZUl0ZXJhdG9yKG9iaikge1xuICBmb3IgKGNvbnN0IGtleSBpbiBvYmopIHtcbiAgICBpZiAob2JqLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgIHlpZWxkIG9ialtrZXldO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkSXRlcmF0b3Iob2JqZWN0KSB7XG4gIGlmIChpc1BsYWluT2JqZWN0KG9iamVjdCkgJiYgIW9iamVjdFtTeW1ib2wuaXRlcmF0b3JdKSB7XG4gICAgb2JqZWN0W1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbiBpdGVyYXRvcigpIHtcbiAgICAgIHJldHVybiBtYWtlT2JqZWN0VmFsdWVJdGVyYXRvcihvYmplY3QpO1xuICAgIH07XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qobykge1xuICByZXR1cm4gbyAhPT0gbnVsbCAmJiB0eXBlb2YgbyA9PT0gJ29iamVjdCcgJiYgby5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0O1xufVxuIl19

/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.compareProps = compareProps;
	exports.areEqualShallow = areEqualShallow;
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * @param {Object} opt.oldProps - object with old key/value pairs
	 * @param {Object} opt.newProps - object with new key/value pairs
	 * @param {Object} opt.ignoreProps={} - object, keys that should not be compared
	 * @returns {null|String} - null when values of all keys are strictly equal.
	 *   if unequal, returns a string explaining what changed.
	 */
	/* eslint-disable max-statements, complexity */
	function compareProps() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      oldProps = _ref.oldProps,
	      newProps = _ref.newProps,
	      _ref$ignoreProps = _ref.ignoreProps,
	      ignoreProps = _ref$ignoreProps === undefined ? {} : _ref$ignoreProps;
	
	  (0, _assert2.default)(oldProps !== undefined && newProps !== undefined, 'compareProps args');
	
	  if (oldProps === newProps) {
	    return null;
	  }
	
	  if ((typeof oldProps === 'undefined' ? 'undefined' : _typeof(oldProps)) !== 'object' || oldProps === null) {
	    return 'old props is not an object';
	  }
	  if ((typeof newProps === 'undefined' ? 'undefined' : _typeof(newProps)) !== 'object' || newProps === null) {
	    return 'new props is not an object';
	  }
	
	  // Test if new props different from old props
	  for (var key in oldProps) {
	    if (!(key in ignoreProps)) {
	      if (!newProps.hasOwnProperty(key)) {
	        return 'prop ' + key + ' dropped: ' + oldProps[key] + ' -> (undefined)';
	      } else if (oldProps[key] !== newProps[key]) {
	        return 'prop ' + key + ' changed: ' + oldProps[key] + ' -> ' + newProps[key];
	      }
	    }
	  }
	
	  // Test if any new props have been added
	  for (var _key in newProps) {
	    if (!(_key in ignoreProps)) {
	      if (!oldProps.hasOwnProperty(_key)) {
	        return 'prop ' + _key + ' added: (undefined) -> ' + newProps[_key];
	      }
	    }
	  }
	
	  return null;
	}
	/* eslint-enable max-statements, complexity */
	
	// Shallow compare
	/* eslint-disable complexity */
	function areEqualShallow(a, b) {
	  var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
	      _ref2$ignore = _ref2.ignore,
	      ignore = _ref2$ignore === undefined ? {} : _ref2$ignore;
	
	  if (a === b) {
	    return true;
	  }
	
	  if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) !== 'object' || a === null || (typeof b === 'undefined' ? 'undefined' : _typeof(b)) !== 'object' || b === null) {
	    return false;
	  }
	
	  if (Object.keys(a).length !== Object.keys(b).length) {
	    return false;
	  }
	
	  for (var key in a) {
	    if (!(key in ignore) && (!(key in b) || a[key] !== b[key])) {
	      return false;
	    }
	  }
	  for (var _key2 in b) {
	    if (!(_key2 in ignore) && !(_key2 in a)) {
	      return false;
	    }
	  }
	  return true;
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvdXRpbHMvY29tcGFyZS1vYmplY3RzLmpzIl0sIm5hbWVzIjpbImNvbXBhcmVQcm9wcyIsImFyZUVxdWFsU2hhbGxvdyIsIm9sZFByb3BzIiwibmV3UHJvcHMiLCJpZ25vcmVQcm9wcyIsInVuZGVmaW5lZCIsImtleSIsImhhc093blByb3BlcnR5IiwiYSIsImIiLCJpZ25vcmUiLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztRQVlnQkEsWSxHQUFBQSxZO1FBd0NBQyxlLEdBQUFBLGU7O0FBcERoQjs7Ozs7O0FBRUE7Ozs7Ozs7OztBQVNBO0FBQ08sU0FBU0QsWUFBVCxHQUFtRTtBQUFBLGlGQUFKLEVBQUk7QUFBQSxNQUE1Q0UsUUFBNEMsUUFBNUNBLFFBQTRDO0FBQUEsTUFBbENDLFFBQWtDLFFBQWxDQSxRQUFrQztBQUFBLDhCQUF4QkMsV0FBd0I7QUFBQSxNQUF4QkEsV0FBd0Isb0NBQVYsRUFBVTs7QUFDeEUsd0JBQU9GLGFBQWFHLFNBQWIsSUFBMEJGLGFBQWFFLFNBQTlDLEVBQXlELG1CQUF6RDs7QUFFQSxNQUFJSCxhQUFhQyxRQUFqQixFQUEyQjtBQUN6QixXQUFPLElBQVA7QUFDRDs7QUFFRCxNQUFJLFFBQU9ELFFBQVAseUNBQU9BLFFBQVAsT0FBb0IsUUFBcEIsSUFBZ0NBLGFBQWEsSUFBakQsRUFBdUQ7QUFDckQsV0FBTyw0QkFBUDtBQUNEO0FBQ0QsTUFBSSxRQUFPQyxRQUFQLHlDQUFPQSxRQUFQLE9BQW9CLFFBQXBCLElBQWdDQSxhQUFhLElBQWpELEVBQXVEO0FBQ3JELFdBQU8sNEJBQVA7QUFDRDs7QUFFRDtBQUNBLE9BQUssSUFBTUcsR0FBWCxJQUFrQkosUUFBbEIsRUFBNEI7QUFDMUIsUUFBSSxFQUFFSSxPQUFPRixXQUFULENBQUosRUFBMkI7QUFDekIsVUFBSSxDQUFDRCxTQUFTSSxjQUFULENBQXdCRCxHQUF4QixDQUFMLEVBQW1DO0FBQ2pDLHlCQUFlQSxHQUFmLGtCQUErQkosU0FBU0ksR0FBVCxDQUEvQjtBQUNELE9BRkQsTUFFTyxJQUFJSixTQUFTSSxHQUFULE1BQWtCSCxTQUFTRyxHQUFULENBQXRCLEVBQXFDO0FBQzFDLHlCQUFlQSxHQUFmLGtCQUErQkosU0FBU0ksR0FBVCxDQUEvQixZQUFtREgsU0FBU0csR0FBVCxDQUFuRDtBQUNEO0FBQ0Y7QUFDRjs7QUFFRDtBQUNBLE9BQUssSUFBTUEsSUFBWCxJQUFrQkgsUUFBbEIsRUFBNEI7QUFDMUIsUUFBSSxFQUFFRyxRQUFPRixXQUFULENBQUosRUFBMkI7QUFDekIsVUFBSSxDQUFDRixTQUFTSyxjQUFULENBQXdCRCxJQUF4QixDQUFMLEVBQW1DO0FBQ2pDLHlCQUFlQSxJQUFmLCtCQUE0Q0gsU0FBU0csSUFBVCxDQUE1QztBQUNEO0FBQ0Y7QUFDRjs7QUFFRCxTQUFPLElBQVA7QUFDRDtBQUNEOztBQUVBO0FBQ0E7QUFDTyxTQUFTTCxlQUFULENBQXlCTyxDQUF6QixFQUE0QkMsQ0FBNUIsRUFBbUQ7QUFBQSxrRkFBSixFQUFJO0FBQUEsMkJBQW5CQyxNQUFtQjtBQUFBLE1BQW5CQSxNQUFtQixnQ0FBVixFQUFVOztBQUV4RCxNQUFJRixNQUFNQyxDQUFWLEVBQWE7QUFDWCxXQUFPLElBQVA7QUFDRDs7QUFFRCxNQUFJLFFBQU9ELENBQVAseUNBQU9BLENBQVAsT0FBYSxRQUFiLElBQXlCQSxNQUFNLElBQS9CLElBQ0YsUUFBT0MsQ0FBUCx5Q0FBT0EsQ0FBUCxPQUFhLFFBRFgsSUFDdUJBLE1BQU0sSUFEakMsRUFDdUM7QUFDckMsV0FBTyxLQUFQO0FBQ0Q7O0FBRUQsTUFBSUUsT0FBT0MsSUFBUCxDQUFZSixDQUFaLEVBQWVLLE1BQWYsS0FBMEJGLE9BQU9DLElBQVAsQ0FBWUgsQ0FBWixFQUFlSSxNQUE3QyxFQUFxRDtBQUNuRCxXQUFPLEtBQVA7QUFDRDs7QUFFRCxPQUFLLElBQU1QLEdBQVgsSUFBa0JFLENBQWxCLEVBQXFCO0FBQ25CLFFBQUksRUFBRUYsT0FBT0ksTUFBVCxNQUFxQixFQUFFSixPQUFPRyxDQUFULEtBQWVELEVBQUVGLEdBQUYsTUFBV0csRUFBRUgsR0FBRixDQUEvQyxDQUFKLEVBQTREO0FBQzFELGFBQU8sS0FBUDtBQUNEO0FBQ0Y7QUFDRCxPQUFLLElBQU1BLEtBQVgsSUFBa0JHLENBQWxCLEVBQXFCO0FBQ25CLFFBQUksRUFBRUgsU0FBT0ksTUFBVCxLQUFxQixFQUFFSixTQUFPRSxDQUFULENBQXpCLEVBQXVDO0FBQ3JDLGFBQU8sS0FBUDtBQUNEO0FBQ0Y7QUFDRCxTQUFPLElBQVA7QUFDRCIsImZpbGUiOiJjb21wYXJlLW9iamVjdHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXNzZXJ0IGZyb20gJ2Fzc2VydCc7XG5cbi8qKlxuICogUGVyZm9ybXMgZXF1YWxpdHkgYnkgaXRlcmF0aW5nIHRocm91Z2gga2V5cyBvbiBhbiBvYmplY3QgYW5kIHJldHVybmluZyBmYWxzZVxuICogd2hlbiBhbnkga2V5IGhhcyB2YWx1ZXMgd2hpY2ggYXJlIG5vdCBzdHJpY3RseSBlcXVhbCBiZXR3ZWVuIHRoZSBhcmd1bWVudHMuXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0Lm9sZFByb3BzIC0gb2JqZWN0IHdpdGggb2xkIGtleS92YWx1ZSBwYWlyc1xuICogQHBhcmFtIHtPYmplY3R9IG9wdC5uZXdQcm9wcyAtIG9iamVjdCB3aXRoIG5ldyBrZXkvdmFsdWUgcGFpcnNcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHQuaWdub3JlUHJvcHM9e30gLSBvYmplY3QsIGtleXMgdGhhdCBzaG91bGQgbm90IGJlIGNvbXBhcmVkXG4gKiBAcmV0dXJucyB7bnVsbHxTdHJpbmd9IC0gbnVsbCB3aGVuIHZhbHVlcyBvZiBhbGwga2V5cyBhcmUgc3RyaWN0bHkgZXF1YWwuXG4gKiAgIGlmIHVuZXF1YWwsIHJldHVybnMgYSBzdHJpbmcgZXhwbGFpbmluZyB3aGF0IGNoYW5nZWQuXG4gKi9cbi8qIGVzbGludC1kaXNhYmxlIG1heC1zdGF0ZW1lbnRzLCBjb21wbGV4aXR5ICovXG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZVByb3BzKHtvbGRQcm9wcywgbmV3UHJvcHMsIGlnbm9yZVByb3BzID0ge319ID0ge30pIHtcbiAgYXNzZXJ0KG9sZFByb3BzICE9PSB1bmRlZmluZWQgJiYgbmV3UHJvcHMgIT09IHVuZGVmaW5lZCwgJ2NvbXBhcmVQcm9wcyBhcmdzJyk7XG5cbiAgaWYgKG9sZFByb3BzID09PSBuZXdQcm9wcykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvbGRQcm9wcyAhPT0gJ29iamVjdCcgfHwgb2xkUHJvcHMgPT09IG51bGwpIHtcbiAgICByZXR1cm4gJ29sZCBwcm9wcyBpcyBub3QgYW4gb2JqZWN0JztcbiAgfVxuICBpZiAodHlwZW9mIG5ld1Byb3BzICE9PSAnb2JqZWN0JyB8fCBuZXdQcm9wcyA9PT0gbnVsbCkge1xuICAgIHJldHVybiAnbmV3IHByb3BzIGlzIG5vdCBhbiBvYmplY3QnO1xuICB9XG5cbiAgLy8gVGVzdCBpZiBuZXcgcHJvcHMgZGlmZmVyZW50IGZyb20gb2xkIHByb3BzXG4gIGZvciAoY29uc3Qga2V5IGluIG9sZFByb3BzKSB7XG4gICAgaWYgKCEoa2V5IGluIGlnbm9yZVByb3BzKSkge1xuICAgICAgaWYgKCFuZXdQcm9wcy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIHJldHVybiBgcHJvcCAke2tleX0gZHJvcHBlZDogJHtvbGRQcm9wc1trZXldfSAtPiAodW5kZWZpbmVkKWA7XG4gICAgICB9IGVsc2UgaWYgKG9sZFByb3BzW2tleV0gIT09IG5ld1Byb3BzW2tleV0pIHtcbiAgICAgICAgcmV0dXJuIGBwcm9wICR7a2V5fSBjaGFuZ2VkOiAke29sZFByb3BzW2tleV19IC0+ICR7bmV3UHJvcHNba2V5XX1gO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIFRlc3QgaWYgYW55IG5ldyBwcm9wcyBoYXZlIGJlZW4gYWRkZWRcbiAgZm9yIChjb25zdCBrZXkgaW4gbmV3UHJvcHMpIHtcbiAgICBpZiAoIShrZXkgaW4gaWdub3JlUHJvcHMpKSB7XG4gICAgICBpZiAoIW9sZFByb3BzLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgcmV0dXJuIGBwcm9wICR7a2V5fSBhZGRlZDogKHVuZGVmaW5lZCkgLT4gJHtuZXdQcm9wc1trZXldfWA7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG4vKiBlc2xpbnQtZW5hYmxlIG1heC1zdGF0ZW1lbnRzLCBjb21wbGV4aXR5ICovXG5cbi8vIFNoYWxsb3cgY29tcGFyZVxuLyogZXNsaW50LWRpc2FibGUgY29tcGxleGl0eSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFyZUVxdWFsU2hhbGxvdyhhLCBiLCB7aWdub3JlID0ge319ID0ge30pIHtcblxuICBpZiAoYSA9PT0gYikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBhICE9PSAnb2JqZWN0JyB8fCBhID09PSBudWxsIHx8XG4gICAgdHlwZW9mIGIgIT09ICdvYmplY3QnIHx8IGIgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAoT2JqZWN0LmtleXMoYSkubGVuZ3RoICE9PSBPYmplY3Qua2V5cyhiKS5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBmb3IgKGNvbnN0IGtleSBpbiBhKSB7XG4gICAgaWYgKCEoa2V5IGluIGlnbm9yZSkgJiYgKCEoa2V5IGluIGIpIHx8IGFba2V5XSAhPT0gYltrZXldKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICBmb3IgKGNvbnN0IGtleSBpbiBiKSB7XG4gICAgaWYgKCEoa2V5IGluIGlnbm9yZSkgJiYgKCEoa2V5IGluIGEpKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cbiJdfQ==

/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = log;
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function log(priority) {
	  (0, _assert2.default)(Number.isFinite(priority), 'log priority must be a number');
	  if (priority <= log.priority) {
	    var _console;
	
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }
	
	    (_console = console).debug.apply(_console, args);
	  }
	} /* eslint-disable no-console */
	/* global console, window */
	
	
	var cache = {};
	
	function once(priority, arg) {
	  if (!cache[arg]) {
	    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	      args[_key2 - 2] = arguments[_key2];
	    }
	
	    log.apply(undefined, [priority, arg].concat(args));
	  }
	  cache[arg] = true;
	}
	
	log.priority = 0;
	log.log = log;
	log.once = once;
	
	// Expose to browser
	if (typeof window !== 'undefined') {
	  window.deck = window.deck || { log: log };
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvdXRpbHMvbG9nLmpzIl0sIm5hbWVzIjpbImxvZyIsInByaW9yaXR5IiwiTnVtYmVyIiwiaXNGaW5pdGUiLCJhcmdzIiwiZGVidWciLCJjYWNoZSIsIm9uY2UiLCJhcmciLCJ3aW5kb3ciLCJkZWNrIl0sIm1hcHBpbmdzIjoiOzs7OztrQkFJd0JBLEc7O0FBRnhCOzs7Ozs7QUFFZSxTQUFTQSxHQUFULENBQWFDLFFBQWIsRUFBZ0M7QUFDN0Msd0JBQU9DLE9BQU9DLFFBQVAsQ0FBZ0JGLFFBQWhCLENBQVAsRUFBa0MsK0JBQWxDO0FBQ0EsTUFBSUEsWUFBWUQsSUFBSUMsUUFBcEIsRUFBOEI7QUFBQTs7QUFBQSxzQ0FGU0csSUFFVDtBQUZTQSxVQUVUO0FBQUE7O0FBQzVCLHlCQUFRQyxLQUFSLGlCQUFpQkQsSUFBakI7QUFDRDtBQUNGLEMsQ0FURDtBQUNBOzs7QUFVQSxJQUFNRSxRQUFRLEVBQWQ7O0FBRUEsU0FBU0MsSUFBVCxDQUFjTixRQUFkLEVBQXdCTyxHQUF4QixFQUFzQztBQUNwQyxNQUFJLENBQUNGLE1BQU1FLEdBQU4sQ0FBTCxFQUFpQjtBQUFBLHVDQURhSixJQUNiO0FBRGFBLFVBQ2I7QUFBQTs7QUFDZkosMEJBQUlDLFFBQUosRUFBY08sR0FBZCxTQUFzQkosSUFBdEI7QUFDRDtBQUNERSxRQUFNRSxHQUFOLElBQWEsSUFBYjtBQUNEOztBQUVEUixJQUFJQyxRQUFKLEdBQWUsQ0FBZjtBQUNBRCxJQUFJQSxHQUFKLEdBQVVBLEdBQVY7QUFDQUEsSUFBSU8sSUFBSixHQUFXQSxJQUFYOztBQUVBO0FBQ0EsSUFBSSxPQUFPRSxNQUFQLEtBQWtCLFdBQXRCLEVBQW1DO0FBQ2pDQSxTQUFPQyxJQUFQLEdBQWNELE9BQU9DLElBQVAsSUFBZSxFQUFDVixRQUFELEVBQTdCO0FBQ0QiLCJmaWxlIjoibG9nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuLyogZ2xvYmFsIGNvbnNvbGUsIHdpbmRvdyAqL1xuaW1wb3J0IGFzc2VydCBmcm9tICdhc3NlcnQnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsb2cocHJpb3JpdHksIC4uLmFyZ3MpIHtcbiAgYXNzZXJ0KE51bWJlci5pc0Zpbml0ZShwcmlvcml0eSksICdsb2cgcHJpb3JpdHkgbXVzdCBiZSBhIG51bWJlcicpO1xuICBpZiAocHJpb3JpdHkgPD0gbG9nLnByaW9yaXR5KSB7XG4gICAgY29uc29sZS5kZWJ1ZyguLi5hcmdzKTtcbiAgfVxufVxuXG5jb25zdCBjYWNoZSA9IHt9O1xuXG5mdW5jdGlvbiBvbmNlKHByaW9yaXR5LCBhcmcsIC4uLmFyZ3MpIHtcbiAgaWYgKCFjYWNoZVthcmddKSB7XG4gICAgbG9nKHByaW9yaXR5LCBhcmcsIC4uLmFyZ3MpO1xuICB9XG4gIGNhY2hlW2FyZ10gPSB0cnVlO1xufVxuXG5sb2cucHJpb3JpdHkgPSAwO1xubG9nLmxvZyA9IGxvZztcbmxvZy5vbmNlID0gb25jZTtcblxuLy8gRXhwb3NlIHRvIGJyb3dzZXJcbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICB3aW5kb3cuZGVjayA9IHdpbmRvdy5kZWNrIHx8IHtsb2d9O1xufVxuIl19

/***/ },
/* 403 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.fp64ify = fp64ify;
	// TODO - move to shaderlib utilities
	function fp64ify(a) {
	  var hiPart = Math.fround(a);
	  var loPart = a - Math.fround(a);
	  return [hiPart, loPart];
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvdXRpbHMvZnA2NC5qcyJdLCJuYW1lcyI6WyJmcDY0aWZ5IiwiYSIsImhpUGFydCIsIk1hdGgiLCJmcm91bmQiLCJsb1BhcnQiXSwibWFwcGluZ3MiOiI7Ozs7O1FBQ2dCQSxPLEdBQUFBLE87QUFEaEI7QUFDTyxTQUFTQSxPQUFULENBQWlCQyxDQUFqQixFQUFvQjtBQUN6QixNQUFNQyxTQUFTQyxLQUFLQyxNQUFMLENBQVlILENBQVosQ0FBZjtBQUNBLE1BQU1JLFNBQVNKLElBQUlFLEtBQUtDLE1BQUwsQ0FBWUgsQ0FBWixDQUFuQjtBQUNBLFNBQU8sQ0FBQ0MsTUFBRCxFQUFTRyxNQUFULENBQVA7QUFDRCIsImZpbGUiOiJmcDY0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVE9ETyAtIG1vdmUgdG8gc2hhZGVybGliIHV0aWxpdGllc1xuZXhwb3J0IGZ1bmN0aW9uIGZwNjRpZnkoYSkge1xuICBjb25zdCBoaVBhcnQgPSBNYXRoLmZyb3VuZChhKTtcbiAgY29uc3QgbG9QYXJ0ID0gYSAtIE1hdGguZnJvdW5kKGEpO1xuICByZXR1cm4gW2hpUGFydCwgbG9QYXJ0XTtcbn1cbiJdfQ==

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	// IMLEMENTATION NOTES: Why new layers are created on every render
	//
	// The key here is to understand the declarative / functional
	// programming nature of "reactive" applications.
	//
	// - In a reactive application, the entire "UI tree"
	//   is re-rendered every time something in the application changes.
	//
	// - The UI framework (such as React or deck.gl) then diffs the rendered
	//   tree of UI elements (React Elements or deck.gl Layers) against the
	//   previously tree and makes optimized changes (to the DOM or to WebGL state).
	//
	// - Deck.gl layers are not based on React.
	//   But it should be possible to wrap deck.gl layers in React components to
	//   enable use of JSX.
	//
	// The deck.gl model that for the app creates a new set of on layers on every
	// render.
	// Internally, the new layers are efficiently matched against existing layers
	// using layer ids.
	//
	// All calculated state (programs, attributes etc) are stored in a state object
	// and this state object is moved forward to the match layer on every render
	// cycle.  The new layer ends up with the state of the old layer (and the
	// props of the new layer), while the old layer is simply discarded for
	// garbage collecion.
	//
	/* eslint-disable no-try-catch */
	
	
	var _layer = __webpack_require__(397);
	
	var _layer2 = _interopRequireDefault(_layer);
	
	var _viewport = __webpack_require__(405);
	
	var _utils = __webpack_require__(399);
	
	var _assert = __webpack_require__(196);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _pickLayers = __webpack_require__(409);
	
	var _luma = __webpack_require__(185);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var LayerManager = function () {
	  function LayerManager(_ref) {
	    var gl = _ref.gl;
	
	    _classCallCheck(this, LayerManager);
	
	    this.prevLayers = [];
	    this.layers = [];
	    // Tracks if any layers were drawn last update
	    // Needed to ensure that screen is cleared when no layers are shown
	    this.drewLayers = false;
	    this.oldContext = {};
	    this.context = {
	      gl: gl,
	      uniforms: {},
	      viewport: null,
	      viewportChanged: true,
	      pickingFBO: null
	    };
	    this.redrawNeeded = true;
	    Object.seal(this.context);
	  }
	
	  _createClass(LayerManager, [{
	    key: 'setContext',
	    value: function setContext(_ref2) {
	      var width = _ref2.width,
	          height = _ref2.height,
	          latitude = _ref2.latitude,
	          longitude = _ref2.longitude,
	          zoom = _ref2.zoom,
	          pitch = _ref2.pitch,
	          bearing = _ref2.bearing,
	          altitude = _ref2.altitude;
	
	      /* eslint-disable */
	      var oldViewport = this.context.viewport;
	      var viewportChanged = !oldViewport || width !== oldViewport.width || height !== oldViewport.height || latitude !== oldViewport.latitude || longitude !== oldViewport.longitude || zoom !== oldViewport.zoom || bearing !== oldViewport.bearing || pitch !== oldViewport.pitch || altitude !== oldViewport.altitude;
	
	      if (viewportChanged || !this.context.viewport) {
	        Object.assign(this.oldContext, this.context);
	
	        var viewport = new _viewport.Viewport({
	          width: width, height: height, latitude: latitude, longitude: longitude, zoom: zoom, pitch: pitch, bearing: bearing, altitude: altitude,
	          tileSize: 512
	        });
	
	        this.context.viewport = viewport;
	        this.context.viewportChanged = viewportChanged;
	        this.context.uniforms = {};
	
	        (0, _utils.log)(4, viewport, latitude, longitude, zoom);
	      }
	
	      return this;
	    }
	  }, {
	    key: 'updateLayers',
	    value: function updateLayers(_ref3) {
	      var newLayers = _ref3.newLayers;
	
	      /* eslint-disable */
	      (0, _assert2.default)(this.context.viewport, 'LayerManager.updateLayers: viewport not set');
	
	      // Filter out any null layers
	      newLayers = newLayers.filter(function (newLayer) {
	        return newLayer !== null;
	      });
	
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = newLayers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var layer = _step.value;
	
	          layer.context = this.context;
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	
	      this.prevLayers = this.layers;
	
	      var _updateLayers2 = this._updateLayers({
	        oldLayers: this.prevLayers,
	        newLayers: newLayers
	      }),
	          error = _updateLayers2.error,
	          generatedLayers = _updateLayers2.generatedLayers;
	
	      this.layers = generatedLayers;
	      // Throw first error found, if any
	      if (error) {
	        throw error;
	      }
	      return this;
	    }
	  }, {
	    key: 'drawLayers',
	    value: function drawLayers() {
	      (0, _assert2.default)(this.context.viewport, 'LayerManager.drawLayers: viewport not set');
	
	      var uniforms = this.context.uniforms;
	
	      var layerIndex = 0;
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;
	
	      try {
	        for (var _iterator2 = this.layers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var layer = _step2.value;
	
	          if (layer.props.visible) {
	            layer.drawLayer({ uniforms: uniforms, layerIndex: layerIndex });
	            layerIndex++;
	          }
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	
	      return this;
	    }
	  }, {
	    key: 'pickLayer',
	    value: function pickLayer(_ref4) {
	      var x = _ref4.x,
	          y = _ref4.y,
	          mode = _ref4.mode;
	      var _context = this.context,
	          gl = _context.gl,
	          uniforms = _context.uniforms;
	
	      // Set up a frame buffer if needed
	
	      if (this.context.pickingFBO === null || gl.canvas.width !== this.context.pickingFBO.width || gl.canvas.height !== this.context.pickingFBO.height) {
	        this.context.pickingFBO = new _luma.FramebufferObject(gl, {
	          width: gl.canvas.width,
	          height: gl.canvas.height
	        });
	      }
	      return (0, _pickLayers.pickLayers)(gl, {
	        x: x,
	        y: y,
	        uniforms: uniforms,
	        layers: this.layers,
	        mode: mode,
	        pickingFBO: this.context.pickingFBO
	      });
	    }
	  }, {
	    key: 'needsRedraw',
	    value: function needsRedraw() {
	      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref5$clearRedrawFlag = _ref5.clearRedrawFlags,
	          clearRedrawFlags = _ref5$clearRedrawFlag === undefined ? false : _ref5$clearRedrawFlag;
	
	      if (!this.context.viewport) {
	        return false;
	      }
	
	      var redraw = false;
	
	      // Make sure that buffer is cleared once when layer list becomes empty
	      if (this.layers.length === 0 && this.drewLayers) {
	        redraw = true;
	        return true;
	      }
	
	      if (this.redrawNeeded) {
	        this.redrawNeeded = false;
	        redraw = true;
	      }
	
	      var _iteratorNormalCompletion3 = true;
	      var _didIteratorError3 = false;
	      var _iteratorError3 = undefined;
	
	      try {
	        for (var _iterator3 = this.layers[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	          var layer = _step3.value;
	
	          redraw = redraw || layer.getNeedsRedraw({ clearRedrawFlags: clearRedrawFlags });
	          this.drewLayers = true;
	        }
	      } catch (err) {
	        _didIteratorError3 = true;
	        _iteratorError3 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion3 && _iterator3.return) {
	            _iterator3.return();
	          }
	        } finally {
	          if (_didIteratorError3) {
	            throw _iteratorError3;
	          }
	        }
	      }
	
	      return redraw;
	    }
	
	    // PRIVATE METHODS
	
	    // Match all layers, checking for caught errors
	    // To avoid having an exception in one layer disrupt other layers
	
	  }, {
	    key: '_updateLayers',
	    value: function _updateLayers(_ref6) {
	      var oldLayers = _ref6.oldLayers,
	          newLayers = _ref6.newLayers;
	
	      // Create old layer map
	      var oldLayerMap = {};
	      var _iteratorNormalCompletion4 = true;
	      var _didIteratorError4 = false;
	      var _iteratorError4 = undefined;
	
	      try {
	        for (var _iterator4 = oldLayers[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
	          var oldLayer = _step4.value;
	
	          if (oldLayerMap[oldLayer.id]) {
	            _utils.log.once(0, 'Multipe old layers with same id ' + layerName(oldLayer));
	          } else {
	            oldLayerMap[oldLayer.id] = oldLayer;
	          }
	        }
	
	        // Allocate array for generated layers
	      } catch (err) {
	        _didIteratorError4 = true;
	        _iteratorError4 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion4 && _iterator4.return) {
	            _iterator4.return();
	          }
	        } finally {
	          if (_didIteratorError4) {
	            throw _iteratorError4;
	          }
	        }
	      }
	
	      var generatedLayers = [];
	
	      // Match sublayers
	      var error = this._matchSublayers({
	        newLayers: newLayers, oldLayerMap: oldLayerMap, generatedLayers: generatedLayers
	      });
	
	      var error2 = this._finalizeOldLayers(oldLayers);
	      var firstError = error || error2;
	      return { error: firstError, generatedLayers: generatedLayers };
	    }
	
	    /* eslint-disable max-statements */
	
	  }, {
	    key: '_matchSublayers',
	    value: function _matchSublayers(_ref7) {
	      var newLayers = _ref7.newLayers,
	          oldLayerMap = _ref7.oldLayerMap,
	          generatedLayers = _ref7.generatedLayers;
	
	      // Filter out any null layers
	      newLayers = newLayers.filter(function (newLayer) {
	        return newLayer !== null;
	      });
	
	      var error = null;
	      var _iteratorNormalCompletion5 = true;
	      var _didIteratorError5 = false;
	      var _iteratorError5 = undefined;
	
	      try {
	        for (var _iterator5 = newLayers[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
	          var newLayer = _step5.value;
	
	          newLayer.context = this.context;
	
	          try {
	            // 1. given a new coming layer, find its matching layer
	            var oldLayer = oldLayerMap[newLayer.id];
	            oldLayerMap[newLayer.id] = null;
	
	            if (oldLayer === null) {
	              _utils.log.once(0, 'Multipe new layers with same id ' + layerName(newLayer));
	            }
	
	            // Only transfer state at this stage. We must not generate exceptions
	            // until all layers' state have been transferred
	            if (oldLayer) {
	              (0, _utils.log)(3, 'matched ' + layerName(newLayer), oldLayer, '=>', newLayer);
	              this._transferLayerState(oldLayer, newLayer);
	              this._updateLayer(newLayer);
	            } else {
	              this._initializeNewLayer(newLayer);
	            }
	            generatedLayers.push(newLayer);
	
	            // Call layer lifecycle method: render sublayers
	            var sublayers = newLayer.renderLayers();
	            // End layer lifecycle method: render sublayers
	
	            if (sublayers) {
	              sublayers = Array.isArray(sublayers) ? sublayers : [sublayers];
	              this._matchSublayers({
	                newLayers: sublayers,
	                oldLayerMap: oldLayerMap,
	                generatedLayers: generatedLayers
	              });
	            }
	          } catch (err) {
	            _utils.log.once(0, 'deck.gl error during matching of ' + layerName(newLayer) + ' ' + err, err);
	            // Save first error
	            error = error || err;
	          }
	        }
	      } catch (err) {
	        _didIteratorError5 = true;
	        _iteratorError5 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion5 && _iterator5.return) {
	            _iterator5.return();
	          }
	        } finally {
	          if (_didIteratorError5) {
	            throw _iteratorError5;
	          }
	        }
	      }
	
	      return error;
	    }
	  }, {
	    key: '_transferLayerState',
	    value: function _transferLayerState(oldLayer, newLayer) {
	      var state = oldLayer.state,
	          props = oldLayer.props;
	
	      // sanity check
	
	      (0, _assert2.default)(state, 'deck.gl sanity check - Matching layer has no state');
	      (0, _assert2.default)(oldLayer !== newLayer, 'deck.gl sanity check - Matching layer is same');
	
	      // Move state
	      newLayer.state = state;
	      state.layer = newLayer;
	
	      // Update model layer reference
	      if (state.model) {
	        state.model.userData.layer = newLayer;
	      }
	      // Keep a temporary ref to the old props, for prop comparison
	      newLayer.oldProps = props;
	      oldLayer.state = null;
	    }
	
	    // Update the old layers that were not matched
	
	  }, {
	    key: '_finalizeOldLayers',
	    value: function _finalizeOldLayers(oldLayers) {
	      var error = null;
	      // Unmatched layers still have state, it will be discarded
	      var _iteratorNormalCompletion6 = true;
	      var _didIteratorError6 = false;
	      var _iteratorError6 = undefined;
	
	      try {
	        for (var _iterator6 = oldLayers[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
	          var layer = _step6.value;
	
	          if (layer.state) {
	            error = error || this._finalizeLayer(layer);
	          }
	        }
	      } catch (err) {
	        _didIteratorError6 = true;
	        _iteratorError6 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion6 && _iterator6.return) {
	            _iterator6.return();
	          }
	        } finally {
	          if (_didIteratorError6) {
	            throw _iteratorError6;
	          }
	        }
	      }
	
	      return error;
	    }
	
	    // Initializes a single layer, calling layer methods
	
	  }, {
	    key: '_initializeNewLayer',
	    value: function _initializeNewLayer(layer) {
	      var error = null;
	      // Check if new layer, and initialize it's state
	      if (!layer.state) {
	        (0, _utils.log)(1, 'initializing ' + layerName(layer));
	        try {
	          layer.initializeLayer({
	            oldProps: {},
	            props: layer.props,
	            oldContext: this.oldContext,
	            context: this.context,
	            changeFlags: layer.diffProps({}, layer.props, this.context)
	          });
	        } catch (err) {
	          _utils.log.once(0, 'deck.gl error during initialization of ' + layerName(layer) + ' ' + err, err);
	          // Save first error
	          error = error || err;
	        }
	        // Set back pointer (used in picking)
	        if (layer.state) {
	          layer.state.layer = layer;
	          // Save layer on model for picking purposes
	          // TODO - store on model.userData rather than directly on model
	        }
	        if (layer.state && layer.state.model) {
	          layer.state.model.userData.layer = layer;
	        }
	      }
	      return error;
	    }
	
	    // Updates a single layer, calling layer methods
	
	  }, {
	    key: '_updateLayer',
	    value: function _updateLayer(layer) {
	      var oldProps = layer.oldProps,
	          props = layer.props;
	
	      var error = null;
	      if (oldProps) {
	        try {
	          layer.updateLayer({
	            oldProps: oldProps,
	            props: props,
	            context: this.context,
	            oldContext: this.oldContext,
	            changeFlags: layer.diffProps(oldProps, layer.props, this.context)
	          });
	        } catch (err) {
	          _utils.log.once(0, 'deck.gl error during update of ' + layerName(layer), err);
	          // Save first error
	          error = err;
	        }
	        (0, _utils.log)(2, 'updating ' + layerName(layer));
	      }
	      return error;
	    }
	
	    // Finalizes a single layer
	
	  }, {
	    key: '_finalizeLayer',
	    value: function _finalizeLayer(layer) {
	      var error = null;
	      var state = layer.state;
	
	      if (state) {
	        try {
	          layer.finalizeLayer();
	        } catch (err) {
	          _utils.log.once(0, 'deck.gl error during finalization of ' + layerName(layer), err);
	          // Save first error
	          error = err;
	        }
	        layer.state = null;
	        (0, _utils.log)(1, 'finalizing ' + layerName(layer));
	      }
	      return error;
	    }
	  }]);
	
	  return LayerManager;
	}();
	
	exports.default = LayerManager;
	
	
	function layerName(layer) {
	  if (layer instanceof _layer2.default) {
	    return '' + layer;
	  }
	  return !layer ? 'null layer' : 'invalid layer';
	}
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _viewport = __webpack_require__(406);
	
	Object.keys(_viewport).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _viewport[key];
	    }
	  });
	});
	Object.defineProperty(exports, 'Viewport', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_viewport).default;
	  }
	});
	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_viewport).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy92aWV3cG9ydC9pbmRleC5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs2Q0FDUUEsTzs7Ozs7OzZDQUNBQSxPIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi92aWV3cG9ydCc7XG5leHBvcnQge2RlZmF1bHQgYXMgVmlld3BvcnR9IGZyb20gJy4vdmlld3BvcnQnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGRlZmF1bHR9IGZyb20gJy4vdmlld3BvcnQnO1xuIl19

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.COORDINATE_SYSTEM = undefined;
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _desc, _value, _class; // View and Projection Matrix calculations for mapbox-js style
	// map view properties
	//
	// ATTRIBUTION:
	// Projection matrix creation are intentionally kept compatible with
	// mapbox-gl's implementation to ensure that seamless interoperation
	// with mapbox and react-map-gl.
	// See: transform.js in https://github.com/mapbox/mapbox-gl-js
	
	var _perspective = __webpack_require__(407);
	
	Object.defineProperty(exports, 'COORDINATE_SYSTEM', {
	  enumerable: true,
	  get: function get() {
	    return _perspective.COORDINATE_SYSTEM;
	  }
	});
	
	var _perspective2 = _interopRequireDefault(_perspective);
	
	var _autobindDecorator = __webpack_require__(183);
	
	var _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);
	
	var _glMatrix = __webpack_require__(229);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
	  var desc = {};
	  Object['ke' + 'ys'](descriptor).forEach(function (key) {
	    desc[key] = descriptor[key];
	  });
	  desc.enumerable = !!desc.enumerable;
	  desc.configurable = !!desc.configurable;
	
	  if ('value' in desc || desc.initializer) {
	    desc.writable = true;
	  }
	
	  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
	    return decorator(target, property, desc) || desc;
	  }, desc);
	
	  if (context && desc.initializer !== void 0) {
	    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
	    desc.initializer = undefined;
	  }
	
	  if (desc.initializer === void 0) {
	    Object['define' + 'Property'](target, property, desc);
	    desc = null;
	  }
	
	  return desc;
	}
	
	function fp64ify(a) {
	  var hiPart = Math.fround(a);
	  var loPart = a - Math.fround(a);
	  return [hiPart, loPart];
	}
	
	var WebGLViewport = (_class = function (_Viewport) {
	  _inherits(WebGLViewport, _Viewport);
	
	  function WebGLViewport(options) {
	    _classCallCheck(this, WebGLViewport);
	
	    var _this = _possibleConstructorReturn(this, (WebGLViewport.__proto__ || Object.getPrototypeOf(WebGLViewport)).call(this, options));
	
	    _this._calculateWebGLMatrices();
	    return _this;
	  }
	
	  /**
	   * Returns a projection matrix suitable for shaders
	   * @return {Float32Array} - 4x4 projection matrix that can be used in shaders
	   */
	
	
	  _createClass(WebGLViewport, [{
	    key: 'getProjectionMatrix',
	    value: function getProjectionMatrix() {
	      return this.glProjectionMatrix;
	    }
	  }, {
	    key: 'getProjectionMatrixFP64',
	    value: function getProjectionMatrixFP64() {
	      return this.glProjectionMatrixFP64;
	    }
	  }, {
	    key: 'getProjectionMatrixUncentered',
	    value: function getProjectionMatrixUncentered() {
	      return this.glProjectionMatrixUncentered;
	    }
	  }, {
	    key: 'getWebGLMatrices',
	    value: function getWebGLMatrices() {
	      return {
	        projectionMatrix: this.glProjectionMatrix,
	        projectionFP64: this.glProjectionMatrixFP64
	      };
	    }
	  }, {
	    key: 'getUniforms',
	    value: function getUniforms() {
	      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref$projectionMode = _ref.projectionMode,
	          projectionMode = _ref$projectionMode === undefined ? _perspective.COORDINATE_SYSTEM.LNGLAT : _ref$projectionMode,
	          _ref$positionOrigin = _ref.positionOrigin,
	          positionOrigin = _ref$positionOrigin === undefined ? [0, 0] : _ref$positionOrigin,
	          _ref$modelMatrix = _ref.modelMatrix,
	          modelMatrix = _ref$modelMatrix === undefined ? null : _ref$modelMatrix;
	
	      // TODO: move the following line to initialization so that it's done only once
	      var positionOriginPixels = this.projectFlat(positionOrigin);
	
	      var projectedPositionOrigin = [positionOriginPixels[0], positionOriginPixels[1], 0.0, 1.0];
	      var projections = this.getProjections();
	      var viewProjectionMatrix = projections.viewProjectionMatrix;
	
	
	      var projectionCenter = _glMatrix.vec4.transformMat4([], projectedPositionOrigin, viewProjectionMatrix);
	
	      // If necessary add modelMatrix to clipSpace projection
	      if (modelMatrix) {
	        _glMatrix.mat4.multiply(viewProjectionMatrix, viewProjectionMatrix, modelMatrix);
	      }
	
	      return {
	        // Projection mode values
	        projectionMode: projectionMode,
	        projectionCenter: projectionCenter,
	
	        // Main projection matrices
	        projectionMatrix: this.glProjectionMatrix,
	        projectionFP64: this.glProjectionMatrixFP64,
	        projectionPixelsPerUnit: this.pixelsPerMeter,
	        projectionScale: this.scale,
	        projectionScaleFP64: fp64ify(this.scale),
	
	        // TODO - deprecated, remove
	        mercatorScale: Math.pow(2, this.zoom),
	        mercatorCenter: this.center
	        // projectionMatrixCentered: this.glProjectionMatrix,
	        // projectionMatrixUncentered: this.glProjectionMatrixUncentered
	        // _ONE uniform is hack: make tan_fp64() callable in existing 32bit layers
	      };
	    }
	  }, {
	    key: '_calculateWebGLMatrices',
	    value: function _calculateWebGLMatrices() {
	      this.glProjectionMatrix = new Float32Array(this.viewProjectionMatrix);
	      this.glProjectionMatrixFP64 = new Float32Array(32);
	      this._dy64ifyProjectionMatrix();
	    }
	  }, {
	    key: '_dy64ifyProjectionMatrix',
	    value: function _dy64ifyProjectionMatrix() {
	      // Transpose the projection matrix to column major for GLSL.
	      for (var i = 0; i < 4; ++i) {
	        for (var j = 0; j < 4; ++j) {
	          var _fp64ify = fp64ify(this.viewProjectionMatrix[j * 4 + i]);
	
	          var _fp64ify2 = _slicedToArray(_fp64ify, 2);
	
	          this.glProjectionMatrixFP64[(i * 4 + j) * 2] = _fp64ify2[0];
	          this.glProjectionMatrixFP64[(i * 4 + j) * 2 + 1] = _fp64ify2[1];
	        }
	      }
	    }
	  }]);
	
	  return WebGLViewport;
	}(_perspective2.default), (_applyDecoratedDescriptor(_class.prototype, 'getProjectionMatrix', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'getProjectionMatrix'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'getProjectionMatrixFP64', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'getProjectionMatrixFP64'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'getProjectionMatrixUncentered', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'getProjectionMatrixUncentered'), _class.prototype)), _class);
	exports.default = WebGLViewport;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(408);

/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.COORDINATE_SYSTEM = undefined;
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _desc, _value, _class; // View and Projection Matrix calculations for mapbox-js style
	// map view properties
	//
	// ATTRIBUTION:
	// Projection matrix creation are intentionally kept compatible with
	// mapbox-gl's implementation to ensure that seamless interoperation
	// with mapbox and react-map-gl.
	// See: transform.js in https://github.com/mapbox/mapbox-gl-js
	
	// gl-matrix is a large dependency for a small module.
	// However since it is used by mapbox etc, it should already be present
	// in most target application bundles.
	
	
	var _glMatrix = __webpack_require__(229);
	
	var _autobindDecorator = __webpack_require__(183);
	
	var _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
	  var desc = {};
	  Object['ke' + 'ys'](descriptor).forEach(function (key) {
	    desc[key] = descriptor[key];
	  });
	  desc.enumerable = !!desc.enumerable;
	  desc.configurable = !!desc.configurable;
	
	  if ('value' in desc || desc.initializer) {
	    desc.writable = true;
	  }
	
	  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
	    return decorator(target, property, desc) || desc;
	  }, desc);
	
	  if (context && desc.initializer !== void 0) {
	    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
	    desc.initializer = undefined;
	  }
	
	  if (desc.initializer === void 0) {
	    Object['define' + 'Property'](target, property, desc);
	    desc = null;
	  }
	
	  return desc;
	}
	
	// CONSTANTS
	
	var PI = Math.PI;
	var PI_4 = PI / 4;
	var DEGREES_TO_RADIANS = PI / 180;
	var RADIANS_TO_DEGREES = 180 / PI;
	var TILE_SIZE = 512;
	var WORLD_SCALE = TILE_SIZE / (2 * PI);
	
	var DEFAULT_MAP_STATE = {
	  latitude: 37,
	  longitude: -122,
	  zoom: 11,
	  pitch: 0,
	  bearing: 0,
	  altitude: 1.5
	};
	
	// EXPORTS
	
	var COORDINATE_SYSTEM = exports.COORDINATE_SYSTEM = {
	  // Positions are interpreted as [lng,lat,elevation], distances as meters
	  LNGLAT: 1.0,
	  // Positions are interpreted as meter offsets, distances as meters
	  METERS: 2.0,
	  // Positions and distances are not transformed
	  IDENTITY: 0.0
	};
	
	var Viewport = (_class = function () {
	  /**
	   * @classdesc
	   * Manages coordinate system transformations for deck.gl.
	   *
	   * Note: The Viewport is immutable in the sense that it only has accessors.
	   * A new viewport instance should be created if any parameters have changed.
	   *
	   * @class
	   * @param {Object} opt - options
	   * @param {Boolean} mercator=true - Whether to use mercator projection
	   *
	   * @param {Number} opt.width=1 - Width of "viewport" or window
	   * @param {Number} opt.height=1 - Height of "viewport" or window
	   * @param {Array} opt.center=[0, 0] - Center of viewport
	   *   [longitude, latitude] or [x, y]
	   * @param {Number} opt.scale=1 - Either use scale or zoom
	   * @param {Number} opt.pitch=0 - Camera angle in degrees (0 is straight down)
	   * @param {Number} opt.bearing=0 - Map rotation in degrees (0 means north is up)
	   * @param {Number} opt.altitude=1.5 - Altitude of camera in screen units
	   *
	   * Web mercator projection short-hand parameters
	   * @param {Number} opt.latitude - Center of viewport on map (alternative to opt.center)
	   * @param {Number} opt.longitude - Center of viewport on map (alternative to opt.center)
	   * @param {Number} opt.zoom - Scale = Math.pow(2,zoom) on map (alternative to opt.scale)
	    * Notes:
	   *  - Only one of center or [latitude, longitude] can be specified
	   *  - [latitude, longitude] can only be specified when "mercator" is true
	   *  - Altitude has a default value that matches assumptions in mapbox-gl
	   *  - width and height are forced to 1 if supplied as 0, to avoid
	   *    division by zero. This is intended to reduce the burden of apps to
	   *    to check values before instantiating a Viewport.
	   */
	  /* eslint-disable complexity */
	  function Viewport() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        width = _ref.width,
	        height = _ref.height,
	        latitude = _ref.latitude,
	        longitude = _ref.longitude,
	        zoom = _ref.zoom,
	        pitch = _ref.pitch,
	        bearing = _ref.bearing,
	        altitude = _ref.altitude,
	        mercatorEnabled = _ref.mercatorEnabled;
	
	    _classCallCheck(this, Viewport);
	
	    // Viewport - support undefined arguments
	    /* eslint-disable max-len */
	    this.width = width !== undefined ? width : DEFAULT_MAP_STATE.width;
	    this.height = height !== undefined ? height : DEFAULT_MAP_STATE.height;
	    this.zoom = zoom !== undefined ? zoom : DEFAULT_MAP_STATE.zoom;
	    this.latitude = latitude !== undefined ? latitude : DEFAULT_MAP_STATE.latitude;
	    this.longitude = longitude !== undefined ? longitude : DEFAULT_MAP_STATE.longitude;
	    this.bearing = bearing !== undefined ? bearing : DEFAULT_MAP_STATE.bearing;
	    this.pitch = pitch !== undefined ? pitch : DEFAULT_MAP_STATE.pitch;
	    this.altitude = altitude !== undefined ? altitude : DEFAULT_MAP_STATE.altitude;
	    this.mercatorEnabled = mercatorEnabled !== undefined ? mercatorEnabled : true;
	    /* eslint-enable max-len */
	
	    // Silently allow apps to send in 0,0
	    this.width = this.width || 1;
	    this.height = this.height || 1;
	
	    this._initialize();
	
	    // Object.seal(this);
	    // Object.freeze(this);
	  }
	  /* eslint-enable complexity */
	
	  /**
	   * Projects latitude and longitude to pixel coordinates in window
	   * using viewport projection parameters
	   * - [longitude, latitude] to [x, y]
	   * - [longitude, latitude, Z] => [x, y, z]
	   * Note: By default, returns top-left coordinates for canvas/SVG type render
	   *
	   * @param {Array} lngLatZ - [lng, lat] or [lng, lat, Z]
	   * @param {Object} opts - options
	   * @param {Object} opts.topLeft=true - Whether projected coords are top left
	   * @return {Array} - [x, y] or [x, y, z] in top left coords
	   */
	
	
	  _createClass(Viewport, [{
	    key: 'project',
	    value: function project(lngLatZ) {
	      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	          _ref2$topLeft = _ref2.topLeft,
	          topLeft = _ref2$topLeft === undefined ? true : _ref2$topLeft;
	
	      var _ref3 = this.mercatorEnabled || this.mercator ? this.projectFlat(lngLatZ) : lngLatZ,
	          _ref4 = _slicedToArray(_ref3, 2),
	          X = _ref4[0],
	          Y = _ref4[1];
	
	      var v = [X, Y, lngLatZ[2] || 0, 1];
	
	      // vec4.sub(v, v, [this.centerX, this.centerY, 0, 0]);
	      _glMatrix.vec4.transformMat4(v, v, this.pixelProjectionMatrix);
	      // Divide by w
	      var scale = 1 / v[3];
	
	      _glMatrix.vec4.multiply(v, v, [scale, scale, scale, scale]);
	      var x = v[0],
	          y = v[1],
	          z = v[2];
	      // const y2 = topLeft ? this.height - 1 - y : y;
	
	      var y2 = topLeft ? this.height - y : y;
	      return lngLatZ.length === 2 ? [x, y2] : [x, y2, z];
	    }
	
	    /**
	     * Unproject pixel coordinates on screen onto [lon, lat] on map.
	     * - [x, y] => [lng, lat]
	     * - [x, y, z] => [lng, lat, Z]
	     * @param {Array} xyz -
	     * @return {Array} - [lng, lat, Z] or [X, Y, Z]
	     */
	
	  }, {
	    key: 'unproject',
	    value: function unproject(xyz) {
	      var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	          _ref5$topLeft = _ref5.topLeft,
	          topLeft = _ref5$topLeft === undefined ? true : _ref5$topLeft;
	
	      return xyz.length === 3 ? this.unproject3d(xyz, { topLeft: topLeft }) : this.unproject2d(xyz, { topLeft: topLeft });
	    }
	
	    /**
	     * Unproject 3d pixel coordinates on screen onto [lon, lat] on map.
	     * - [x, y, z] => [lng, lat, Z]
	     * @param {Array} xyz -
	     * @return {Array} - [lng, lat, Z]
	     */
	
	  }, {
	    key: 'unproject3d',
	    value: function unproject3d(xyz) {
	      var _ref6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	          _ref6$topLeft = _ref6.topLeft,
	          topLeft = _ref6$topLeft === undefined ? true : _ref6$topLeft;
	
	      var _xyz = _slicedToArray(xyz, 3),
	          _xyz$ = _xyz[0],
	          x = _xyz$ === undefined ? 0 : _xyz$,
	          _xyz$2 = _xyz[1],
	          y = _xyz$2 === undefined ? 0 : _xyz$2,
	          _xyz$3 = _xyz[2],
	          z = _xyz$3 === undefined ? 0 : _xyz$3;
	
	      var y2 = topLeft ? this.height - y : y;
	
	      var v = [x, y2, z, 1];
	      _glMatrix.vec4.transformMat4(v, v, this.pixelUnprojectionMatrix);
	      var scale = 1 / v[3];
	
	      _glMatrix.vec4.multiply(v, v, [scale, scale, scale, scale]);
	
	      var _unprojectFlat = this.unprojectFlat(v),
	          _unprojectFlat2 = _slicedToArray(_unprojectFlat, 2),
	          x0 = _unprojectFlat2[0],
	          y0 = _unprojectFlat2[1];
	
	      var z0 = v[2];
	
	
	      return [x0, y0, z0];
	    }
	
	    /**
	     * Unproject 2d pixel coordinates on screen onto [lon, lat] on map.
	     * - [x, y] => [lng, lat]
	     * @param {Array} xy -
	     * @return {Array} - [lng, lat]
	     */
	
	  }, {
	    key: 'unproject2d',
	    value: function unproject2d(xy) {
	      var _ref7 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	          _ref7$topLeft = _ref7.topLeft,
	          topLeft = _ref7$topLeft === undefined ? true : _ref7$topLeft;
	
	      // same implementation as in mapbox.gl transform
	      var _xy = _slicedToArray(xy, 2),
	          _xy$ = _xy[0],
	          x = _xy$ === undefined ? 0 : _xy$,
	          _xy$2 = _xy[1],
	          y = _xy$2 === undefined ? 0 : _xy$2;
	
	      var y2 = topLeft ? this.height - y : y;
	
	      var targetZ = 0;
	      // since we don't know the correct projected z value for the point,
	      // unproject two points to get a line and then find the point on that
	      // line with z=0
	
	      var coord0 = [x, y2, 0, 1];
	      var coord1 = [x, y2, 1, 1];
	
	      _glMatrix.vec4.transformMat4(coord0, coord0, this.pixelUnprojectionMatrix);
	      _glMatrix.vec4.transformMat4(coord1, coord1, this.pixelUnprojectionMatrix);
	
	      var _ref8 = [coord0[3], coord1[3]],
	          w0 = _ref8[0],
	          w1 = _ref8[1];
	      var x0 = coord0[0] / w0,
	          x1 = coord1[0] / w1;
	      var y0 = coord0[1] / w0,
	          y1 = coord1[1] / w1;
	      var z0 = coord0[2] / w0,
	          z1 = coord1[2] / w1;
	
	
	      var t = z0 === z1 ? 0 : (targetZ - z0) / (z1 - z0);
	
	      var X = x0 * (1 - t) + x1 * t;
	      var Y = y0 * (1 - t) + y1 * t;
	
	      return this.unprojectFlat([X, Y]);
	    }
	
	    /**
	     * Project [lng,lat] on sphere onto [x,y] on 512*512 Mercator Zoom 0 tile.
	     * Performs the nonlinear part of the web mercator projection.
	     * Remaining projection is done with 4x4 matrices which also handles
	     * perspective.
	     *
	     * @param {Array} lngLat - [lng, lat] coordinates
	     *   Specifies a point on the sphere to project onto the map.
	     * @return {Array} [x,y] coordinates.
	     */
	
	  }, {
	    key: 'projectFlat',
	    value: function projectFlat(_ref9) {
	      var _ref10 = _slicedToArray(_ref9, 2),
	          lng = _ref10[0],
	          lat = _ref10[1];
	
	      var scale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.scale;
	
	      scale = scale * WORLD_SCALE;
	      var lambda2 = lng * DEGREES_TO_RADIANS;
	      var phi2 = lat * DEGREES_TO_RADIANS;
	      var x = scale * (lambda2 + PI);
	      var y = scale * (PI - Math.log(Math.tan(PI_4 + phi2 * 0.5)));
	      return [x, y];
	    }
	
	    /**
	     * Unproject world point [x,y] on map onto [lng, lat] on sphere
	     *
	     * @param {Array} [x, y] representing point on projected map plane.
	     * @return {Array} - [lng, lat] of point on sphere.
	     */
	
	  }, {
	    key: 'unprojectFlat',
	    value: function unprojectFlat(_ref11) {
	      var _ref12 = _slicedToArray(_ref11, 2),
	          x = _ref12[0],
	          y = _ref12[1];
	
	      var scale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.scale;
	
	      scale = scale * WORLD_SCALE;
	      var lambda2 = x / scale - PI;
	      var phi2 = 2 * (Math.atan(Math.exp(PI - y / scale)) - PI_4);
	      return [lambda2 * RADIANS_TO_DEGREES, phi2 * RADIANS_TO_DEGREES];
	    }
	  }, {
	    key: 'getProjections',
	    value: function getProjections() {
	      return {
	        pixelProjectionMatrix: this.pixelProjectionMatrix,
	        pixelUnprojectionMatrix: this.pixelUnprojectionMatrix,
	        viewProjectionMatrix: this.viewProjectionMatrix,
	        viewMatrix: this.viewMatrix,
	        projectionMatrix: this.projectionMatrix
	      };
	    }
	  }, {
	    key: 'getDistanceScales',
	    value: function getDistanceScales() {
	      return {
	        pixelsPerMeter: this.pixelsPerMeter,
	        metersPerPixel: this.metersPerPixel
	      };
	    }
	
	    // INTERNAL METHODS
	
	    /* eslint-disable max-statements */
	
	  }, {
	    key: '_initialize',
	    value: function _initialize() {
	      // Scale
	      this.scale = Math.pow(2, this.zoom);
	      this.worldSize = TILE_SIZE * this.scale;
	      this.tileZoom = Math.floor(this.zoom);
	      this.zoomFraction = this.zoom - Math.floor(this.zoom);
	
	      // Bearing
	      this.bearingRadians = this.bearing / 180 * Math.PI;
	      this.bearingRotationMatrix = _glMatrix.mat2.create();
	      _glMatrix.mat2.rotate(this.bearingRotationMatrix, this.bearingRotationMatrix, this.bearing);
	
	      // Pitch
	      this.originalPitch = this.pitch;
	      this.pitch = Math.min(60, this.pitch);
	      this.pitchRadians = this.pitch / 180 * Math.PI;
	
	      // Altitude
	      this.originalAltitude = this.altitude;
	      this.altitude = Math.max(0.75, this.altitude);
	
	      // Center x, y
	      this.center = this.projectFlat([this.longitude, this.latitude]);
	      this.centerX = this.center[0];
	      this.centerY = this.center[1];
	
	      // Find the distance from the center point to the center top
	      // in altitude units using law of sines.
	      this.halfFov = Math.atan(0.5 / this.altitude);
	      this.topHalfSurfaceDistance = Math.sin(this.halfFov) * this.altitude / Math.sin(Math.PI / 2 - this.pitchRadians - this.halfFov);
	
	      // Calculate z value of the farthest fragment that should be rendered.
	      this.farZ = Math.cos(Math.PI / 2 - this.pitchRadians) * this.topHalfSurfaceDistance + this.altitude;
	
	      // Calculate matrices and scales needed for projection
	      this._calculateDistanceScales();
	      this._calculateTransformationMatrices();
	    }
	    /* eslint-enable max-statements */
	
	    /**
	     * Calculate distance scales in meters around current lat/lon, both for
	     * degrees and pixels.
	     * In mercator projection mode, the distance scales vary significantly
	     * with latitude.
	     */
	
	  }, {
	    key: '_calculateDistanceScales',
	    value: function _calculateDistanceScales() {
	      // Approximately 111km per degree at equator
	      var METERS_PER_DEGREE = 111000;
	      var latitude = this.latitude,
	          longitude = this.longitude;
	
	
	      var latCosine = Math.cos(latitude * Math.PI / 180);
	
	      var metersPerDegree = METERS_PER_DEGREE * latCosine;
	
	      // Calculate number of pixels occupied by one degree longitude
	      // around current lat/lon
	      var pixelsPerDegreeX = _glMatrix.vec2.distance(this.projectFlat([longitude + 0.5, latitude]), this.projectFlat([longitude - 0.5, latitude]));
	      // Calculate number of pixels occupied by one degree latitude
	      // around current lat/lon
	      var pixelsPerDegreeY = _glMatrix.vec2.distance(this.projectFlat([longitude, latitude + 0.5]), this.projectFlat([longitude, latitude - 0.5]));
	
	      var pixelsPerMeterX = pixelsPerDegreeX / metersPerDegree;
	      var pixelsPerMeterY = pixelsPerDegreeY / metersPerDegree;
	      var pixelsPerMeterZ = (pixelsPerMeterX + pixelsPerMeterY) / 2;
	
	      // const scale = 0.95;
	      // const pixelsPerMeter = [
	      //   pixelsPerMeterX * scale, pixelsPerMeterY * scale, pixelsPerMeterZ * scale
	      // ];
	      var altPixelsPerMeter = this.worldSize / (4e7 * latCosine);
	      var pixelsPerMeter = [altPixelsPerMeter, altPixelsPerMeter, altPixelsPerMeter];
	      var metersPerPixel = [1 / pixelsPerMeterX, 1 / pixelsPerMeterY, 1 / pixelsPerMeterZ];
	
	      // Main results, used for scaling offsets
	      this.pixelsPerMeter = pixelsPerMeter;
	      // Additional results
	      this.metersPerPixel = metersPerPixel;
	      // metersPerDegree,
	      // degreesPerMeter: 1 / metersPerDegree
	    }
	
	    // Note: As usual, matrix operation orders should be read in reverse
	    // since vectors will be multiplied in from the right during transformation
	    /* eslint-disable max-statements */
	
	  }, {
	    key: '_calculateTransformationMatrices',
	    value: function _calculateTransformationMatrices() {
	      // PROJECTION MATRIX: PROJECTS FROM CAMERA SPACE TO CLIPSPACE
	      /* eslint-disable no-inline-comments */
	      this.projectionMatrix = _glMatrix.mat4.perspective(this._createMat4(), 2 * Math.atan(this.height / 2 / this.altitude), // fov in radians
	      this.width / this.height, // aspect ratio
	      0.1, // near plane
	      this.farZ * 10.0 // far plane
	      );
	      /* eslint-enable no-inline-comments */
	
	      // VIEW MATRIX: PROJECTS FROM VIRTUAL PIXELS TO CAMERA SPACE
	      var vm = this._createMat4();
	
	      // Move camera to altitude
	      _glMatrix.mat4.translate(vm, vm, [0, 0, -this.altitude]);
	
	      // After the rotateX, z values are in pixel units. Convert them to
	      // altitude units. 1 altitude unit = the screen height.
	      _glMatrix.mat4.scale(vm, vm, [1, -1, 1 / this.height]);
	
	      // Rotate by bearing, and then by pitch (which tilts the view)
	      _glMatrix.mat4.rotateX(vm, vm, this.pitchRadians);
	      _glMatrix.mat4.rotateZ(vm, vm, -this.bearingRadians);
	
	      this.viewMatrix = this._createMat4();
	      _glMatrix.mat4.translate(this.viewMatrix, vm, [-this.centerX, -this.centerY, 0]);
	
	      var vpm = this._createMat4();
	      _glMatrix.mat4.multiply(vpm, vpm, this.projectionMatrix);
	      _glMatrix.mat4.multiply(vpm, vpm, this.viewMatrix);
	
	      this.viewProjectionMatrix = vpm;
	
	      // PIXEL PROJECTION MATRIX
	      var m = this._createMat4();
	
	      // Scale with viewport window's width and height in pixels
	      _glMatrix.mat4.scale(m, m, [this.width, this.height, 1]);
	      // Convert to (0, 1)
	      _glMatrix.mat4.translate(m, m, [0.5, 0.5, 0]);
	      _glMatrix.mat4.scale(m, m, [0.5, 0.5, 1]);
	      // Project to clip space (-1, 1)
	      _glMatrix.mat4.multiply(m, m, this.viewProjectionMatrix);
	      this.pixelProjectionMatrix = m;
	
	      var mInverse = this._createMat4();
	      _glMatrix.mat4.invert(mInverse, m);
	      this.pixelUnprojectionMatrix = mInverse;
	    }
	    /* eslint-enable max-statements */
	
	    /**
	     * Builds matrices that converts preprojected lngLats to screen pixels
	     * and vice versa.
	     *
	     * Note: Currently returns bottom-left coordinates!
	     * Note: Starts with the GL projection matrix and adds steps to the
	     *       scale and translate that matrix onto the window.
	     * Note: WebGL controls clip space to screen projection with gl.viewport
	     *       and does not need this step.
	     */
	
	  }, {
	    key: '_calculatePixelProjectionMatrices',
	    value: function _calculatePixelProjectionMatrices() {
	      var m = this._createMat4();
	
	      // Scale with viewport window's width and height in pixels
	      _glMatrix.mat4.scale(m, m, [this.width, this.height, 1]);
	      // Convert to (0, 1)
	      _glMatrix.mat4.translate(m, m, [0.5, 0.5, 0]);
	      _glMatrix.mat4.scale(m, m, [0.5, 0.5, 0]);
	      // Project to clip space (-1, 1)
	      _glMatrix.mat4.multiply(m, m, this.viewProjectionMatrix);
	      this.pixelProjectionMatrix = m;
	
	      var mInverse = this._createMat4();
	      _glMatrix.mat4.invert(mInverse, m);
	      this.pixelUnprojectionMatrix = mInverse;
	    }
	
	    // Helper, avoids low-precision 32 bit matrices from mat4.create();
	
	  }, {
	    key: '_createMat4',
	    value: function _createMat4() {
	      return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
	    }
	  }]);
	
	  return Viewport;
	}(), (_applyDecoratedDescriptor(_class.prototype, 'project', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'project'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'unproject', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'unproject'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'unproject3d', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'unproject3d'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'unproject2d', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'unproject2d'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'projectFlat', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'projectFlat'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'unprojectFlat', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'unprojectFlat'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'getProjections', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'getProjections'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'getDistanceScales', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'getDistanceScales'), _class.prototype)), _class);
	exports.default = Viewport;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.pickLayers = pickLayers;
	
	var _luma = __webpack_require__(185);
	
	/* eslint-disable max-depth, max-statements */
	function pickLayers(gl, _ref) {
	  var layers = _ref.layers,
	      pickingFBO = _ref.pickingFBO,
	      _ref$uniforms = _ref.uniforms,
	      uniforms = _ref$uniforms === undefined ? {} : _ref$uniforms,
	      x = _ref.x,
	      y = _ref.y,
	      mode = _ref.mode;
	
	  // Convert from canvas top-left to WebGL bottom-left coordinates
	  // And compensate for pixelRatio
	  var pixelRatio = typeof window !== 'undefined' ? window.devicePixelRatio : 1;
	  var deviceX = x * pixelRatio;
	  var deviceY = gl.canvas.height - y * pixelRatio;
	
	  // TODO - just return glContextWithState once luma updates
	  var pickedInfos = [];
	
	  // Make sure we clear scissor test and fbo bindings in case of exceptions
	  // We are only interested in one pixel, no need to render anything else
	  (0, _luma.glContextWithState)(gl, {
	    frameBuffer: pickingFBO,
	    framebuffer: pickingFBO,
	    scissorTest: { x: deviceX, y: deviceY, w: 1, h: 1 }
	  }, function () {
	    var zOrder = 0;
	
	    for (var i = layers.length - 1; i >= 0; --i) {
	      var layer = layers[i];
	
	      if (layer.props.visible && layer.props.pickable) {
	        // Clear the frame buffer, render and sample
	        gl.clear(_luma.GL.COLOR_BUFFER_BIT | _luma.GL.DEPTH_BUFFER_BIT);
	        var info = createInfo({
	          layer: layer,
	          pixel: [x, y],
	          devicePixel: [deviceX, deviceY],
	          pixelRatio: pixelRatio
	        });
	
	        layer.pickLayer({
	          info: info,
	          uniforms: uniforms,
	          pickEnableUniforms: { renderPickingBuffer: 1, pickingEnabled: 1 },
	          pickDisableUniforms: { renderPickingBuffer: 0, pickingEnabled: 0 },
	          deviceX: deviceX, deviceY: deviceY,
	          mode: mode
	        });
	
	        if (info.index >= 0) {
	          info.picked = true;
	          info.zOrder = zOrder++;
	          // If props.data is an indexable array, get the object
	          if (Array.isArray(layer.props.data)) {
	            info.object = layer.props.data[info.index];
	          }
	        }
	
	        pickedInfos.push(info);
	      }
	    }
	  });
	
	  // Calling callbacks can have async interactions with React
	  // which nullifies layer.state.
	  var unhandledPickInfos = [];
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;
	
	  try {
	    for (var _iterator = pickedInfos[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      var info = _step.value;
	
	      var handled = null;
	      switch (mode) {
	        case 'click':
	          handled = info.layer.props.onClick(info);break;
	        case 'hover':
	          handled = info.layer.props.onHover(info);break;
	        default:
	          throw new Error('unknown pick type');
	      }
	
	      if (!handled) {
	        unhandledPickInfos.push(info);
	      }
	    }
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator.return) {
	        _iterator.return();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }
	
	  return unhandledPickInfos;
	}
	/* eslint-enable max-depth, max-statements */
	
	/* global window */
	function createInfo(_ref2) {
	  var info = _ref2.info,
	      layer = _ref2.layer,
	      pixel = _ref2.pixel,
	      devicePixel = _ref2.devicePixel,
	      pixelRatio = _ref2.pixelRatio;
	
	  // Assign a number of potentially useful props to the "info" object
	  return {
	    layer: layer,
	    index: -1,
	    picked: false,
	    x: pixel[0],
	    y: pixel[1],
	    pixel: pixel,
	    devicePixel: devicePixel,
	    pixelRatio: pixelRatio,
	    lngLat: layer.unproject(pixel)
	  };
	}
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _package = __webpack_require__(411);
	
	var STARTUP_MESSAGE = 'set deck.log.priority=2 to trace attribute updates';
	
	/* global console */
	/* eslint-disable no-console */
	// Version detection
	console.log('deck.gl ' + _package.version + ' - ' + STARTUP_MESSAGE);
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvaW5pdC5qcyJdLCJuYW1lcyI6WyJTVEFSVFVQX01FU1NBR0UiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUNBOztBQUVBLElBQU1BLGtCQUFrQixvREFBeEI7O0FBRUE7QUFDQTtBQU5BO0FBT0FDLFFBQVFDLEdBQVIseUNBQW9DRixlQUFwQyIsImZpbGUiOiJpbml0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVmVyc2lvbiBkZXRlY3Rpb25cbmltcG9ydCB7dmVyc2lvbn0gZnJvbSAnLi4vLi4vcGFja2FnZS5qc29uJztcblxuY29uc3QgU1RBUlRVUF9NRVNTQUdFID0gJ3NldCBkZWNrLmxvZy5wcmlvcml0eT0yIHRvIHRyYWNlIGF0dHJpYnV0ZSB1cGRhdGVzJztcblxuLyogZ2xvYmFsIGNvbnNvbGUgKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbmNvbnNvbGUubG9nKGBkZWNrLmdsICR7dmVyc2lvbn0gLSAke1NUQVJUVVBfTUVTU0FHRX1gKTtcbiJdfQ==

/***/ },
/* 411 */
/***/ function(module, exports) {

	module.exports = {
		"_args": [
			[
				{
					"raw": "deck.gl@^3.1.1",
					"scope": null,
					"escapedName": "deck.gl",
					"name": "deck.gl",
					"rawSpec": "^3.1.1",
					"spec": ">=3.1.1 <4.0.0",
					"type": "range"
				},
				"/var/www/data-science/dx/deck.gl"
			]
		],
		"_from": "deck.gl@>=3.1.1 <4.0.0",
		"_id": "deck.gl@3.1.1",
		"_inCache": true,
		"_location": "/deck.gl",
		"_nodeVersion": "6.9.1",
		"_npmOperationalInternal": {
			"host": "packages-12-west.internal.npmjs.com",
			"tmp": "tmp/deck.gl-3.1.1.tgz_1480615162448_0.7454751392360777"
		},
		"_npmUser": {
			"name": "ibgreen",
			"email": "ib.green.home@gmail.com"
		},
		"_npmVersion": "3.10.8",
		"_phantomChildren": {},
		"_requested": {
			"raw": "deck.gl@^3.1.1",
			"scope": null,
			"escapedName": "deck.gl",
			"name": "deck.gl",
			"rawSpec": "^3.1.1",
			"spec": ">=3.1.1 <4.0.0",
			"type": "range"
		},
		"_requiredBy": [
			"/"
		],
		"_resolved": "https://registry.npmjs.org/deck.gl/-/deck.gl-3.1.1.tgz",
		"_shasum": "eb2fc3ec80ad34ac58eba8fce8eda76ac4c498e0",
		"_shrinkwrap": null,
		"_spec": "deck.gl@^3.1.1",
		"_where": "/var/www/data-science/dx/deck.gl",
		"bugs": {
			"url": "https://github.com/uber/deck.gl/issues"
		},
		"dependencies": {
			"autobind-decorator": "^1.3.3",
			"babel-polyfill": "^6.1.19",
			"earcut": "^2.0.6",
			"extrude-polyline": "^1.0.6",
			"geojson-normalize": "0.0.1",
			"get-pixels": "^3.3.0",
			"gl-matrix": "^2.3.2",
			"lodash.flattendeep": "^4.4.0",
			"save-pixels": "^2.3.0",
			"viewport-mercator-project": "3.0.0-beta3"
		},
		"description": "A suite of 3D-enabled data visualization overlays, suitable for react-map-gl",
		"devDependencies": {
			"babel-cli": "^6.3.15",
			"babel-core": "^6.7.7",
			"babel-eslint": "^6.0.0",
			"babel-plugin-static-fs": "^1.1.0",
			"babel-plugin-transform-decorators-legacy": "^1.3.4",
			"babel-preset-es2015": "^6.3.13",
			"babel-preset-react": "^6.3.13",
			"babel-preset-stage-2": "^6.3.13",
			"babel-runtime": "^6.11.6",
			"babelify": "^7.2.0",
			"brfs-babel": "^1.0.0",
			"browserify": "^13.0.0",
			"budo": "^9.0.0",
			"d3-color": "^1.0.1",
			"d3-request": "^1.0.2",
			"d3-scale": "^1.0.3",
			"discify": "^1.2.0",
			"electron": "^1.4.7",
			"envify": "^3.4.0",
			"eslint": "^2.0.0",
			"eslint-config-uber-es2015": "^2.0.0",
			"eslint-config-uber-jsx": "^2.0.0",
			"eslint-plugin-react": "^6.0.0",
			"faucet": "0.0.1",
			"gl": "^4.0.1",
			"highlight.js": "^9.7.0",
			"immutable": "^3.7.5",
			"luma.gl": "^2.10.3",
			"marked": "^0.3.6",
			"react": "^15.3.2",
			"react-addons-test-utils": "^15.0.2",
			"react-dom": "^15.3.2",
			"react-map-gl": "^1.7.2",
			"react-redux": "^4.4.5",
			"react-router": "^2.8.1",
			"react-stats": "0.0.5",
			"redux": "^3.6.0",
			"redux-thunk": "^2.1.0",
			"sassify": "^2.0.0",
			"stats.js": "^0.17.0",
			"tap-browser-color": "^0.1.2",
			"tape": "^4.6.0",
			"tape-catch": "^1.0.4",
			"testron": "^1.2.0",
			"tween.js": "^16.3.5",
			"uglify-js": "^2.6.1"
		},
		"directories": {},
		"dist": {
			"shasum": "eb2fc3ec80ad34ac58eba8fce8eda76ac4c498e0",
			"tarball": "https://registry.npmjs.org/deck.gl/-/deck.gl-3.1.1.tgz"
		},
		"files": [
			"dist",
			"shaderlib",
			"src",
			"index.js",
			"react.js",
			"viewport.js",
			"samples.js",
			"experimental.js"
		],
		"gitHead": "f327ea635bf48a1bc96a7d00b283eea530a8189d",
		"homepage": "https://github.com/uber/deck.gl#readme",
		"keywords": [
			"webgl",
			"visualization",
			"overlay",
			"layer"
		],
		"license": "MIT",
		"main": "index.js",
		"maintainers": [
			{
				"name": "apercu",
				"email": "bgronon@gmail.com"
			},
			{
				"name": "gnavvy",
				"email": "gnavvy@gmail.com"
			},
			{
				"name": "heshan0131",
				"email": "heshan0131@gmail.com"
			},
			{
				"name": "ibgreen",
				"email": "ib.green.home@gmail.com"
			},
			{
				"name": "pessimistress",
				"email": "cxiaoji@gmail.com"
			}
		],
		"name": "deck.gl",
		"optionalDependencies": {},
		"peerDependencies": {
			"react": "0.14.x - 15.x",
			"react-dom": "0.14.x - 15.x",
			"luma.gl": "^2.10.3"
		},
		"readme": "ERROR: No README data found!",
		"repository": {
			"type": "git",
			"url": "git+https://github.com/uber/deck.gl.git"
		},
		"scripts": {
			"build": "npm run build-dist && npm run build-script",
			"build-clean": "rm -fr dist/*",
			"build-dist": "npm run build-clean && npm run build-src && npm run build-shaderlib",
			"build-script": "browserify src/bundle.js -t babelify -t brfs-babel | uglifyjs > dist/deckgl.min.js",
			"build-shaderlib": "babel shaderlib -d dist/shaderlib --source-maps inline --copy-files",
			"build-shaderlib-watch": "babel shaderlib -d dist/shaderlib --source-maps inline --copy-files --watch &",
			"build-src": "babel src -d dist --source-maps inline --copy-files",
			"build-src-watch": "babel src -d dist --source-maps inline --copy-files --watch &",
			"build-watch": "npm run build-clean && npm run build-src-watch && npm run build-shaderlib-watch",
			"demo-build": "npm run demo-build-clean && npm run demo-build-copy && npm run demo-build-script",
			"demo-build-clean": "rm -fr dist-demo && mkdir -p dist-demo",
			"demo-build-copy": " mkdir -p dist-demo/docs && cp -R demo/src/static/* dist-demo/ && cp -R docs dist-demo",
			"demo-build-script": "NODE_ENV=production browserify demo/src/javascripts/main.js -o -t babelify -t sassify -t brfs-babel | uglifyjs > dist-demo/main.min.js",
			"demo-gh-pages": "git subtree push --prefix dist-demo origin gh-pages",
			"demo-gh-pages-force": "git push origin `git subtree split --prefix dist-demo master`:gh-pages --force",
			"demo-publish": "npm run build && npm run demo-build && git add dist-demo -f && git commit -m 'UPDATE DOCS' --no-verify && npm run demo-gh-pages",
			"demo-publish-force": "npm run build && npm run demo-build && git add dist-demo -f && git commit -m 'UPDATE DOCS' --no-verify && npm run demo-gh-pages-force",
			"demo-start": "npm run demo-build-copy && budo demo/src/javascripts/main.js:main.min.js --dir dist-demo/ --open -- -t babelify -t sassify -t brfs-babel",
			"lint": "eslint src",
			"mypublish": "npm run build && npm run test-fast && npm publish",
			"precommit": "npm test",
			"profile-disc": "browserify src/bundle.js --full-paths -t babelify -t brfs-babel | uglifyjs | discify --open",
			"start": "npm run build-watch && budo example/main.js:example/bundle.js --live --open --port 3000 --css example/main.css --title 'deck.gl' --watch-glob '**/*.{html,css,js,glsl}' -- -t brfs-babel -t babelify -t envify",
			"test": "npm run lint && npm run build-dist && npm run test-headless",
			"test-browser": "budo src/test/browser.js:build/test-bundle.js --dir test --live --open --port 3001 --watch-glob '**/*.{html,css,scss,js,glsl}' -- -t babelify -t brfs-babel",
			"test-electron": "browserify dist/test/electron.js | testron | faucet",
			"test-fast": "npm run lint && npm run test-headless",
			"test-headless": "node dist/test/headless.js",
			"test-headless-src": "babel-node --only=deck.gl/test,deck.gl/src,deck.gl/shaderlib src/test/headless.js",
			"test-shader": "npm run build-dist && budo src/test/shader.js:build/test-bundle.js --dir test --live --open --port 3001 --watch-glob '**/*.{html,css,scss,js,glsl}' -- -t babelify -t brfs-babel"
		},
		"version": "3.1.1"
	};

/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _effects = __webpack_require__(413);
	
	Object.keys(_effects).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _effects[key];
	    }
	  });
	});
	
	var _lib = __webpack_require__(422);
	
	Object.keys(_lib).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _lib[key];
	    }
	  });
	});
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9leHBlcmltZW50YWwvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2VmZmVjdHMnO1xuZXhwb3J0ICogZnJvbSAnLi9saWInO1xuIl19

/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reflectionEffect = __webpack_require__(414);
	
	Object.defineProperty(exports, 'ReflectionEffect', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_reflectionEffect).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9leHBlcmltZW50YWwvZWZmZWN0cy9pbmRleC5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztxREFBUUEsTyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7ZGVmYXVsdCBhcyBSZWZsZWN0aW9uRWZmZWN0fSBmcm9tICcuL3JlZmxlY3Rpb24tZWZmZWN0JztcbiJdfQ==

/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _reflectionEffect = __webpack_require__(415);
	
	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_reflectionEffect).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9leHBlcmltZW50YWwvZWZmZWN0cy9yZWZsZWN0aW9uLWVmZmVjdC9pbmRleC5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztxREFBUUEsTyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7ZGVmYXVsdCBhcyBkZWZhdWx0fSBmcm9tICcuL3JlZmxlY3Rpb24tZWZmZWN0JztcbiJdfQ==

/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _luma = __webpack_require__(185);
	
	var _shaderUtils = __webpack_require__(416);
	
	var _lib = __webpack_require__(422);
	
	var _path = __webpack_require__(214);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global window */
	
	
	/*
	 * This should be made a subclass of a more general effect class once other
	 * effects are implemented.
	 */
	
	var ReflectionEffect = function (_Effect) {
	  _inherits(ReflectionEffect, _Effect);
	
	  function ReflectionEffect() {
	    var reflectivity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.2;
	
	    _classCallCheck(this, ReflectionEffect);
	
	    var _this = _possibleConstructorReturn(this, (ReflectionEffect.__proto__ || Object.getPrototypeOf(ReflectionEffect)).call(this));
	
	    _this.reflectivity = reflectivity;
	    _this.framebuffer = null;
	    _this.setNeedsRedraw();
	    return _this;
	  }
	
	  _createClass(ReflectionEffect, [{
	    key: 'getShaders',
	    value: function getShaders() {
	      return {
	        vs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME reflection-effect-vs\n\nattribute vec3 vertices;\n\nvarying vec2 uv;\n\nvoid main(void) {\n  uv = vertices.xy;\n  gl_Position = vec4(2. * vertices.xy - vec2(1., 1.), 1., 1.);\n}\n',
	        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME reflection-effect-fs\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform sampler2D reflectionTexture;\nuniform float reflectivity;\n\nvarying vec2 uv;\n\nvoid main(void) {\n  gl_FragColor = texture2D(reflectionTexture, vec2(uv.x, 1. - uv.y));\n  gl_FragColor.a *= reflectivity;\n}\n'
	      };
	    }
	  }, {
	    key: 'initialize',
	    value: function initialize(_ref) {
	      var gl = _ref.gl,
	          layerManager = _ref.layerManager;
	
	      this.model = new _luma.Model(_extends({
	        gl: gl
	      }, (0, _shaderUtils.assembleShaders)(gl, this.getShaders()), {
	        geometry: new _luma.Geometry({
	          drawMode: _luma.GL.TRIANGLE_FAN,
	          vertices: new Float32Array([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0])
	        })
	      }));
	      this.framebuffer = new _luma.Framebuffer(gl);
	    }
	  }, {
	    key: 'preDraw',
	    value: function preDraw(_ref2) {
	      var gl = _ref2.gl,
	          layerManager = _ref2.layerManager;
	
	      var viewport = layerManager.context.viewport;
	      /*
	       * the renderer already has a reference to this, but we don't have a reference to the renderer.
	       * when we refactor the camera code, we should make sure we get a reference to the renderer so
	       * that we can keep this in one place.
	       */
	      var dpi = typeof window !== 'undefined' && window.devicePixelRatio || 1;
	      this.framebuffer.resize({ width: dpi * viewport.width, height: dpi * viewport.height });
	      var pitch = viewport.pitch;
	      this.framebuffer.bind();
	      /* this is a huge hack around the existing viewport class.
	       * TODO in the future, once we implement bona-fide cameras, we really need to fix this.
	       */
	      layerManager.setContext(_extends({}, viewport, {
	        pitch: -180 - pitch
	      }));
	      gl.clear(_luma.GL.COLOR_BUFFER_BIT | _luma.GL.DEPTH_BUFFER_BIT);
	
	      layerManager.drawLayers();
	      layerManager.setContext(_extends({}, viewport, {
	        pitch: pitch
	      }));
	      gl.bindFramebuffer(gl.FRAMEBUFFER, null);
	    }
	  }, {
	    key: 'draw',
	    value: function draw(_ref3) {
	      var gl = _ref3.gl,
	          layerManager = _ref3.layerManager;
	
	      this.model.render({
	        reflectionTexture: this.framebuffer.texture,
	        reflectivity: this.reflectivity
	      });
	    }
	  }, {
	    key: 'finalize',
	    value: function finalize(_ref4) {
	      /* TODO: Free resources? */
	
	      var gl = _ref4.gl,
	          layerManager = _ref4.layerManager;
	    }
	  }]);
	
	  return ReflectionEffect;
	}(_lib.Effect);
	
	exports.default = ReflectionEffect;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9leHBlcmltZW50YWwvZWZmZWN0cy9yZWZsZWN0aW9uLWVmZmVjdC9yZWZsZWN0aW9uLWVmZmVjdC5qcyJdLCJuYW1lcyI6WyJSZWZsZWN0aW9uRWZmZWN0IiwicmVmbGVjdGl2aXR5IiwiZnJhbWVidWZmZXIiLCJzZXROZWVkc1JlZHJhdyIsInZzIiwiZnMiLCJnbCIsImxheWVyTWFuYWdlciIsIm1vZGVsIiwiZ2V0U2hhZGVycyIsImdlb21ldHJ5IiwiZHJhd01vZGUiLCJUUklBTkdMRV9GQU4iLCJ2ZXJ0aWNlcyIsIkZsb2F0MzJBcnJheSIsInZpZXdwb3J0IiwiY29udGV4dCIsImRwaSIsIndpbmRvdyIsImRldmljZVBpeGVsUmF0aW8iLCJyZXNpemUiLCJ3aWR0aCIsImhlaWdodCIsInBpdGNoIiwiYmluZCIsInNldENvbnRleHQiLCJjbGVhciIsIkNPTE9SX0JVRkZFUl9CSVQiLCJERVBUSF9CVUZGRVJfQklUIiwiZHJhd0xheWVycyIsImJpbmRGcmFtZWJ1ZmZlciIsIkZSQU1FQlVGRkVSIiwicmVuZGVyIiwicmVmbGVjdGlvblRleHR1cmUiLCJ0ZXh0dXJlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUNBOztBQUNBOztBQUNBOztBQUVBOzs7Ozs7K2VBTEE7OztBQU9BOzs7OztJQUtxQkEsZ0I7OztBQUNuQiw4QkFBZ0M7QUFBQSxRQUFwQkMsWUFBb0IsdUVBQUwsR0FBSzs7QUFBQTs7QUFBQTs7QUFFOUIsVUFBS0EsWUFBTCxHQUFvQkEsWUFBcEI7QUFDQSxVQUFLQyxXQUFMLEdBQW1CLElBQW5CO0FBQ0EsVUFBS0MsY0FBTDtBQUo4QjtBQUsvQjs7OztpQ0FFWTtBQUNYLGFBQU87QUFDTEMsMjBDQURLO0FBRUxDO0FBRkssT0FBUDtBQUlEOzs7cUNBRThCO0FBQUEsVUFBbkJDLEVBQW1CLFFBQW5CQSxFQUFtQjtBQUFBLFVBQWZDLFlBQWUsUUFBZkEsWUFBZTs7QUFDN0IsV0FBS0MsS0FBTCxHQUFhO0FBQ1hGO0FBRFcsU0FFUixrQ0FBZ0JBLEVBQWhCLEVBQW9CLEtBQUtHLFVBQUwsRUFBcEIsQ0FGUTtBQUdYQyxrQkFBVSxtQkFBYTtBQUNyQkMsb0JBQVUsU0FBR0MsWUFEUTtBQUVyQkMsb0JBQVUsSUFBSUMsWUFBSixDQUFpQixDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLENBQWhCLEVBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLEVBQTRCLENBQTVCLEVBQStCLENBQS9CLEVBQWtDLENBQWxDLENBQWpCO0FBRlcsU0FBYjtBQUhDLFNBQWI7QUFRQSxXQUFLWixXQUFMLEdBQW1CLHNCQUFnQkksRUFBaEIsQ0FBbkI7QUFFRDs7O21DQUUyQjtBQUFBLFVBQW5CQSxFQUFtQixTQUFuQkEsRUFBbUI7QUFBQSxVQUFmQyxZQUFlLFNBQWZBLFlBQWU7O0FBQzFCLFVBQU1RLFdBQVdSLGFBQWFTLE9BQWIsQ0FBcUJELFFBQXRDO0FBQ0E7Ozs7O0FBS0EsVUFBTUUsTUFBTyxPQUFPQyxNQUFQLEtBQWtCLFdBQWxCLElBQWlDQSxPQUFPQyxnQkFBekMsSUFBOEQsQ0FBMUU7QUFDQSxXQUFLakIsV0FBTCxDQUFpQmtCLE1BQWpCLENBQXdCLEVBQUNDLE9BQU9KLE1BQU1GLFNBQVNNLEtBQXZCLEVBQThCQyxRQUFRTCxNQUFNRixTQUFTTyxNQUFyRCxFQUF4QjtBQUNBLFVBQU1DLFFBQVFSLFNBQVNRLEtBQXZCO0FBQ0EsV0FBS3JCLFdBQUwsQ0FBaUJzQixJQUFqQjtBQUNBOzs7QUFHQWpCLG1CQUFha0IsVUFBYixjQUNLVixRQURMO0FBRUVRLGVBQU8sQ0FBQyxHQUFELEdBQU9BO0FBRmhCO0FBSUFqQixTQUFHb0IsS0FBSCxDQUFTLFNBQUdDLGdCQUFILEdBQXNCLFNBQUdDLGdCQUFsQzs7QUFFQXJCLG1CQUFhc0IsVUFBYjtBQUNBdEIsbUJBQWFrQixVQUFiLGNBQ0tWLFFBREw7QUFFRVE7QUFGRjtBQUlBakIsU0FBR3dCLGVBQUgsQ0FBbUJ4QixHQUFHeUIsV0FBdEIsRUFBbUMsSUFBbkM7QUFDRDs7O2dDQUV3QjtBQUFBLFVBQW5CekIsRUFBbUIsU0FBbkJBLEVBQW1CO0FBQUEsVUFBZkMsWUFBZSxTQUFmQSxZQUFlOztBQUN2QixXQUFLQyxLQUFMLENBQVd3QixNQUFYLENBQWtCO0FBQ2hCQywyQkFBbUIsS0FBSy9CLFdBQUwsQ0FBaUJnQyxPQURwQjtBQUVoQmpDLHNCQUFjLEtBQUtBO0FBRkgsT0FBbEI7QUFJRDs7O29DQUU0QjtBQUMzQjs7QUFEMkIsVUFBbkJLLEVBQW1CLFNBQW5CQSxFQUFtQjtBQUFBLFVBQWZDLFlBQWUsU0FBZkEsWUFBZTtBQUU1Qjs7Ozs7O2tCQWpFa0JQLGdCIiwiZmlsZSI6InJlZmxlY3Rpb24tZWZmZWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIHdpbmRvdyAqL1xuaW1wb3J0IHtHTCwgRnJhbWVidWZmZXIsIE1vZGVsLCBHZW9tZXRyeX0gZnJvbSAnbHVtYS5nbCc7XG5pbXBvcnQge2Fzc2VtYmxlU2hhZGVyc30gZnJvbSAnLi4vLi4vLi4vc2hhZGVyLXV0aWxzJztcbmltcG9ydCB7RWZmZWN0fSBmcm9tICcuLi8uLi9saWInO1xuaW1wb3J0IHtyZWFkRmlsZVN5bmN9IGZyb20gJ2ZzJztcbmltcG9ydCB7am9pbn0gZnJvbSAncGF0aCc7XG5cbi8qXG4gKiBUaGlzIHNob3VsZCBiZSBtYWRlIGEgc3ViY2xhc3Mgb2YgYSBtb3JlIGdlbmVyYWwgZWZmZWN0IGNsYXNzIG9uY2Ugb3RoZXJcbiAqIGVmZmVjdHMgYXJlIGltcGxlbWVudGVkLlxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlZmxlY3Rpb25FZmZlY3QgZXh0ZW5kcyBFZmZlY3Qge1xuICBjb25zdHJ1Y3RvcihyZWZsZWN0aXZpdHkgPSAwLjIpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMucmVmbGVjdGl2aXR5ID0gcmVmbGVjdGl2aXR5O1xuICAgIHRoaXMuZnJhbWVidWZmZXIgPSBudWxsO1xuICAgIHRoaXMuc2V0TmVlZHNSZWRyYXcoKTtcbiAgfVxuXG4gIGdldFNoYWRlcnMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHZzOiByZWFkRmlsZVN5bmMoam9pbihfX2Rpcm5hbWUsICcuL3JlZmxlY3Rpb24tZWZmZWN0LXZlcnRleC5nbHNsJyksICd1dGY4JyksXG4gICAgICBmczogcmVhZEZpbGVTeW5jKGpvaW4oX19kaXJuYW1lLCAnLi9yZWZsZWN0aW9uLWVmZmVjdC1mcmFnbWVudC5nbHNsJyksICd1dGY4JylcbiAgICB9O1xuICB9XG5cbiAgaW5pdGlhbGl6ZSh7Z2wsIGxheWVyTWFuYWdlcn0pIHtcbiAgICB0aGlzLm1vZGVsID0gbmV3IE1vZGVsKHtcbiAgICAgIGdsLFxuICAgICAgLi4uYXNzZW1ibGVTaGFkZXJzKGdsLCB0aGlzLmdldFNoYWRlcnMoKSksXG4gICAgICBnZW9tZXRyeTogbmV3IEdlb21ldHJ5KHtcbiAgICAgICAgZHJhd01vZGU6IEdMLlRSSUFOR0xFX0ZBTixcbiAgICAgICAgdmVydGljZXM6IG5ldyBGbG9hdDMyQXJyYXkoWzAsIDAsIDAsIDEsIDAsIDAsIDEsIDEsIDAsIDAsIDEsIDBdKVxuICAgICAgfSlcbiAgICB9KTtcbiAgICB0aGlzLmZyYW1lYnVmZmVyID0gbmV3IEZyYW1lYnVmZmVyKGdsKTtcblxuICB9XG5cbiAgcHJlRHJhdyh7Z2wsIGxheWVyTWFuYWdlcn0pIHtcbiAgICBjb25zdCB2aWV3cG9ydCA9IGxheWVyTWFuYWdlci5jb250ZXh0LnZpZXdwb3J0O1xuICAgIC8qXG4gICAgICogdGhlIHJlbmRlcmVyIGFscmVhZHkgaGFzIGEgcmVmZXJlbmNlIHRvIHRoaXMsIGJ1dCB3ZSBkb24ndCBoYXZlIGEgcmVmZXJlbmNlIHRvIHRoZSByZW5kZXJlci5cbiAgICAgKiB3aGVuIHdlIHJlZmFjdG9yIHRoZSBjYW1lcmEgY29kZSwgd2Ugc2hvdWxkIG1ha2Ugc3VyZSB3ZSBnZXQgYSByZWZlcmVuY2UgdG8gdGhlIHJlbmRlcmVyIHNvXG4gICAgICogdGhhdCB3ZSBjYW4ga2VlcCB0aGlzIGluIG9uZSBwbGFjZS5cbiAgICAgKi9cbiAgICBjb25zdCBkcGkgPSAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRldmljZVBpeGVsUmF0aW8pIHx8IDE7XG4gICAgdGhpcy5mcmFtZWJ1ZmZlci5yZXNpemUoe3dpZHRoOiBkcGkgKiB2aWV3cG9ydC53aWR0aCwgaGVpZ2h0OiBkcGkgKiB2aWV3cG9ydC5oZWlnaHR9KTtcbiAgICBjb25zdCBwaXRjaCA9IHZpZXdwb3J0LnBpdGNoO1xuICAgIHRoaXMuZnJhbWVidWZmZXIuYmluZCgpO1xuICAgIC8qIHRoaXMgaXMgYSBodWdlIGhhY2sgYXJvdW5kIHRoZSBleGlzdGluZyB2aWV3cG9ydCBjbGFzcy5cbiAgICAgKiBUT0RPIGluIHRoZSBmdXR1cmUsIG9uY2Ugd2UgaW1wbGVtZW50IGJvbmEtZmlkZSBjYW1lcmFzLCB3ZSByZWFsbHkgbmVlZCB0byBmaXggdGhpcy5cbiAgICAgKi9cbiAgICBsYXllck1hbmFnZXIuc2V0Q29udGV4dCh7XG4gICAgICAuLi52aWV3cG9ydCxcbiAgICAgIHBpdGNoOiAtMTgwIC0gcGl0Y2hcbiAgICB9KTtcbiAgICBnbC5jbGVhcihHTC5DT0xPUl9CVUZGRVJfQklUIHwgR0wuREVQVEhfQlVGRkVSX0JJVCk7XG5cbiAgICBsYXllck1hbmFnZXIuZHJhd0xheWVycygpO1xuICAgIGxheWVyTWFuYWdlci5zZXRDb250ZXh0KHtcbiAgICAgIC4uLnZpZXdwb3J0LFxuICAgICAgcGl0Y2hcbiAgICB9KTtcbiAgICBnbC5iaW5kRnJhbWVidWZmZXIoZ2wuRlJBTUVCVUZGRVIsIG51bGwpO1xuICB9XG5cbiAgZHJhdyh7Z2wsIGxheWVyTWFuYWdlcn0pIHtcbiAgICB0aGlzLm1vZGVsLnJlbmRlcih7XG4gICAgICByZWZsZWN0aW9uVGV4dHVyZTogdGhpcy5mcmFtZWJ1ZmZlci50ZXh0dXJlLFxuICAgICAgcmVmbGVjdGl2aXR5OiB0aGlzLnJlZmxlY3Rpdml0eVxuICAgIH0pO1xuICB9XG5cbiAgZmluYWxpemUoe2dsLCBsYXllck1hbmFnZXJ9KSB7XG4gICAgLyogVE9ETzogRnJlZSByZXNvdXJjZXM/ICovXG4gIH1cbn1cbiJdfQ==

/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _assembleShaders = __webpack_require__(417);
	
	Object.keys(_assembleShaders).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _assembleShaders[key];
	    }
	  });
	});
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zaGFkZXItdXRpbHMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2Fzc2VtYmxlLXNoYWRlcnMnO1xuIl19

/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.checkRendererVendor = checkRendererVendor;
	exports.getPlatformShaderDefines = getPlatformShaderDefines;
	exports.assembleShaders = assembleShaders;
	
	var _luma = __webpack_require__(185);
	
	var _shaderChunks = __webpack_require__(418);
	
	var _shaderChunks2 = _interopRequireDefault(_shaderChunks);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	// Load shader chunks
	// import SHADER_CHUNKS from '../../dist/shaderlib/shader-chunks';
	
	
	function checkRendererVendor(debugInfo, gpuVendor) {
	  var vendor = debugInfo.vendor,
	      renderer = debugInfo.renderer;
	
	  var result = void 0;
	  switch (gpuVendor) {
	    case 'nvidia':
	      result = vendor.match(/NVIDIA/i) || renderer.match(/NVIDIA/i);
	      break;
	    case 'intel':
	      result = vendor.match(/INTEL/i) || renderer.match(/INTEL/i);
	      break;
	    case 'amd':
	      result = vendor.match(/AMD/i) || renderer.match(/AMD/i) || vendor.match(/ATI/i) || renderer.match(/ATI/i);
	      break;
	    default:
	      result = false;
	  }
	  return result;
	}
	
	function getPlatformShaderDefines(gl) {
	  /* eslint-disable */
	  var platformDefines = '';
	  var debugInfo = (0, _luma.glGetDebugInfo)(gl);
	
	  if (checkRendererVendor(debugInfo, 'nvidia')) {
	    platformDefines += '#define NVIDIA_GPU\n#define NVIDIA_FP64_WORKAROUND 1\n#define NVIDIA_EQUATION_WORKAROUND 1\n';
	  } else if (checkRendererVendor(debugInfo, 'intel')) {
	    platformDefines += '#define INTEL_GPU\n#define INTEL_FP64_WORKAROUND 1\n#define NVIDIA_EQUATION_WORKAROUND 1\n #define INTEL_TAN_WORKAROUND 1\n';
	  } else if (checkRendererVendor(debugInfo, 'amd')) {
	    platformDefines += '#define AMD_GPU\n';
	  } else {
	    platformDefines += '#define DEFAULT_GPU\n';
	  }
	
	  return platformDefines;
	}
	
	function assembleShader(gl, _ref) {
	  var vs = _ref.vs,
	      fs = _ref.fs,
	      _ref$fp = _ref.fp64,
	      fp64 = _ref$fp === undefined ? false : _ref$fp,
	      _ref$project = _ref.project,
	      project = _ref$project === undefined ? true : _ref$project,
	      _ref$project2 = _ref.project64,
	      project64 = _ref$project2 === undefined ? false : _ref$project2,
	      opts = _objectWithoutProperties(_ref, ['vs', 'fs', 'fp64', 'project', 'project64']);
	
	  if (project64 === true) {
	    fp64 = true;
	  }
	  var source = getPlatformShaderDefines(gl) + '\n';
	  opts = _extends({}, opts, { project: project, project64: project64, fp64: fp64 });
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;
	
	  try {
	    for (var _iterator = Object.keys(_shaderChunks2.default)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      var chunkName = _step.value;
	
	      if (opts[chunkName]) {
	        source += _shaderChunks2.default[chunkName].source + '\n';
	      }
	    }
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator.return) {
	        _iterator.return();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }
	
	  source += vs;
	  return source;
	}
	
	function assembleShaders(gl, _ref2) {
	  var vs = _ref2.vs,
	      fs = _ref2.fs,
	      opts = _objectWithoutProperties(_ref2, ['vs', 'fs']);
	
	  return {
	    gl: gl,
	    vs: assembleShader(gl, _extends({}, opts, { vs: vs })),
	    fs: fs
	  };
	}
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zaGFkZXItdXRpbHMvYXNzZW1ibGUtc2hhZGVycy5qcyJdLCJuYW1lcyI6WyJjaGVja1JlbmRlcmVyVmVuZG9yIiwiZ2V0UGxhdGZvcm1TaGFkZXJEZWZpbmVzIiwiYXNzZW1ibGVTaGFkZXJzIiwiZGVidWdJbmZvIiwiZ3B1VmVuZG9yIiwidmVuZG9yIiwicmVuZGVyZXIiLCJyZXN1bHQiLCJtYXRjaCIsImdsIiwicGxhdGZvcm1EZWZpbmVzIiwiYXNzZW1ibGVTaGFkZXIiLCJ2cyIsImZzIiwiZnA2NCIsInByb2plY3QiLCJwcm9qZWN0NjQiLCJvcHRzIiwic291cmNlIiwiT2JqZWN0Iiwia2V5cyIsImNodW5rTmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7UUFNZ0JBLG1CLEdBQUFBLG1CO1FBcUJBQyx3QixHQUFBQSx3QjtRQXFEQUMsZSxHQUFBQSxlOztBQWhGaEI7O0FBSUE7Ozs7Ozs7O0FBRkE7QUFDQTs7O0FBR08sU0FBU0YsbUJBQVQsQ0FBNkJHLFNBQTdCLEVBQXdDQyxTQUF4QyxFQUFtRDtBQUFBLE1BQ2pEQyxNQURpRCxHQUM3QkYsU0FENkIsQ0FDakRFLE1BRGlEO0FBQUEsTUFDekNDLFFBRHlDLEdBQzdCSCxTQUQ2QixDQUN6Q0csUUFEeUM7O0FBRXhELE1BQUlDLGVBQUo7QUFDQSxVQUFRSCxTQUFSO0FBQ0EsU0FBSyxRQUFMO0FBQ0VHLGVBQVNGLE9BQU9HLEtBQVAsQ0FBYSxTQUFiLEtBQTJCRixTQUFTRSxLQUFULENBQWUsU0FBZixDQUFwQztBQUNBO0FBQ0YsU0FBSyxPQUFMO0FBQ0VELGVBQVNGLE9BQU9HLEtBQVAsQ0FBYSxRQUFiLEtBQTBCRixTQUFTRSxLQUFULENBQWUsUUFBZixDQUFuQztBQUNBO0FBQ0YsU0FBSyxLQUFMO0FBQ0VELGVBQ0VGLE9BQU9HLEtBQVAsQ0FBYSxNQUFiLEtBQXdCRixTQUFTRSxLQUFULENBQWUsTUFBZixDQUF4QixJQUNBSCxPQUFPRyxLQUFQLENBQWEsTUFBYixDQURBLElBQ3dCRixTQUFTRSxLQUFULENBQWUsTUFBZixDQUYxQjtBQUdBO0FBQ0Y7QUFDRUQsZUFBUyxLQUFUO0FBYkY7QUFlQSxTQUFPQSxNQUFQO0FBQ0Q7O0FBRU0sU0FBU04sd0JBQVQsQ0FBa0NRLEVBQWxDLEVBQXNDO0FBQzNDO0FBQ0EsTUFBSUMsa0JBQWtCLEVBQXRCO0FBQ0EsTUFBTVAsWUFBWSwwQkFBZU0sRUFBZixDQUFsQjs7QUFFQSxNQUFJVCxvQkFBb0JHLFNBQXBCLEVBQStCLFFBQS9CLENBQUosRUFBOEM7QUFDNUNPO0FBS0QsR0FORCxNQU1PLElBQUlWLG9CQUFvQkcsU0FBcEIsRUFBK0IsT0FBL0IsQ0FBSixFQUE2QztBQUNsRE87QUFNRCxHQVBNLE1BT0EsSUFBSVYsb0JBQW9CRyxTQUFwQixFQUErQixLQUEvQixDQUFKLEVBQTJDO0FBQ2hETztBQUdELEdBSk0sTUFJQTtBQUNMQTtBQUdEOztBQUVELFNBQU9BLGVBQVA7QUFDRDs7QUFFRCxTQUFTQyxjQUFULENBQXdCRixFQUF4QixRQU9HO0FBQUEsTUFOREcsRUFNQyxRQU5EQSxFQU1DO0FBQUEsTUFMREMsRUFLQyxRQUxEQSxFQUtDO0FBQUEscUJBSkRDLElBSUM7QUFBQSxNQUpEQSxJQUlDLDJCQUpNLEtBSU47QUFBQSwwQkFIREMsT0FHQztBQUFBLE1BSERBLE9BR0MsZ0NBSFMsSUFHVDtBQUFBLDJCQUZEQyxTQUVDO0FBQUEsTUFGREEsU0FFQyxpQ0FGVyxLQUVYO0FBQUEsTUFERUMsSUFDRjs7QUFDRCxNQUFJRCxjQUFjLElBQWxCLEVBQXdCO0FBQ3RCRixXQUFPLElBQVA7QUFDRDtBQUNELE1BQUlJLFNBQVlqQix5QkFBeUJRLEVBQXpCLENBQVosT0FBSjtBQUNBUSxzQkFBV0EsSUFBWCxJQUFpQkYsZ0JBQWpCLEVBQTBCQyxvQkFBMUIsRUFBcUNGLFVBQXJDO0FBTEM7QUFBQTtBQUFBOztBQUFBO0FBTUQseUJBQXdCSyxPQUFPQyxJQUFQLHdCQUF4Qiw4SEFBb0Q7QUFBQSxVQUF6Q0MsU0FBeUM7O0FBQ2xELFVBQUlKLEtBQUtJLFNBQUwsQ0FBSixFQUFxQjtBQUNuQkgsa0JBQWEsdUJBQWNHLFNBQWQsRUFBeUJILE1BQXRDO0FBQ0Q7QUFDRjtBQVZBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBV0RBLFlBQVVOLEVBQVY7QUFDQSxTQUFPTSxNQUFQO0FBQ0Q7O0FBRU0sU0FBU2hCLGVBQVQsQ0FBeUJPLEVBQXpCLFNBSUo7QUFBQSxNQUhERyxFQUdDLFNBSERBLEVBR0M7QUFBQSxNQUZEQyxFQUVDLFNBRkRBLEVBRUM7QUFBQSxNQURFSSxJQUNGOztBQUNELFNBQU87QUFDTFIsVUFESztBQUVMRyxRQUFJRCxlQUFlRixFQUFmLGVBQXVCUSxJQUF2QixJQUE2QkwsTUFBN0IsSUFGQztBQUdMQztBQUhLLEdBQVA7QUFLRCIsImZpbGUiOiJhc3NlbWJsZS1zaGFkZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtnbEdldERlYnVnSW5mb30gZnJvbSAnbHVtYS5nbCc7XG5cbi8vIExvYWQgc2hhZGVyIGNodW5rc1xuLy8gaW1wb3J0IFNIQURFUl9DSFVOS1MgZnJvbSAnLi4vLi4vZGlzdC9zaGFkZXJsaWIvc2hhZGVyLWNodW5rcyc7XG5pbXBvcnQgU0hBREVSX0NIVU5LUyBmcm9tICcuL3NoYWRlci1jaHVua3MnO1xuXG5leHBvcnQgZnVuY3Rpb24gY2hlY2tSZW5kZXJlclZlbmRvcihkZWJ1Z0luZm8sIGdwdVZlbmRvcikge1xuICBjb25zdCB7dmVuZG9yLCByZW5kZXJlcn0gPSBkZWJ1Z0luZm87XG4gIGxldCByZXN1bHQ7XG4gIHN3aXRjaCAoZ3B1VmVuZG9yKSB7XG4gIGNhc2UgJ252aWRpYSc6XG4gICAgcmVzdWx0ID0gdmVuZG9yLm1hdGNoKC9OVklESUEvaSkgfHwgcmVuZGVyZXIubWF0Y2goL05WSURJQS9pKTtcbiAgICBicmVhaztcbiAgY2FzZSAnaW50ZWwnOlxuICAgIHJlc3VsdCA9IHZlbmRvci5tYXRjaCgvSU5URUwvaSkgfHwgcmVuZGVyZXIubWF0Y2goL0lOVEVML2kpO1xuICAgIGJyZWFrO1xuICBjYXNlICdhbWQnOlxuICAgIHJlc3VsdCA9XG4gICAgICB2ZW5kb3IubWF0Y2goL0FNRC9pKSB8fCByZW5kZXJlci5tYXRjaCgvQU1EL2kpIHx8XG4gICAgICB2ZW5kb3IubWF0Y2goL0FUSS9pKSB8fCByZW5kZXJlci5tYXRjaCgvQVRJL2kpO1xuICAgIGJyZWFrO1xuICBkZWZhdWx0OlxuICAgIHJlc3VsdCA9IGZhbHNlO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRQbGF0Zm9ybVNoYWRlckRlZmluZXMoZ2wpIHtcbiAgLyogZXNsaW50LWRpc2FibGUgKi9cbiAgbGV0IHBsYXRmb3JtRGVmaW5lcyA9ICcnO1xuICBjb25zdCBkZWJ1Z0luZm8gPSBnbEdldERlYnVnSW5mbyhnbCk7XG5cbiAgaWYgKGNoZWNrUmVuZGVyZXJWZW5kb3IoZGVidWdJbmZvLCAnbnZpZGlhJykpIHtcbiAgICBwbGF0Zm9ybURlZmluZXMgKz0gYFxcXG4jZGVmaW5lIE5WSURJQV9HUFVcbiNkZWZpbmUgTlZJRElBX0ZQNjRfV09SS0FST1VORCAxXG4jZGVmaW5lIE5WSURJQV9FUVVBVElPTl9XT1JLQVJPVU5EIDFcbmA7XG4gIH0gZWxzZSBpZiAoY2hlY2tSZW5kZXJlclZlbmRvcihkZWJ1Z0luZm8sICdpbnRlbCcpKSB7XG4gICAgcGxhdGZvcm1EZWZpbmVzICs9IGBcXFxuI2RlZmluZSBJTlRFTF9HUFVcbiNkZWZpbmUgSU5URUxfRlA2NF9XT1JLQVJPVU5EIDFcbiNkZWZpbmUgTlZJRElBX0VRVUFUSU9OX1dPUktBUk9VTkQgMVxcbiBcXFxuI2RlZmluZSBJTlRFTF9UQU5fV09SS0FST1VORCAxXG5gO1xuICB9IGVsc2UgaWYgKGNoZWNrUmVuZGVyZXJWZW5kb3IoZGVidWdJbmZvLCAnYW1kJykpIHtcbiAgICBwbGF0Zm9ybURlZmluZXMgKz0gYFxcXG4jZGVmaW5lIEFNRF9HUFVcbmA7XG4gIH0gZWxzZSB7XG4gICAgcGxhdGZvcm1EZWZpbmVzICs9IGBcXFxuI2RlZmluZSBERUZBVUxUX0dQVVxuYDtcbiAgfVxuXG4gIHJldHVybiBwbGF0Zm9ybURlZmluZXM7XG59XG5cbmZ1bmN0aW9uIGFzc2VtYmxlU2hhZGVyKGdsLCB7XG4gIHZzLFxuICBmcyxcbiAgZnA2NCA9IGZhbHNlLFxuICBwcm9qZWN0ID0gdHJ1ZSxcbiAgcHJvamVjdDY0ID0gZmFsc2UsXG4gIC4uLm9wdHNcbn0pIHtcbiAgaWYgKHByb2plY3Q2NCA9PT0gdHJ1ZSkge1xuICAgIGZwNjQgPSB0cnVlO1xuICB9XG4gIGxldCBzb3VyY2UgPSBgJHtnZXRQbGF0Zm9ybVNoYWRlckRlZmluZXMoZ2wpfVxcbmA7XG4gIG9wdHMgPSB7Li4ub3B0cywgcHJvamVjdCwgcHJvamVjdDY0LCBmcDY0fTtcbiAgZm9yIChjb25zdCBjaHVua05hbWUgb2YgT2JqZWN0LmtleXMoU0hBREVSX0NIVU5LUykpIHtcbiAgICBpZiAob3B0c1tjaHVua05hbWVdKSB7XG4gICAgICBzb3VyY2UgKz0gYCR7U0hBREVSX0NIVU5LU1tjaHVua05hbWVdLnNvdXJjZX1cXG5gO1xuICAgIH1cbiAgfVxuICBzb3VyY2UgKz0gdnM7XG4gIHJldHVybiBzb3VyY2U7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlbWJsZVNoYWRlcnMoZ2wsIHtcbiAgdnMsXG4gIGZzLFxuICAuLi5vcHRzXG59KSB7XG4gIHJldHVybiB7XG4gICAgZ2wsXG4gICAgdnM6IGFzc2VtYmxlU2hhZGVyKGdsLCB7Li4ub3B0cywgdnN9KSxcbiAgICBmc1xuICB9O1xufVxuIl19

/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // Load shader chunks
	
	
	var _fp = __webpack_require__(419);
	
	var _fp2 = _interopRequireDefault(_fp);
	
	var _project = __webpack_require__(420);
	
	var _project2 = _interopRequireDefault(_project);
	
	var _project3 = __webpack_require__(421);
	
	var _project4 = _interopRequireDefault(_project3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	module.exports = _extends({}, _fp2.default, _project2.default, _project4.default);
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zaGFkZXItdXRpbHMvc2hhZGVyLWNodW5rcy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztrUUFBQTs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFFQUEsT0FBT0MsT0FBUCIsImZpbGUiOiJzaGFkZXItY2h1bmtzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTG9hZCBzaGFkZXIgY2h1bmtzXG5pbXBvcnQgZnA2NCBmcm9tICcuLi8uLi9kaXN0L3NoYWRlcmxpYi9mcDY0JztcbmltcG9ydCBwcm9qZWN0IGZyb20gJy4uLy4uL2Rpc3Qvc2hhZGVybGliL3Byb2plY3QnO1xuaW1wb3J0IHByb2plY3Q2NCBmcm9tICcuLi8uLi9kaXN0L3NoYWRlcmxpYi9wcm9qZWN0NjQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLi4uZnA2NCxcbiAgLi4ucHJvamVjdCxcbiAgLi4ucHJvamVjdDY0XG59O1xuIl19

/***/ },
/* 419 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = {
	  fp64: {
	    interface: 'fp64',
	    source: '// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nuniform float ONE;\n\nconst vec2 E_FP64 = vec2(2.7182817459106445e+00, 8.254840366817007e-08);\nconst vec2 LOG2_FP64 = vec2(0.6931471824645996e+00, -1.9046542121259336e-09);\nconst vec2 PI_FP64 = vec2(3.1415927410125732, -8.742278012618954e-8);\nconst vec2 TWO_PI_FP64 = vec2(6.2831854820251465, -1.7484556025237907e-7);\nconst vec2 PI_2_FP64 = vec2(1.5707963705062866, -4.371139006309477e-8);\nconst vec2 PI_4_FP64 = vec2(0.7853981852531433, -2.1855695031547384e-8);\nconst vec2 PI_16_FP64 = vec2(0.19634954631328583, -5.463923757886846e-9);\nconst vec2 PI_16_2_FP64 = vec2(0.39269909262657166, -1.0927847515773692e-8);\nconst vec2 PI_16_3_FP64 = vec2(0.5890486240386963, -1.4906100798128818e-9);\n\nconst vec2 SIN_TABLE_0_FP64 = vec2(0.19509032368659973, -1.6704714833615242e-9);\nconst vec2 SIN_TABLE_1_FP64 = vec2(0.3826834261417389, 6.22335089017767e-9);\nconst vec2 SIN_TABLE_2_FP64 = vec2(0.5555702447891235, -1.1769521357507529e-8);\nconst vec2 SIN_TABLE_3_FP64 = vec2(0.7071067690849304, 1.2101617041793133e-8);\n\nconst vec2 COS_TABLE_0_FP64 = vec2(0.9807852506637573, 2.9739473106360492e-8);\nconst vec2 COS_TABLE_1_FP64 = vec2(0.9238795042037964, 2.8307490351764386e-8);\nconst vec2 COS_TABLE_2_FP64 = vec2(0.8314695954322815, 1.6870263741530778e-8);\nconst vec2 COS_TABLE_3_FP64 = vec2(0.7071067690849304, 1.2101617152815436e-8);\n\nconst vec2 INVERSE_FACTORIAL_3_FP64 = vec2(1.666666716337204e-01, -4.967053879312289e-09); // 1/3!\nconst vec2 INVERSE_FACTORIAL_4_FP64 = vec2(4.16666679084301e-02, -1.2417634698280722e-09); // 1/4!\nconst vec2 INVERSE_FACTORIAL_5_FP64 = vec2(8.333333767950535e-03, -4.34617203337595e-10); // 1/5!\nconst vec2 INVERSE_FACTORIAL_6_FP64 = vec2(1.3888889225199819e-03, -3.3631094437103215e-11); // 1/6!\nconst vec2 INVERSE_FACTORIAL_7_FP64 = vec2(1.9841270113829523e-04,  -2.725596874933456e-12); // 1/7!\nconst vec2 INVERSE_FACTORIAL_8_FP64 = vec2(2.4801587642286904e-05, -3.406996025904184e-13); // 1/8!\nconst vec2 INVERSE_FACTORIAL_9_FP64 = vec2(2.75573188446287533e-06, 3.7935713937038186e-14); // 1/9!\nconst vec2 INVERSE_FACTORIAL_10_FP64 = vec2(2.755731998149713e-07, -7.575112367869873e-15); // 1/10!\n\nfloat nint(float d) {\n    if (d == floor(d)) return d;\n    return floor(d + 0.5);\n}\n\n#if defined(NVIDIA_FP64_WORKAROUND) || defined(INTEL_FP64_WORKAROUND)\nvec2 split(float a) {\n  const float SPLIT = 4097.0;\n  float t = a * SPLIT;\n  float a_hi = t * ONE - (t - a);\n  float a_lo = a * ONE - a_hi;\n  return vec2(a_hi, a_lo);\n}\n#else\nvec2 split(float a) {\n  const float SPLIT = 4097.0;\n  float t = a * SPLIT;\n  float a_hi = t - (t - a);\n  float a_lo = a - a_hi;\n  return vec2(a_hi, a_lo);\n}\n#endif\n\n#if defined(NVIDIA_EQUATION_WORKAROUND) || defined(INTEL_EQUATION_WORKAROUND)\nvec2 quickTwoSum(float a, float b) {\n  float sum = (a + b) * ONE;\n  float err = b - (sum - a) * ONE;\n  return vec2(sum, err);\n}\n#else\nvec2 quickTwoSum(float a, float b) {\n  float sum = a + b;\n  float err = b - (sum - a);\n  return vec2(sum, err);\n}\n#endif\n\nvec2 nint_fp64(vec2 a) {\n    float hi = nint(a.x);\n    float lo;\n    vec2 tmp;\n    if (hi == a.x) {\n        lo = nint(a.y);\n        tmp = quickTwoSum(hi, lo);\n    } else {\n        lo = 0.0;\n        if (abs(hi - a.x) == 0.5 && a.y < 0.0) {\n            hi -= 1.0;\n        }\n        tmp = vec2(hi, lo);\n    }\n    return tmp;\n}\n\n#if defined(NVIDIA_EQUATION_WORKAROUND) || defined(INTEL_EQUATION_WORKAROUND)\nvec2 twoSum(float a, float b) {\n  float s = (a + b) * ONE;\n  float v = (s - a);\n  float err = (a - (s - v) * ONE) * ONE + (b - v);\n  return vec2(s, err);\n}\n#else\nvec2 twoSum(float a, float b) {\n  float s = a + b;\n  float v = s - a;\n  float err = (a - (s - v)) + (b - v);\n  return vec2(s, err);\n}\n#endif\n\n#if defined(NVIDIA_EQUATION_WORKAROUND) || defined(INTEL_EQUATION_WORKAROUND)\nvec2 twoSub(float a, float b) {\n  float s = (a - b) * ONE;\n  float v = (s - a);\n  float err = (a - (s - v) * ONE) * ONE - (b + v);\n  return vec2(s, err);\n}\n#else\nvec2 twoSub(float a, float b) {\n  float s = a - b;\n  float v = s - a;\n  float err = (a - (s - v)) - (b + v);\n  return vec2(s, err);\n}\n#endif\n\nvec2 twoProd(float a, float b) {\n  float prod = a * b;\n  vec2 a_fp64 = split(a);\n  vec2 b_fp64 = split(b);\n  float err = ((a_fp64.x * b_fp64.x - prod) + a_fp64.x * b_fp64.y +\n    a_fp64.y * b_fp64.x) + a_fp64.y * b_fp64.y;\n  return vec2(prod, err);\n}\n\n#if defined(NVIDIA_EQUATION_WORKAROUND) || defined(INTEL_EQUATION_WORKAROUND)\nvec2 twoSqr(float a) {\n  float prod = a * a;\n  vec2 a_fp64 = split(a);\n\n  float err = ((a_fp64.x * a_fp64.x - prod) * ONE + 2.0 * a_fp64.x * a_fp64.y * ONE * ONE) + a_fp64.y * a_fp64.y * ONE * ONE * ONE;\n  return vec2(prod, err);\n}\n#else\nvec2 twoSqr(float a) {\n  float prod = a * a;\n  vec2 a_fp64 = split(a);\n\n  float err = ((a_fp64.x * a_fp64.x - prod) + 2.0 * a_fp64.x * a_fp64.y) + a_fp64.y * a_fp64.y;\n  return vec2(prod, err);\n}\n#endif\n\nvec2 sum_fp64(vec2 a, vec2 b) {\n  vec2 s, t;\n  s = twoSum(a.x, b.x);\n  t = twoSum(a.y, b.y);\n  s.y += t.x;\n  s = quickTwoSum(s.x, s.y);\n  s.y += t.y;\n  s = quickTwoSum(s.x, s.y);\n  return s;\n}\n\nvec2 sub_fp64(vec2 a, vec2 b) {\n  vec2 s, t;\n  s = twoSub(a.x, b.x);\n  t = twoSub(a.y, b.y);\n  s.y += t.x;\n  s = quickTwoSum(s.x, s.y);\n  s.y += t.y;\n  s = quickTwoSum(s.x, s.y);\n  return s;\n}\n\nvec2 mul_fp64(vec2 a, vec2 b) {\n  vec2 prod = twoProd(a.x, b.x);\n  // y component is for the error\n  prod.y += a.x * b.y;\n  prod.y += a.y * b.x;\n  prod = quickTwoSum(prod.x, prod.y);\n  return prod;\n}\n\nvec2 div_fp64(vec2 a, vec2 b) {\n  float xn = 1.0 / b.x;\n  vec2 yn = a * xn;\n  float diff = (sub_fp64(a, mul_fp64(b, yn))).x;\n  vec2 prod = twoProd(xn, diff);\n  return sum_fp64(yn, prod);\n}\n\nvec2 sqrt_fp64(vec2 a) {\n\n  if (a.x == 0.0 && a.y == 0.0) return vec2(0.0, 0.0);\n  if (a.x < 0.0) return vec2(0.0 / 0.0, 0.0 / 0.0);\n\n  float x = 1.0 / sqrt(a.x);\n  float yn = a.x * x;\n#if defined(NVIDIA_FP64_WORKAROUND) || defined(INTEL_FP64_WORKAROUND)\n  vec2 yn_sqr = twoSqr(yn) * ONE;\n#else\n  vec2 yn_sqr = twoSqr(yn);\n#endif\n  float diff = sub_fp64(a, yn_sqr).x;\n  vec2 prod = twoProd(x * 0.5, diff);\n  return sum_fp64(vec2(yn, 0.0), prod);\n}\n\nvec2 exp_fp64(vec2 a) {\n  const float k = 512.0;\n  const float inv_k = 1.0 / k;\n\n  if (a.x <= -88.0) return vec2(0.0, 0.0);\n  if (a.x >= 88.0) return vec2(1.0 / 0.0, 1.0 / 0.0);\n  if (a.x == 0.0 && a.y == 0.0) return vec2(1.0, 0.0);\n  if (a.x == 1.0 && a.y == 0.0) return E_FP64;\n\n  // Range reduction using assume a = kr + m * log(2), k and m being integers.\n  // Set k = 9 (we can choose other k to trade accuracy with performance.\n  // we only need to calculate exp(r) and using exp(a) = 2^m * exp(r)^k\n\n  float m = floor(a.x / LOG2_FP64.x + 0.5);\n  vec2 r = sub_fp64(a, mul_fp64(LOG2_FP64, vec2(m, 0.0))) * inv_k;\n  vec2 s, t, p;\n\n  p = mul_fp64(r, r);\n  s = sum_fp64(r, p * 0.5);\n  p = mul_fp64(p, r);\n  t = mul_fp64(p, INVERSE_FACTORIAL_3_FP64);\n\n  s = sum_fp64(s, t);\n  p = mul_fp64(p, r);\n  t = mul_fp64(p, INVERSE_FACTORIAL_4_FP64);\n\n  s = sum_fp64(s, t);\n  p = mul_fp64(p, r);\n  t = mul_fp64(p, INVERSE_FACTORIAL_5_FP64);\n\n  s = sum_fp64(s, t);\n  p = mul_fp64(p, r);\n  t = mul_fp64(p, INVERSE_FACTORIAL_6_FP64);\n\n  s = sum_fp64(s, t);\n  p = mul_fp64(p, r);\n  t = mul_fp64(p, INVERSE_FACTORIAL_7_FP64);\n\n  s = sum_fp64(s, t);\n\n  // At this point, s = exp(r) - 1; but after following 4 recursions, we will get exp(r) ^ 512 - 1.\n\n  s = sum_fp64(s * 2.0, mul_fp64(s, s));\n  s = sum_fp64(s * 2.0, mul_fp64(s, s));\n  s = sum_fp64(s * 2.0, mul_fp64(s, s));\n  s = sum_fp64(s * 2.0, mul_fp64(s, s));\n\n  // We can add more iterations here and increase k.\n  s = sum_fp64(s * 2.0, mul_fp64(s, s));\n  s = sum_fp64(s * 2.0, mul_fp64(s, s));\n  s = sum_fp64(s * 2.0, mul_fp64(s, s));\n  s = sum_fp64(s * 2.0, mul_fp64(s, s));\n  s = sum_fp64(s * 2.0, mul_fp64(s, s));\n\n#if defined(NVIDIA_FP64_WORKAROUND) || defined(INTEL_FP64_WORKAROUND)\n  s = sum_fp64(s, vec2(1.0, 0.0) * ONE);\n#else\n  s = sum_fp64(s, vec2(1.0, 0.0));\n#endif\n\n  return s * pow(2.0, m);\n//   return r;\n}\n\nvec2 log_fp64(vec2 a)\n{\n  if (a.x == 1.0 && a.y == 0.0) return vec2(0.0, 0.0);\n  if (a.x <= 0.0) return vec2(0.0 / 0.0, 0.0 / 0.0);\n  vec2 x = vec2(log(a.x), 0.0);\n  x = sub_fp64(sum_fp64(x, mul_fp64(a, exp_fp64(-x))), vec2(1.0, 0.0));\n  return x;\n}\n\nvec2 sin_taylor_fp64(vec2 a) {\n  vec2 r, s, t, x;\n\n  if (a.x == 0.0 && a.y == 0.0) {\n    return vec2(0.0, 0.0);\n  }\n\n  x = -mul_fp64(a, a);\n  s = a;\n  r = a;\n\n  r = mul_fp64(r, x);\n  t = mul_fp64(r, INVERSE_FACTORIAL_3_FP64);\n  s = sum_fp64(s, t);\n\n  r = mul_fp64(r, x);\n  t = mul_fp64(r, INVERSE_FACTORIAL_5_FP64);\n  s = sum_fp64(s, t);\n\n  r = mul_fp64(r, x);\n  t = mul_fp64(r, INVERSE_FACTORIAL_7_FP64);\n  s = sum_fp64(s, t);\n\n  r = mul_fp64(r, x);\n  t = mul_fp64(r, INVERSE_FACTORIAL_9_FP64);\n  s = sum_fp64(s, t);\n\n  return s;\n}\n\nvec2 cos_taylor_fp64(vec2 a) {\n  vec2 r, s, t, x;\n\n  if (a.x == 0.0 && a.y == 0.0) {\n    return vec2(1.0, 0.0);\n  }\n\n  x = -mul_fp64(a, a);\n  r = x;\n  s = sum_fp64(vec2(1.0, 0.0), r * 0.5);\n\n  r = mul_fp64(r, x);\n  t = mul_fp64(r, INVERSE_FACTORIAL_4_FP64);\n  s = sum_fp64(s, t);\n\n  r = mul_fp64(r, x);\n  t = mul_fp64(r, INVERSE_FACTORIAL_6_FP64);\n  s = sum_fp64(s, t);\n\n  r = mul_fp64(r, x);\n  t = mul_fp64(r, INVERSE_FACTORIAL_8_FP64);\n  s = sum_fp64(s, t);\n\n  r = mul_fp64(r, x);\n  t = mul_fp64(r, INVERSE_FACTORIAL_10_FP64);\n  s = sum_fp64(s, t);\n\n  return s;\n}\n\nvoid sincos_taylor_fp64(vec2 a, out vec2 sin_t, out vec2 cos_t) {\n  if (a.x == 0.0 && a.y == 0.0) {\n    sin_t = vec2(0.0, 0.0);\n    cos_t = vec2(1.0, 0.0);\n  }\n\n  sin_t = sin_taylor_fp64(a);\n  cos_t = sqrt_fp64(sub_fp64(vec2(1.0, 0.0), mul_fp64(sin_t, sin_t)));\n}\n\nvec2 sin_fp64(vec2 a) {\n    if (a.x == 0.0 && a.y == 0.0) {\n        return vec2(0.0, 0.0);\n    }\n\n    // 2pi range reduction\n    vec2 z = nint_fp64(div_fp64(a, TWO_PI_FP64));\n    vec2 r = sub_fp64(a, mul_fp64(TWO_PI_FP64, z));\n\n    vec2 t;\n    float q = floor(r.x / PI_2_FP64.x + 0.5);\n    int j = int(q);\n\n    if (j < -2 || j > 2) {\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\n    }\n\n    t = sub_fp64(r, mul_fp64(PI_2_FP64, vec2(q, 0.0)));\n\n    q = floor(t.x / PI_16_FP64.x + 0.5);\n    int k = int(q);\n\n    if (k == 0) {\n        if (j == 0) {\n            return sin_taylor_fp64(t);\n        } else if (j == 1) {\n            return cos_taylor_fp64(t);\n        } else if (j == -1) {\n            return -cos_taylor_fp64(t);\n        } else {\n            return -sin_taylor_fp64(t);\n        }\n    }\n\n    int abs_k = int(abs(float(k)));\n\n    if (abs_k > 4) {\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\n    } else if (k == 3) {\n        t = sub_fp64(t, PI_16_3_FP64);\n    } else if (k == -3) {\n        t = sum_fp64(t, PI_16_3_FP64);\n    } else {\n        t = sub_fp64(t, mul_fp64(PI_16_FP64, vec2(q, 0.0)));\n    }\n\n    vec2 u = vec2(0.0, 0.0);\n    vec2 v = vec2(0.0, 0.0);\n\n#if defined(NVIDIA_EQUATION_WORKAROUND) || defined(INTEL_EQUATION_WORKAROUND)\n    if (abs(float(abs_k) - 1.0) < 0.5) {\n        u = COS_TABLE_0_FP64;\n        v = SIN_TABLE_0_FP64;\n    } else if (abs(float(abs_k) - 2.0) < 0.5) {\n        u = COS_TABLE_1_FP64;\n        v = SIN_TABLE_1_FP64;\n    } else if (abs(float(abs_k) - 3.0) < 0.5) {\n        u = COS_TABLE_2_FP64;\n        v = SIN_TABLE_2_FP64;\n    } else if (abs(float(abs_k) - 4.0) < 0.5) {\n        u = COS_TABLE_3_FP64;\n        v = SIN_TABLE_3_FP64;\n    }\n#else\n    if (abs_k == 1) {\n        u = COS_TABLE_0_FP64;\n        v = SIN_TABLE_0_FP64;\n    } else if (abs_k == 2) {\n        u = COS_TABLE_1_FP64;\n        v = SIN_TABLE_1_FP64;\n    } else if (abs_k == 3) {\n        u = COS_TABLE_2_FP64;\n        v = SIN_TABLE_2_FP64;\n    } else if (abs_k == 4) {\n        u = COS_TABLE_3_FP64;\n        v = SIN_TABLE_3_FP64;\n    }\n#endif\n\n    vec2 sin_t, cos_t;\n    sincos_taylor_fp64(t, sin_t, cos_t);\n\n    vec2 result = vec2(0.0, 0.0);\n    if (j == 0) {\n        if (k > 0) {\n            result = sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\n        } else {\n            result = sub_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\n        }\n    } else if (j == 1) {\n        if (k > 0) {\n            result = sub_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\n        } else {\n            result = sum_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\n        }\n    } else if (j == -1) {\n        if (k > 0) {\n            result = sub_fp64(mul_fp64(v, sin_t), mul_fp64(u, cos_t));\n        } else {\n            result = -sum_fp64(mul_fp64(v, sin_t), mul_fp64(u, cos_t));\n        }\n    } else {\n        if (k > 0) {\n            result = -sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\n        } else {\n            result = sub_fp64(mul_fp64(v, cos_t), mul_fp64(u, sin_t));\n        }\n    }\n\n    return result;\n}\n\nvec2 cos_fp64(vec2 a) {\n    if (a.x == 0.0 && a.y == 0.0) {\n        return vec2(1.0, 0.0);\n    }\n\n    // 2pi range reduction\n    vec2 z = nint_fp64(div_fp64(a, TWO_PI_FP64));\n    vec2 r = sub_fp64(a, mul_fp64(TWO_PI_FP64, z));\n\n    vec2 t;\n    float q = floor(r.x / PI_2_FP64.x + 0.5);\n    int j = int(q);\n\n    if (j < -2 || j > 2) {\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\n    }\n\n    t = sub_fp64(r, mul_fp64(PI_2_FP64, vec2(q, 0.0)));\n\n    q = floor(t.x / PI_16_FP64.x + 0.5);\n    int k = int(q);\n\n    if (k == 0) {\n        if (j == 0) {\n            return cos_taylor_fp64(t);\n        } else if (j == 1) {\n            return -sin_taylor_fp64(t);\n        } else if (j == -1) {\n            return sin_taylor_fp64(t);\n        } else {\n            return -cos_taylor_fp64(t);\n        }\n    }\n\n    int abs_k = int(abs(float(k)));\n\n    if (abs_k > 4) {\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\n    } else if (k == 3) {\n        t = sub_fp64(t, PI_16_3_FP64);\n    } else if (k == -3) {\n        t = sum_fp64(t, PI_16_3_FP64);\n    } else {\n        t = sub_fp64(t, mul_fp64(PI_16_FP64, vec2(q, 0.0)));\n    }\n\n    vec2 u = vec2(0.0, 0.0);\n    vec2 v = vec2(0.0, 0.0);\n\n#if defined(NVIDIA_EQUATION_WORKAROUND) || defined(INTEL_EQUATION_WORKAROUND)\n    if (abs(float(abs_k) - 1.0) < 0.5) {\n        u = COS_TABLE_0_FP64;\n        v = SIN_TABLE_0_FP64;\n    } else if (abs(float(abs_k) - 2.0) < 0.5) {\n        u = COS_TABLE_1_FP64;\n        v = SIN_TABLE_1_FP64;\n    } else if (abs(float(abs_k) - 3.0) < 0.5) {\n        u = COS_TABLE_2_FP64;\n        v = SIN_TABLE_2_FP64;\n    } else if (abs(float(abs_k) - 4.0) < 0.5) {\n        u = COS_TABLE_3_FP64;\n        v = SIN_TABLE_3_FP64;\n    }\n#else\n    if (abs_k == 1) {\n        u = COS_TABLE_0_FP64;\n        v = SIN_TABLE_0_FP64;\n    } else if (abs_k == 2) {\n        u = COS_TABLE_1_FP64;\n        v = SIN_TABLE_1_FP64;\n    } else if (abs_k == 3) {\n        u = COS_TABLE_2_FP64;\n        v = SIN_TABLE_2_FP64;\n    } else if (abs_k == 4) {\n        u = COS_TABLE_3_FP64;\n        v = SIN_TABLE_3_FP64;\n    }\n#endif\n\n    vec2 sin_t, cos_t;\n    sincos_taylor_fp64(t, sin_t, cos_t);\n\n    vec2 result = vec2(0.0, 0.0);\n    if (j == 0) {\n        if (k > 0) {\n            result = sub_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\n        } else {\n            result = sum_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\n        }\n    } else if (j == 1) {\n        if (k > 0) {\n            result = -sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\n        } else {\n            result = sub_fp64(mul_fp64(v, cos_t), mul_fp64(u, sin_t));\n        }\n    } else if (j == -1) {\n        if (k > 0) {\n            result = sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\n        } else {\n            result = sub_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\n        }\n    } else {\n        if (k > 0) {\n            result = sub_fp64(mul_fp64(v, sin_t), mul_fp64(u, cos_t));\n        } else {\n            result = -sum_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\n        }\n    }\n\n    return result;\n}\n\nvec2 tan_fp64(vec2 a) {\n    vec2 sin_a;\n    vec2 cos_a;\n\n    if (a.x == 0.0 && a.y == 0.0) {\n        return vec2(0.0, 0.0);\n    }\n\n    // 2pi range reduction\n    vec2 z = nint_fp64(div_fp64(a, TWO_PI_FP64));\n    vec2 r = sub_fp64(a, mul_fp64(TWO_PI_FP64, z));\n\n    vec2 t;\n    float q = floor(r.x / PI_2_FP64.x + 0.5);\n    int j = int(q);\n\n\n    if (j < -2 || j > 2) {\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\n    }\n\n    t = sub_fp64(r, mul_fp64(PI_2_FP64, vec2(q, 0.0)));\n\n    q = floor(t.x / PI_16_FP64.x + 0.5);\n    int k = int(q);\n    int abs_k = int(abs(float(k)));\n\n    // We just can\'t get PI/16 * 3.0 very accurately.\n    // so let\'s just store it\n    if (abs_k > 4) {\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\n    } else if (k == 3) {\n        t = sub_fp64(t, PI_16_3_FP64);\n    } else if (k == -3) {\n        t = sum_fp64(t, PI_16_3_FP64);\n    } else {\n        t = sub_fp64(t, mul_fp64(PI_16_FP64, vec2(q, 0.0)));\n    }\n\n\n    vec2 u = vec2(0.0, 0.0);\n    vec2 v = vec2(0.0, 0.0);\n\n    vec2 sin_t, cos_t;\n    vec2 s, c;\n    sincos_taylor_fp64(t, sin_t, cos_t);\n\n    if (k == 0) {\n        s = sin_t;\n        c = cos_t;\n    } else {\n#if defined(NVIDIA_EQUATION_WORKAROUND) || defined(INTEL_EQUATION_WORKAROUND)\n        if (abs(float(abs_k) - 1.0) < 0.5) {\n            u = COS_TABLE_0_FP64;\n            v = SIN_TABLE_0_FP64;\n        } else if (abs(float(abs_k) - 2.0) < 0.5) {\n            u = COS_TABLE_1_FP64;\n            v = SIN_TABLE_1_FP64;\n        } else if (abs(float(abs_k) - 3.0) < 0.5) {\n            u = COS_TABLE_2_FP64;\n            v = SIN_TABLE_2_FP64;\n        } else if (abs(float(abs_k) - 4.0) < 0.5) {\n            u = COS_TABLE_3_FP64;\n            v = SIN_TABLE_3_FP64;\n        }\n#else\n        if (abs_k == 1) {\n            u = COS_TABLE_0_FP64;\n            v = SIN_TABLE_0_FP64;\n        } else if (abs_k == 2) {\n            u = COS_TABLE_1_FP64;\n            v = SIN_TABLE_1_FP64;\n        } else if (abs_k == 3) {\n            u = COS_TABLE_2_FP64;\n            v = SIN_TABLE_2_FP64;\n        } else if (abs_k == 4) {\n            u = COS_TABLE_3_FP64;\n            v = SIN_TABLE_3_FP64;\n        }\n#endif\n        if (k > 0) {\n            s = sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\n            c = sub_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\n        } else {\n            s = sub_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\n            c = sum_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\n        }\n    }\n\n    if (j == 0) {\n        sin_a = s;\n        cos_a = c;\n    } else if (j == 1) {\n        sin_a = c;\n        cos_a = -s;\n    } else if (j == -1) {\n        sin_a = -c;\n        cos_a = s;\n    } else {\n        sin_a = -s;\n        cos_a = -c;\n    }\n    return div_fp64(sin_a, cos_a);\n}\n\nvec2 radians_fp64(vec2 degree) {\n  return div_fp64(mul_fp64(degree, PI_FP64), vec2(180.0, 0.0));\n}\n\n// Vector functions\n// vec2 functions\nvoid vec2_sum_fp64(vec2 a[2], vec2 b[2], out vec2 out_val[2]) {\n    out_val[0] = sum_fp64(a[0], b[0]);\n    out_val[1] = sum_fp64(a[1], b[1]);\n}\n\nvoid vec2_sub_fp64(vec2 a[2], vec2 b[2], out vec2 out_val[2]) {\n    out_val[0] = sub_fp64(a[0], b[0]);\n    out_val[1] = sub_fp64(a[1], b[1]);\n}\n\nvoid vec2_mix_fp64(vec2 x[2], vec2 y[2], float a, out vec2 out_val[2]) {\n  vec2 range[2];\n  vec2_sub_fp64(y, x, range);\n  vec2 portion[2];\n  portion[0] = range[0] * a;\n  portion[1] = range[1] * a;\n  vec2_sum_fp64(x, portion, out_val);\n}\n\nvec2 vec2_length_fp64(vec2 x[2]) {\n  return sqrt_fp64(sum_fp64(mul_fp64(x[0], x[0]), mul_fp64(x[1], x[1])));\n}\n\nvec2 vec2_distance_fp64(vec2 x[2], vec2 y[2]) {\n  vec2 diff[2];\n  vec2_sub_fp64(x, y, diff);\n  return vec2_length_fp64(diff);\n}\n\n// vec3 functions\nvoid vec3_sub_fp64(vec2 a[3], vec2 b[3], out vec2 out_val[3]) {\n  for (int i = 0; i < 3; i++) {\n    out_val[i] = sum_fp64(a[i], b[i]);\n  }\n}\n\nvoid vec3_sum_fp64(vec2 a[3], vec2 b[3], out vec2 out_val[3]) {\n  for (int i = 0; i < 3; i++) {\n    out_val[i] = sum_fp64(a[i], b[i]);\n  }\n}\n\nvec2 vec3_length_fp64(vec2 x[3]) {\n  return sqrt_fp64(sum_fp64(sum_fp64(mul_fp64(x[0], x[0]), mul_fp64(x[1], x[1])), mul_fp64(x[2], x[2])));\n}\n\nvec2 vec3_distance_fp64(vec2 x[3], vec2 y[3]) {\n  vec2 diff[3];\n  vec3_sub_fp64(x, y, diff);\n  return vec3_length_fp64(diff);\n}\n\n// vec4 functions\nvoid vec4_fp64(vec4 a, out vec2 out_val[4]) {\n  out_val[0].x = a[0];\n  out_val[0].y = 0.0;\n\n  out_val[1].x = a[1];\n  out_val[1].y = 0.0;\n\n  out_val[2].x = a[2];\n  out_val[2].y = 0.0;\n\n  out_val[3].x = a[3];\n  out_val[3].y = 0.0;\n}\n\nvoid vec4_scalar_mul_fp64(vec2 a[4], vec2 b, out vec2 out_val[4]) {\n  out_val[0] = mul_fp64(a[0], b);\n  out_val[1] = mul_fp64(a[1], b);\n  out_val[2] = mul_fp64(a[2], b);\n  out_val[3] = mul_fp64(a[3], b);\n}\n\nvoid vec4_sum_fp64(vec2 a[4], vec2 b[4], out vec2 out_val[4]) {\n  for (int i = 0; i < 4; i++) {\n    out_val[i] = sum_fp64(a[i], b[i]);\n  }\n}\n\nvoid vec4_dot_fp64(vec2 a[4], vec2 b[4], out vec2 out_val) {\n  vec2 v[4];\n\n  v[0] = mul_fp64(a[0], b[0]);\n  v[1] = mul_fp64(a[1], b[1]);\n  v[2] = mul_fp64(a[2], b[2]);\n  v[3] = mul_fp64(a[3], b[3]);\n\n  out_val = sum_fp64(sum_fp64(v[0], v[1]), sum_fp64(v[2], v[3]));\n}\n\nvoid mat4_vec4_mul_fp64(vec2 b[16], vec2 a[4], out vec2 out_val[4]) {\n  vec2 tmp[4];\n\n  for (int i = 0; i < 4; i++)\n  {\n    for (int j = 0; j < 4; j++)\n    {\n      tmp[j] = b[j + i * 4];\n    }\n    vec4_dot_fp64(a, tmp, out_val[i]);\n  }\n}\n'
	  }
	}; /* eslint-disable quote-props, no-path-concat, prefer-template */
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NoYWRlcmxpYi9mcDY0L2luZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJmcDY0IiwiaW50ZXJmYWNlIiwic291cmNlIl0sIm1hcHBpbmdzIjoiOztBQUVBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLFFBQU07QUFDSkMsZUFBVyxNQURQO0FBRUpDO0FBRkk7QUFEUyxDQUFqQixDLENBRkEiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBxdW90ZS1wcm9wcywgbm8tcGF0aC1jb25jYXQsIHByZWZlci10ZW1wbGF0ZSAqL1xudmFyIGZzID0gcmVxdWlyZSgnZnMnKTtcbm1vZHVsZS5leHBvcnRzID0ge1xuICBmcDY0OiB7XG4gICAgaW50ZXJmYWNlOiAnZnA2NCcsXG4gICAgc291cmNlOiBmcy5yZWFkRmlsZVN5bmMoX19kaXJuYW1lICsgJy9tYXRoLWZwNjQuZ2xzbCcsICd1dGY4JylcbiAgfVxufTtcbiJdfQ==

/***/ },
/* 420 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = {
	  project: {
	    interface: 'project',
	    source: 'const float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / (PI * 2.0);\n\nconst float PROJECT_LINEAR = 0.;\nconst float PROJECT_MERCATOR = 1.;\nconst float PROJECT_MERCATOR_OFFSETS = 2.;\n\nuniform float projectionMode;\nuniform float projectionScale;\nuniform vec4 projectionCenter;\nuniform vec3 projectionPixelsPerUnit;\nuniform mat4 projectionMatrix;\nuniform mat4 projectionMatrixUncentered;\n\n#ifdef INTEL_TAN_WORKAROUND\n\n// All these functions are for substituting tan() function from Intel GPU only\nconst float TWO_PI = 6.2831854820251465;\nconst float PI_2 = 1.5707963705062866;\nconst float PI_16 = 0.1963495463132858;\n\nconst float SIN_TABLE_0 = 0.19509032368659973;\nconst float SIN_TABLE_1 = 0.3826834261417389;\nconst float SIN_TABLE_2 = 0.5555702447891235;\nconst float SIN_TABLE_3 = 0.7071067690849304;\n\nconst float COS_TABLE_0 = 0.9807852506637573;\nconst float COS_TABLE_1 = 0.9238795042037964;\nconst float COS_TABLE_2 = 0.8314695954322815;\nconst float COS_TABLE_3 = 0.7071067690849304;\n\nconst float INVERSE_FACTORIAL_3 = 1.666666716337204e-01; // 1/3!\nconst float INVERSE_FACTORIAL_5 = 8.333333767950535e-03; // 1/5!\nconst float INVERSE_FACTORIAL_7 = 1.9841270113829523e-04; // 1/7!\nconst float INVERSE_FACTORIAL_9 = 2.75573188446287533e-06; // 1/9!\n\nfloat sin_taylor_fp32(float a) {\n  float r, s, t, x;\n\n  if (a == 0.0) {\n    return 0.0;\n  }\n\n  x = -a * a;\n  s = a;\n  r = a;\n\n  r = r * x;\n  t = r * INVERSE_FACTORIAL_3;\n  s = s + t;\n\n  r = r * x;\n  t = r * INVERSE_FACTORIAL_5;\n  s = s + t;\n\n  r = r * x;\n  t = r * INVERSE_FACTORIAL_7;\n  s = s + t;\n\n  r = r * x;\n  t = r * INVERSE_FACTORIAL_9;\n  s = s + t;\n\n  return s;\n}\n\nvoid sincos_taylor_fp32(float a, out float sin_t, out float cos_t) {\n  if (a == 0.0) {\n    sin_t = 0.0;\n    cos_t = 1.0;\n  }\n  sin_t = sin_taylor_fp32(a);\n  cos_t = sqrt(1.0 - sin_t * sin_t);\n}\n\nfloat tan_fp32(float a) {\n    float sin_a;\n    float cos_a;\n\n    if (a == 0.0) {\n        return 0.0;\n    }\n\n    // 2pi range reduction\n    float z = floor(a / TWO_PI);\n    float r = a - TWO_PI * z;\n\n    float t;\n    float q = floor(r / PI_2 + 0.5);\n    int j = int(q);\n\n    if (j < -2 || j > 2) {\n        return 0.0 / 0.0;\n    }\n\n    t = r - PI_2 * q;\n\n    q = floor(t / PI_16 + 0.5);\n    int k = int(q);\n    int abs_k = int(abs(float(k)));\n\n    if (abs_k > 4) {\n        return 0.0 / 0.0;\n    } else {\n        t = t - PI_16 * q;\n    }\n\n    float u = 0.0;\n    float v = 0.0;\n\n    float sin_t, cos_t;\n    float s, c;\n    sincos_taylor_fp32(t, sin_t, cos_t);\n\n    if (k == 0) {\n        s = sin_t;\n        c = cos_t;\n    } else {\n        if (abs(float(abs_k) - 1.0) < 0.5) {\n            u = COS_TABLE_0;\n            v = SIN_TABLE_0;\n        } else if (abs(float(abs_k) - 2.0) < 0.5) {\n            u = COS_TABLE_1;\n            v = SIN_TABLE_1;\n        } else if (abs(float(abs_k) - 3.0) < 0.5) {\n            u = COS_TABLE_2;\n            v = SIN_TABLE_2;\n        } else if (abs(float(abs_k) - 4.0) < 0.5) {\n            u = COS_TABLE_3;\n            v = SIN_TABLE_3;\n        }\n        if (k > 0) {\n            s = u * sin_t + v * cos_t;\n            c = u * cos_t - v * sin_t;\n        } else {\n            s = u * sin_t - v * cos_t;\n            c = u * cos_t + v * sin_t;\n        }\n    }\n\n    if (j == 0) {\n        sin_a = s;\n        cos_a = c;\n    } else if (j == 1) {\n        sin_a = c;\n        cos_a = -s;\n    } else if (j == -1) {\n        sin_a = -c;\n        cos_a = s;\n    } else {\n        sin_a = -s;\n        cos_a = -c;\n    }\n    return sin_a / cos_a;\n}\n#endif\n\n//\n// Scaling offsets\n//\n\nfloat project_scale(float meters) {\n  return meters * projectionPixelsPerUnit.x;\n}\n\nvec2 project_scale(vec2 meters) {\n  return vec2(\n    meters.x * projectionPixelsPerUnit.x,\n    meters.y * projectionPixelsPerUnit.x\n  );\n}\n\nvec3 project_scale(vec3 meters) {\n  return vec3(\n    meters.x * projectionPixelsPerUnit.x,\n    meters.y * projectionPixelsPerUnit.x,\n    meters.z * projectionPixelsPerUnit.x\n  );\n}\n\nvec4 project_scale(vec4 meters) {\n  return vec4(\n    meters.x * projectionPixelsPerUnit.x,\n    meters.y * projectionPixelsPerUnit.x,\n    meters.z * projectionPixelsPerUnit.x,\n    meters.w\n  );\n}\n\n//\n// Projecting positions\n//\n\n// non-linear projection: lnglats => unit tile [0-1, 0-1]\nvec2 project_mercator_(vec2 lnglat) {\n  return vec2(\n    radians(lnglat.x) + PI,\n#ifdef INTEL_TAN_WORKAROUND\n        PI - log(tan_fp32(PI * 0.25 + radians(lnglat.y) * 0.5))\n#else\n        PI - log(tan(PI * 0.25 + radians(lnglat.y) * 0.5))\n#endif\n  );\n}\n\nvec2 project_position(vec2 position) {\n  if (projectionMode == PROJECT_LINEAR) {\n    return (position + vec2(TILE_SIZE / 2.0)) * projectionScale;\n  }\n  if (projectionMode == PROJECT_MERCATOR_OFFSETS) {\n    return project_scale(position);\n  }\n  // Covers projectionMode == PROJECT_MERCATOR\n  return project_mercator_(position) * WORLD_SCALE * projectionScale;\n}\n\nvec3 project_position(vec3 position) {\n  return vec3(project_position(position.xy), project_scale(position.z) + .1);\n}\n\nvec4 project_position(vec4 position) {\n  return vec4(project_position(position.xyz), position.w);\n}\n\n//\n\nvec4 project_to_clipspace(vec4 position) {\n  if (projectionMode == PROJECT_MERCATOR_OFFSETS) {\n    return projectionMatrix * vec4(position.xyz, 0.0) + projectionCenter;\n  }\n  return projectionMatrix * position;\n}\n\n// Backwards compatibility\n\nfloat scale(float position) {\n  return project_scale(position);\n}\n\nvec2 scale(vec2 position) {\n  return project_scale(position);\n}\n\nvec3 scale(vec3 position) {\n  return project_scale(position);\n}\n\nvec4 scale(vec4 position) {\n  return project_scale(position);\n}\n\nvec2 preproject(vec2 position) {\n  return project_position(position);\n}\n\nvec3 preproject(vec3 position) {\n  return project_position(position);\n}\n\nvec4 preproject(vec4 position) {\n  return project_position(position);\n}\n\nvec4 project(vec4 position) {\n  return project_to_clipspace(position);\n}\n'
	  }
	}; /* eslint-disable */
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NoYWRlcmxpYi9wcm9qZWN0L2luZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJwcm9qZWN0IiwiaW50ZXJmYWNlIiwic291cmNlIl0sIm1hcHBpbmdzIjoiOztBQUVBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLFdBQVM7QUFDUkMsZUFBVyxTQURIO0FBRVJDO0FBRlE7QUFETSxDQUFqQixDLENBRkEiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xudmFyIGZzID0gcmVxdWlyZSgnZnMnKTtcbm1vZHVsZS5leHBvcnRzID0ge1xuICBwcm9qZWN0OiB7XG4gIFx0aW50ZXJmYWNlOiAncHJvamVjdCcsXG4gIFx0c291cmNlOiBmcy5yZWFkRmlsZVN5bmMoX19kaXJuYW1lICsgJy9wcm9qZWN0Lmdsc2wnLCAndXRmOCcpXG4gIH1cbn07XG4iXX0=

/***/ },
/* 421 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = {
	  project64: {
	    interface: 'project64',
	    source: 'const vec2 WORLD_SCALE_FP64 = vec2(81.4873275756836, 0.0000032873668232014097);\n\nuniform vec2 projectionScaleFP64;\nuniform vec2 projectionFP64[16];\n\nvoid mercatorProject_fp64(vec4 lnglat_fp64, out vec2 out_val[2]) { //longitude: lnglat_fp64.xy; latitude: lnglat_fp64.zw\n\n  out_val[0] = sum_fp64(radians_fp64(lnglat_fp64.xy), PI_FP64);\n  out_val[1] = sub_fp64(PI_FP64, log_fp64(tan_fp64(sum_fp64(PI_4_FP64, radians_fp64(lnglat_fp64.zw) / 2.0))));\n  return;\n}\n\nvoid project_position_fp64(vec4 position_fp64, out vec2 out_val[2]) {\n\n  vec2 pos_fp64[2];\n  mercatorProject_fp64(position_fp64, pos_fp64);\n  vec2 x_fp64 = mul_fp64(pos_fp64[0], projectionScaleFP64);\n  vec2 y_fp64 = mul_fp64(pos_fp64[1], projectionScaleFP64);\n  out_val[0] = mul_fp64(x_fp64, WORLD_SCALE_FP64);\n  out_val[1] = mul_fp64(y_fp64, WORLD_SCALE_FP64);\n\n  return;\n}\n\nvec4 project_to_clipspace_fp64(vec2 vertex_pos_modelspace[4]) {\n  vec2 vertex_pos_clipspace[4];\n  mat4_vec4_mul_fp64(projectionFP64, vertex_pos_modelspace, vertex_pos_clipspace);\n  return vec4(\n    vertex_pos_clipspace[0].x,\n    vertex_pos_clipspace[1].x,\n    vertex_pos_clipspace[2].x,\n    vertex_pos_clipspace[3].x\n    );\n}\n'
	  }
	}; /* eslint-disable */
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NoYWRlcmxpYi9wcm9qZWN0NjQvaW5kZXguanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInByb2plY3Q2NCIsImludGVyZmFjZSIsInNvdXJjZSJdLCJtYXBwaW5ncyI6Ijs7QUFFQUEsT0FBT0MsT0FBUCxHQUFpQjtBQUNmQyxhQUFXO0FBQ1ZDLGVBQVcsV0FERDtBQUVWQztBQUZVO0FBREksQ0FBakIsQyxDQUZBIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cbnZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcHJvamVjdDY0OiB7XG4gIFx0aW50ZXJmYWNlOiAncHJvamVjdDY0JyxcbiAgXHRzb3VyY2U6IGZzLnJlYWRGaWxlU3luYyhfX2Rpcm5hbWUgKyAnL3Byb2plY3Q2NC5nbHNsJywgJ3V0ZjgnKVxuICB9XG59O1xuIl19

/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _effect = __webpack_require__(423);
	
	Object.defineProperty(exports, 'Effect', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_effect).default;
	  }
	});
	
	var _effectManager = __webpack_require__(424);
	
	Object.defineProperty(exports, 'EffectManager', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_effectManager).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9leHBlcmltZW50YWwvbGliL2luZGV4LmpzIl0sIm5hbWVzIjpbImRlZmF1bHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OzJDQUFRQSxPOzs7Ozs7Ozs7a0RBQ0FBLE8iLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge2RlZmF1bHQgYXMgRWZmZWN0fSBmcm9tICcuL2VmZmVjdCc7XG5leHBvcnQge2RlZmF1bHQgYXMgRWZmZWN0TWFuYWdlcn0gZnJvbSAnLi9lZmZlY3QtbWFuYWdlcic7XG4iXX0=

/***/ },
/* 423 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var counter = 0;
	
	var Effect = function () {
	  function Effect() {
	    _classCallCheck(this, Effect);
	
	    this.count = counter++;
	    this.visible = true;
	    this.priority = 0;
	    this.needsRedraw = false;
	  }
	
	  /**
	   * subclasses should override to set up any resources needed
	   */
	
	
	  _createClass(Effect, [{
	    key: "initialize",
	    value: function initialize(_ref) {
	      var gl = _ref.gl,
	          layerManager = _ref.layerManager;
	    }
	    /**
	     * and subclasses should free those resources here
	     */
	
	  }, {
	    key: "finalize",
	    value: function finalize(_ref2) {
	      var gl = _ref2.gl,
	          layerManager = _ref2.layerManager;
	    }
	    /**
	     * override for a callback immediately before drawing each frame
	     */
	
	  }, {
	    key: "preDraw",
	    value: function preDraw(_ref3) {
	      var gl = _ref3.gl,
	          layerManager = _ref3.layerManager;
	    }
	    /**
	     * override for a callback immediately after drawing a frame's layers
	     */
	
	  }, {
	    key: "draw",
	    value: function draw(_ref4) {
	      var gl = _ref4.gl,
	          layerManager = _ref4.layerManager;
	    }
	  }, {
	    key: "setNeedsRedraw",
	    value: function setNeedsRedraw() {
	      var redraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
	
	      this.needsRedraw = redraw;
	    }
	  }]);
	
	  return Effect;
	}();
	
	exports.default = Effect;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9leHBlcmltZW50YWwvbGliL2VmZmVjdC5qcyJdLCJuYW1lcyI6WyJjb3VudGVyIiwiRWZmZWN0IiwiY291bnQiLCJ2aXNpYmxlIiwicHJpb3JpdHkiLCJuZWVkc1JlZHJhdyIsImdsIiwibGF5ZXJNYW5hZ2VyIiwicmVkcmF3Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsSUFBSUEsVUFBVSxDQUFkOztJQUVxQkMsTTtBQUVuQixvQkFBYztBQUFBOztBQUNaLFNBQUtDLEtBQUwsR0FBYUYsU0FBYjtBQUNBLFNBQUtHLE9BQUwsR0FBZSxJQUFmO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQixDQUFoQjtBQUNBLFNBQUtDLFdBQUwsR0FBbUIsS0FBbkI7QUFDRDs7QUFFRDs7Ozs7OztxQ0FHK0I7QUFBQSxVQUFuQkMsRUFBbUIsUUFBbkJBLEVBQW1CO0FBQUEsVUFBZkMsWUFBZSxRQUFmQSxZQUFlO0FBQzlCO0FBQ0Q7Ozs7OztvQ0FHNkI7QUFBQSxVQUFuQkQsRUFBbUIsU0FBbkJBLEVBQW1CO0FBQUEsVUFBZkMsWUFBZSxTQUFmQSxZQUFlO0FBQzVCO0FBQ0Q7Ozs7OzttQ0FHNEI7QUFBQSxVQUFuQkQsRUFBbUIsU0FBbkJBLEVBQW1CO0FBQUEsVUFBZkMsWUFBZSxTQUFmQSxZQUFlO0FBQzNCO0FBQ0Q7Ozs7OztnQ0FHeUI7QUFBQSxVQUFuQkQsRUFBbUIsU0FBbkJBLEVBQW1CO0FBQUEsVUFBZkMsWUFBZSxTQUFmQSxZQUFlO0FBQ3hCOzs7cUNBRTZCO0FBQUEsVUFBZkMsTUFBZSx1RUFBTixJQUFNOztBQUM1QixXQUFLSCxXQUFMLEdBQW1CRyxNQUFuQjtBQUNEOzs7Ozs7a0JBaENrQlAsTSIsImZpbGUiOiJlZmZlY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgY291bnRlciA9IDA7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVmZmVjdCB7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5jb3VudCA9IGNvdW50ZXIrKztcbiAgICB0aGlzLnZpc2libGUgPSB0cnVlO1xuICAgIHRoaXMucHJpb3JpdHkgPSAwO1xuICAgIHRoaXMubmVlZHNSZWRyYXcgPSBmYWxzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBzdWJjbGFzc2VzIHNob3VsZCBvdmVycmlkZSB0byBzZXQgdXAgYW55IHJlc291cmNlcyBuZWVkZWRcbiAgICovXG4gIGluaXRpYWxpemUoe2dsLCBsYXllck1hbmFnZXJ9KSB7XG4gIH1cbiAgLyoqXG4gICAqIGFuZCBzdWJjbGFzc2VzIHNob3VsZCBmcmVlIHRob3NlIHJlc291cmNlcyBoZXJlXG4gICAqL1xuICBmaW5hbGl6ZSh7Z2wsIGxheWVyTWFuYWdlcn0pIHtcbiAgfVxuICAvKipcbiAgICogb3ZlcnJpZGUgZm9yIGEgY2FsbGJhY2sgaW1tZWRpYXRlbHkgYmVmb3JlIGRyYXdpbmcgZWFjaCBmcmFtZVxuICAgKi9cbiAgcHJlRHJhdyh7Z2wsIGxheWVyTWFuYWdlcn0pIHtcbiAgfVxuICAvKipcbiAgICogb3ZlcnJpZGUgZm9yIGEgY2FsbGJhY2sgaW1tZWRpYXRlbHkgYWZ0ZXIgZHJhd2luZyBhIGZyYW1lJ3MgbGF5ZXJzXG4gICAqL1xuICBkcmF3KHtnbCwgbGF5ZXJNYW5hZ2VyfSkge1xuICB9XG5cbiAgc2V0TmVlZHNSZWRyYXcocmVkcmF3ID0gdHJ1ZSkge1xuICAgIHRoaXMubmVlZHNSZWRyYXcgPSByZWRyYXc7XG4gIH1cbn1cbiJdfQ==

/***/ },
/* 424 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/* eslint-disable no-try-catch */
	
	var EffectManager = function () {
	  function EffectManager(_ref) {
	    var gl = _ref.gl,
	        layerManager = _ref.layerManager;
	
	    _classCallCheck(this, EffectManager);
	
	    this.gl = gl;
	    this.layerManager = layerManager;
	    this._effects = [];
	  }
	
	  /**
	   * Adds an effect to be managed.  That effect's initialize function will
	   * be called, and the effect's preDraw and draw callbacks will be
	   * called at the appropriate times in the render loop
	   * @param {Effect} effect - the effect to be added
	   */
	
	
	  _createClass(EffectManager, [{
	    key: "addEffect",
	    value: function addEffect(effect) {
	      this._effects.push(effect);
	      this._sortEffects();
	      effect.initialize({ gl: this.gl, layerManager: this.layerManager });
	    }
	
	    /**
	     * Removes an effect that is already being managed.  That effect's
	     * finalize function will be called, and its callbacks will no longer
	     * be envoked in the render loop
	     * @param {Effect} effect - the effect to be removed
	     * @return {bool} - True if the effect was already being managed, and
	     * thus successfully removed; false otherwise
	     */
	
	  }, {
	    key: "removeEffect",
	    value: function removeEffect(effect) {
	      var i = this._effects.indexOf(effect);
	      if (i >= 0) {
	        effect.finalize({ gl: this.gl, layerManager: this.layerManager });
	        this._effects.splice(i, 1);
	        return true;
	      }
	      return false;
	    }
	
	    /**
	     * Envoke the preDraw callback of all managed events, in order of
	     * decreasing priority
	     */
	
	  }, {
	    key: "preDraw",
	    value: function preDraw() {
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = this._effects[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var effect = _step.value;
	
	          if (effect.needsRedraw) {
	            effect.preDraw({ gl: this.gl, layerManager: this.layerManager });
	          }
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	    }
	
	    /**
	     * Envoke the draw callback of all managed events, in order of
	     * decreasing priority
	     */
	
	  }, {
	    key: "draw",
	    value: function draw() {
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;
	
	      try {
	        for (var _iterator2 = this._effects[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var effect = _step2.value;
	
	          if (effect.needsRedraw) {
	            effect.draw({ gl: this.gl, layerManager: this.layerManager });
	          }
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	    }
	  }, {
	    key: "_sortEffects",
	    value: function _sortEffects() {
	      this._effects.sort(function (a, b) {
	        if (a.priority > b.priority) {
	          return -1;
	        } else if (a.priority < b.priority) {
	          return 1;
	        }
	        return a.count - b.count;
	      });
	    }
	  }]);
	
	  return EffectManager;
	}();
	
	exports.default = EffectManager;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9leHBlcmltZW50YWwvbGliL2VmZmVjdC1tYW5hZ2VyLmpzIl0sIm5hbWVzIjpbIkVmZmVjdE1hbmFnZXIiLCJnbCIsImxheWVyTWFuYWdlciIsIl9lZmZlY3RzIiwiZWZmZWN0IiwicHVzaCIsIl9zb3J0RWZmZWN0cyIsImluaXRpYWxpemUiLCJpIiwiaW5kZXhPZiIsImZpbmFsaXplIiwic3BsaWNlIiwibmVlZHNSZWRyYXciLCJwcmVEcmF3IiwiZHJhdyIsInNvcnQiLCJhIiwiYiIsInByaW9yaXR5IiwiY291bnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7SUFFcUJBLGE7QUFDbkIsK0JBQWdDO0FBQUEsUUFBbkJDLEVBQW1CLFFBQW5CQSxFQUFtQjtBQUFBLFFBQWZDLFlBQWUsUUFBZkEsWUFBZTs7QUFBQTs7QUFDOUIsU0FBS0QsRUFBTCxHQUFVQSxFQUFWO0FBQ0EsU0FBS0MsWUFBTCxHQUFvQkEsWUFBcEI7QUFDQSxTQUFLQyxRQUFMLEdBQWdCLEVBQWhCO0FBQ0Q7O0FBRUQ7Ozs7Ozs7Ozs7OEJBTVVDLE0sRUFBUTtBQUNoQixXQUFLRCxRQUFMLENBQWNFLElBQWQsQ0FBbUJELE1BQW5CO0FBQ0EsV0FBS0UsWUFBTDtBQUNBRixhQUFPRyxVQUFQLENBQWtCLEVBQUNOLElBQUksS0FBS0EsRUFBVixFQUFjQyxjQUFjLEtBQUtBLFlBQWpDLEVBQWxCO0FBQ0Q7O0FBRUQ7Ozs7Ozs7Ozs7O2lDQVFhRSxNLEVBQVE7QUFDbkIsVUFBTUksSUFBSSxLQUFLTCxRQUFMLENBQWNNLE9BQWQsQ0FBc0JMLE1BQXRCLENBQVY7QUFDQSxVQUFJSSxLQUFLLENBQVQsRUFBWTtBQUNWSixlQUFPTSxRQUFQLENBQWdCLEVBQUNULElBQUksS0FBS0EsRUFBVixFQUFjQyxjQUFjLEtBQUtBLFlBQWpDLEVBQWhCO0FBQ0EsYUFBS0MsUUFBTCxDQUFjUSxNQUFkLENBQXFCSCxDQUFyQixFQUF3QixDQUF4QjtBQUNBLGVBQU8sSUFBUDtBQUNEO0FBQ0QsYUFBTyxLQUFQO0FBQ0Q7O0FBRUQ7Ozs7Ozs7OEJBSVU7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFDUiw2QkFBcUIsS0FBS0wsUUFBMUIsOEhBQW9DO0FBQUEsY0FBekJDLE1BQXlCOztBQUNsQyxjQUFJQSxPQUFPUSxXQUFYLEVBQXdCO0FBQ3RCUixtQkFBT1MsT0FBUCxDQUFlLEVBQUNaLElBQUksS0FBS0EsRUFBVixFQUFjQyxjQUFjLEtBQUtBLFlBQWpDLEVBQWY7QUFDRDtBQUNGO0FBTE87QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQU1UOztBQUVEOzs7Ozs7OzJCQUlPO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQ0wsOEJBQXFCLEtBQUtDLFFBQTFCLG1JQUFvQztBQUFBLGNBQXpCQyxNQUF5Qjs7QUFDbEMsY0FBSUEsT0FBT1EsV0FBWCxFQUF3QjtBQUN0QlIsbUJBQU9VLElBQVAsQ0FBWSxFQUFDYixJQUFJLEtBQUtBLEVBQVYsRUFBY0MsY0FBYyxLQUFLQSxZQUFqQyxFQUFaO0FBQ0Q7QUFDRjtBQUxJO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFNTjs7O21DQUVjO0FBQ2IsV0FBS0MsUUFBTCxDQUFjWSxJQUFkLENBQW1CLFVBQUNDLENBQUQsRUFBSUMsQ0FBSixFQUFVO0FBQzNCLFlBQUlELEVBQUVFLFFBQUYsR0FBYUQsRUFBRUMsUUFBbkIsRUFBNkI7QUFDM0IsaUJBQU8sQ0FBQyxDQUFSO0FBQ0QsU0FGRCxNQUVPLElBQUlGLEVBQUVFLFFBQUYsR0FBYUQsRUFBRUMsUUFBbkIsRUFBNkI7QUFDbEMsaUJBQU8sQ0FBUDtBQUNEO0FBQ0QsZUFBT0YsRUFBRUcsS0FBRixHQUFVRixFQUFFRSxLQUFuQjtBQUNELE9BUEQ7QUFRRDs7Ozs7O2tCQXRFa0JuQixhIiwiZmlsZSI6ImVmZmVjdC1tYW5hZ2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tdHJ5LWNhdGNoICovXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVmZmVjdE1hbmFnZXIge1xuICBjb25zdHJ1Y3Rvcih7Z2wsIGxheWVyTWFuYWdlcn0pIHtcbiAgICB0aGlzLmdsID0gZ2w7XG4gICAgdGhpcy5sYXllck1hbmFnZXIgPSBsYXllck1hbmFnZXI7XG4gICAgdGhpcy5fZWZmZWN0cyA9IFtdO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHMgYW4gZWZmZWN0IHRvIGJlIG1hbmFnZWQuICBUaGF0IGVmZmVjdCdzIGluaXRpYWxpemUgZnVuY3Rpb24gd2lsbFxuICAgKiBiZSBjYWxsZWQsIGFuZCB0aGUgZWZmZWN0J3MgcHJlRHJhdyBhbmQgZHJhdyBjYWxsYmFja3Mgd2lsbCBiZVxuICAgKiBjYWxsZWQgYXQgdGhlIGFwcHJvcHJpYXRlIHRpbWVzIGluIHRoZSByZW5kZXIgbG9vcFxuICAgKiBAcGFyYW0ge0VmZmVjdH0gZWZmZWN0IC0gdGhlIGVmZmVjdCB0byBiZSBhZGRlZFxuICAgKi9cbiAgYWRkRWZmZWN0KGVmZmVjdCkge1xuICAgIHRoaXMuX2VmZmVjdHMucHVzaChlZmZlY3QpO1xuICAgIHRoaXMuX3NvcnRFZmZlY3RzKCk7XG4gICAgZWZmZWN0LmluaXRpYWxpemUoe2dsOiB0aGlzLmdsLCBsYXllck1hbmFnZXI6IHRoaXMubGF5ZXJNYW5hZ2VyfSk7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlcyBhbiBlZmZlY3QgdGhhdCBpcyBhbHJlYWR5IGJlaW5nIG1hbmFnZWQuICBUaGF0IGVmZmVjdCdzXG4gICAqIGZpbmFsaXplIGZ1bmN0aW9uIHdpbGwgYmUgY2FsbGVkLCBhbmQgaXRzIGNhbGxiYWNrcyB3aWxsIG5vIGxvbmdlclxuICAgKiBiZSBlbnZva2VkIGluIHRoZSByZW5kZXIgbG9vcFxuICAgKiBAcGFyYW0ge0VmZmVjdH0gZWZmZWN0IC0gdGhlIGVmZmVjdCB0byBiZSByZW1vdmVkXG4gICAqIEByZXR1cm4ge2Jvb2x9IC0gVHJ1ZSBpZiB0aGUgZWZmZWN0IHdhcyBhbHJlYWR5IGJlaW5nIG1hbmFnZWQsIGFuZFxuICAgKiB0aHVzIHN1Y2Nlc3NmdWxseSByZW1vdmVkOyBmYWxzZSBvdGhlcndpc2VcbiAgICovXG4gIHJlbW92ZUVmZmVjdChlZmZlY3QpIHtcbiAgICBjb25zdCBpID0gdGhpcy5fZWZmZWN0cy5pbmRleE9mKGVmZmVjdCk7XG4gICAgaWYgKGkgPj0gMCkge1xuICAgICAgZWZmZWN0LmZpbmFsaXplKHtnbDogdGhpcy5nbCwgbGF5ZXJNYW5hZ2VyOiB0aGlzLmxheWVyTWFuYWdlcn0pO1xuICAgICAgdGhpcy5fZWZmZWN0cy5zcGxpY2UoaSwgMSk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLyoqXG4gICAqIEVudm9rZSB0aGUgcHJlRHJhdyBjYWxsYmFjayBvZiBhbGwgbWFuYWdlZCBldmVudHMsIGluIG9yZGVyIG9mXG4gICAqIGRlY3JlYXNpbmcgcHJpb3JpdHlcbiAgICovXG4gIHByZURyYXcoKSB7XG4gICAgZm9yIChjb25zdCBlZmZlY3Qgb2YgdGhpcy5fZWZmZWN0cykge1xuICAgICAgaWYgKGVmZmVjdC5uZWVkc1JlZHJhdykge1xuICAgICAgICBlZmZlY3QucHJlRHJhdyh7Z2w6IHRoaXMuZ2wsIGxheWVyTWFuYWdlcjogdGhpcy5sYXllck1hbmFnZXJ9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogRW52b2tlIHRoZSBkcmF3IGNhbGxiYWNrIG9mIGFsbCBtYW5hZ2VkIGV2ZW50cywgaW4gb3JkZXIgb2ZcbiAgICogZGVjcmVhc2luZyBwcmlvcml0eVxuICAgKi9cbiAgZHJhdygpIHtcbiAgICBmb3IgKGNvbnN0IGVmZmVjdCBvZiB0aGlzLl9lZmZlY3RzKSB7XG4gICAgICBpZiAoZWZmZWN0Lm5lZWRzUmVkcmF3KSB7XG4gICAgICAgIGVmZmVjdC5kcmF3KHtnbDogdGhpcy5nbCwgbGF5ZXJNYW5hZ2VyOiB0aGlzLmxheWVyTWFuYWdlcn0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIF9zb3J0RWZmZWN0cygpIHtcbiAgICB0aGlzLl9lZmZlY3RzLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgIGlmIChhLnByaW9yaXR5ID4gYi5wcmlvcml0eSkge1xuICAgICAgICByZXR1cm4gLTE7XG4gICAgICB9IGVsc2UgaWYgKGEucHJpb3JpdHkgPCBiLnByaW9yaXR5KSB7XG4gICAgICAgIHJldHVybiAxO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGEuY291bnQgLSBiLmNvdW50O1xuICAgIH0pO1xuICB9XG59XG4iXX0=

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(426);


/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _lib = __webpack_require__(396);
	
	Object.keys(_lib).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _lib[key];
	    }
	  });
	});
	
	var _lib2 = __webpack_require__(422);
	
	Object.keys(_lib2).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _lib2[key];
	    }
	  });
	});
	
	var _viewport = __webpack_require__(405);
	
	Object.keys(_viewport).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _viewport[key];
	    }
	  });
	});
	
	var _shaderUtils = __webpack_require__(416);
	
	Object.keys(_shaderUtils).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _shaderUtils[key];
	    }
	  });
	});
	
	var _core = __webpack_require__(427);
	
	Object.keys(_core).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _core[key];
	    }
	  });
	});
	
	var _fp = __webpack_require__(441);
	
	Object.keys(_fp).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _fp[key];
	    }
	  });
	});
	
	var _effects = __webpack_require__(413);
	
	Object.keys(_effects).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _effects[key];
	    }
	  });
	});
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQW9CQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7QUFHQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7QUFHQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTUgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG5leHBvcnQgKiBmcm9tICcuL2xpYic7XG5leHBvcnQgKiBmcm9tICcuL2V4cGVyaW1lbnRhbC9saWInO1xuZXhwb3J0ICogZnJvbSAnLi92aWV3cG9ydCc7XG5leHBvcnQgKiBmcm9tICcuL3NoYWRlci11dGlscyc7XG5cbi8vIERlZmF1bHQgbGF5ZXJzXG5leHBvcnQgKiBmcm9tICcuL2xheWVycy9jb3JlJztcbmV4cG9ydCAqIGZyb20gJy4vbGF5ZXJzL2ZwNjQnO1xuXG4vLyBFZmZlY3RzXG5leHBvcnQgKiBmcm9tICcuL2V4cGVyaW1lbnRhbC9lZmZlY3RzJztcbiJdfQ==

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _arcLayer = __webpack_require__(428);
	
	Object.defineProperty(exports, 'ArcLayer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_arcLayer).default;
	  }
	});
	
	var _choroplethLayer = __webpack_require__(430);
	
	Object.defineProperty(exports, 'ChoroplethLayer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_choroplethLayer).default;
	  }
	});
	
	var _lineLayer = __webpack_require__(435);
	
	Object.defineProperty(exports, 'LineLayer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_lineLayer).default;
	  }
	});
	
	var _scatterplotLayer = __webpack_require__(437);
	
	Object.defineProperty(exports, 'ScatterplotLayer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_scatterplotLayer).default;
	  }
	});
	
	var _screenGridLayer = __webpack_require__(439);
	
	Object.defineProperty(exports, 'ScreenGridLayer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_screenGridLayer).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9sYXllcnMvY29yZS9pbmRleC5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs2Q0FBUUEsTzs7Ozs7Ozs7O29EQUNBQSxPOzs7Ozs7Ozs7OENBQ0FBLE87Ozs7Ozs7OztxREFDQUEsTzs7Ozs7Ozs7O29EQUNBQSxPIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHtkZWZhdWx0IGFzIEFyY0xheWVyfSBmcm9tICcuL2FyYy1sYXllcic7XG5leHBvcnQge2RlZmF1bHQgYXMgQ2hvcm9wbGV0aExheWVyfSBmcm9tICcuL2Nob3JvcGxldGgtbGF5ZXInO1xuZXhwb3J0IHtkZWZhdWx0IGFzIExpbmVMYXllcn0gZnJvbSAnLi9saW5lLWxheWVyJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBTY2F0dGVycGxvdExheWVyfSBmcm9tICcuL3NjYXR0ZXJwbG90LWxheWVyJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBTY3JlZW5HcmlkTGF5ZXJ9IGZyb20gJy4vc2NyZWVuLWdyaWQtbGF5ZXInO1xuIl19

/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _arcLayer = __webpack_require__(429);
	
	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_arcLayer).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9sYXllcnMvY29yZS9hcmMtbGF5ZXIvaW5kZXguanMiXSwibmFtZXMiOlsiZGVmYXVsdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7NkNBQVFBLE8iLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge2RlZmF1bHQgYXMgZGVmYXVsdH0gZnJvbSAnLi9hcmMtbGF5ZXInO1xuIl19

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _temp; // Copyright (c) 2015 Uber Technologies, Inc.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the "Software"), to deal
	// in the Software without restriction, including without limitation the rights
	// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	// copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	// THE SOFTWARE.
	
	var _ = __webpack_require__(426);
	
	var _luma = __webpack_require__(185);
	
	var _path = __webpack_require__(214);
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var DEFAULT_COLOR = [0, 0, 255, 255];
	
	var defaultGetSourcePosition = function defaultGetSourcePosition(x) {
	  return x.sourcePosition;
	};
	var defaultGetTargetPosition = function defaultGetTargetPosition(x) {
	  return x.targetPosition;
	};
	var defaultGetColor = function defaultGetColor(x) {
	  return x.color;
	};
	
	var ArcLayer = (_temp = _class = function (_Layer) {
	  _inherits(ArcLayer, _Layer);
	
	  /**
	   * @classdesc
	   * ArcLayer
	   *
	   * @class
	   * @param {object} props
	   */
	  function ArcLayer() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$strokeWidth = _ref.strokeWidth,
	        strokeWidth = _ref$strokeWidth === undefined ? 1 : _ref$strokeWidth,
	        _ref$getSourcePositio = _ref.getSourcePosition,
	        getSourcePosition = _ref$getSourcePositio === undefined ? defaultGetSourcePosition : _ref$getSourcePositio,
	        _ref$getTargetPositio = _ref.getTargetPosition,
	        getTargetPosition = _ref$getTargetPositio === undefined ? defaultGetTargetPosition : _ref$getTargetPositio,
	        _ref$getSourceColor = _ref.getSourceColor,
	        getSourceColor = _ref$getSourceColor === undefined ? defaultGetColor : _ref$getSourceColor,
	        _ref$getTargetColor = _ref.getTargetColor,
	        getTargetColor = _ref$getTargetColor === undefined ? defaultGetColor : _ref$getTargetColor,
	        props = _objectWithoutProperties(_ref, ['strokeWidth', 'getSourcePosition', 'getTargetPosition', 'getSourceColor', 'getTargetColor']);
	
	    _classCallCheck(this, ArcLayer);
	
	    return _possibleConstructorReturn(this, (ArcLayer.__proto__ || Object.getPrototypeOf(ArcLayer)).call(this, _extends({
	      strokeWidth: strokeWidth,
	      getSourcePosition: getSourcePosition,
	      getTargetPosition: getTargetPosition,
	      getSourceColor: getSourceColor,
	      getTargetColor: getTargetColor
	    }, props)));
	  }
	
	  _createClass(ArcLayer, [{
	    key: 'initializeState',
	    value: function initializeState() {
	      var gl = this.context.gl;
	
	      this.setState({ model: this._createModel(gl) });
	
	      var attributeManager = this.state.attributeManager;
	
	      attributeManager.addInstanced({
	        instancePositions: { size: 4, update: this.calculateInstancePositions },
	        instanceSourceColors: {
	          type: _luma.GL.UNSIGNED_BYTE,
	          size: 4,
	          update: this.calculateInstanceSourceColors
	        },
	        instanceTargetColors: {
	          type: _luma.GL.UNSIGNED_BYTE,
	          size: 4,
	          update: this.calculateInstanceTargetColors
	        }
	      });
	    }
	  }, {
	    key: 'draw',
	    value: function draw(_ref2) {
	      var uniforms = _ref2.uniforms;
	      var gl = this.context.gl;
	
	      var lineWidth = this.screenToDevicePixels(this.props.strokeWidth);
	      gl.lineWidth(lineWidth);
	      this.state.model.render(uniforms);
	      // Setting line width back to 1 is here to workaround a Google Chrome bug
	      // gl.clear() and gl.isEnabled() will return GL_INVALID_VALUE even with
	      // correct parameter
	      // This is not happening on Safari and Firefox
	      gl.lineWidth(1.0);
	    }
	  }, {
	    key: 'getShaders',
	    value: function getShaders() {
	      return {
	        vs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME arc-layer-vertex-shader\n\nconst float N = 49.0;\n\nattribute vec3 positions;\nattribute vec4 instanceSourceColors;\nattribute vec4 instanceTargetColors;\nattribute vec4 instancePositions;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float renderPickingBuffer;\n\nvarying vec4 vColor;\n\nfloat paraboloid(vec2 source, vec2 target, float ratio) {\n\n  vec2 x = mix(source, target, ratio);\n  vec2 center = mix(source, target, 0.5);\n\n  float dSourceCenter = distance(source, center);\n  float dXCenter = distance(x, center);\n  return (dSourceCenter + dXCenter) * (dSourceCenter - dXCenter);\n}\n\nvoid main(void) {\n  vec2 source = preproject(instancePositions.xy);\n  vec2 target = preproject(instancePositions.zw);\n\n  float segmentRatio = smoothstep(0.0, 1.0, positions.x / N);\n\n  float vertex_height = paraboloid(source, target, segmentRatio);\n  if (vertex_height < 0.0) vertex_height = 0.0;\n  vec3 p = vec3(\n    // xy: linear interpolation of source & target\n    mix(source, target, segmentRatio),\n    // z: paraboloid interpolate of source & target\n    sqrt(vertex_height)\n  );\n\n  gl_Position = project(vec4(p, 1.0));\n\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio) / 255.;\n\n  vColor = mix(\n    vec4(color.rgb, color.a * opacity),\n    vec4(instancePickingColors / 255., 1.),\n    renderPickingBuffer\n  );\n}\n',
	        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME arc-layer-fragment-shader\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n}\n'
	      };
	    }
	  }, {
	    key: '_createModel',
	    value: function _createModel(gl) {
	      var positions = [];
	      var NUM_SEGMENTS = 50;
	      for (var i = 0; i < NUM_SEGMENTS; i++) {
	        positions = [].concat(_toConsumableArray(positions), [i, i, i]);
	      }
	
	      return new _luma.Model(_extends({
	        gl: gl
	      }, (0, _.assembleShaders)(gl, this.getShaders()), {
	        geometry: new _luma.Geometry({
	          drawMode: _luma.GL.LINE_STRIP,
	          positions: new Float32Array(positions)
	        }),
	        isInstanced: true
	      }));
	    }
	  }, {
	    key: 'calculateInstancePositions',
	    value: function calculateInstancePositions(attribute) {
	      var _props = this.props,
	          data = _props.data,
	          getSourcePosition = _props.getSourcePosition,
	          getTargetPosition = _props.getTargetPosition;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var object = _step.value;
	
	          var sourcePosition = getSourcePosition(object);
	          var targetPosition = getTargetPosition(object);
	          value[i + 0] = sourcePosition[0];
	          value[i + 1] = sourcePosition[1];
	          value[i + 2] = targetPosition[0];
	          value[i + 3] = targetPosition[1];
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'calculateInstanceSourceColors',
	    value: function calculateInstanceSourceColors(attribute) {
	      var _props2 = this.props,
	          data = _props2.data,
	          getSourceColor = _props2.getSourceColor;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;
	
	      try {
	        for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var object = _step2.value;
	
	          var color = getSourceColor(object) || DEFAULT_COLOR;
	          value[i + 0] = color[0];
	          value[i + 1] = color[1];
	          value[i + 2] = color[2];
	          value[i + 3] = isNaN(color[3]) ? DEFAULT_COLOR[3] : color[3];
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'calculateInstanceTargetColors',
	    value: function calculateInstanceTargetColors(attribute) {
	      var _props3 = this.props,
	          data = _props3.data,
	          getTargetColor = _props3.getTargetColor;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion3 = true;
	      var _didIteratorError3 = false;
	      var _iteratorError3 = undefined;
	
	      try {
	        for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	          var object = _step3.value;
	
	          var color = getTargetColor(object) || DEFAULT_COLOR;
	          value[i + 0] = color[0];
	          value[i + 1] = color[1];
	          value[i + 2] = color[2];
	          value[i + 3] = isNaN(color[3]) ? DEFAULT_COLOR[3] : color[3];
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError3 = true;
	        _iteratorError3 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion3 && _iterator3.return) {
	            _iterator3.return();
	          }
	        } finally {
	          if (_didIteratorError3) {
	            throw _iteratorError3;
	          }
	        }
	      }
	    }
	  }]);
	
	  return ArcLayer;
	}(_.Layer), _class.layerName = 'ArcLayer', _temp);
	exports.default = ArcLayer;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _choroplethLayer = __webpack_require__(431);
	
	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_choroplethLayer).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9sYXllcnMvY29yZS9jaG9yb3BsZXRoLWxheWVyL2luZGV4LmpzIl0sIm5hbWVzIjpbImRlZmF1bHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O29EQUFRQSxPIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHtkZWZhdWx0IGFzIGRlZmF1bHR9IGZyb20gJy4vY2hvcm9wbGV0aC1sYXllcic7XG4iXX0=

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _class, _temp; // Copyright (c) 2015 Uber Technologies, Inc.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the "Software"), to deal
	// in the Software without restriction, including without limitation the rights
	// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	// copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	// THE SOFTWARE.
	
	var _ = __webpack_require__(426);
	
	var _luma = __webpack_require__(185);
	
	var _lodash = __webpack_require__(432);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _geojsonNormalize = __webpack_require__(433);
	
	var _geojsonNormalize2 = _interopRequireDefault(_geojsonNormalize);
	
	var _earcut = __webpack_require__(434);
	
	var _earcut2 = _interopRequireDefault(_earcut);
	
	var _path = __webpack_require__(214);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var DEFAULT_COLOR = [0, 0, 255, 255];
	
	var defaultGetColor = function defaultGetColor(feature) {
	  return feature.properties.color;
	};
	
	var ChoroplethLayer = (_temp = _class = function (_Layer) {
	  _inherits(ChoroplethLayer, _Layer);
	
	  /**
	   * @class
	   * @param {object} props
	   */
	  function ChoroplethLayer(props) {
	    _classCallCheck(this, ChoroplethLayer);
	
	    return _possibleConstructorReturn(this, (ChoroplethLayer.__proto__ || Object.getPrototypeOf(ChoroplethLayer)).call(this, _extends({
	      getColor: defaultGetColor,
	      drawCountour: false,
	      strokeWidth: 1
	    }, props)));
	  }
	
	  _createClass(ChoroplethLayer, [{
	    key: 'initializeState',
	    value: function initializeState() {
	      var gl = this.context.gl;
	      var attributeManager = this.state.attributeManager;
	
	      attributeManager.addDynamic({
	        // Primtive attributes
	        indices: { size: 1, update: this.calculateIndices, isIndexed: true },
	        positions: { size: 3, update: this.calculatePositions },
	        colors: {
	          type: _luma.GL.UNSIGNED_BYTE,
	          size: 4,
	          update: this.calculateColors
	        },
	        // Instanced attributes
	        pickingColors: {
	          type: _luma.GL.UNSIGNED_BYTE,
	          size: 3,
	          update: this.calculatePickingColors,
	          noAlloc: true
	        }
	      });
	
	      var IndexType = gl.getExtension('OES_element_index_uint') ? Uint32Array : Uint16Array;
	
	      this.setState({
	        model: this.getModel(gl),
	        numInstances: 0,
	        IndexType: IndexType
	      });
	    }
	  }, {
	    key: 'updateState',
	    value: function updateState(_ref) {
	      var oldProps = _ref.oldProps,
	          props = _ref.props,
	          changeFlags = _ref.changeFlags;
	      var attributeManager = this.state.attributeManager;
	
	      if (changeFlags.dataChanged) {
	        this.state.choropleths = extractChoropleths(props.data);
	        attributeManager.invalidateAll();
	      }
	
	      if (oldProps.opacity !== props.opacity) {
	        this.setUniforms({ opacity: props.opacity });
	      }
	    }
	  }, {
	    key: 'draw',
	    value: function draw(_ref2) {
	      var uniforms = _ref2.uniforms;
	      var gl = this.context.gl;
	
	      var lineWidth = this.screenToDevicePixels(this.props.strokeWidth);
	      gl.lineWidth(lineWidth);
	      this.state.model.render(uniforms);
	      // Setting line width back to 1 is here to workaround a Google Chrome bug
	      // gl.clear() and gl.isEnabled() will return GL_INVALID_VALUE even with
	      // correct parameter
	      // This is not happening on Safari and Firefox
	      gl.lineWidth(1.0);
	    }
	  }, {
	    key: 'pick',
	    value: function pick(opts) {
	      _get(ChoroplethLayer.prototype.__proto__ || Object.getPrototypeOf(ChoroplethLayer.prototype), 'pick', this).call(this, opts);
	      var info = opts.info;
	
	      var index = this.decodePickingColor(info.color);
	      var feature = index >= 0 ? this.props.data.features[index] : null;
	      info.feature = feature;
	      info.object = feature;
	    }
	  }, {
	    key: 'getShaders',
	    value: function getShaders() {
	      return {
	        vs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME choropleth-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec4 colors;\nattribute vec3 pickingColors;\n\nuniform float opacity;\nuniform float renderPickingBuffer;\nuniform vec3 selectedPickingColor;\n\n// PICKING\nuniform float pickingEnabled;\nvarying vec4 vPickingColor;\nvoid picking_setPickColor(vec3 pickingColor) {\n  vPickingColor = vec4(pickingColor,  1.);\n}\nvec4 picking_setNormalAndPickColors(vec4 color, vec3 pickingColor) {\n  vec4 pickingColor4 = vec4(pickingColor.rgb, 1.);\n  vPickingColor = mix(color, pickingColor4, pickingEnabled);\n  return vPickingColor;\n}\n\n// PICKING\n// vec4 getColor(vec4 color, float opacity, vec3 pickingColor, float renderPickingBuffer) {\n//   vec4 color4 = vec4(color.xyz / 255., color.w / 255. * opacity);\n//   vec4 pickingColor4 = vec4(pickingColor / 255., 1.);\n//   return mix(color4, pickingColor4, renderPickingBuffer);\n// }\n\nvoid main(void) {\n\n  vec4 color = vec4(colors.rgb, colors.a * opacity) / 255.;\n\n  picking_setNormalAndPickColors(\n    color,\n    pickingColors / 255.\n  );\n\n  vec3 p = project_position(positions);\n  gl_Position = project_to_clipspace(vec4(p, 1.));\n}\n',
	        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME choropleth-layer-fragment-shader\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\n// PICKING\n// uniform bool pickingEnabled;\nvarying vec4 vPickingColor;\nvec4 picking_getColor() {\n  return vPickingColor;\n}\n// PICKING\n\nvoid main(void) {\n  gl_FragColor = picking_getColor();\n}\n'
	      };
	    }
	  }, {
	    key: 'getModel',
	    value: function getModel(gl) {
	      return new _luma.Model(_extends({
	        gl: gl,
	        id: this.props.id
	      }, (0, _.assembleShaders)(gl, this.getShaders()), {
	        geometry: new _luma.Geometry({
	          drawMode: this.props.drawContour ? _luma.GL.LINES : _luma.GL.TRIANGLES
	        }),
	        vertexCount: 0,
	        isIndexed: true
	      }));
	    }
	  }, {
	    key: 'calculateIndices',
	    value: function calculateIndices(attribute) {
	      var _this2 = this;
	
	      // adjust index offset for multiple choropleths
	      var offsets = this.state.choropleths.reduce(function (acc, choropleth) {
	        return [].concat(_toConsumableArray(acc), [acc[acc.length - 1] + choropleth.reduce(function (count, polygon) {
	          return count + polygon.length;
	        }, 0)]);
	      }, [0]);
	      var IndexType = this.state.IndexType;
	
	      if (IndexType === Uint16Array && offsets[offsets.length - 1] > 65535) {
	        throw new Error('Vertex count exceeds browser\'s limit');
	      }
	
	      var indices = this.state.choropleths.map(function (choropleth, choroplethIndex) {
	        return _this2.props.drawContour ?
	        // 1. get sequentially ordered indices of each choropleth contour
	        // 2. offset them by the number of indices in previous choropleths
	        calculateContourIndices(choropleth).map(function (index) {
	          return index + offsets[choroplethIndex];
	        }) :
	        // 1. get triangulated indices for the internal areas
	        // 2. offset them by the number of indices in previous choropleths
	        calculateSurfaceIndices(choropleth).map(function (index) {
	          return index + offsets[choroplethIndex];
	        });
	      });
	
	      attribute.value = new IndexType((0, _lodash2.default)(indices));
	      attribute.target = _luma.GL.ELEMENT_ARRAY_BUFFER;
	      this.state.model.setVertexCount(attribute.value.length / attribute.size);
	    }
	  }, {
	    key: 'calculatePositions',
	    value: function calculatePositions(attribute) {
	      var vertices = (0, _lodash2.default)(this.state.choropleths);
	      attribute.value = new Float32Array(vertices);
	    }
	  }, {
	    key: 'calculateColors',
	    value: function calculateColors(attribute) {
	      var _props = this.props,
	          features = _props.data.features,
	          getColor = _props.getColor;
	
	
	      var colors = this.state.choropleths.map(function (choropleth, choroplethIndex) {
	        var feature = features[choropleth.featureIndex];
	        var color = getColor(feature) || DEFAULT_COLOR;
	
	        if (isNaN(color[3])) {
	          color[3] = DEFAULT_COLOR[3];
	        }
	
	        return choropleth.map(function (polygon) {
	          return polygon.map(function (vertex) {
	            return color;
	          });
	        });
	      });
	
	      attribute.value = new Uint8Array((0, _lodash2.default)(colors));
	    }
	
	    // Override the default picking colors calculation
	
	  }, {
	    key: 'calculatePickingColors',
	    value: function calculatePickingColors(attribute) {
	      var _this3 = this;
	
	      var colors = this.state.choropleths.map(function (choropleth, choroplethIndex) {
	        var featureIndex = choropleth.featureIndex;
	
	        var color = _this3.props.drawContour ? [0, 0, 0] : [(featureIndex + 1) % 256, Math.floor((featureIndex + 1) / 256) % 256, Math.floor((featureIndex + 1) / 256 / 256) % 256];
	        return choropleth.map(function (polygon) {
	          return polygon.map(function (vertex) {
	            return color;
	          });
	        });
	      });
	
	      attribute.value = new Uint8Array((0, _lodash2.default)(colors));
	    }
	  }]);
	
	  return ChoroplethLayer;
	}(_.Layer), _class.layerName = 'ChoroplethLayer', _temp);
	
	/*
	 * converts list of features from a GeoJSON object to a list of GeoJSON
	 * polygon-style coordinates
	 * @param {Object} data - geojson object
	 * @returns {[Number,Number,Number][][][]} array of choropleths
	 */
	
	exports.default = ChoroplethLayer;
	function extractChoropleths(data) {
	  var normalizedGeojson = (0, _geojsonNormalize2.default)(data);
	  var result = [];
	
	  normalizedGeojson.features.map(function (feature, featureIndex) {
	    var choropleths = featureToChoropleths(feature);
	    choropleths.forEach(function (choropleth) {
	      choropleth.featureIndex = featureIndex;
	    });
	    result.push.apply(result, _toConsumableArray(choropleths));
	  });
	  return result;
	}
	
	/*
	 * converts one GeoJSON features from object to a list of GeoJSON polygon-style
	 * coordinates
	 * @param {Object} data - geojson object
	 * @returns {[Number,Number,Number][][][]} array of choropleths
	 */
	function featureToChoropleths(feature) {
	  var _feature$geometry = feature.geometry,
	      coordinates = _feature$geometry.coordinates,
	      type = _feature$geometry.type;
	
	  var choropleths = void 0;
	
	  switch (type) {
	    case 'MultiPolygon':
	      choropleths = coordinates;
	      break;
	    case 'Polygon':
	      choropleths = [coordinates];
	      break;
	    case 'LineString':
	      // create a LineStringLayer for LineString and MultiLineString?
	      choropleths = [[coordinates]];
	      break;
	    case 'MultiLineString':
	      choropleths = coordinates.map(function (coords) {
	        return [coords];
	      });
	      break;
	    default:
	      choropleths = [];
	  }
	  return choropleths.map(function (choropleth) {
	    return choropleth.map(function (polygon) {
	      return polygon.map(function (coordinate) {
	        return [coordinate[0], coordinate[1], coordinate[2] || 0];
	      });
	    });
	  });
	}
	
	/*
	 * get vertex indices for drawing choropleth contour
	 * @param {[Number,Number,Number][][]} choropleth
	 * @returns {[Number]} indices
	 */
	function calculateContourIndices(choropleth) {
	  var offset = 0;
	
	  return choropleth.reduce(function (acc, polygon) {
	    var numVertices = polygon.length;
	
	    // use vertex pairs for gl.LINES => [0, 1, 1, 2, 2, ..., n-2, n-2, n-1]
	    var indices = [].concat(_toConsumableArray(acc), [offset]);
	    for (var i = 1; i < numVertices - 1; i++) {
	      indices.push(i + offset, i + offset);
	    }
	    indices.push(offset + numVertices - 1);
	
	    offset += numVertices;
	    return indices;
	  }, []);
	}
	
	/*
	 * get vertex indices for drawing choropleth mesh
	 * @param {[Number,Number,Number][][]} choropleth
	 * @returns {[Number]} indices
	 */
	function calculateSurfaceIndices(choropleth) {
	  var holes = null;
	
	  if (choropleth.length > 1) {
	    holes = choropleth.reduce(function (acc, polygon) {
	      return [].concat(_toConsumableArray(acc), [acc[acc.length - 1] + polygon.length]);
	    }, [0]).slice(1, choropleth.length);
	  }
	
	  return (0, _earcut2.default)((0, _lodash2.default)(choropleth), holes, 3);
	}
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 432 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/**
	 * lodash (Custom Build) <https://lodash.com/>
	 * Build: `lodash modularize exports="npm" -o ./`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0,
	    MAX_SAFE_INTEGER = 9007199254740991;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]';
	
	/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;
	
	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Built-in value references. */
	var Symbol = root.Symbol,
	    propertyIsEnumerable = objectProto.propertyIsEnumerable,
	    spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;
	
	/**
	 * The base implementation of `_.flatten` with support for restricting flattening.
	 *
	 * @private
	 * @param {Array} array The array to flatten.
	 * @param {number} depth The maximum recursion depth.
	 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	 * @param {Array} [result=[]] The initial result value.
	 * @returns {Array} Returns the new flattened array.
	 */
	function baseFlatten(array, depth, predicate, isStrict, result) {
	  var index = -1,
	      length = array.length;
	
	  predicate || (predicate = isFlattenable);
	  result || (result = []);
	
	  while (++index < length) {
	    var value = array[index];
	    if (depth > 0 && predicate(value)) {
	      if (depth > 1) {
	        // Recursively flatten arrays (susceptible to call stack limits).
	        baseFlatten(value, depth - 1, predicate, isStrict, result);
	      } else {
	        arrayPush(result, value);
	      }
	    } else if (!isStrict) {
	      result[result.length] = value;
	    }
	  }
	  return result;
	}
	
	/**
	 * Checks if `value` is a flattenable `arguments` object or array.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	 */
	function isFlattenable(value) {
	  return isArray(value) || isArguments(value) ||
	    !!(spreadableSymbol && value && value[spreadableSymbol]);
	}
	
	/**
	 * Recursively flattens `array`.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Array
	 * @param {Array} array The array to flatten.
	 * @returns {Array} Returns the new flattened array.
	 * @example
	 *
	 * _.flattenDeep([1, [2, [3, [4]], 5]]);
	 * // => [1, 2, 3, 4, 5]
	 */
	function flattenDeep(array) {
	  var length = array ? array.length : 0;
	  return length ? baseFlatten(array, INFINITY) : [];
	}
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}
	
	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8-9 which returns 'object' for typed array and other constructors.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	module.exports = flattenDeep;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 433 */
/***/ function(module, exports) {

	module.exports = normalize;
	
	var types = {
	    Point: 'geometry',
	    MultiPoint: 'geometry',
	    LineString: 'geometry',
	    MultiLineString: 'geometry',
	    Polygon: 'geometry',
	    MultiPolygon: 'geometry',
	    GeometryCollection: 'geometry',
	    Feature: 'feature',
	    FeatureCollection: 'featurecollection'
	};
	
	/**
	 * Normalize a GeoJSON feature into a FeatureCollection.
	 *
	 * @param {object} gj geojson data
	 * @returns {object} normalized geojson data
	 */
	function normalize(gj) {
	    if (!gj || !gj.type) return null;
	    var type = types[gj.type];
	    if (!type) return null;
	
	    if (type === 'geometry') {
	        return {
	            type: 'FeatureCollection',
	            features: [{
	                type: 'Feature',
	                properties: {},
	                geometry: gj
	            }]
	        };
	    } else if (type === 'feature') {
	        return {
	            type: 'FeatureCollection',
	            features: [gj]
	        };
	    } else if (type === 'featurecollection') {
	        return gj;
	    }
	}


/***/ },
/* 434 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = earcut;
	
	function earcut(data, holeIndices, dim) {
	
	    dim = dim || 2;
	
	    var hasHoles = holeIndices && holeIndices.length,
	        outerLen = hasHoles ? holeIndices[0] * dim : data.length,
	        outerNode = linkedList(data, 0, outerLen, dim, true),
	        triangles = [];
	
	    if (!outerNode) return triangles;
	
	    var minX, minY, maxX, maxY, x, y, size;
	
	    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);
	
	    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox
	    if (data.length > 80 * dim) {
	        minX = maxX = data[0];
	        minY = maxY = data[1];
	
	        for (var i = dim; i < outerLen; i += dim) {
	            x = data[i];
	            y = data[i + 1];
	            if (x < minX) minX = x;
	            if (y < minY) minY = y;
	            if (x > maxX) maxX = x;
	            if (y > maxY) maxY = y;
	        }
	
	        // minX, minY and size are later used to transform coords into integers for z-order calculation
	        size = Math.max(maxX - minX, maxY - minY);
	    }
	
	    earcutLinked(outerNode, triangles, dim, minX, minY, size);
	
	    return triangles;
	}
	
	// create a circular doubly linked list from polygon points in the specified winding order
	function linkedList(data, start, end, dim, clockwise) {
	    var i, last;
	
	    if (clockwise === (signedArea(data, start, end, dim) > 0)) {
	        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);
	    } else {
	        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);
	    }
	
	    if (last && equals(last, last.next)) {
	        removeNode(last);
	        last = last.next;
	    }
	
	    return last;
	}
	
	// eliminate colinear or duplicate points
	function filterPoints(start, end) {
	    if (!start) return start;
	    if (!end) end = start;
	
	    var p = start,
	        again;
	    do {
	        again = false;
	
	        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {
	            removeNode(p);
	            p = end = p.prev;
	            if (p === p.next) return null;
	            again = true;
	
	        } else {
	            p = p.next;
	        }
	    } while (again || p !== end);
	
	    return end;
	}
	
	// main ear slicing loop which triangulates a polygon (given as a linked list)
	function earcutLinked(ear, triangles, dim, minX, minY, size, pass) {
	    if (!ear) return;
	
	    // interlink polygon nodes in z-order
	    if (!pass && size) indexCurve(ear, minX, minY, size);
	
	    var stop = ear,
	        prev, next;
	
	    // iterate through ears, slicing them one by one
	    while (ear.prev !== ear.next) {
	        prev = ear.prev;
	        next = ear.next;
	
	        if (size ? isEarHashed(ear, minX, minY, size) : isEar(ear)) {
	            // cut off the triangle
	            triangles.push(prev.i / dim);
	            triangles.push(ear.i / dim);
	            triangles.push(next.i / dim);
	
	            removeNode(ear);
	
	            // skipping the next vertice leads to less sliver triangles
	            ear = next.next;
	            stop = next.next;
	
	            continue;
	        }
	
	        ear = next;
	
	        // if we looped through the whole remaining polygon and can't find any more ears
	        if (ear === stop) {
	            // try filtering points and slicing again
	            if (!pass) {
	                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, size, 1);
	
	            // if this didn't work, try curing all small self-intersections locally
	            } else if (pass === 1) {
	                ear = cureLocalIntersections(ear, triangles, dim);
	                earcutLinked(ear, triangles, dim, minX, minY, size, 2);
	
	            // as a last resort, try splitting the remaining polygon into two
	            } else if (pass === 2) {
	                splitEarcut(ear, triangles, dim, minX, minY, size);
	            }
	
	            break;
	        }
	    }
	}
	
	// check whether a polygon node forms a valid ear with adjacent nodes
	function isEar(ear) {
	    var a = ear.prev,
	        b = ear,
	        c = ear.next;
	
	    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear
	
	    // now make sure we don't have other points inside the potential ear
	    var p = ear.next.next;
	
	    while (p !== ear.prev) {
	        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&
	            area(p.prev, p, p.next) >= 0) return false;
	        p = p.next;
	    }
	
	    return true;
	}
	
	function isEarHashed(ear, minX, minY, size) {
	    var a = ear.prev,
	        b = ear,
	        c = ear.next;
	
	    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear
	
	    // triangle bbox; min & max are calculated like this for speed
	    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),
	        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),
	        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),
	        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);
	
	    // z-order range for the current triangle bbox;
	    var minZ = zOrder(minTX, minTY, minX, minY, size),
	        maxZ = zOrder(maxTX, maxTY, minX, minY, size);
	
	    // first look for points inside the triangle in increasing z-order
	    var p = ear.nextZ;
	
	    while (p && p.z <= maxZ) {
	        if (p !== ear.prev && p !== ear.next &&
	            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&
	            area(p.prev, p, p.next) >= 0) return false;
	        p = p.nextZ;
	    }
	
	    // then look for points in decreasing z-order
	    p = ear.prevZ;
	
	    while (p && p.z >= minZ) {
	        if (p !== ear.prev && p !== ear.next &&
	            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&
	            area(p.prev, p, p.next) >= 0) return false;
	        p = p.prevZ;
	    }
	
	    return true;
	}
	
	// go through all polygon nodes and cure small local self-intersections
	function cureLocalIntersections(start, triangles, dim) {
	    var p = start;
	    do {
	        var a = p.prev,
	            b = p.next.next;
	
	        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {
	
	            triangles.push(a.i / dim);
	            triangles.push(p.i / dim);
	            triangles.push(b.i / dim);
	
	            // remove two nodes involved
	            removeNode(p);
	            removeNode(p.next);
	
	            p = start = b;
	        }
	        p = p.next;
	    } while (p !== start);
	
	    return p;
	}
	
	// try splitting polygon into two and triangulate them independently
	function splitEarcut(start, triangles, dim, minX, minY, size) {
	    // look for a valid diagonal that divides the polygon into two
	    var a = start;
	    do {
	        var b = a.next.next;
	        while (b !== a.prev) {
	            if (a.i !== b.i && isValidDiagonal(a, b)) {
	                // split the polygon in two by the diagonal
	                var c = splitPolygon(a, b);
	
	                // filter colinear points around the cuts
	                a = filterPoints(a, a.next);
	                c = filterPoints(c, c.next);
	
	                // run earcut on each half
	                earcutLinked(a, triangles, dim, minX, minY, size);
	                earcutLinked(c, triangles, dim, minX, minY, size);
	                return;
	            }
	            b = b.next;
	        }
	        a = a.next;
	    } while (a !== start);
	}
	
	// link every hole into the outer loop, producing a single-ring polygon without holes
	function eliminateHoles(data, holeIndices, outerNode, dim) {
	    var queue = [],
	        i, len, start, end, list;
	
	    for (i = 0, len = holeIndices.length; i < len; i++) {
	        start = holeIndices[i] * dim;
	        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;
	        list = linkedList(data, start, end, dim, false);
	        if (list === list.next) list.steiner = true;
	        queue.push(getLeftmost(list));
	    }
	
	    queue.sort(compareX);
	
	    // process holes from left to right
	    for (i = 0; i < queue.length; i++) {
	        eliminateHole(queue[i], outerNode);
	        outerNode = filterPoints(outerNode, outerNode.next);
	    }
	
	    return outerNode;
	}
	
	function compareX(a, b) {
	    return a.x - b.x;
	}
	
	// find a bridge between vertices that connects hole with an outer ring and and link it
	function eliminateHole(hole, outerNode) {
	    outerNode = findHoleBridge(hole, outerNode);
	    if (outerNode) {
	        var b = splitPolygon(outerNode, hole);
	        filterPoints(b, b.next);
	    }
	}
	
	// David Eberly's algorithm for finding a bridge between hole and outer polygon
	function findHoleBridge(hole, outerNode) {
	    var p = outerNode,
	        hx = hole.x,
	        hy = hole.y,
	        qx = -Infinity,
	        m;
	
	    // find a segment intersected by a ray from the hole's leftmost point to the left;
	    // segment's endpoint with lesser x will be potential connection point
	    do {
	        if (hy <= p.y && hy >= p.next.y) {
	            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);
	            if (x <= hx && x > qx) {
	                qx = x;
	                if (x === hx) {
	                    if (hy === p.y) return p;
	                    if (hy === p.next.y) return p.next;
	                }
	                m = p.x < p.next.x ? p : p.next;
	            }
	        }
	        p = p.next;
	    } while (p !== outerNode);
	
	    if (!m) return null;
	
	    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint
	
	    // look for points inside the triangle of hole point, segment intersection and endpoint;
	    // if there are no points found, we have a valid connection;
	    // otherwise choose the point of the minimum angle with the ray as connection point
	
	    var stop = m,
	        mx = m.x,
	        my = m.y,
	        tanMin = Infinity,
	        tan;
	
	    p = m.next;
	
	    while (p !== stop) {
	        if (hx >= p.x && p.x >= mx &&
	                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {
	
	            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential
	
	            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {
	                m = p;
	                tanMin = tan;
	            }
	        }
	
	        p = p.next;
	    }
	
	    return m;
	}
	
	// interlink polygon nodes in z-order
	function indexCurve(start, minX, minY, size) {
	    var p = start;
	    do {
	        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, size);
	        p.prevZ = p.prev;
	        p.nextZ = p.next;
	        p = p.next;
	    } while (p !== start);
	
	    p.prevZ.nextZ = null;
	    p.prevZ = null;
	
	    sortLinked(p);
	}
	
	// Simon Tatham's linked list merge sort algorithm
	// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html
	function sortLinked(list) {
	    var i, p, q, e, tail, numMerges, pSize, qSize,
	        inSize = 1;
	
	    do {
	        p = list;
	        list = null;
	        tail = null;
	        numMerges = 0;
	
	        while (p) {
	            numMerges++;
	            q = p;
	            pSize = 0;
	            for (i = 0; i < inSize; i++) {
	                pSize++;
	                q = q.nextZ;
	                if (!q) break;
	            }
	
	            qSize = inSize;
	
	            while (pSize > 0 || (qSize > 0 && q)) {
	
	                if (pSize === 0) {
	                    e = q;
	                    q = q.nextZ;
	                    qSize--;
	                } else if (qSize === 0 || !q) {
	                    e = p;
	                    p = p.nextZ;
	                    pSize--;
	                } else if (p.z <= q.z) {
	                    e = p;
	                    p = p.nextZ;
	                    pSize--;
	                } else {
	                    e = q;
	                    q = q.nextZ;
	                    qSize--;
	                }
	
	                if (tail) tail.nextZ = e;
	                else list = e;
	
	                e.prevZ = tail;
	                tail = e;
	            }
	
	            p = q;
	        }
	
	        tail.nextZ = null;
	        inSize *= 2;
	
	    } while (numMerges > 1);
	
	    return list;
	}
	
	// z-order of a point given coords and size of the data bounding box
	function zOrder(x, y, minX, minY, size) {
	    // coords are transformed into non-negative 15-bit integer range
	    x = 32767 * (x - minX) / size;
	    y = 32767 * (y - minY) / size;
	
	    x = (x | (x << 8)) & 0x00FF00FF;
	    x = (x | (x << 4)) & 0x0F0F0F0F;
	    x = (x | (x << 2)) & 0x33333333;
	    x = (x | (x << 1)) & 0x55555555;
	
	    y = (y | (y << 8)) & 0x00FF00FF;
	    y = (y | (y << 4)) & 0x0F0F0F0F;
	    y = (y | (y << 2)) & 0x33333333;
	    y = (y | (y << 1)) & 0x55555555;
	
	    return x | (y << 1);
	}
	
	// find the leftmost node of a polygon ring
	function getLeftmost(start) {
	    var p = start,
	        leftmost = start;
	    do {
	        if (p.x < leftmost.x) leftmost = p;
	        p = p.next;
	    } while (p !== start);
	
	    return leftmost;
	}
	
	// check if a point lies within a convex triangle
	function pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {
	    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&
	           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&
	           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;
	}
	
	// check if a diagonal between two polygon nodes is valid (lies in polygon interior)
	function isValidDiagonal(a, b) {
	    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&
	           locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);
	}
	
	// signed area of a triangle
	function area(p, q, r) {
	    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);
	}
	
	// check if two points are equal
	function equals(p1, p2) {
	    return p1.x === p2.x && p1.y === p2.y;
	}
	
	// check if two segments intersect
	function intersects(p1, q1, p2, q2) {
	    if ((equals(p1, q1) && equals(p2, q2)) ||
	        (equals(p1, q2) && equals(p2, q1))) return true;
	    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&
	           area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;
	}
	
	// check if a polygon diagonal intersects any polygon segments
	function intersectsPolygon(a, b) {
	    var p = a;
	    do {
	        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&
	                intersects(p, p.next, a, b)) return true;
	        p = p.next;
	    } while (p !== a);
	
	    return false;
	}
	
	// check if a polygon diagonal is locally inside the polygon
	function locallyInside(a, b) {
	    return area(a.prev, a, a.next) < 0 ?
	        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :
	        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;
	}
	
	// check if the middle point of a polygon diagonal is inside the polygon
	function middleInside(a, b) {
	    var p = a,
	        inside = false,
	        px = (a.x + b.x) / 2,
	        py = (a.y + b.y) / 2;
	    do {
	        if (((p.y > py) !== (p.next.y > py)) && (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))
	            inside = !inside;
	        p = p.next;
	    } while (p !== a);
	
	    return inside;
	}
	
	// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;
	// if one belongs to the outer ring and another to a hole, it merges it into a single ring
	function splitPolygon(a, b) {
	    var a2 = new Node(a.i, a.x, a.y),
	        b2 = new Node(b.i, b.x, b.y),
	        an = a.next,
	        bp = b.prev;
	
	    a.next = b;
	    b.prev = a;
	
	    a2.next = an;
	    an.prev = a2;
	
	    b2.next = a2;
	    a2.prev = b2;
	
	    bp.next = b2;
	    b2.prev = bp;
	
	    return b2;
	}
	
	// create a node and optionally link it with previous one (in a circular doubly linked list)
	function insertNode(i, x, y, last) {
	    var p = new Node(i, x, y);
	
	    if (!last) {
	        p.prev = p;
	        p.next = p;
	
	    } else {
	        p.next = last.next;
	        p.prev = last;
	        last.next.prev = p;
	        last.next = p;
	    }
	    return p;
	}
	
	function removeNode(p) {
	    p.next.prev = p.prev;
	    p.prev.next = p.next;
	
	    if (p.prevZ) p.prevZ.nextZ = p.nextZ;
	    if (p.nextZ) p.nextZ.prevZ = p.prevZ;
	}
	
	function Node(i, x, y) {
	    // vertice index in coordinates array
	    this.i = i;
	
	    // vertex coordinates
	    this.x = x;
	    this.y = y;
	
	    // previous and next vertice nodes in a polygon ring
	    this.prev = null;
	    this.next = null;
	
	    // z-order curve value
	    this.z = null;
	
	    // previous and next nodes in z-order
	    this.prevZ = null;
	    this.nextZ = null;
	
	    // indicates whether this is a steiner point
	    this.steiner = false;
	}
	
	// return a percentage difference between the polygon area and its triangulation area;
	// used to verify correctness of triangulation
	earcut.deviation = function (data, holeIndices, dim, triangles) {
	    var hasHoles = holeIndices && holeIndices.length;
	    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;
	
	    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));
	    if (hasHoles) {
	        for (var i = 0, len = holeIndices.length; i < len; i++) {
	            var start = holeIndices[i] * dim;
	            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;
	            polygonArea -= Math.abs(signedArea(data, start, end, dim));
	        }
	    }
	
	    var trianglesArea = 0;
	    for (i = 0; i < triangles.length; i += 3) {
	        var a = triangles[i] * dim;
	        var b = triangles[i + 1] * dim;
	        var c = triangles[i + 2] * dim;
	        trianglesArea += Math.abs(
	            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -
	            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));
	    }
	
	    return polygonArea === 0 && trianglesArea === 0 ? 0 :
	        Math.abs((trianglesArea - polygonArea) / polygonArea);
	};
	
	function signedArea(data, start, end, dim) {
	    var sum = 0;
	    for (var i = start, j = end - dim; i < end; i += dim) {
	        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);
	        j = i;
	    }
	    return sum;
	}
	
	// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts
	earcut.flatten = function (data) {
	    var dim = data[0][0].length,
	        result = {vertices: [], holes: [], dimensions: dim},
	        holeIndex = 0;
	
	    for (var i = 0; i < data.length; i++) {
	        for (var j = 0; j < data[i].length; j++) {
	            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);
	        }
	        if (i > 0) {
	            holeIndex += data[i - 1].length;
	            result.holes.push(holeIndex);
	        }
	    }
	    return result;
	};


/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _lineLayer = __webpack_require__(436);
	
	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_lineLayer).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9sYXllcnMvY29yZS9saW5lLWxheWVyL2luZGV4LmpzIl0sIm5hbWVzIjpbImRlZmF1bHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OzhDQUFRQSxPIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHtkZWZhdWx0IGFzIGRlZmF1bHR9IGZyb20gJy4vbGluZS1sYXllcic7XG4iXX0=

/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _temp; // Copyright (c) 2015 Uber Technologies, Inc.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the "Software"), to deal
	// in the Software without restriction, including without limitation the rights
	// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	// copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	// THE SOFTWARE.
	
	var _ = __webpack_require__(426);
	
	var _luma = __webpack_require__(185);
	
	var _path = __webpack_require__(214);
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var DEFAULT_COLOR = [0, 255, 0, 255];
	
	var defaultGetSourcePosition = function defaultGetSourcePosition(x) {
	  return x.sourcePosition;
	};
	var defaultGetTargetPosition = function defaultGetTargetPosition(x) {
	  return x.targetPosition;
	};
	var defaultGetColor = function defaultGetColor(x) {
	  return x.color || DEFAULT_COLOR;
	};
	
	var LineLayer = (_temp = _class = function (_Layer) {
	  _inherits(LineLayer, _Layer);
	
	  /**
	   * @classdesc
	   * LineLayer
	   *
	   * @class
	   * @param {object} opts
	   */
	  function LineLayer() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$getSourcePositio = _ref.getSourcePosition,
	        getSourcePosition = _ref$getSourcePositio === undefined ? defaultGetSourcePosition : _ref$getSourcePositio,
	        _ref$getTargetPositio = _ref.getTargetPosition,
	        getTargetPosition = _ref$getTargetPositio === undefined ? defaultGetTargetPosition : _ref$getTargetPositio,
	        _ref$getColor = _ref.getColor,
	        getColor = _ref$getColor === undefined ? defaultGetColor : _ref$getColor,
	        _ref$strokeWidth = _ref.strokeWidth,
	        strokeWidth = _ref$strokeWidth === undefined ? 1 : _ref$strokeWidth,
	        opts = _objectWithoutProperties(_ref, ['getSourcePosition', 'getTargetPosition', 'getColor', 'strokeWidth']);
	
	    _classCallCheck(this, LineLayer);
	
	    return _possibleConstructorReturn(this, (LineLayer.__proto__ || Object.getPrototypeOf(LineLayer)).call(this, _extends({
	      getSourcePosition: getSourcePosition,
	      getTargetPosition: getTargetPosition,
	      getColor: getColor,
	      strokeWidth: strokeWidth
	    }, opts)));
	  }
	
	  _createClass(LineLayer, [{
	    key: 'initializeState',
	    value: function initializeState() {
	      var gl = this.context.gl;
	
	      this.setState({ model: this.createModel(gl) });
	
	      var attributeManager = this.state.attributeManager;
	
	      attributeManager.addInstanced({
	        instanceSourcePositions: { size: 3, update: this.calculateInstanceSourcePositions },
	        instanceTargetPositions: { size: 3, update: this.calculateInstanceTargetPositions },
	        instanceColors: {
	          type: _luma.GL.UNSIGNED_BYTE,
	          size: 4,
	          update: this.calculateInstanceColors
	        }
	      });
	    }
	  }, {
	    key: 'draw',
	    value: function draw(_ref2) {
	      var uniforms = _ref2.uniforms;
	      var gl = this.context.gl;
	
	      var lineWidth = this.screenToDevicePixels(this.props.strokeWidth);
	      gl.lineWidth(lineWidth);
	      this.state.model.render(uniforms);
	      // Setting line width back to 1 is here to workaround a Google Chrome bug
	      // gl.clear() and gl.isEnabled() will return GL_INVALID_VALUE even with
	      // correct parameter
	      // This is not happening on Safari and Firefox
	      gl.lineWidth(1.0);
	    }
	  }, {
	    key: 'getShaders',
	    value: function getShaders() {
	      return {
	        vs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME line-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 instanceSourcePositions;\nattribute vec3 instanceTargetPositions;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float renderPickingBuffer;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  // Position\n  vec3 source = project_position(instanceSourcePositions);\n  vec3 target = project_position(instanceTargetPositions);\n\n  // linear interpolation of source & target to pick right coord\n  float segmentIndex = positions.x;\n  vec3 p = mix(source, target, segmentIndex);\n\n  gl_Position = project_to_clipspace(vec4(p, 1.));\n\n  // Color\n  vec4 color = vec4(instanceColors.rgb, instanceColors.a * opacity) / 255.;\n  vec4 pickingColor = vec4(instancePickingColors / 255., 1.);\n  vColor = mix(\n    color,\n    pickingColor,\n    renderPickingBuffer\n  );\n}\n',
	        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n#define SHADER_NAME line-layer-fragment-shader\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n}\n'
	      };
	    }
	  }, {
	    key: 'createModel',
	    value: function createModel(gl) {
	      var positions = [0, 0, 0, 1, 1, 1];
	
	      return new _luma.Model(_extends({
	        gl: gl,
	        id: this.props.id
	      }, (0, _.assembleShaders)(gl, this.getShaders()), {
	        geometry: new _luma.Geometry({
	          drawMode: _luma.GL.LINE_STRIP,
	          positions: new Float32Array(positions)
	        }),
	        isInstanced: true
	      }));
	    }
	  }, {
	    key: 'calculateInstanceSourcePositions',
	    value: function calculateInstanceSourcePositions(attribute) {
	      var _props = this.props,
	          data = _props.data,
	          getSourcePosition = _props.getSourcePosition;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var object = _step.value;
	
	          var sourcePosition = getSourcePosition(object);
	          value[i + 0] = sourcePosition[0];
	          value[i + 1] = sourcePosition[1];
	          value[i + 2] = sourcePosition[2] || 0;
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'calculateInstanceTargetPositions',
	    value: function calculateInstanceTargetPositions(attribute) {
	      var _props2 = this.props,
	          data = _props2.data,
	          getTargetPosition = _props2.getTargetPosition;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;
	
	      try {
	        for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var object = _step2.value;
	
	          var targetPosition = getTargetPosition(object);
	          value[i + 0] = targetPosition[0];
	          value[i + 1] = targetPosition[1];
	          value[i + 2] = targetPosition[2] || 0;
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'calculateInstanceColors',
	    value: function calculateInstanceColors(attribute) {
	      var _props3 = this.props,
	          data = _props3.data,
	          getColor = _props3.getColor;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion3 = true;
	      var _didIteratorError3 = false;
	      var _iteratorError3 = undefined;
	
	      try {
	        for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	          var object = _step3.value;
	
	          var color = getColor(object);
	          value[i + 0] = color[0];
	          value[i + 1] = color[1];
	          value[i + 2] = color[2];
	          value[i + 3] = isNaN(color[3]) ? DEFAULT_COLOR[3] : color[3];
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError3 = true;
	        _iteratorError3 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion3 && _iterator3.return) {
	            _iterator3.return();
	          }
	        } finally {
	          if (_didIteratorError3) {
	            throw _iteratorError3;
	          }
	        }
	      }
	    }
	  }]);
	
	  return LineLayer;
	}(_.Layer), _class.layerName = 'LineLayer', _temp);
	exports.default = LineLayer;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _scatterplotLayer = __webpack_require__(438);
	
	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_scatterplotLayer).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9sYXllcnMvY29yZS9zY2F0dGVycGxvdC1sYXllci9pbmRleC5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztxREFBUUEsTyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7ZGVmYXVsdCBhcyBkZWZhdWx0fSBmcm9tICcuL3NjYXR0ZXJwbG90LWxheWVyJztcbiJdfQ==

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _class, _temp; // Copyright (c) 2015 Uber Technologies, Inc.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the "Software"), to deal
	// in the Software without restriction, including without limitation the rights
	// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	// copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	// THE SOFTWARE.
	
	var _ = __webpack_require__(426);
	
	var _luma = __webpack_require__(185);
	
	var _path = __webpack_require__(214);
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var DEFAULT_COLOR = [255, 0, 255, 255];
	
	var defaultGetPosition = function defaultGetPosition(x) {
	  return x.position;
	};
	var defaultGetRadius = function defaultGetRadius(x) {
	  return x.radius;
	};
	var defaultGetColor = function defaultGetColor(x) {
	  return x.color || DEFAULT_COLOR;
	};
	
	var ScatterplotLayer = (_temp = _class = function (_Layer) {
	  _inherits(ScatterplotLayer, _Layer);
	
	  /*
	   * @classdesc
	   * ScatterplotLayer
	   *
	   * @class
	   * @param {object} props
	   * @param {number} props.radius - point radius in meters
	   * @param {number} props.radiusMinPixels - min point radius in pixels
	   * @param {number} props.radiusMinPixels - max point radius in pixels
	   */
	  function ScatterplotLayer(_ref) {
	    var _ref$getPosition = _ref.getPosition,
	        getPosition = _ref$getPosition === undefined ? defaultGetPosition : _ref$getPosition,
	        _ref$getRadius = _ref.getRadius,
	        getRadius = _ref$getRadius === undefined ? defaultGetRadius : _ref$getRadius,
	        _ref$getColor = _ref.getColor,
	        getColor = _ref$getColor === undefined ? defaultGetColor : _ref$getColor,
	        _ref$radius = _ref.radius,
	        radius = _ref$radius === undefined ? 30 : _ref$radius,
	        _ref$radiusMinPixels = _ref.radiusMinPixels,
	        radiusMinPixels = _ref$radiusMinPixels === undefined ? 0 : _ref$radiusMinPixels,
	        _ref$radiusMaxPixels = _ref.radiusMaxPixels,
	        radiusMaxPixels = _ref$radiusMaxPixels === undefined ? Number.MAX_SAFE_INTEGER : _ref$radiusMaxPixels,
	        _ref$drawOutline = _ref.drawOutline,
	        drawOutline = _ref$drawOutline === undefined ? false : _ref$drawOutline,
	        _ref$strokeWidth = _ref.strokeWidth,
	        strokeWidth = _ref$strokeWidth === undefined ? 1 : _ref$strokeWidth,
	        props = _objectWithoutProperties(_ref, ['getPosition', 'getRadius', 'getColor', 'radius', 'radiusMinPixels', 'radiusMaxPixels', 'drawOutline', 'strokeWidth']);
	
	    _classCallCheck(this, ScatterplotLayer);
	
	    return _possibleConstructorReturn(this, (ScatterplotLayer.__proto__ || Object.getPrototypeOf(ScatterplotLayer)).call(this, _extends({
	      getPosition: getPosition,
	      getRadius: getRadius,
	      getColor: getColor,
	      drawOutline: drawOutline,
	      strokeWidth: strokeWidth,
	      radius: radius,
	      radiusMinPixels: radiusMinPixels,
	      radiusMaxPixels: radiusMaxPixels
	    }, props)));
	  }
	
	  _createClass(ScatterplotLayer, [{
	    key: 'initializeState',
	    value: function initializeState() {
	      /* eslint-disable */
	      var gl = this.context.gl;
	
	      var model = this._getModel(gl);
	      this.setState({ model: model });
	
	      var attributeManager = this.state.attributeManager;
	
	      attributeManager.addInstanced({
	        instancePositions: { size: 3, update: this.calculateInstancePositions },
	        instanceRadius: { size: 1, update: this.calculateInstanceRadius },
	        instanceColors: {
	          type: _luma.GL.UNSIGNED_BYTE,
	          size: 4,
	          update: this.calculateInstanceColors
	        }
	      });
	    }
	  }, {
	    key: 'updateState',
	    value: function updateState(evt) {
	      _get(ScatterplotLayer.prototype.__proto__ || Object.getPrototypeOf(ScatterplotLayer.prototype), 'updateState', this).call(this, evt);
	      var props = evt.props,
	          oldProps = evt.oldProps;
	
	      if (props.drawOutline !== oldProps.drawOutline) {
	        this.state.model.geometry.drawMode = props.drawOutline ? _luma.GL.LINE_LOOP : _luma.GL.TRIANGLE_FAN;
	      }
	    }
	  }, {
	    key: 'draw',
	    value: function draw(_ref2) {
	      var uniforms = _ref2.uniforms;
	      var gl = this.context.gl;
	
	      var lineWidth = this.screenToDevicePixels(this.props.strokeWidth);
	      gl.lineWidth(lineWidth);
	      this.state.model.render(_extends({}, uniforms, {
	        radius: this.props.radius,
	        radiusMinPixels: this.props.radiusMinPixels,
	        radiusMaxPixels: this.props.radiusMaxPixels
	      }));
	      // Setting line width back to 1 is here to workaround a Google Chrome bug
	      // gl.clear() and gl.isEnabled() will return GL_INVALID_VALUE even with
	      // correct parameter
	      // This is not happening on Safari and Firefox
	      gl.lineWidth(1.0);
	    }
	  }, {
	    key: 'getShaders',
	    value: function getShaders(id) {
	      return {
	        vs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME scatterplot-layer-vertex-shader\n\nattribute vec3 positions;\n\nattribute vec3 instancePositions;\nattribute float instanceRadius;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radius;\nuniform float radiusMinPixels;\nuniform float radiusMaxPixels;\nuniform float renderPickingBuffer;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  vec3 center = project_position(instancePositions);\n  float radiusPixels = clamp(\n    project_scale(radius * instanceRadius),\n    radiusMinPixels, radiusMaxPixels\n  );\n  vec3 vertex = positions * radiusPixels;\n  gl_Position = project_to_clipspace(vec4(center + vertex, 1.0));\n\n  vec4 color = vec4(instanceColors.rgb, instanceColors.a * opacity) / 255.;\n  vec4 pickingColor = vec4(instancePickingColors / 255., 1.);\n  vColor = mix(\n    color,\n    pickingColor,\n    renderPickingBuffer\n  );\n}\n',
	        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME scatterplot-layer-fragment-shader\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n}\n'
	      };
	    }
	  }, {
	    key: '_getModel',
	    value: function _getModel(gl) {
	      var NUM_SEGMENTS = 16;
	      var positions = [];
	      for (var i = 0; i < NUM_SEGMENTS; i++) {
	        positions.push(Math.cos(Math.PI * 2 * i / NUM_SEGMENTS), Math.sin(Math.PI * 2 * i / NUM_SEGMENTS), 0);
	      }
	      /* eslint-disable */
	
	      var shaders = (0, _.assembleShaders)(gl, this.getShaders());
	      var model = new _luma.Model(_extends({
	        gl: gl,
	        id: 'scatterplot'
	      }, shaders, {
	        geometry: new _luma.Geometry({
	          drawMode: _luma.GL.TRIANGLE_FAN,
	          positions: new Float32Array(positions)
	        }),
	        isInstanced: true
	      }));
	      return model;
	    }
	  }, {
	    key: 'calculateInstancePositions',
	    value: function calculateInstancePositions(attribute) {
	      var _props = this.props,
	          data = _props.data,
	          getPosition = _props.getPosition;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var point = _step.value;
	
	          var position = getPosition(point);
	          value[i + 0] = position[0] || 0;
	          value[i + 1] = position[1] || 0;
	          value[i + 2] = position[2] || 0;
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'calculateInstanceRadius',
	    value: function calculateInstanceRadius(attribute) {
	      var _props2 = this.props,
	          data = _props2.data,
	          getRadius = _props2.getRadius;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;
	
	      try {
	        for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var point = _step2.value;
	
	          var radius = getRadius(point);
	          value[i + 0] = isNaN(radius) ? 0 : radius;
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'calculateInstanceColors',
	    value: function calculateInstanceColors(attribute) {
	      var _props3 = this.props,
	          data = _props3.data,
	          getColor = _props3.getColor;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion3 = true;
	      var _didIteratorError3 = false;
	      var _iteratorError3 = undefined;
	
	      try {
	        for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	          var point = _step3.value;
	
	          var color = getColor(point);
	          value[i + 0] = color[0] || 0;
	          value[i + 1] = color[1] || 0;
	          value[i + 2] = color[2] || 0;
	          value[i + 3] = isNaN(color[3]) ? DEFAULT_COLOR[3] : color[3];
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError3 = true;
	        _iteratorError3 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion3 && _iterator3.return) {
	            _iterator3.return();
	          }
	        } finally {
	          if (_didIteratorError3) {
	            throw _iteratorError3;
	          }
	        }
	      }
	    }
	  }]);
	
	  return ScatterplotLayer;
	}(_.Layer), _class.layerName = 'ScatterplotLayer', _temp);
	exports.default = ScatterplotLayer;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _screenGridLayer = __webpack_require__(440);
	
	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_screenGridLayer).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9sYXllcnMvY29yZS9zY3JlZW4tZ3JpZC1sYXllci9pbmRleC5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztvREFBUUEsTyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7ZGVmYXVsdCBhcyBkZWZhdWx0fSBmcm9tICcuL3NjcmVlbi1ncmlkLWxheWVyJztcbiJdfQ==

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _temp; // Copyright (c) 2015 Uber Technologies, Inc.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the "Software"), to deal
	// in the Software without restriction, including without limitation the rights
	// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	// copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	// THE SOFTWARE.
	
	var _ = __webpack_require__(426);
	
	var _luma = __webpack_require__(185);
	
	var _path = __webpack_require__(214);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ScreenGridLayer = (_temp = _class = function (_Layer) {
	  _inherits(ScreenGridLayer, _Layer);
	
	  /**
	   * @classdesc
	   * ScreenGridLayer
	   *
	   * @class
	   * @param {object} opts
	   * @param {number} opts.unitWidth - width of the unit rectangle
	   * @param {number} opts.unitHeight - height of the unit rectangle
	   */
	  function ScreenGridLayer(opts) {
	    _classCallCheck(this, ScreenGridLayer);
	
	    return _possibleConstructorReturn(this, (ScreenGridLayer.__proto__ || Object.getPrototypeOf(ScreenGridLayer)).call(this, _extends({
	      unitWidth: 100,
	      unitHeight: 100,
	      minColor: [0, 0, 0, 255],
	      maxColor: [0, 255, 0, 255],
	      getPosition: function getPosition(d) {
	        return d.position;
	      },
	      getWeight: function getWeight(d) {
	        return 1;
	      }
	    }, opts)));
	  }
	
	  _createClass(ScreenGridLayer, [{
	    key: 'initializeState',
	    value: function initializeState() {
	      var attributeManager = this.state.attributeManager;
	
	      attributeManager.addInstanced({
	        instancePositions: { size: 3, update: this.calculateInstancePositions },
	        instanceCount: { size: 1, update: this.calculateInstanceCount }
	      });
	
	      var gl = this.context.gl;
	
	      this.setState({ model: this.getModel(gl) });
	    }
	  }, {
	    key: 'updateState',
	    value: function updateState(_ref) {
	      var oldProps = _ref.oldProps,
	          props = _ref.props,
	          changeFlags = _ref.changeFlags;
	
	      var cellSizeChanged = props.unitWidth !== oldProps.unitWidth || props.unitHeight !== oldProps.unitHeight;
	
	      if (cellSizeChanged || changeFlags.viewportChanged) {
	        this.updateCell();
	      }
	    }
	  }, {
	    key: 'draw',
	    value: function draw(_ref2) {
	      var uniforms = _ref2.uniforms;
	      var _props = this.props,
	          minColor = _props.minColor,
	          maxColor = _props.maxColor;
	      var _state = this.state,
	          model = _state.model,
	          cellScale = _state.cellScale,
	          maxCount = _state.maxCount;
	      var gl = this.context.gl;
	
	      gl.depthMask(true);
	      model.render(_extends({}, uniforms, { minColor: minColor, maxColor: maxColor, cellScale: cellScale, maxCount: maxCount }));
	    }
	  }, {
	    key: 'getShaders',
	    value: function getShaders() {
	      return {
	        vs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME grid-layer-vs\n\nattribute vec3 vertices;\nattribute vec3 instancePositions;\nattribute float instanceCount;\nattribute vec3 instancePickingColors;\n\nuniform float maxCount;\nuniform float opacity;\nuniform vec4 minColor;\nuniform vec4 maxColor;\nuniform float renderPickingBuffer;\nuniform vec3 cellScale;\nuniform vec3 selectedPickingColor;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  vec4 color = mix(minColor, maxColor, instanceCount / maxCount) / 255.;\n\n  vColor = mix(\n    vec4(color.rgb, color.a * opacity),\n    vec4(instancePickingColors / 255., 1.),\n    renderPickingBuffer\n  );\n\n  gl_Position = vec4(instancePositions + vertices * cellScale, 1.);\n}\n',
	        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* fragment shader for the grid-layer */\n#define SHADER_NAME grid-layer-fs\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n}\n'
	      };
	    }
	  }, {
	    key: 'getModel',
	    value: function getModel(gl) {
	      return new _luma.Model(_extends({
	        gl: gl,
	        id: this.props.id
	      }, (0, _.assembleShaders)(gl, this.getShaders()), {
	        geometry: new _luma.Geometry({
	          drawMode: _luma.GL.TRIANGLE_FAN,
	          vertices: new Float32Array([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0])
	        }),
	        isInstanced: true
	      }));
	    }
	  }, {
	    key: 'updateCell',
	    value: function updateCell() {
	      var _context$viewport = this.context.viewport,
	          width = _context$viewport.width,
	          height = _context$viewport.height;
	      var _props2 = this.props,
	          unitWidth = _props2.unitWidth,
	          unitHeight = _props2.unitHeight;
	
	
	      var MARGIN = 2;
	      var cellScale = new Float32Array([(unitWidth - MARGIN) / width * 2, -(unitHeight - MARGIN) / height * 2, 1]);
	      var numCol = Math.ceil(width / unitWidth);
	      var numRow = Math.ceil(height / unitHeight);
	
	      this.setState({
	        cellScale: cellScale,
	        numCol: numCol,
	        numRow: numRow,
	        numInstances: numCol * numRow
	      });
	
	      var attributeManager = this.state.attributeManager;
	
	      attributeManager.invalidateAll();
	    }
	  }, {
	    key: 'calculateInstancePositions',
	    value: function calculateInstancePositions(attribute, _ref3) {
	      var numInstances = _ref3.numInstances;
	      var _context$viewport2 = this.context.viewport,
	          width = _context$viewport2.width,
	          height = _context$viewport2.height;
	      var _props3 = this.props,
	          unitWidth = _props3.unitWidth,
	          unitHeight = _props3.unitHeight;
	      var numCol = this.state.numCol;
	      var value = attribute.value,
	          size = attribute.size;
	
	
	      for (var i = 0; i < numInstances; i++) {
	        var x = i % numCol;
	        var y = Math.floor(i / numCol);
	        value[i * size + 0] = x * unitWidth / width * 2 - 1;
	        value[i * size + 1] = 1 - y * unitHeight / height * 2;
	        value[i * size + 2] = 0;
	      }
	    }
	  }, {
	    key: 'calculateInstanceCount',
	    value: function calculateInstanceCount(attribute) {
	      var _props4 = this.props,
	          data = _props4.data,
	          unitWidth = _props4.unitWidth,
	          unitHeight = _props4.unitHeight,
	          getPosition = _props4.getPosition,
	          getWeight = _props4.getWeight;
	      var _state2 = this.state,
	          numCol = _state2.numCol,
	          numRow = _state2.numRow;
	      var value = attribute.value;
	
	      var maxCount = 0;
	
	      value.fill(0.0);
	
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var point = _step.value;
	
	          var pixel = this.project(getPosition(point));
	          var colId = Math.floor(pixel[0] / unitWidth);
	          var rowId = Math.floor(pixel[1] / unitHeight);
	          if (colId >= 0 && colId < numCol && rowId >= 0 && rowId < numRow) {
	            var i = colId + rowId * numCol;
	            value[i] += getWeight(point);
	            if (value[i] > maxCount) {
	              maxCount = value[i];
	            }
	          }
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	
	      this.setState({ maxCount: maxCount });
	    }
	  }]);
	
	  return ScreenGridLayer;
	}(_.Layer), _class.layerName = 'ScreenGridLayer', _temp);
	exports.default = ScreenGridLayer;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _scatterplotLayer = __webpack_require__(442);
	
	var _scatterplotLayer2 = _interopRequireDefault(_scatterplotLayer);
	
	var _arcLayer = __webpack_require__(444);
	
	var _arcLayer2 = _interopRequireDefault(_arcLayer);
	
	var _choroplethLayer = __webpack_require__(446);
	
	var _choroplethLayer2 = _interopRequireDefault(_choroplethLayer);
	
	var _extrudedChoroplethLayer = __webpack_require__(448);
	
	var _extrudedChoroplethLayer2 = _interopRequireDefault(_extrudedChoroplethLayer);
	
	var _lineLayer = __webpack_require__(450);
	
	var _lineLayer2 = _interopRequireDefault(_lineLayer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	module.exports = {
	  ScatterplotLayer64: _scatterplotLayer2.default,
	  ArcLayer64: _arcLayer2.default,
	  ChoroplethLayer64: _choroplethLayer2.default,
	  ExtrudedChoroplethLayer64: _extrudedChoroplethLayer2.default,
	  LineLayer64: _lineLayer2.default
	};
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9sYXllcnMvZnA2NC9pbmRleC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiU2NhdHRlcnBsb3RMYXllcjY0IiwiQXJjTGF5ZXI2NCIsIkNob3JvcGxldGhMYXllcjY0IiwiRXh0cnVkZWRDaG9yb3BsZXRoTGF5ZXI2NCIsIkxpbmVMYXllcjY0Il0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLGdEQURlO0FBRWZDLGdDQUZlO0FBR2ZDLDhDQUhlO0FBSWZDLDhEQUplO0FBS2ZDO0FBTGUsQ0FBakIiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2NhdHRlcnBsb3RMYXllcjY0IGZyb20gJy4vc2NhdHRlcnBsb3QtbGF5ZXInO1xuaW1wb3J0IEFyY0xheWVyNjQgZnJvbSAnLi9hcmMtbGF5ZXInO1xuaW1wb3J0IENob3JvcGxldGhMYXllcjY0IGZyb20gJy4vY2hvcm9wbGV0aC1sYXllcic7XG5pbXBvcnQgRXh0cnVkZWRDaG9yb3BsZXRoTGF5ZXI2NCBmcm9tICcuL2V4dHJ1ZGVkLWNob3JvcGxldGgtbGF5ZXInO1xuaW1wb3J0IExpbmVMYXllcjY0IGZyb20gJy4vbGluZS1sYXllcic7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBTY2F0dGVycGxvdExheWVyNjQsXG4gIEFyY0xheWVyNjQsXG4gIENob3JvcGxldGhMYXllcjY0LFxuICBFeHRydWRlZENob3JvcGxldGhMYXllcjY0LFxuICBMaW5lTGF5ZXI2NFxufTtcbiJdfQ==

/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _scatterplotLayer = __webpack_require__(443);
	
	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_scatterplotLayer).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9sYXllcnMvZnA2NC9zY2F0dGVycGxvdC1sYXllci9pbmRleC5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztxREFBUUEsTyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7ZGVmYXVsdCBhcyBkZWZhdWx0fSBmcm9tICcuL3NjYXR0ZXJwbG90LWxheWVyLTY0JztcbiJdfQ==

/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _temp; // Copyright (c) 2016 Uber Technologies, Inc.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the "Software"), to deal
	// in the Software without restriction, including without limitation the rights
	// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	// copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	// THE SOFTWARE.
	
	var _ = __webpack_require__(426);
	
	var _fp = __webpack_require__(403);
	
	var _luma = __webpack_require__(185);
	
	var _path = __webpack_require__(214);
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var DEFAULT_COLOR = [255, 0, 255, 255];
	
	var defaultGetPosition = function defaultGetPosition(x) {
	  return x.position;
	};
	var defaultGetRadius = function defaultGetRadius(x) {
	  return x.radius;
	};
	var defaultGetColor = function defaultGetColor(x) {
	  return x.color || DEFAULT_COLOR;
	};
	
	var ScatterplotLayer64 = (_temp = _class = function (_Layer) {
	  _inherits(ScatterplotLayer64, _Layer);
	
	  /*
	   * @classdesc
	   * ScatterplotLayer
	   *
	   * @class
	   * @param {object} props
	   * @param {number} props.radius - point radius
	   * @param {number} props.radiusMinPixels - min point radius in pixels
	   * @param {number} props.radiusMinPixels - max point radius in pixels
	   */
	  function ScatterplotLayer64(_ref) {
	    var _ref$getPosition = _ref.getPosition,
	        getPosition = _ref$getPosition === undefined ? defaultGetPosition : _ref$getPosition,
	        _ref$getRadius = _ref.getRadius,
	        getRadius = _ref$getRadius === undefined ? defaultGetRadius : _ref$getRadius,
	        _ref$getColor = _ref.getColor,
	        getColor = _ref$getColor === undefined ? defaultGetColor : _ref$getColor,
	        _ref$radius = _ref.radius,
	        radius = _ref$radius === undefined ? 30 : _ref$radius,
	        _ref$radiusMinPixels = _ref.radiusMinPixels,
	        radiusMinPixels = _ref$radiusMinPixels === undefined ? 0 : _ref$radiusMinPixels,
	        _ref$radiusMaxPixels = _ref.radiusMaxPixels,
	        radiusMaxPixels = _ref$radiusMaxPixels === undefined ? Number.MAX_SAFE_INTEGER : _ref$radiusMaxPixels,
	        _ref$drawOutline = _ref.drawOutline,
	        drawOutline = _ref$drawOutline === undefined ? false : _ref$drawOutline,
	        _ref$strokeWidth = _ref.strokeWidth,
	        strokeWidth = _ref$strokeWidth === undefined ? 1 : _ref$strokeWidth,
	        props = _objectWithoutProperties(_ref, ['getPosition', 'getRadius', 'getColor', 'radius', 'radiusMinPixels', 'radiusMaxPixels', 'drawOutline', 'strokeWidth']);
	
	    _classCallCheck(this, ScatterplotLayer64);
	
	    return _possibleConstructorReturn(this, (ScatterplotLayer64.__proto__ || Object.getPrototypeOf(ScatterplotLayer64)).call(this, _extends({
	      getPosition: getPosition,
	      getRadius: getRadius,
	      getColor: getColor,
	      radius: radius,
	      drawOutline: drawOutline,
	      strokeWidth: strokeWidth,
	      radiusMinPixels: radiusMinPixels,
	      radiusMaxPixels: radiusMaxPixels
	    }, props)));
	  }
	
	  _createClass(ScatterplotLayer64, [{
	    key: 'initializeState',
	    value: function initializeState() {
	      var gl = this.context.gl;
	      var attributeManager = this.state.attributeManager;
	
	
	      this.setState({
	        model: this.getModel(gl)
	      });
	
	      attributeManager.addInstanced({
	        instancePositionsFP64: { size: 4, update: this.calculateInstancePositions },
	        instanceRadius: { size: 1, update: this.calculateInstanceRadius },
	        layerHeight: { size: 2, update: this.calculateLayerHeight },
	        instanceColors: {
	          size: 4,
	          type: _luma.GL.UNSIGNED_BYTE,
	          update: this.calculateInstanceColors
	        }
	      });
	    }
	  }, {
	    key: 'draw',
	    value: function draw(_ref2) {
	      var uniforms = _ref2.uniforms;
	
	      this.calculateZoomRadius();
	      this.state.model.render(_extends({}, uniforms, {
	        radiusMinPixels: this.props.radiusMinPixels,
	        radiusMaxPixels: this.props.radiusMaxPixels,
	        zoomRadiusFP64: this.state.zoomRadiusFP64
	      }));
	    }
	  }, {
	    key: 'getShaders',
	    value: function getShaders() {
	      return {
	        vs: '// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME scatterplot-layer-64-vertex-shader\n\nattribute vec3 positions;\nattribute vec4 instancePositionsFP64;\nattribute vec2 layerHeight;\nattribute float instanceRadius;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\n\n// Only one-dimensional arrays may be declared in GLSL ES 1.0. specs p.24\nuniform float opacity;\nuniform vec2 zoomRadiusFP64;\nuniform float radiusMinPixels;\nuniform float radiusMaxPixels;\nuniform float renderPickingBuffer;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  // For some reason, need to add one to elevation to show up in untilted mode\n\n  vec2 projected_coord_xy[2];\n  project_position_fp64(instancePositionsFP64, projected_coord_xy);\n\n  vec2 pos_mul_radius[4];\n  vec4_fp64(vec4(positions * instanceRadius, 0.0), pos_mul_radius);\n\n  vec2 vertex_pos_localspace[4];\n  vec4_scalar_mul_fp64(pos_mul_radius, zoomRadiusFP64, vertex_pos_localspace);\n\n  vec2 vertex_pos_modelspace[4];\n\n  vertex_pos_modelspace[0] = sum_fp64(vertex_pos_localspace[0], projected_coord_xy[0]);\n  vertex_pos_modelspace[1] = sum_fp64(vertex_pos_localspace[1], projected_coord_xy[1]);\n  vertex_pos_modelspace[2] = sum_fp64(vertex_pos_localspace[2], vec2(layerHeight.x + 1.0, layerHeight.y));\n  vertex_pos_modelspace[3] = vec2(1.0, 0.0);\n\n  gl_Position = project_to_clipspace_fp64(vertex_pos_modelspace);\n\n  vec4 color = vec4(instanceColors.rgb, instanceColors.a * opacity) / 255.;\n  vec4 pickingColor = vec4(instancePickingColors / 255., 1.);\n\n  vColor = mix(\n    color,\n    pickingColor,\n    renderPickingBuffer\n  );\n}\n',
	        fs: '// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME scatterplot-layer-fragment-shader\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n}\n\n',
	        fp64: true,
	        project64: true
	      };
	    }
	  }, {
	    key: 'getModel',
	    value: function getModel(gl) {
	      var NUM_SEGMENTS = 16;
	      var positions = [];
	      for (var i = 0; i < NUM_SEGMENTS; i++) {
	        positions.push(Math.cos(Math.PI * 2 * i / NUM_SEGMENTS), Math.sin(Math.PI * 2 * i / NUM_SEGMENTS), 0);
	      }
	
	      return new _luma.Model(_extends({
	        gl: gl,
	        id: this.props.id
	      }, (0, _.assembleShaders)(gl, this.getShaders()), {
	        geometry: new _luma.Geometry({
	          drawMode: _luma.GL.TRIANGLE_FAN,
	          positions: new Float32Array(positions)
	        }),
	        isInstanced: true
	      }));
	    }
	  }, {
	    key: 'calculateInstancePositions',
	    value: function calculateInstancePositions(attribute) {
	      var _props = this.props,
	          data = _props.data,
	          getPosition = _props.getPosition;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var point = _step.value;
	
	          var position = getPosition(point);
	
	          var _fp64ify = (0, _fp.fp64ify)(position[0]);
	
	          var _fp64ify2 = _slicedToArray(_fp64ify, 2);
	
	          value[i + 0] = _fp64ify2[0];
	          value[i + 1] = _fp64ify2[1];
	
	          var _fp64ify3 = (0, _fp.fp64ify)(position[1]);
	
	          var _fp64ify4 = _slicedToArray(_fp64ify3, 2);
	
	          value[i + 2] = _fp64ify4[0];
	          value[i + 3] = _fp64ify4[1];
	
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'calculateLayerHeight',
	    value: function calculateLayerHeight(attribute) {
	      var _props2 = this.props,
	          data = _props2.data,
	          getPosition = _props2.getPosition;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;
	
	      try {
	        for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var point = _step2.value;
	
	          var position = getPosition(point);
	
	          var _fp64ify5 = (0, _fp.fp64ify)(position[2]);
	
	          var _fp64ify6 = _slicedToArray(_fp64ify5, 2);
	
	          value[i + 0] = _fp64ify6[0];
	          value[i + 1] = _fp64ify6[1];
	
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'calculateInstanceRadius',
	    value: function calculateInstanceRadius(attribute) {
	      var _props3 = this.props,
	          data = _props3.data,
	          getRadius = _props3.getRadius;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion3 = true;
	      var _didIteratorError3 = false;
	      var _iteratorError3 = undefined;
	
	      try {
	        for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	          var point = _step3.value;
	
	          var radius = getRadius(point) || 1;
	          value[i + 0] = radius;
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError3 = true;
	        _iteratorError3 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion3 && _iterator3.return) {
	            _iterator3.return();
	          }
	        } finally {
	          if (_didIteratorError3) {
	            throw _iteratorError3;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'calculateInstanceColors',
	    value: function calculateInstanceColors(attribute) {
	      var _props4 = this.props,
	          data = _props4.data,
	          getColor = _props4.getColor;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion4 = true;
	      var _didIteratorError4 = false;
	      var _iteratorError4 = undefined;
	
	      try {
	        for (var _iterator4 = data[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
	          var point = _step4.value;
	
	          var color = getColor(point);
	          value[i + 0] = color[0];
	          value[i + 1] = color[1];
	          value[i + 2] = color[2];
	          value[i + 3] = isNaN(color[3]) ? DEFAULT_COLOR[3] : color[3];
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError4 = true;
	        _iteratorError4 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion4 && _iterator4.return) {
	            _iterator4.return();
	          }
	        } finally {
	          if (_didIteratorError4) {
	            throw _iteratorError4;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'calculateZoomRadius',
	    value: function calculateZoomRadius() {
	      var pixel0 = this.projectFlat([-122, 37.5]);
	      var pixel1 = this.projectFlat([-122, 37.5002]);
	
	      var dx = pixel0[0] - pixel1[0];
	      var dy = pixel0[1] - pixel1[1];
	
	      var radius = Math.max(Math.sqrt(dx * dx + dy * dy), 2.0);
	      this.state.zoomRadiusFP64 = (0, _fp.fp64ify)(radius);
	    }
	  }]);
	
	  return ScatterplotLayer64;
	}(_.Layer), _class.layerName = 'ScatterplotLayer64', _temp);
	exports.default = ScatterplotLayer64;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _arcLayer = __webpack_require__(445);
	
	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_arcLayer).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9sYXllcnMvZnA2NC9hcmMtbGF5ZXIvaW5kZXguanMiXSwibmFtZXMiOlsiZGVmYXVsdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7NkNBQVFBLE8iLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge2RlZmF1bHQgYXMgZGVmYXVsdH0gZnJvbSAnLi9hcmMtbGF5ZXItNjQnO1xuIl19

/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _temp; // Copyright (c) 2015 Uber Technologies, Inc.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the "Software"), to deal
	// in the Software without restriction, including without limitation the rights
	// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	// copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	// THE SOFTWARE.
	
	var _ = __webpack_require__(426);
	
	var _fp = __webpack_require__(403);
	
	var _luma = __webpack_require__(185);
	
	var _path = __webpack_require__(214);
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var DEFAULT_COLOR = [0, 0, 255, 255];
	
	var defaultGetSourcePosition = function defaultGetSourcePosition(x) {
	  return x.sourcePosition;
	};
	var defaultGetTargetPosition = function defaultGetTargetPosition(x) {
	  return x.targetPosition;
	};
	var defaultGetColor = function defaultGetColor(x) {
	  return x.color;
	};
	
	var ArcLayer64 = (_temp = _class = function (_Layer) {
	  _inherits(ArcLayer64, _Layer);
	
	  /**
	   * @classdesc
	   * ArcLayer
	   *
	   * @class
	   * @param {object} props
	   */
	  function ArcLayer64() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$getSourcePositio = _ref.getSourcePosition,
	        getSourcePosition = _ref$getSourcePositio === undefined ? defaultGetSourcePosition : _ref$getSourcePositio,
	        _ref$getTargetPositio = _ref.getTargetPosition,
	        getTargetPosition = _ref$getTargetPositio === undefined ? defaultGetTargetPosition : _ref$getTargetPositio,
	        _ref$getSourceColor = _ref.getSourceColor,
	        getSourceColor = _ref$getSourceColor === undefined ? defaultGetColor : _ref$getSourceColor,
	        _ref$getTargetColor = _ref.getTargetColor,
	        getTargetColor = _ref$getTargetColor === undefined ? defaultGetColor : _ref$getTargetColor,
	        _ref$strokeWidth = _ref.strokeWidth,
	        strokeWidth = _ref$strokeWidth === undefined ? 1 : _ref$strokeWidth,
	        props = _objectWithoutProperties(_ref, ['getSourcePosition', 'getTargetPosition', 'getSourceColor', 'getTargetColor', 'strokeWidth']);
	
	    _classCallCheck(this, ArcLayer64);
	
	    return _possibleConstructorReturn(this, (ArcLayer64.__proto__ || Object.getPrototypeOf(ArcLayer64)).call(this, _extends({
	      getSourcePosition: getSourcePosition,
	      getTargetPosition: getTargetPosition,
	      getSourceColor: getSourceColor,
	      getTargetColor: getTargetColor,
	      strokeWidth: strokeWidth
	    }, props)));
	  }
	
	  _createClass(ArcLayer64, [{
	    key: 'initializeState',
	    value: function initializeState() {
	      var gl = this.context.gl;
	      var attributeManager = this.state.attributeManager;
	
	
	      attributeManager.addInstanced({
	        instanceSourcePositionsFP64: {
	          size: 4,
	          update: this.calculateInstanceSourcePositions
	        },
	        instanceTargetPositionsFP64: {
	          size: 4,
	          update: this.calculateInstanceTargetPositions
	        },
	        instanceSourceColors: {
	          size: 4,
	          type: _luma.GL.UNSIGNED_BYTE,
	          update: this.calculateInstanceSourceColors
	        },
	        instanceTargetColors: {
	          size: 4,
	          type: _luma.GL.UNSIGNED_BYTE,
	          update: this.calculateInstanceTargetColors
	        }
	      });
	
	      this.setState({ model: this.createModel(gl) });
	    }
	  }, {
	    key: 'draw',
	    value: function draw(_ref2) {
	      var uniforms = _ref2.uniforms;
	      var gl = this.context.gl;
	
	      var lineWidth = this.screenToDevicePixels(this.props.strokeWidth);
	      gl.lineWidth(lineWidth);
	      this.state.model.render(uniforms);
	      // Setting line width back to 1 is here to workaround a Google Chrome bug
	      // gl.clear() and gl.isEnabled() will return GL_INVALID_VALUE even with
	      // correct parameter
	      // This is not happening on Safari and Firefox
	      gl.lineWidth(1.0);
	    }
	  }, {
	    key: 'getShaders',
	    value: function getShaders() {
	      return {
	        vs: '// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME arc-layer-64-vertex-shader\n\nconst float N = 49.0;\n\nattribute vec3 positions;\nattribute vec4 instanceSourceColors;\nattribute vec4 instanceTargetColors;\nattribute vec3 instancePickingColors;\nattribute vec4 instanceSourcePositionsFP64;\nattribute vec4 instanceTargetPositionsFP64;\n\nuniform float opacity;\nuniform float renderPickingBuffer;\n\nvarying vec4 vColor;\n\nvec2 paraboloid_fp64(vec2 source[2], vec2 target[2], float ratio) {\n\n  vec2 x[2];\n  vec2_mix_fp64(source, target, ratio, x);\n  vec2 center[2];\n  vec2_mix_fp64(source, target, 0.5, center);\n\n  vec2 dSourceCenter = vec2_distance_fp64(source, center);\n  vec2 dXCenter = vec2_distance_fp64(x, center);\n  return mul_fp64(sum_fp64(dSourceCenter, dXCenter), sub_fp64(dSourceCenter, dXCenter));\n}\n\nvoid main(void) {\n  vec2 projectedSourceCoord[2];\n  project_position_fp64(instanceSourcePositionsFP64, projectedSourceCoord);\n  vec2 projectedTargetCoord[2];\n  project_position_fp64(instanceTargetPositionsFP64, projectedTargetCoord);\n\n  float segmentRatio = smoothstep(0.0, 1.0, positions.x / N);\n\n  vec2 mixed_temp[2];\n\n  vec2_mix_fp64(projectedSourceCoord, projectedTargetCoord, segmentRatio, mixed_temp);\n\n  vec2 vertex_pos_modelspace[4];\n\n  vertex_pos_modelspace[0] = mixed_temp[0];\n  vertex_pos_modelspace[1] = mixed_temp[1];\n\n  vec2 vertex_height = paraboloid_fp64(projectedSourceCoord, projectedTargetCoord, segmentRatio);\n  if (vertex_height.x < 0.0 || (vertex_height.x == 0.0 && vertex_height.y <= 0.0)) vertex_height = vec2(0.0, 0.0);\n\n  vertex_pos_modelspace[2] = sqrt_fp64(vertex_height);\n  vertex_pos_modelspace[3] = vec2(1.0, 0.0);\n\n  gl_Position = project_to_clipspace_fp64(vertex_pos_modelspace);\n\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio) / 255.;\n\n  vColor = mix(\n    vec4(color.rgb, color.a * opacity),\n    vec4(instancePickingColors / 255., 1.),\n    renderPickingBuffer\n  );\n}\n',
	        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME arc-layer-fragment-shader\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n}\n',
	        fp64: true,
	        project64: true
	      };
	    }
	  }, {
	    key: 'createModel',
	    value: function createModel(gl) {
	      var positions = [];
	      var NUM_SEGMENTS = 50;
	      for (var i = 0; i < NUM_SEGMENTS; i++) {
	        positions = [].concat(_toConsumableArray(positions), [i, i, i]);
	      }
	      return new _luma.Model(_extends({
	        gl: gl,
	        id: this.props.id
	      }, (0, _.assembleShaders)(gl, this.getShaders()), {
	        geometry: new _luma.Geometry({
	          drawMode: _luma.GL.LINE_STRIP,
	          positions: new Float32Array(positions)
	        }),
	        isInstanced: true
	      }));
	    }
	  }, {
	    key: 'calculateInstanceSourcePositions',
	    value: function calculateInstanceSourcePositions(attribute) {
	      var _props = this.props,
	          data = _props.data,
	          getSourcePosition = _props.getSourcePosition;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var object = _step.value;
	
	          var sourcePosition = getSourcePosition(object);
	
	          var _fp64ify = (0, _fp.fp64ify)(sourcePosition[0]);
	
	          var _fp64ify2 = _slicedToArray(_fp64ify, 2);
	
	          value[i + 0] = _fp64ify2[0];
	          value[i + 1] = _fp64ify2[1];
	
	          var _fp64ify3 = (0, _fp.fp64ify)(sourcePosition[1]);
	
	          var _fp64ify4 = _slicedToArray(_fp64ify3, 2);
	
	          value[i + 2] = _fp64ify4[0];
	          value[i + 3] = _fp64ify4[1];
	
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'calculateInstanceTargetPositions',
	    value: function calculateInstanceTargetPositions(attribute) {
	      var _props2 = this.props,
	          data = _props2.data,
	          getTargetPosition = _props2.getTargetPosition;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;
	
	      try {
	        for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var object = _step2.value;
	
	          var targetPosition = getTargetPosition(object);
	
	          var _fp64ify5 = (0, _fp.fp64ify)(targetPosition[0]);
	
	          var _fp64ify6 = _slicedToArray(_fp64ify5, 2);
	
	          value[i + 0] = _fp64ify6[0];
	          value[i + 1] = _fp64ify6[1];
	
	          var _fp64ify7 = (0, _fp.fp64ify)(targetPosition[1]);
	
	          var _fp64ify8 = _slicedToArray(_fp64ify7, 2);
	
	          value[i + 2] = _fp64ify8[0];
	          value[i + 3] = _fp64ify8[1];
	
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'calculateInstanceSourceColors',
	    value: function calculateInstanceSourceColors(attribute) {
	      var _props3 = this.props,
	          data = _props3.data,
	          getSourceColor = _props3.getSourceColor;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion3 = true;
	      var _didIteratorError3 = false;
	      var _iteratorError3 = undefined;
	
	      try {
	        for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	          var object = _step3.value;
	
	          var color = getSourceColor(object) || DEFAULT_COLOR;
	          value[i + 0] = color[0];
	          value[i + 1] = color[1];
	          value[i + 2] = color[2];
	          value[i + 3] = isNaN(color[3]) ? DEFAULT_COLOR[3] : color[3];
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError3 = true;
	        _iteratorError3 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion3 && _iterator3.return) {
	            _iterator3.return();
	          }
	        } finally {
	          if (_didIteratorError3) {
	            throw _iteratorError3;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'calculateInstanceTargetColors',
	    value: function calculateInstanceTargetColors(attribute) {
	      var _props4 = this.props,
	          data = _props4.data,
	          getTargetColor = _props4.getTargetColor;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion4 = true;
	      var _didIteratorError4 = false;
	      var _iteratorError4 = undefined;
	
	      try {
	        for (var _iterator4 = data[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
	          var object = _step4.value;
	
	          var color = getTargetColor(object) || DEFAULT_COLOR;
	          value[i + 0] = color[0];
	          value[i + 1] = color[1];
	          value[i + 2] = color[2];
	          value[i + 3] = isNaN(color[3]) ? DEFAULT_COLOR[3] : color[3];
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError4 = true;
	        _iteratorError4 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion4 && _iterator4.return) {
	            _iterator4.return();
	          }
	        } finally {
	          if (_didIteratorError4) {
	            throw _iteratorError4;
	          }
	        }
	      }
	    }
	  }]);
	
	  return ArcLayer64;
	}(_.Layer), _class.layerName = 'ArcLayer64', _temp);
	exports.default = ArcLayer64;
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _choroplethLayer = __webpack_require__(447);
	
	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_choroplethLayer).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9sYXllcnMvZnA2NC9jaG9yb3BsZXRoLWxheWVyL2luZGV4LmpzIl0sIm5hbWVzIjpbImRlZmF1bHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O29EQUFRQSxPIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHtkZWZhdWx0IGFzIGRlZmF1bHR9IGZyb20gJy4vY2hvcm9wbGV0aC1sYXllci02NCc7XG4iXX0=

/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _class, _temp; // Copyright (c) 2015 Uber Technologies, Inc.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the "Software"), to deal
	// in the Software without restriction, including without limitation the rights
	// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	// copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	// THE SOFTWARE.
	
	var _ = __webpack_require__(426);
	
	var _fp = __webpack_require__(403);
	
	var _luma = __webpack_require__(185);
	
	var _lodash = __webpack_require__(432);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _geojsonNormalize = __webpack_require__(433);
	
	var _geojsonNormalize2 = _interopRequireDefault(_geojsonNormalize);
	
	var _earcut = __webpack_require__(434);
	
	var _earcut2 = _interopRequireDefault(_earcut);
	
	var _path = __webpack_require__(214);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var DEFAULT_COLOR = [0, 0, 255, 255];
	
	var defaultGetColor = function defaultGetColor(feature) {
	  return feature.properties.color;
	};
	
	var ChoroplethLayer64 = (_temp = _class = function (_Layer) {
	  _inherits(ChoroplethLayer64, _Layer);
	
	  /**
	   * @class
	   * @param {object} props
	   */
	  function ChoroplethLayer64(props) {
	    _classCallCheck(this, ChoroplethLayer64);
	
	    return _possibleConstructorReturn(this, (ChoroplethLayer64.__proto__ || Object.getPrototypeOf(ChoroplethLayer64)).call(this, _extends({
	      getColor: defaultGetColor,
	      drawCountour: false,
	      strokeWidth: 1
	    }, props)));
	  }
	
	  _createClass(ChoroplethLayer64, [{
	    key: 'initializeState',
	    value: function initializeState() {
	      var gl = this.context.gl;
	      var attributeManager = this.state.attributeManager;
	
	
	      attributeManager.addDynamic({
	        // Primtive attributes
	        indices: { size: 1, update: this.calculateIndices, isIndexed: true },
	        positionsFP64: { size: 4, update: this.calculatePositionsFP64 },
	        heightsFP64: { size: 2, update: this.calculateHeightsFP64 },
	        colors: {
	          size: 4,
	          type: _luma.GL.UNSIGNED_BYTE,
	          update: this.calculateColors
	        },
	        // Instanced attributes
	        pickingColors: { size: 3, update: this.calculatePickingColors, noAlloc: true }
	      });
	
	      var IndexType = gl.getExtension('OES_element_index_uint') ? Uint32Array : Uint16Array;
	
	      this.setState({
	        model: this.getModel(gl),
	        numInstances: 0,
	        IndexType: IndexType
	      });
	    }
	  }, {
	    key: 'updateState',
	    value: function updateState(_ref) {
	      var oldProps = _ref.oldProps,
	          props = _ref.props,
	          changeFlags = _ref.changeFlags;
	      var attributeManager = this.state.attributeManager;
	
	      if (changeFlags.dataChanged) {
	        this.state.choropleths = extractChoropleths(props.data);
	        attributeManager.invalidateAll();
	      }
	
	      if (oldProps.opacity !== props.opacity) {
	        this.setUniforms({ opacity: props.opacity });
	      }
	    }
	  }, {
	    key: 'draw',
	    value: function draw(_ref2) {
	      var uniforms = _ref2.uniforms;
	      var gl = this.context.gl;
	
	      var lineWidth = this.screenToDevicePixels(this.props.strokeWidth);
	      gl.lineWidth(lineWidth);
	      this.state.model.render(uniforms);
	      // Setting line width back to 1 is here to workaround a Google Chrome bug
	      // gl.clear() and gl.isEnabled() will return GL_INVALID_VALUE even with
	      // correct parameter
	      // This is not happening on Safari and Firefox
	      gl.lineWidth(1.0);
	    }
	  }, {
	    key: 'pick',
	    value: function pick(opts) {
	      _get(ChoroplethLayer64.prototype.__proto__ || Object.getPrototypeOf(ChoroplethLayer64.prototype), 'pick', this).call(this, opts);
	      var info = opts.info;
	
	      var index = this.decodePickingColor(info.color);
	      var feature = index >= 0 ? this.props.data.features[index] : null;
	      info.feature = feature;
	      info.object = feature;
	    }
	  }, {
	    key: 'getShaders',
	    value: function getShaders() {
	      return {
	        vs: '// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME choropleth-layer-64-vertex-shader\n\nattribute vec4 positionsFP64;\nattribute vec2 heightsFP64;\n\nattribute vec3 positions;\nattribute vec4 colors;\nattribute vec3 pickingColors;\n\nuniform float opacity;\nuniform float renderPickingBuffer;\nuniform vec3 selectedPickingColor;\n\nvarying vec4 vColor;\n\nvec4 getColor(vec4 color, float opacity, vec3 pickingColor, float renderPickingBuffer) {\n  vec4 color4 = vec4(color.xyz / 255., color.w / 255. * opacity);\n  vec4 pickingColor4 = vec4(pickingColor / 255., 1.);\n  return mix(color4, pickingColor4, renderPickingBuffer);\n}\n\nvoid main(void) {\n  // For some reason, need to add one to elevation to show up in untilted mode\n  vec2 projectedCoord[2];\n  project_position_fp64(positionsFP64, projectedCoord);\n\n  vec2 vertex_pos_modelspace[4];\n\n  vertex_pos_modelspace[0] = projectedCoord[0];\n  vertex_pos_modelspace[1] = projectedCoord[1];\n  vertex_pos_modelspace[2] = heightsFP64;\n  vertex_pos_modelspace[3] = vec2(1.0, 0.0);\n\n  gl_Position = project_to_clipspace_fp64(vertex_pos_modelspace);\n\n  vec4 color = vec4(colors.rgb, colors.a * opacity) / 255.;\n  vec4 pickingColor = vec4(pickingColors / 255., 1.);\n\n  vColor = mix(\n    color,\n    pickingColor,\n    renderPickingBuffer\n  );\n}\n',
	        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME choropleth-layer-fragment-shader\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n}\n',
	        fp64: true,
	        project64: true
	      };
	    }
	  }, {
	    key: 'getModel',
	    value: function getModel(gl) {
	      return new _luma.Model(_extends({
	        gl: gl,
	        id: this.props.id
	      }, (0, _.assembleShaders)(gl, this.getShaders()), {
	        geometry: new _luma.Geometry({
	          drawMode: this.props.drawContour ? _luma.GL.LINES : _luma.GL.TRIANGLES
	        }),
	        vertexCount: 0,
	        isIndexed: true
	      }));
	    }
	  }, {
	    key: 'calculateIndices',
	    value: function calculateIndices(attribute) {
	      var _this2 = this;
	
	      // adjust index offset for multiple choropleths
	      var offsets = this.state.choropleths.reduce(function (acc, choropleth) {
	        return [].concat(_toConsumableArray(acc), [acc[acc.length - 1] + choropleth.reduce(function (count, polygon) {
	          return count + polygon.length;
	        }, 0)]);
	      }, [0]);
	      var IndexType = this.state.IndexType;
	
	      if (IndexType === Uint16Array && offsets[offsets.length - 1] > 65535) {
	        throw new Error('Vertex count exceeds browser\'s limit');
	      }
	
	      var indices = this.state.choropleths.map(function (choropleth, choroplethIndex) {
	        return _this2.props.drawContour ?
	        // 1. get sequentially ordered indices of each choropleth contour
	        // 2. offset them by the number of indices in previous choropleths
	        calculateContourIndices(choropleth).map(function (index) {
	          return index + offsets[choroplethIndex];
	        }) :
	        // 1. get triangulated indices for the internal areas
	        // 2. offset them by the number of indices in previous choropleths
	        calculateSurfaceIndices(choropleth).map(function (index) {
	          return index + offsets[choroplethIndex];
	        });
	      });
	
	      attribute.value = new IndexType((0, _lodash2.default)(indices));
	      attribute.target = _luma.GL.ELEMENT_ARRAY_BUFFER;
	      this.state.model.setVertexCount(attribute.value.length / attribute.size);
	    }
	  }, {
	    key: 'calculatePositionsFP64',
	    value: function calculatePositionsFP64(attribute) {
	      var vertices = (0, _lodash2.default)(this.state.choropleths);
	      attribute.value = new Float32Array(vertices.length / 3 * 4);
	      for (var index = 0; index < vertices.length / 3; index++) {
	        var _fp64ify = (0, _fp.fp64ify)(vertices[index * 3]);
	
	        var _fp64ify2 = _slicedToArray(_fp64ify, 2);
	
	        attribute.value[index * 4] = _fp64ify2[0];
	        attribute.value[index * 4 + 1] = _fp64ify2[1];
	
	        var _fp64ify3 = (0, _fp.fp64ify)(vertices[index * 3 + 1]);
	
	        var _fp64ify4 = _slicedToArray(_fp64ify3, 2);
	
	        attribute.value[index * 4 + 2] = _fp64ify4[0];
	        attribute.value[index * 4 + 3] = _fp64ify4[1];
	      }
	    }
	  }, {
	    key: 'calculateHeightsFP64',
	    value: function calculateHeightsFP64(attribute) {
	      var vertices = (0, _lodash2.default)(this.state.choropleths);
	      attribute.value = new Float32Array(vertices.length / 3 * 2);
	      for (var index = 0; index < vertices.length / 3; index++) {
	        var _fp64ify5 = (0, _fp.fp64ify)(vertices[index * 3 + 2]);
	
	        var _fp64ify6 = _slicedToArray(_fp64ify5, 2);
	
	        attribute.value[index * 2] = _fp64ify6[0];
	        attribute.value[index * 2 + 1] = _fp64ify6[1];
	      }
	    }
	  }, {
	    key: 'calculateColors',
	    value: function calculateColors(attribute) {
	      var _props = this.props,
	          features = _props.data.features,
	          getColor = _props.getColor;
	
	
	      var colors = this.state.choropleths.map(function (choropleth, choroplethIndex) {
	        var feature = features[choropleth.featureIndex];
	        var color = getColor(feature) || DEFAULT_COLOR;
	
	        if (isNaN(color[3])) {
	          color[3] = DEFAULT_COLOR[3];
	        }
	
	        return choropleth.map(function (polygon) {
	          return polygon.map(function (vertex) {
	            return color;
	          });
	        });
	      });
	
	      attribute.value = new Uint8Array((0, _lodash2.default)(colors));
	    }
	
	    // Override the default picking colors calculation
	
	  }, {
	    key: 'calculatePickingColors',
	    value: function calculatePickingColors(attribute) {
	      var _this3 = this;
	
	      var colors = this.state.choropleths.map(function (choropleth, choroplethIndex) {
	        var featureIndex = choropleth.featureIndex;
	
	        var color = _this3.props.drawContour ? _this3.nullPickingColor() : _this3.encodePickingColor(featureIndex);
	        return choropleth.map(function (polygon) {
	          return polygon.map(function (vertex) {
	            return color;
	          });
	        });
	      });
	
	      attribute.value = new Uint8Array((0, _lodash2.default)(colors));
	    }
	  }]);
	
	  return ChoroplethLayer64;
	}(_.Layer), _class.layerName = 'ChoroplethLayer64', _temp);
	
	/*
	 * converts list of features from a GeoJSON object to a list of GeoJSON
	 * polygon-style coordinates
	 * @param {Object} data - geojson object
	 * @returns {[Number,Number,Number][][][]} array of choropleths
	 */
	
	exports.default = ChoroplethLayer64;
	function extractChoropleths(data) {
	  var normalizedGeojson = (0, _geojsonNormalize2.default)(data);
	  var result = [];
	
	  normalizedGeojson.features.map(function (feature, featureIndex) {
	    var choropleths = featureToChoropleths(feature);
	    choropleths.forEach(function (choropleth) {
	      choropleth.featureIndex = featureIndex;
	    });
	    result.push.apply(result, _toConsumableArray(choropleths));
	  });
	  return result;
	}
	
	/*
	 * converts one GeoJSON features from object to a list of GeoJSON polygon-style
	 * coordinates
	 * @param {Object} data - geojson object
	 * @returns {[Number,Number,Number][][][]} array of choropleths
	 */
	function featureToChoropleths(feature) {
	  var _feature$geometry = feature.geometry,
	      coordinates = _feature$geometry.coordinates,
	      type = _feature$geometry.type;
	
	  var choropleths = void 0;
	
	  switch (type) {
	    case 'MultiPolygon':
	      choropleths = coordinates;
	      break;
	    case 'Polygon':
	      choropleths = [coordinates];
	      break;
	    case 'LineString':
	      // create a LineStringLayer for LineString and MultiLineString?
	      choropleths = [[coordinates]];
	      break;
	    case 'MultiLineString':
	      choropleths = coordinates.map(function (coords) {
	        return [coords];
	      });
	      break;
	    default:
	      choropleths = [];
	  }
	  return choropleths.map(function (choropleth) {
	    return choropleth.map(function (polygon) {
	      return polygon.map(function (coordinate) {
	        return [coordinate[0], coordinate[1], coordinate[2] || 0];
	      });
	    });
	  });
	}
	
	/*
	 * get vertex indices for drawing choropleth contour
	 * @param {[Number,Number,Number][][]} choropleth
	 * @returns {[Number]} indices
	 */
	function calculateContourIndices(choropleth) {
	  var offset = 0;
	
	  return choropleth.reduce(function (acc, polygon) {
	    var numVertices = polygon.length;
	
	    // use vertex pairs for gl.LINES => [0, 1, 1, 2, 2, ..., n-2, n-2, n-1]
	    var indices = [].concat(_toConsumableArray(acc), [offset]);
	    for (var i = 1; i < numVertices - 1; i++) {
	      indices.push(i + offset, i + offset);
	    }
	    indices.push(offset + numVertices - 1);
	
	    offset += numVertices;
	    return indices;
	  }, []);
	}
	
	/*
	 * get vertex indices for drawing choropleth mesh
	 * @param {[Number,Number,Number][][]} choropleth
	 * @returns {[Number]} indices
	 */
	function calculateSurfaceIndices(choropleth) {
	  var holes = null;
	
	  if (choropleth.length > 1) {
	    holes = choropleth.reduce(function (acc, polygon) {
	      return [].concat(_toConsumableArray(acc), [acc[acc.length - 1] + polygon.length]);
	    }, [0]).slice(1, choropleth.length);
	  }
	
	  return (0, _earcut2.default)((0, _lodash2.default)(choropleth), holes, 3);
	}
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extrudedChoroplethLayer = __webpack_require__(449);
	
	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_extrudedChoroplethLayer).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9sYXllcnMvZnA2NC9leHRydWRlZC1jaG9yb3BsZXRoLWxheWVyL2luZGV4LmpzIl0sIm5hbWVzIjpbImRlZmF1bHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OzREQUFRQSxPIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHtkZWZhdWx0IGFzIGRlZmF1bHR9IGZyb20gJy4vZXh0cnVkZWQtY2hvcm9wbGV0aC1sYXllci02NCc7XG4iXX0=

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _class, _temp; // Copyright (c) 2015 Uber Technologies, Inc.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the "Software"), to deal
	// in the Software without restriction, including without limitation the rights
	// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	// copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	// THE SOFTWARE.
	
	var _ = __webpack_require__(426);
	
	var _fp = __webpack_require__(403);
	
	var _luma = __webpack_require__(185);
	
	var _lodash = __webpack_require__(432);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _earcut = __webpack_require__(434);
	
	var _earcut2 = _interopRequireDefault(_earcut);
	
	var _glMatrix = __webpack_require__(229);
	
	var _path = __webpack_require__(214);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var DEFAULT_COLOR = [180, 180, 200];
	var DEFAULT_AMBIENT_COLOR = [255, 255, 255];
	var DEFAULT_POINTLIGHT_AMBIENT_COEFFICIENT = 0.1;
	var DEFAULT_POINTLIGHT_LOCATION = [40.4406, -79.9959, 100];
	var DEFAULT_POINTLIGHT_COLOR = [255, 255, 255];
	var DEFAULT_POINTLIGHT_ATTENUATION = 1.0;
	var DEFAULT_MATERIAL_SPECULAR_COLOR = [255, 255, 255];
	var DEFAULT_MATERIAL_SHININESS = 1;
	
	var ExtrudedChoroplethLayer64 = (_temp = _class = function (_Layer) {
	  _inherits(ExtrudedChoroplethLayer64, _Layer);
	
	  /**
	   * @classdesc
	   * Elevated Choropleth
	   *
	   * @class
	   * @param {object} props
	   * @param {bool} props.opacity=1 - default opacity is 1
	   * @param {bool} props.elevation=1 - Elevation scale
	   * @param {function} props.onHover - provides properties of the
	   *    selected building, together with the mouse event when mouse hovered
	   * @param {function} props.onClick - provide properties of the
	   *    selected building, together with the mouse event when mouse clicked
	   */
	  function ExtrudedChoroplethLayer64(_ref) {
	    var _ref$opacity = _ref.opacity,
	        opacity = _ref$opacity === undefined ? 1 : _ref$opacity,
	        _ref$elevation = _ref.elevation,
	        elevation = _ref$elevation === undefined ? 1 : _ref$elevation,
	        props = _objectWithoutProperties(_ref, ['opacity', 'elevation']);
	
	    _classCallCheck(this, ExtrudedChoroplethLayer64);
	
	    return _possibleConstructorReturn(this, (ExtrudedChoroplethLayer64.__proto__ || Object.getPrototypeOf(ExtrudedChoroplethLayer64)).call(this, _extends({
	      opacity: opacity,
	      elevation: elevation
	    }, props)));
	  }
	
	  _createClass(ExtrudedChoroplethLayer64, [{
	    key: 'initializeState',
	    value: function initializeState() {
	      var attributeManager = this.state.attributeManager;
	
	      attributeManager.add({
	        indices: { size: 1, isIndexed: true, update: this.calculateIndices },
	        positions: { size: 4, update: this.calculatePositions },
	        heights: { size: 2, update: this.calculateHeights },
	        normals: { size: 3, update: this.calculateNormals },
	        colors: { size: 3, update: this.calculateColors }
	      });
	
	      var gl = this.context.gl;
	
	      this.setState({
	        numInstances: 0,
	        model: this.getModel(gl)
	      });
	    }
	  }, {
	    key: 'updateState',
	    value: function updateState(_ref2) {
	      var changeFlags = _ref2.changeFlags;
	      var attributeManager = this.state.attributeManager;
	
	      if (changeFlags.dataChanged) {
	        this.extractExtrudedChoropleth();
	        attributeManager.invalidateAll();
	      }
	
	      var _props = this.props,
	          elevation = _props.elevation,
	          color = _props.color,
	          ambientColor = _props.ambientColor,
	          pointLightColor = _props.pointLightColor,
	          pointLightLocation = _props.pointLightLocation,
	          pointLightAmbientCoefficient = _props.pointLightAmbientCoefficient,
	          pointLightAttenuation = _props.pointLightAttenuation,
	          materialSpecularColor = _props.materialSpecularColor,
	          materialShininess = _props.materialShininess;
	
	
	      this.setUniforms({
	        elevation: Number.isFinite(elevation) ? elevation : 1,
	        colors: color || DEFAULT_COLOR,
	        uAmbientColor: ambientColor || DEFAULT_AMBIENT_COLOR,
	        uPointLightAmbientCoefficient: pointLightAmbientCoefficient || DEFAULT_POINTLIGHT_AMBIENT_COEFFICIENT,
	        uPointLightLocation: pointLightLocation || DEFAULT_POINTLIGHT_LOCATION,
	        uPointLightColor: pointLightColor || DEFAULT_POINTLIGHT_COLOR,
	        uPointLightAttenuation: pointLightAttenuation || DEFAULT_POINTLIGHT_ATTENUATION,
	        uMaterialSpecularColor: materialSpecularColor || DEFAULT_MATERIAL_SPECULAR_COLOR,
	        uMaterialShininess: materialShininess || DEFAULT_MATERIAL_SHININESS
	      });
	    }
	  }, {
	    key: 'draw',
	    value: function draw(_ref3) {
	      var uniforms = _ref3.uniforms;
	
	      this.state.model.render(_extends({}, uniforms));
	    }
	  }, {
	    key: 'pick',
	    value: function pick(opts) {
	      _get(ExtrudedChoroplethLayer64.prototype.__proto__ || Object.getPrototypeOf(ExtrudedChoroplethLayer64.prototype), 'pick', this).call(this, opts);
	      var info = opts.info;
	
	      var index = this.decodePickingColor(info.color);
	      var feature = index >= 0 ? this.props.data.features[index] : null;
	      info.feature = feature;
	      info.object = feature;
	    }
	  }, {
	    key: 'getShaders',
	    value: function getShaders() {
	      return {
	        vs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME extruded-choropleths-layer-vertex-shader\n\n// import MATH_FP64 from \'../shaderlib/fp64/math-fp64\';\n// import PROJECT from \'../shaderlib/project\';\n// import LIGHTING from \'../shaderlib/lighting\';\n\nuniform float opacity;\nuniform vec3 colors;\nuniform float elevation;\n\nuniform vec3 uAmbientColor;\nuniform float uPointLightAmbientCoefficient;\nuniform vec3 uPointLightLocation;\nuniform vec3 uPointLightColor;\nuniform float uPointLightAttenuation;\n\nuniform vec3 uMaterialSpecularColor;\nuniform float uMaterialShininess;\n\nattribute vec4 positions;\nattribute vec2 heights;\nattribute vec3 normals;\n\nvarying vec4 vColor;\n\nvec3 applyLighting(vec3 position_modelspace, vec3 normal_modelspace, vec3 color) {\n\n  vec3 pointLightLocation_modelspace = vec3(project_position(uPointLightLocation));\n  vec3 lightDirection = normalize(pointLightLocation_modelspace - position_modelspace);\n\n  vec3 ambient = uPointLightAmbientCoefficient * color / 255.0 * uAmbientColor / 255.0;\n\n  float diffuseCoefficient = max(dot(normal_modelspace, lightDirection), 0.0);\n  vec3 diffuse = diffuseCoefficient * uPointLightColor / 255. * color / 255.;\n\n  return ambient + uPointLightAttenuation * diffuse;\n}\n\nvoid main(void) {\n  vec2 projected_xy[2];\n  project_position_fp64(positions, projected_xy);\n  vec2 scaled_height = mul_fp64(heights, vec2(projectionPixelsPerUnit.x * elevation, 0.0));\n\n  vec2 vertex_pos_modelspace[4];\n  vertex_pos_modelspace[0] = projected_xy[0];\n  vertex_pos_modelspace[1] = projected_xy[1];\n  vertex_pos_modelspace[2] = sum_fp64(scaled_height, vec2(1.0, 0.0));\n  vertex_pos_modelspace[3] = vec2(1.0, 0.0);\n\n  gl_Position = project_to_clipspace_fp64(vertex_pos_modelspace);\n\n  vec3 color = applyLighting(\n  \tvec3(\n  \t  vertex_pos_modelspace[0].x,\n  \t  vertex_pos_modelspace[1].x,\n  \t  vertex_pos_modelspace[2].x),\n  \tnormals,\n  \tcolors\n  );\n  vColor = vec4(color, opacity);\n}\n// `;\n',
	        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* fragment shader for the building-layer */\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n}\n// `;\n',
	        fp64: true,
	        project64: true
	      };
	    }
	  }, {
	    key: 'getModel',
	    value: function getModel(gl) {
	      // Make sure we have 32 bit support
	      // TODO - this could be done automatically by luma in "draw"
	      // when it detects 32 bit indices
	      if (!gl.getExtension('OES_element_index_uint')) {
	        throw new Error('Extruded choropleth layer needs 32 bit indices');
	      }
	
	      // Buildings are 3d so depth test should be enabled
	      // TODO - it is a little heavy handed to have a layer set this
	      // Alternatively, check depth test and warn if not set, or add a prop
	      // setDepthTest that is on by default.
	      gl.enable(_luma.GL.DEPTH_TEST);
	      gl.depthFunc(_luma.GL.LEQUAL);
	
	      return new _luma.Model(_extends({
	        gl: gl,
	        id: this.props.id
	      }, (0, _.assembleShaders)(gl, this.getShaders()), {
	        geometry: new _luma.Geometry({
	          drawMode: this.props.drawWireframe ? _luma.GL.LINES : _luma.GL.TRIANGLES
	        }),
	        vertexCount: 0,
	        isIndexed: true
	      }));
	    }
	
	    // each top vertex is on 3 surfaces
	    // each bottom vertex is on 2 surfaces
	
	  }, {
	    key: 'calculatePositions',
	    value: function calculatePositions(attribute) {
	      var _this2 = this;
	
	      var positions = this.state.positions;
	
	      if (!positions) {
	        positions = (0, _lodash2.default)(this.state.groupedVertices.map(function (vertices) {
	          var topVertices = Array.prototype.concat.apply([], vertices);
	          var baseVertices = topVertices.map(function (v) {
	            return [v[0], v[1], 0];
	          });
	          return _this2.props.drawWireframe ? [topVertices, baseVertices] : [topVertices, topVertices, topVertices, baseVertices, baseVertices];
	        }));
	      }
	
	      attribute.value = new Float32Array(positions.length / 3 * 4);
	
	      for (var i = 0; i < positions.length / 3; i++) {
	        var _fp64ify = (0, _fp.fp64ify)(positions[i * 3 + 0]);
	
	        var _fp64ify2 = _slicedToArray(_fp64ify, 2);
	
	        attribute.value[i * 4 + 0] = _fp64ify2[0];
	        attribute.value[i * 4 + 1] = _fp64ify2[1];
	
	        var _fp64ify3 = (0, _fp.fp64ify)(positions[i * 3 + 1]);
	
	        var _fp64ify4 = _slicedToArray(_fp64ify3, 2);
	
	        attribute.value[i * 4 + 2] = _fp64ify4[0];
	        attribute.value[i * 4 + 3] = _fp64ify4[1];
	      }
	    }
	  }, {
	    key: 'calculateHeights',
	    value: function calculateHeights(attribute) {
	      var _this3 = this;
	
	      var positions = this.state.positions;
	
	      if (!positions) {
	        positions = (0, _lodash2.default)(this.state.groupedVertices.map(function (vertices) {
	          var topVertices = Array.prototype.concat.apply([], vertices);
	          var baseVertices = topVertices.map(function (v) {
	            return [v[0], v[1], 0];
	          });
	          return _this3.props.drawWireframe ? [topVertices, baseVertices] : [topVertices, topVertices, topVertices, baseVertices, baseVertices];
	        }));
	      }
	
	      attribute.value = new Float32Array(positions.length / 3 * 2);
	      for (var i = 0; i < positions.length / 3; i++) {
	        var _fp64ify5 = (0, _fp.fp64ify)(positions[i * 3 + 2] + 0.1);
	
	        var _fp64ify6 = _slicedToArray(_fp64ify5, 2);
	
	        attribute.value[i * 2 + 0] = _fp64ify6[0];
	        attribute.value[i * 2 + 1] = _fp64ify6[1];
	      }
	    }
	  }, {
	    key: 'calculateNormals',
	    value: function calculateNormals(attribute) {
	      var _this4 = this;
	
	      var up = [0, 1, 0];
	
	      var normals = this.state.groupedVertices.map(function (vertices, buildingIndex) {
	        var topNormals = new Array(countVertices(vertices)).fill(up);
	        var sideNormals = vertices.map(function (polygon) {
	          return _this4.calculateSideNormals(polygon);
	        });
	        var sideNormalsForward = sideNormals.map(function (n) {
	          return n[0];
	        });
	        var sideNormalsBackward = sideNormals.map(function (n) {
	          return n[1];
	        });
	
	        return _this4.props.drawWireframe ? [topNormals, topNormals] : [topNormals, sideNormalsForward, sideNormalsBackward, sideNormalsForward, sideNormalsBackward];
	      });
	
	      attribute.value = new Float32Array((0, _lodash2.default)(normals));
	    }
	  }, {
	    key: 'calculateSideNormals',
	    value: function calculateSideNormals(vertices) {
	      var numVertices = vertices.length;
	      var normals = [];
	
	      for (var i = 0; i < numVertices - 1; i++) {
	        var n = getNormal(vertices[i], vertices[i + 1]);
	        normals.push(n);
	      }
	
	      return [[].concat(normals, [normals[0]]), [normals[0]].concat(normals)];
	    }
	  }, {
	    key: 'calculateIndices',
	    value: function calculateIndices(attribute) {
	      var _this5 = this;
	
	      // adjust index offset for multiple buildings
	      var multiplier = this.props.drawWireframe ? 2 : 5;
	      var offsets = this.state.groupedVertices.reduce(function (acc, vertices) {
	        return [].concat(_toConsumableArray(acc), [acc[acc.length - 1] + countVertices(vertices) * multiplier]);
	      }, [0]);
	
	      var indices = this.state.groupedVertices.map(function (vertices, buildingIndex) {
	        return _this5.props.drawWireframe ?
	        // 1. get sequentially ordered indices of each building wireframe
	        // 2. offset them by the number of indices in previous buildings
	        _this5.calculateContourIndices(vertices, offsets[buildingIndex]) :
	        // 1. get triangulated indices for the internal areas
	        // 2. offset them by the number of indices in previous buildings
	        _this5.calculateSurfaceIndices(vertices, offsets[buildingIndex]);
	      });
	
	      attribute.value = new Uint32Array((0, _lodash2.default)(indices));
	      attribute.target = _luma.GL.ELEMENT_ARRAY_BUFFER;
	      this.state.model.setVertexCount(attribute.value.length / attribute.size);
	    }
	  }, {
	    key: 'calculateColors',
	    value: function calculateColors(attribute) {
	      var _this6 = this;
	
	      var colors = this.state.groupedVertices.map(function (vertices, buildingIndex) {
	        var color = _this6.props.color;
	
	        var baseColor = Array.isArray(color) ? color[0] : color;
	        var topColor = Array.isArray(color) ? color[color.length - 1] : color;
	        var numVertices = countVertices(vertices);
	
	        var topColors = new Array(numVertices).fill(topColor);
	        var baseColors = new Array(numVertices).fill(baseColor);
	        return _this6.props.drawWireframe ? [topColors, baseColors] : [topColors, topColors, topColors, baseColors, baseColors];
	      });
	      attribute.value = new Float32Array((0, _lodash2.default)(colors));
	    }
	  }, {
	    key: 'extractExtrudedChoropleth',
	    value: function extractExtrudedChoropleth() {
	      var _this7 = this;
	
	      var data = this.props.data;
	      // Generate a flat list of buildings
	
	      this.state.buildings = [];
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        var _loop = function _loop() {
	          var _state$buildings;
	
	          var building = _step.value;
	          var properties = building.properties,
	              _building$geometry = building.geometry,
	              coordinates = _building$geometry.coordinates,
	              type = _building$geometry.type;
	
	          if (!properties.height) {
	            properties.height = Math.random() * 1000;
	          }
	          switch (type) {
	            case 'MultiPolygon':
	              // Maps to multiple buildings
	              var buildings = coordinates.map(function (coords) {
	                return { coordinates: coords, properties: properties };
	              });
	              (_state$buildings = _this7.state.buildings).push.apply(_state$buildings, _toConsumableArray(buildings));
	              break;
	            case 'Polygon':
	              // Maps to a single building
	              _this7.state.buildings.push({ coordinates: coordinates, properties: properties });
	              break;
	            default:
	            // We are ignoring Points for now
	          }
	        };
	
	        for (var _iterator = data.features[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          _loop();
	        }
	
	        // Generate vertices for the building list
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	
	      this.state.groupedVertices = this.state.buildings.map(function (building) {
	        return building.coordinates.map(function (polygon) {
	          return polygon.map(function (coordinate) {
	            return [coordinate[0], coordinate[1], building.properties.height || 10];
	          });
	        });
	      });
	    }
	  }, {
	    key: 'calculateContourIndices',
	    value: function calculateContourIndices(vertices, offset) {
	      var stride = countVertices(vertices);
	
	      return vertices.map(function (polygon) {
	        var indices = [offset];
	        var numVertices = polygon.length;
	
	        // building top
	        // use vertex pairs for GL.LINES => [0, 1, 1, 2, 2, ..., n-1, n-1, 0]
	        for (var i = 1; i < numVertices - 1; i++) {
	          indices.push(i + offset, i + offset);
	        }
	        indices.push(offset);
	
	        // building sides
	        for (var _i = 0; _i < numVertices - 1; _i++) {
	          indices.push(_i + offset, _i + stride + offset);
	        }
	
	        offset += numVertices;
	        return indices;
	      });
	    }
	  }, {
	    key: 'calculateSurfaceIndices',
	    value: function calculateSurfaceIndices(vertices, offset) {
	      var stride = countVertices(vertices);
	      var holes = null;
	      var quad = [[0, 1], [0, 3], [1, 2], [1, 2], [0, 3], [1, 4]];
	
	      if (vertices.length > 1) {
	        holes = vertices.reduce(function (acc, polygon) {
	          return [].concat(_toConsumableArray(acc), [acc[acc.length - 1] + polygon.length]);
	        }, [0]).slice(1, vertices.length);
	      }
	
	      var topIndices = (0, _earcut2.default)((0, _lodash2.default)(vertices), holes, 3).map(function (index) {
	        return index + offset;
	      });
	
	      var sideIndices = vertices.map(function (polygon) {
	        var numVertices = polygon.length;
	        // building top
	        var indices = [];
	
	        // building sides
	        for (var i = 0; i < numVertices - 1; i++) {
	          indices.push.apply(indices, _toConsumableArray(drawRectangle(i)));
	        }
	
	        offset += numVertices;
	        return indices;
	      });
	
	      return [topIndices, sideIndices];
	
	      function drawRectangle(i) {
	        return quad.map(function (v) {
	          return i + v[0] + stride * v[1] + offset;
	        });
	      }
	    }
	  }]);
	
	  return ExtrudedChoroplethLayer64;
	}(_.Layer), _class.layerName = 'ExtrudedChoroplethLayer64', _temp);
	
	/*
	 * helpers
	 */
	// get normal vector of line segment
	
	exports.default = ExtrudedChoroplethLayer64;
	function getNormal(p1, p2) {
	  if (p1[0] === p2[0] && p1[1] === p2[1]) {
	    return [1, 0, 0];
	  }
	
	  var degrees2radians = Math.PI / 180;
	
	  var lon1 = degrees2radians * p1[0];
	  var lon2 = degrees2radians * p2[0];
	  var lat1 = degrees2radians * p1[1];
	  var lat2 = degrees2radians * p2[1];
	
	  var a = Math.sin(lon2 - lon1) * Math.cos(lat2);
	  var b = Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);
	
	  return _glMatrix.vec3.normalize([], [b, 0, -a]);
	}
	
	// count number of vertices in geojson polygon
	function countVertices(vertices) {
	  return vertices.reduce(function (count, polygon) {
	    return count + polygon.length;
	  }, 0);
	}
	//# sourceMappingURL=data:application/json;base64,

/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _lineLayer = __webpack_require__(451);
	
	Object.defineProperty(exports, 'default', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_lineLayer).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9sYXllcnMvZnA2NC9saW5lLWxheWVyL2luZGV4LmpzIl0sIm5hbWVzIjpbImRlZmF1bHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OzhDQUFRQSxPIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHtkZWZhdWx0IGFzIGRlZmF1bHR9IGZyb20gJy4vbGluZS1sYXllci02NCc7XG4iXX0=

/***/ },
/* 451 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _class, _temp; // Copyright (c) 2015 Uber Technologies, Inc.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the "Software"), to deal
	// in the Software without restriction, including without limitation the rights
	// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	// copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	// THE SOFTWARE.
	
	var _ = __webpack_require__(426);
	
	var _fp = __webpack_require__(403);
	
	var _luma = __webpack_require__(185);
	
	var _path = __webpack_require__(214);
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var DEFAULT_COLOR = [0, 255, 0, 255];
	
	var defaultGetSourcePosition = function defaultGetSourcePosition(x) {
	  return x.sourcePosition;
	};
	var defaultGetTargetPosition = function defaultGetTargetPosition(x) {
	  return x.targetPosition;
	};
	var defaultGetColor = function defaultGetColor(x) {
	  return x.color || DEFAULT_COLOR;
	};
	
	var LineLayer64 = (_temp = _class = function (_Layer) {
	  _inherits(LineLayer64, _Layer);
	
	  /**
	   * @class
	   * @param {object} opts
	   */
	  function LineLayer64() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$getSourcePositio = _ref.getSourcePosition,
	        getSourcePosition = _ref$getSourcePositio === undefined ? defaultGetSourcePosition : _ref$getSourcePositio,
	        _ref$getTargetPositio = _ref.getTargetPosition,
	        getTargetPosition = _ref$getTargetPositio === undefined ? defaultGetTargetPosition : _ref$getTargetPositio,
	        _ref$getColor = _ref.getColor,
	        getColor = _ref$getColor === undefined ? defaultGetColor : _ref$getColor,
	        _ref$strokeWidth = _ref.strokeWidth,
	        strokeWidth = _ref$strokeWidth === undefined ? 1 : _ref$strokeWidth,
	        opts = _objectWithoutProperties(_ref, ['getSourcePosition', 'getTargetPosition', 'getColor', 'strokeWidth']);
	
	    _classCallCheck(this, LineLayer64);
	
	    return _possibleConstructorReturn(this, (LineLayer64.__proto__ || Object.getPrototypeOf(LineLayer64)).call(this, _extends({
	      strokeWidth: strokeWidth,
	      getSourcePosition: getSourcePosition,
	      getTargetPosition: getTargetPosition,
	      getColor: getColor
	    }, opts)));
	  }
	
	  _createClass(LineLayer64, [{
	    key: 'initializeState',
	    value: function initializeState() {
	      var gl = this.context.gl;
	
	      this.setState({ model: this.createModel(gl) });
	
	      var attributeManager = this.state.attributeManager;
	
	      attributeManager.addInstanced({
	        instanceSourcePositionsFP64: {
	          size: 4,
	          update: this.calculateInstanceSourcePositions
	        },
	        instanceTargetPositionsFP64: {
	          size: 4,
	          update: this.calculateInstanceTargetPositions
	        },
	        instanceElevations: {
	          size: 2,
	          update: this.calculateInstanceElevations
	        },
	        instanceColors: {
	          size: 4,
	          type: _luma.GL.UNSIGNED_BYTE,
	          update: this.calculateInstanceColors
	        }
	      });
	    }
	  }, {
	    key: 'draw',
	    value: function draw(_ref2) {
	      var uniforms = _ref2.uniforms;
	      var gl = this.context.gl;
	
	      var lineWidth = this.screenToDevicePixels(this.props.strokeWidth);
	      gl.lineWidth(lineWidth);
	      this.state.model.render(uniforms);
	      // Setting line width back to 1 is here to workaround a Google Chrome bug
	      // gl.clear() and gl.isEnabled() will return GL_INVALID_VALUE even with
	      // correct parameter
	      // This is not happening on Safari and Firefox
	      gl.lineWidth(1.0);
	    }
	  }, {
	    key: 'getShaders',
	    value: function getShaders() {
	      return {
	        vs: '// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME line-layer-64-vertex-shader\n\nattribute vec3 positions;\nattribute vec4 instanceSourcePositionsFP64;\nattribute vec4 instanceTargetPositionsFP64;\nattribute vec2 instanceElevations;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float renderPickingBuffer;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  // Position\n  vec2 projectedSourceCoord[2];\n  project_position_fp64(instanceSourcePositionsFP64, projectedSourceCoord);\n  vec2 projectedTargetCoord[2];\n  project_position_fp64(instanceTargetPositionsFP64, projectedTargetCoord);\n\n  // linear interpolation of source & target to pick right coord\n  float segmentIndex = positions.x;\n  vec2 mixed_temp[2];\n\n  vec2_mix_fp64(projectedSourceCoord, projectedTargetCoord, segmentIndex, mixed_temp);\n\n  float mixedElevation =\n    mix(instanceElevations.x, instanceElevations.y, segmentIndex);\n\n  vec2 vertex_pos_modelspace[4];\n\n  vertex_pos_modelspace[0] = mixed_temp[0];\n  vertex_pos_modelspace[1] = mixed_temp[1];\n  vertex_pos_modelspace[2] = vec2(project_scale(mixedElevation), 0.0);\n  vertex_pos_modelspace[3] = vec2(1.0, 0.0);\n\n  gl_Position = project_to_clipspace_fp64(vertex_pos_modelspace);\n\n  // Color\n  vec4 color = vec4(instanceColors.rgb, instanceColors.a * opacity) / 255.;\n  vec4 pickingColor = vec4(instancePickingColors / 255., 1.);\n\n  vColor = mix(\n    color,\n    pickingColor,\n    renderPickingBuffer\n  );\n}\n',
	        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n#define SHADER_NAME line-layer-fragment-shader\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n}\n',
	        fp64: true,
	        project64: true
	      };
	    }
	  }, {
	    key: 'createModel',
	    value: function createModel(gl) {
	      var positions = [0, 0, 0, 1, 1, 1];
	      return new _luma.Model(_extends({
	        gl: gl,
	        id: this.props.id
	      }, (0, _.assembleShaders)(gl, this.getShaders()), {
	        geometry: new _luma.Geometry({
	          drawMode: _luma.GL.LINE_STRIP,
	          positions: new Float32Array(positions)
	        }),
	        isInstanced: true
	      }));
	    }
	  }, {
	    key: 'calculateInstanceSourcePositions',
	    value: function calculateInstanceSourcePositions(attribute) {
	      var _props = this.props,
	          data = _props.data,
	          getSourcePosition = _props.getSourcePosition;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var object = _step.value;
	
	          var sourcePosition = getSourcePosition(object);
	
	          var _fp64ify = (0, _fp.fp64ify)(sourcePosition[0]);
	
	          var _fp64ify2 = _slicedToArray(_fp64ify, 2);
	
	          value[i + 0] = _fp64ify2[0];
	          value[i + 1] = _fp64ify2[1];
	
	          var _fp64ify3 = (0, _fp.fp64ify)(sourcePosition[1]);
	
	          var _fp64ify4 = _slicedToArray(_fp64ify3, 2);
	
	          value[i + 2] = _fp64ify4[0];
	          value[i + 3] = _fp64ify4[1];
	
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'calculateInstanceTargetPositions',
	    value: function calculateInstanceTargetPositions(attribute) {
	      var _props2 = this.props,
	          data = _props2.data,
	          getTargetPosition = _props2.getTargetPosition;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;
	
	      try {
	        for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var object = _step2.value;
	
	          var targetPosition = getTargetPosition(object);
	
	          var _fp64ify5 = (0, _fp.fp64ify)(targetPosition[0]);
	
	          var _fp64ify6 = _slicedToArray(_fp64ify5, 2);
	
	          value[i + 0] = _fp64ify6[0];
	          value[i + 1] = _fp64ify6[1];
	
	          var _fp64ify7 = (0, _fp.fp64ify)(targetPosition[1]);
	
	          var _fp64ify8 = _slicedToArray(_fp64ify7, 2);
	
	          value[i + 2] = _fp64ify8[0];
	          value[i + 3] = _fp64ify8[1];
	
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2.return) {
	            _iterator2.return();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'calculateInstanceElevations',
	    value: function calculateInstanceElevations(attribute) {
	      var _props3 = this.props,
	          data = _props3.data,
	          getSourcePosition = _props3.getSourcePosition,
	          getTargetPosition = _props3.getTargetPosition;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion3 = true;
	      var _didIteratorError3 = false;
	      var _iteratorError3 = undefined;
	
	      try {
	        for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	          var object = _step3.value;
	
	          var sourcePosition = getSourcePosition(object);
	          var targetPosition = getTargetPosition(object);
	          value[i + 0] = sourcePosition[2] || 0;
	          value[i + 1] = targetPosition[2] || 0;
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError3 = true;
	        _iteratorError3 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion3 && _iterator3.return) {
	            _iterator3.return();
	          }
	        } finally {
	          if (_didIteratorError3) {
	            throw _iteratorError3;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'calculateInstanceColors',
	    value: function calculateInstanceColors(attribute) {
	      var _props4 = this.props,
	          data = _props4.data,
	          getColor = _props4.getColor;
	      var value = attribute.value,
	          size = attribute.size;
	
	      var i = 0;
	      var _iteratorNormalCompletion4 = true;
	      var _didIteratorError4 = false;
	      var _iteratorError4 = undefined;
	
	      try {
	        for (var _iterator4 = data[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
	          var object = _step4.value;
	
	          var color = getColor(object);
	          value[i + 0] = color[0];
	          value[i + 1] = color[1];
	          value[i + 2] = color[2];
	          value[i + 3] = isNaN(color[3]) ? DEFAULT_COLOR[3] : color[3];
	          i += size;
	        }
	      } catch (err) {
	        _didIteratorError4 = true;
	        _iteratorError4 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion4 && _iterator4.return) {
	            _iterator4.return();
	          }
	        } finally {
	          if (_didIteratorError4) {
	            throw _iteratorError4;
	          }
	        }
	      }
	    }
	  }]);
	
	  return LineLayer64;
	}(_.Layer), _class.layerName = 'LineLayer64', _temp);
	exports.default = LineLayer64;
	//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9sYXllcnMvZnA2NC9saW5lLWxheWVyL2xpbmUtbGF5ZXItNjQuanMiXSwibmFtZXMiOlsiREVGQVVMVF9DT0xPUiIsImRlZmF1bHRHZXRTb3VyY2VQb3NpdGlvbiIsIngiLCJzb3VyY2VQb3NpdGlvbiIsImRlZmF1bHRHZXRUYXJnZXRQb3NpdGlvbiIsInRhcmdldFBvc2l0aW9uIiwiZGVmYXVsdEdldENvbG9yIiwiY29sb3IiLCJMaW5lTGF5ZXI2NCIsImdldFNvdXJjZVBvc2l0aW9uIiwiZ2V0VGFyZ2V0UG9zaXRpb24iLCJnZXRDb2xvciIsInN0cm9rZVdpZHRoIiwib3B0cyIsImdsIiwiY29udGV4dCIsInNldFN0YXRlIiwibW9kZWwiLCJjcmVhdGVNb2RlbCIsImF0dHJpYnV0ZU1hbmFnZXIiLCJzdGF0ZSIsImFkZEluc3RhbmNlZCIsImluc3RhbmNlU291cmNlUG9zaXRpb25zRlA2NCIsInNpemUiLCJ1cGRhdGUiLCJjYWxjdWxhdGVJbnN0YW5jZVNvdXJjZVBvc2l0aW9ucyIsImluc3RhbmNlVGFyZ2V0UG9zaXRpb25zRlA2NCIsImNhbGN1bGF0ZUluc3RhbmNlVGFyZ2V0UG9zaXRpb25zIiwiaW5zdGFuY2VFbGV2YXRpb25zIiwiY2FsY3VsYXRlSW5zdGFuY2VFbGV2YXRpb25zIiwiaW5zdGFuY2VDb2xvcnMiLCJ0eXBlIiwiVU5TSUdORURfQllURSIsImNhbGN1bGF0ZUluc3RhbmNlQ29sb3JzIiwidW5pZm9ybXMiLCJsaW5lV2lkdGgiLCJzY3JlZW5Ub0RldmljZVBpeGVscyIsInByb3BzIiwicmVuZGVyIiwidnMiLCJmcyIsImZwNjQiLCJwcm9qZWN0NjQiLCJwb3NpdGlvbnMiLCJpZCIsImdldFNoYWRlcnMiLCJnZW9tZXRyeSIsImRyYXdNb2RlIiwiTElORV9TVFJJUCIsIkZsb2F0MzJBcnJheSIsImlzSW5zdGFuY2VkIiwiYXR0cmlidXRlIiwiZGF0YSIsInZhbHVlIiwiaSIsIm9iamVjdCIsImlzTmFOIiwibGF5ZXJOYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O21CQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUVBOzs7Ozs7Ozs7O0FBRUEsSUFBTUEsZ0JBQWdCLENBQUMsQ0FBRCxFQUFJLEdBQUosRUFBUyxDQUFULEVBQVksR0FBWixDQUF0Qjs7QUFFQSxJQUFNQywyQkFBMkIsU0FBM0JBLHdCQUEyQjtBQUFBLFNBQUtDLEVBQUVDLGNBQVA7QUFBQSxDQUFqQztBQUNBLElBQU1DLDJCQUEyQixTQUEzQkEsd0JBQTJCO0FBQUEsU0FBS0YsRUFBRUcsY0FBUDtBQUFBLENBQWpDO0FBQ0EsSUFBTUMsa0JBQWtCLFNBQWxCQSxlQUFrQjtBQUFBLFNBQUtKLEVBQUVLLEtBQUYsSUFBV1AsYUFBaEI7QUFBQSxDQUF4Qjs7SUFFcUJRLFc7OztBQUluQjs7OztBQUlBLHlCQU1RO0FBQUEsbUZBQUosRUFBSTtBQUFBLHFDQUxOQyxpQkFLTTtBQUFBLFFBTE5BLGlCQUtNLHlDQUxjUix3QkFLZDtBQUFBLHFDQUpOUyxpQkFJTTtBQUFBLFFBSk5BLGlCQUlNLHlDQUpjTix3QkFJZDtBQUFBLDZCQUhOTyxRQUdNO0FBQUEsUUFITkEsUUFHTSxpQ0FIS0wsZUFHTDtBQUFBLGdDQUZOTSxXQUVNO0FBQUEsUUFGTkEsV0FFTSxvQ0FGUSxDQUVSO0FBQUEsUUFESEMsSUFDRzs7QUFBQTs7QUFBQTtBQUVKRCw4QkFGSTtBQUdKSCwwQ0FISTtBQUlKQywwQ0FKSTtBQUtKQztBQUxJLE9BTURFLElBTkM7QUFRUDs7OztzQ0FFaUI7QUFBQSxVQUNUQyxFQURTLEdBQ0gsS0FBS0MsT0FERixDQUNURCxFQURTOztBQUVoQixXQUFLRSxRQUFMLENBQWMsRUFBQ0MsT0FBTyxLQUFLQyxXQUFMLENBQWlCSixFQUFqQixDQUFSLEVBQWQ7O0FBRmdCLFVBSVRLLGdCQUpTLEdBSVcsS0FBS0MsS0FKaEIsQ0FJVEQsZ0JBSlM7O0FBS2hCQSx1QkFBaUJFLFlBQWpCLENBQThCO0FBQzVCQyxxQ0FBNkI7QUFDM0JDLGdCQUFNLENBRHFCO0FBRTNCQyxrQkFBUSxLQUFLQztBQUZjLFNBREQ7QUFLNUJDLHFDQUE2QjtBQUMzQkgsZ0JBQU0sQ0FEcUI7QUFFM0JDLGtCQUFRLEtBQUtHO0FBRmMsU0FMRDtBQVM1QkMsNEJBQW9CO0FBQ2xCTCxnQkFBTSxDQURZO0FBRWxCQyxrQkFBUSxLQUFLSztBQUZLLFNBVFE7QUFhNUJDLHdCQUFnQjtBQUNkUCxnQkFBTSxDQURRO0FBRWRRLGdCQUFNLFNBQUdDLGFBRks7QUFHZFIsa0JBQVEsS0FBS1M7QUFIQztBQWJZLE9BQTlCO0FBbUJEOzs7Z0NBRWdCO0FBQUEsVUFBWEMsUUFBVyxTQUFYQSxRQUFXO0FBQUEsVUFDUnBCLEVBRFEsR0FDRixLQUFLQyxPQURILENBQ1JELEVBRFE7O0FBRWYsVUFBTXFCLFlBQVksS0FBS0Msb0JBQUwsQ0FBMEIsS0FBS0MsS0FBTCxDQUFXekIsV0FBckMsQ0FBbEI7QUFDQUUsU0FBR3FCLFNBQUgsQ0FBYUEsU0FBYjtBQUNBLFdBQUtmLEtBQUwsQ0FBV0gsS0FBWCxDQUFpQnFCLE1BQWpCLENBQXdCSixRQUF4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FwQixTQUFHcUIsU0FBSCxDQUFhLEdBQWI7QUFDRDs7O2lDQUVZO0FBQ1gsYUFBTztBQUNMSSxnbEZBREs7QUFFTEMsNHlDQUZLO0FBR0xDLGNBQU0sSUFIRDtBQUlMQyxtQkFBVztBQUpOLE9BQVA7QUFNRDs7O2dDQUVXNUIsRSxFQUFJO0FBQ2QsVUFBTTZCLFlBQVksQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsRUFBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixDQUFsQjtBQUNBLGFBQU87QUFDTDdCLGNBREs7QUFFTDhCLFlBQUksS0FBS1AsS0FBTCxDQUFXTztBQUZWLFNBR0YsdUJBQWdCOUIsRUFBaEIsRUFBb0IsS0FBSytCLFVBQUwsRUFBcEIsQ0FIRTtBQUlMQyxrQkFBVSxtQkFBYTtBQUNyQkMsb0JBQVUsU0FBR0MsVUFEUTtBQUVyQkwscUJBQVcsSUFBSU0sWUFBSixDQUFpQk4sU0FBakI7QUFGVSxTQUFiLENBSkw7QUFRTE8scUJBQWE7QUFSUixTQUFQO0FBVUQ7OztxREFFZ0NDLFMsRUFBVztBQUFBLG1CQUNSLEtBQUtkLEtBREc7QUFBQSxVQUNuQ2UsSUFEbUMsVUFDbkNBLElBRG1DO0FBQUEsVUFDN0IzQyxpQkFENkIsVUFDN0JBLGlCQUQ2QjtBQUFBLFVBRW5DNEMsS0FGbUMsR0FFcEJGLFNBRm9CLENBRW5DRSxLQUZtQztBQUFBLFVBRTVCOUIsSUFGNEIsR0FFcEI0QixTQUZvQixDQUU1QjVCLElBRjRCOztBQUcxQyxVQUFJK0IsSUFBSSxDQUFSO0FBSDBDO0FBQUE7QUFBQTs7QUFBQTtBQUkxQyw2QkFBcUJGLElBQXJCLDhIQUEyQjtBQUFBLGNBQWhCRyxNQUFnQjs7QUFDekIsY0FBTXBELGlCQUFpQk0sa0JBQWtCOEMsTUFBbEIsQ0FBdkI7O0FBRHlCLHlCQUVNLGlCQUFRcEQsZUFBZSxDQUFmLENBQVIsQ0FGTjs7QUFBQTs7QUFFeEJrRCxnQkFBTUMsSUFBSSxDQUFWLENBRndCO0FBRVZELGdCQUFNQyxJQUFJLENBQVYsQ0FGVTs7QUFBQSwwQkFHTSxpQkFBUW5ELGVBQWUsQ0FBZixDQUFSLENBSE47O0FBQUE7O0FBR3hCa0QsZ0JBQU1DLElBQUksQ0FBVixDQUh3QjtBQUdWRCxnQkFBTUMsSUFBSSxDQUFWLENBSFU7O0FBSXpCQSxlQUFLL0IsSUFBTDtBQUNEO0FBVHlDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFVM0M7OztxREFFZ0M0QixTLEVBQVc7QUFBQSxvQkFDUixLQUFLZCxLQURHO0FBQUEsVUFDbkNlLElBRG1DLFdBQ25DQSxJQURtQztBQUFBLFVBQzdCMUMsaUJBRDZCLFdBQzdCQSxpQkFENkI7QUFBQSxVQUVuQzJDLEtBRm1DLEdBRXBCRixTQUZvQixDQUVuQ0UsS0FGbUM7QUFBQSxVQUU1QjlCLElBRjRCLEdBRXBCNEIsU0FGb0IsQ0FFNUI1QixJQUY0Qjs7QUFHMUMsVUFBSStCLElBQUksQ0FBUjtBQUgwQztBQUFBO0FBQUE7O0FBQUE7QUFJMUMsOEJBQXFCRixJQUFyQixtSUFBMkI7QUFBQSxjQUFoQkcsTUFBZ0I7O0FBQ3pCLGNBQU1sRCxpQkFBaUJLLGtCQUFrQjZDLE1BQWxCLENBQXZCOztBQUR5QiwwQkFFTSxpQkFBUWxELGVBQWUsQ0FBZixDQUFSLENBRk47O0FBQUE7O0FBRXhCZ0QsZ0JBQU1DLElBQUksQ0FBVixDQUZ3QjtBQUVWRCxnQkFBTUMsSUFBSSxDQUFWLENBRlU7O0FBQUEsMEJBR00saUJBQVFqRCxlQUFlLENBQWYsQ0FBUixDQUhOOztBQUFBOztBQUd4QmdELGdCQUFNQyxJQUFJLENBQVYsQ0FId0I7QUFHVkQsZ0JBQU1DLElBQUksQ0FBVixDQUhVOztBQUl6QkEsZUFBSy9CLElBQUw7QUFDRDtBQVR5QztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBVTNDOzs7Z0RBRTJCNEIsUyxFQUFXO0FBQUEsb0JBQ2dCLEtBQUtkLEtBRHJCO0FBQUEsVUFDOUJlLElBRDhCLFdBQzlCQSxJQUQ4QjtBQUFBLFVBQ3hCM0MsaUJBRHdCLFdBQ3hCQSxpQkFEd0I7QUFBQSxVQUNMQyxpQkFESyxXQUNMQSxpQkFESztBQUFBLFVBRTlCMkMsS0FGOEIsR0FFZkYsU0FGZSxDQUU5QkUsS0FGOEI7QUFBQSxVQUV2QjlCLElBRnVCLEdBRWY0QixTQUZlLENBRXZCNUIsSUFGdUI7O0FBR3JDLFVBQUkrQixJQUFJLENBQVI7QUFIcUM7QUFBQTtBQUFBOztBQUFBO0FBSXJDLDhCQUFxQkYsSUFBckIsbUlBQTJCO0FBQUEsY0FBaEJHLE1BQWdCOztBQUN6QixjQUFNcEQsaUJBQWlCTSxrQkFBa0I4QyxNQUFsQixDQUF2QjtBQUNBLGNBQU1sRCxpQkFBaUJLLGtCQUFrQjZDLE1BQWxCLENBQXZCO0FBQ0FGLGdCQUFNQyxJQUFJLENBQVYsSUFBZW5ELGVBQWUsQ0FBZixLQUFxQixDQUFwQztBQUNBa0QsZ0JBQU1DLElBQUksQ0FBVixJQUFlakQsZUFBZSxDQUFmLEtBQXFCLENBQXBDO0FBQ0FpRCxlQUFLL0IsSUFBTDtBQUNEO0FBVm9DO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFXdEM7Ozs0Q0FFdUI0QixTLEVBQVc7QUFBQSxvQkFDUixLQUFLZCxLQURHO0FBQUEsVUFDMUJlLElBRDBCLFdBQzFCQSxJQUQwQjtBQUFBLFVBQ3BCekMsUUFEb0IsV0FDcEJBLFFBRG9CO0FBQUEsVUFFMUIwQyxLQUYwQixHQUVYRixTQUZXLENBRTFCRSxLQUYwQjtBQUFBLFVBRW5COUIsSUFGbUIsR0FFWDRCLFNBRlcsQ0FFbkI1QixJQUZtQjs7QUFHakMsVUFBSStCLElBQUksQ0FBUjtBQUhpQztBQUFBO0FBQUE7O0FBQUE7QUFJakMsOEJBQXFCRixJQUFyQixtSUFBMkI7QUFBQSxjQUFoQkcsTUFBZ0I7O0FBQ3pCLGNBQU1oRCxRQUFRSSxTQUFTNEMsTUFBVCxDQUFkO0FBQ0FGLGdCQUFNQyxJQUFJLENBQVYsSUFBZS9DLE1BQU0sQ0FBTixDQUFmO0FBQ0E4QyxnQkFBTUMsSUFBSSxDQUFWLElBQWUvQyxNQUFNLENBQU4sQ0FBZjtBQUNBOEMsZ0JBQU1DLElBQUksQ0FBVixJQUFlL0MsTUFBTSxDQUFOLENBQWY7QUFDQThDLGdCQUFNQyxJQUFJLENBQVYsSUFBZUUsTUFBTWpELE1BQU0sQ0FBTixDQUFOLElBQWtCUCxjQUFjLENBQWQsQ0FBbEIsR0FBcUNPLE1BQU0sQ0FBTixDQUFwRDtBQUNBK0MsZUFBSy9CLElBQUw7QUFDRDtBQVhnQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBWWxDOzs7O21CQXBJTWtDLFMsR0FBWSxhO2tCQUZBakQsVyIsImZpbGUiOiJsaW5lLWxheWVyLTY0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDE1IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IHtMYXllciwgYXNzZW1ibGVTaGFkZXJzfSBmcm9tICcuLi8uLi8uLic7XG5pbXBvcnQge2ZwNjRpZnl9IGZyb20gJy4uLy4uLy4uL2xpYi91dGlscy9mcDY0JztcbmltcG9ydCB7R0wsIE1vZGVsLCBHZW9tZXRyeX0gZnJvbSAnbHVtYS5nbCc7XG5pbXBvcnQge3JlYWRGaWxlU3luY30gZnJvbSAnZnMnO1xuaW1wb3J0IHtqb2lufSBmcm9tICdwYXRoJztcblxuY29uc3QgREVGQVVMVF9DT0xPUiA9IFswLCAyNTUsIDAsIDI1NV07XG5cbmNvbnN0IGRlZmF1bHRHZXRTb3VyY2VQb3NpdGlvbiA9IHggPT4geC5zb3VyY2VQb3NpdGlvbjtcbmNvbnN0IGRlZmF1bHRHZXRUYXJnZXRQb3NpdGlvbiA9IHggPT4geC50YXJnZXRQb3NpdGlvbjtcbmNvbnN0IGRlZmF1bHRHZXRDb2xvciA9IHggPT4geC5jb2xvciB8fCBERUZBVUxUX0NPTE9SO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMaW5lTGF5ZXI2NCBleHRlbmRzIExheWVyIHtcblxuICBzdGF0aWMgbGF5ZXJOYW1lID0gJ0xpbmVMYXllcjY0JztcblxuICAvKipcbiAgICogQGNsYXNzXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRzXG4gICAqL1xuICBjb25zdHJ1Y3Rvcih7XG4gICAgZ2V0U291cmNlUG9zaXRpb24gPSBkZWZhdWx0R2V0U291cmNlUG9zaXRpb24sXG4gICAgZ2V0VGFyZ2V0UG9zaXRpb24gPSBkZWZhdWx0R2V0VGFyZ2V0UG9zaXRpb24sXG4gICAgZ2V0Q29sb3IgPSBkZWZhdWx0R2V0Q29sb3IsXG4gICAgc3Ryb2tlV2lkdGggPSAxLFxuICAgIC4uLm9wdHNcbiAgfSA9IHt9KSB7XG4gICAgc3VwZXIoe1xuICAgICAgc3Ryb2tlV2lkdGgsXG4gICAgICBnZXRTb3VyY2VQb3NpdGlvbixcbiAgICAgIGdldFRhcmdldFBvc2l0aW9uLFxuICAgICAgZ2V0Q29sb3IsXG4gICAgICAuLi5vcHRzXG4gICAgfSk7XG4gIH1cblxuICBpbml0aWFsaXplU3RhdGUoKSB7XG4gICAgY29uc3Qge2dsfSA9IHRoaXMuY29udGV4dDtcbiAgICB0aGlzLnNldFN0YXRlKHttb2RlbDogdGhpcy5jcmVhdGVNb2RlbChnbCl9KTtcblxuICAgIGNvbnN0IHthdHRyaWJ1dGVNYW5hZ2VyfSA9IHRoaXMuc3RhdGU7XG4gICAgYXR0cmlidXRlTWFuYWdlci5hZGRJbnN0YW5jZWQoe1xuICAgICAgaW5zdGFuY2VTb3VyY2VQb3NpdGlvbnNGUDY0OiB7XG4gICAgICAgIHNpemU6IDQsXG4gICAgICAgIHVwZGF0ZTogdGhpcy5jYWxjdWxhdGVJbnN0YW5jZVNvdXJjZVBvc2l0aW9uc1xuICAgICAgfSxcbiAgICAgIGluc3RhbmNlVGFyZ2V0UG9zaXRpb25zRlA2NDoge1xuICAgICAgICBzaXplOiA0LFxuICAgICAgICB1cGRhdGU6IHRoaXMuY2FsY3VsYXRlSW5zdGFuY2VUYXJnZXRQb3NpdGlvbnNcbiAgICAgIH0sXG4gICAgICBpbnN0YW5jZUVsZXZhdGlvbnM6IHtcbiAgICAgICAgc2l6ZTogMixcbiAgICAgICAgdXBkYXRlOiB0aGlzLmNhbGN1bGF0ZUluc3RhbmNlRWxldmF0aW9uc1xuICAgICAgfSxcbiAgICAgIGluc3RhbmNlQ29sb3JzOiB7XG4gICAgICAgIHNpemU6IDQsXG4gICAgICAgIHR5cGU6IEdMLlVOU0lHTkVEX0JZVEUsXG4gICAgICAgIHVwZGF0ZTogdGhpcy5jYWxjdWxhdGVJbnN0YW5jZUNvbG9yc1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZHJhdyh7dW5pZm9ybXN9KSB7XG4gICAgY29uc3Qge2dsfSA9IHRoaXMuY29udGV4dDtcbiAgICBjb25zdCBsaW5lV2lkdGggPSB0aGlzLnNjcmVlblRvRGV2aWNlUGl4ZWxzKHRoaXMucHJvcHMuc3Ryb2tlV2lkdGgpO1xuICAgIGdsLmxpbmVXaWR0aChsaW5lV2lkdGgpO1xuICAgIHRoaXMuc3RhdGUubW9kZWwucmVuZGVyKHVuaWZvcm1zKTtcbiAgICAvLyBTZXR0aW5nIGxpbmUgd2lkdGggYmFjayB0byAxIGlzIGhlcmUgdG8gd29ya2Fyb3VuZCBhIEdvb2dsZSBDaHJvbWUgYnVnXG4gICAgLy8gZ2wuY2xlYXIoKSBhbmQgZ2wuaXNFbmFibGVkKCkgd2lsbCByZXR1cm4gR0xfSU5WQUxJRF9WQUxVRSBldmVuIHdpdGhcbiAgICAvLyBjb3JyZWN0IHBhcmFtZXRlclxuICAgIC8vIFRoaXMgaXMgbm90IGhhcHBlbmluZyBvbiBTYWZhcmkgYW5kIEZpcmVmb3hcbiAgICBnbC5saW5lV2lkdGgoMS4wKTtcbiAgfVxuXG4gIGdldFNoYWRlcnMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHZzOiByZWFkRmlsZVN5bmMoam9pbihfX2Rpcm5hbWUsICcuL2xpbmUtbGF5ZXItdmVydGV4Lmdsc2wnKSwgJ3V0ZjgnKSxcbiAgICAgIGZzOiByZWFkRmlsZVN5bmMoam9pbihfX2Rpcm5hbWUsICcuL2xpbmUtbGF5ZXItZnJhZ21lbnQuZ2xzbCcpLCAndXRmOCcpLFxuICAgICAgZnA2NDogdHJ1ZSxcbiAgICAgIHByb2plY3Q2NDogdHJ1ZVxuICAgIH07XG4gIH1cblxuICBjcmVhdGVNb2RlbChnbCkge1xuICAgIGNvbnN0IHBvc2l0aW9ucyA9IFswLCAwLCAwLCAxLCAxLCAxXTtcbiAgICByZXR1cm4gbmV3IE1vZGVsKHtcbiAgICAgIGdsLFxuICAgICAgaWQ6IHRoaXMucHJvcHMuaWQsXG4gICAgICAuLi5hc3NlbWJsZVNoYWRlcnMoZ2wsIHRoaXMuZ2V0U2hhZGVycygpKSxcbiAgICAgIGdlb21ldHJ5OiBuZXcgR2VvbWV0cnkoe1xuICAgICAgICBkcmF3TW9kZTogR0wuTElORV9TVFJJUCxcbiAgICAgICAgcG9zaXRpb25zOiBuZXcgRmxvYXQzMkFycmF5KHBvc2l0aW9ucylcbiAgICAgIH0pLFxuICAgICAgaXNJbnN0YW5jZWQ6IHRydWVcbiAgICB9KTtcbiAgfVxuXG4gIGNhbGN1bGF0ZUluc3RhbmNlU291cmNlUG9zaXRpb25zKGF0dHJpYnV0ZSkge1xuICAgIGNvbnN0IHtkYXRhLCBnZXRTb3VyY2VQb3NpdGlvbn0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHt2YWx1ZSwgc2l6ZX0gPSBhdHRyaWJ1dGU7XG4gICAgbGV0IGkgPSAwO1xuICAgIGZvciAoY29uc3Qgb2JqZWN0IG9mIGRhdGEpIHtcbiAgICAgIGNvbnN0IHNvdXJjZVBvc2l0aW9uID0gZ2V0U291cmNlUG9zaXRpb24ob2JqZWN0KTtcbiAgICAgIFt2YWx1ZVtpICsgMF0sIHZhbHVlW2kgKyAxXV0gPSBmcDY0aWZ5KHNvdXJjZVBvc2l0aW9uWzBdKTtcbiAgICAgIFt2YWx1ZVtpICsgMl0sIHZhbHVlW2kgKyAzXV0gPSBmcDY0aWZ5KHNvdXJjZVBvc2l0aW9uWzFdKTtcbiAgICAgIGkgKz0gc2l6ZTtcbiAgICB9XG4gIH1cblxuICBjYWxjdWxhdGVJbnN0YW5jZVRhcmdldFBvc2l0aW9ucyhhdHRyaWJ1dGUpIHtcbiAgICBjb25zdCB7ZGF0YSwgZ2V0VGFyZ2V0UG9zaXRpb259ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7dmFsdWUsIHNpemV9ID0gYXR0cmlidXRlO1xuICAgIGxldCBpID0gMDtcbiAgICBmb3IgKGNvbnN0IG9iamVjdCBvZiBkYXRhKSB7XG4gICAgICBjb25zdCB0YXJnZXRQb3NpdGlvbiA9IGdldFRhcmdldFBvc2l0aW9uKG9iamVjdCk7XG4gICAgICBbdmFsdWVbaSArIDBdLCB2YWx1ZVtpICsgMV1dID0gZnA2NGlmeSh0YXJnZXRQb3NpdGlvblswXSk7XG4gICAgICBbdmFsdWVbaSArIDJdLCB2YWx1ZVtpICsgM11dID0gZnA2NGlmeSh0YXJnZXRQb3NpdGlvblsxXSk7XG4gICAgICBpICs9IHNpemU7XG4gICAgfVxuICB9XG5cbiAgY2FsY3VsYXRlSW5zdGFuY2VFbGV2YXRpb25zKGF0dHJpYnV0ZSkge1xuICAgIGNvbnN0IHtkYXRhLCBnZXRTb3VyY2VQb3NpdGlvbiwgZ2V0VGFyZ2V0UG9zaXRpb259ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7dmFsdWUsIHNpemV9ID0gYXR0cmlidXRlO1xuICAgIGxldCBpID0gMDtcbiAgICBmb3IgKGNvbnN0IG9iamVjdCBvZiBkYXRhKSB7XG4gICAgICBjb25zdCBzb3VyY2VQb3NpdGlvbiA9IGdldFNvdXJjZVBvc2l0aW9uKG9iamVjdCk7XG4gICAgICBjb25zdCB0YXJnZXRQb3NpdGlvbiA9IGdldFRhcmdldFBvc2l0aW9uKG9iamVjdCk7XG4gICAgICB2YWx1ZVtpICsgMF0gPSBzb3VyY2VQb3NpdGlvblsyXSB8fCAwO1xuICAgICAgdmFsdWVbaSArIDFdID0gdGFyZ2V0UG9zaXRpb25bMl0gfHwgMDtcbiAgICAgIGkgKz0gc2l6ZTtcbiAgICB9XG4gIH1cblxuICBjYWxjdWxhdGVJbnN0YW5jZUNvbG9ycyhhdHRyaWJ1dGUpIHtcbiAgICBjb25zdCB7ZGF0YSwgZ2V0Q29sb3J9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7dmFsdWUsIHNpemV9ID0gYXR0cmlidXRlO1xuICAgIGxldCBpID0gMDtcbiAgICBmb3IgKGNvbnN0IG9iamVjdCBvZiBkYXRhKSB7XG4gICAgICBjb25zdCBjb2xvciA9IGdldENvbG9yKG9iamVjdCk7XG4gICAgICB2YWx1ZVtpICsgMF0gPSBjb2xvclswXTtcbiAgICAgIHZhbHVlW2kgKyAxXSA9IGNvbG9yWzFdO1xuICAgICAgdmFsdWVbaSArIDJdID0gY29sb3JbMl07XG4gICAgICB2YWx1ZVtpICsgM10gPSBpc05hTihjb2xvclszXSkgPyBERUZBVUxUX0NPTE9SWzNdIDogY29sb3JbM107XG4gICAgICBpICs9IHNpemU7XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==

/***/ }
/******/ ]);
//# sourceMappingURL=bundle.js.map